{
	"id": "fe6467315023c049de3c3a28b1836c01",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sweetspot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public constant NATIVE_TOKEN = address(0);\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n\r\n    struct Round {\r\n        uint64 start; // Start timestamp of the round\r\n        uint64 end; // End timestamp of the round\r\n        string metadataURI; // IPFS URI for round metadata\r\n    }\r\n\r\n    Round public currentRound; // Current round details\r\n\r\n    // Tracks balances for each token (including Ether)\r\n    mapping(address => uint256) public totalBalances;\r\n    // Allowed amounts per user per token\r\n    mapping(address => mapping(address => uint256)) public allowedAmounts;\r\n \r\n    event Deposit(address indexed depositor, address indexed token, uint256 amount);\r\n    event Withdraw(address indexed withdrawer, address indexed token, uint256 amount);\r\n    event Claimed(address indexed claimant, address indexed token, uint256 amount);\r\n    event AllowedAmountUpdated(address indexed user, address indexed token, uint256 newAmount);\r\n    event RoundUpdated(uint256 start, uint256 end, string metadataURI);\r\n\r\n    error NotWithinRound(uint256 currentTime, uint256 start, uint256 end);\r\n\r\n    modifier onlyAdmin() {\r\n        require(scorer.isAdmin(msg.sender), \"Caller is not an admin\");\r\n        _;\r\n    }\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @param _scorer The scoring contract address.\r\n    /// @param owner The owner address.\r\n    function initialize(address _scorer, address owner) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n        __ReentrancyGuard_init();\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The value to add (in wei for Ether).\r\n    function deposit(address token, uint256 amount) external payable nonReentrant  {\r\n        if (token == NATIVE_TOKEN) {\r\n            require(msg.value == amount, \"Incorrect Ether amount\");\r\n        } else {\r\n            require(amount > 0, \"Deposit amount must be greater than zero\");\r\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        totalBalances[token] += amount;\r\n        emit Deposit(msg.sender, token, amount);\r\n    }\r\n\r\n    /// @notice Claims the full allowed amount for a user during the round.\r\n    function claim(address token) external nonReentrant {\r\n        \r\n        if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {\r\n            revert NotWithinRound(block.timestamp, currentRound.start, currentRound.end);\r\n        }\r\n\r\n        uint256 userAllowedAmount = allowedAmounts[msg.sender][token];\r\n        require(userAllowedAmount > 0, \"No claimable amount\");\r\n        require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\");\r\n\r\n        allowedAmounts[msg.sender][token] = 0;\r\n        totalBalances[token] -= userAllowedAmount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, userAllowedAmount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, token, userAllowedAmount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for a specific user and token.\r\n    ///\r\n    /// @param user The address of the user.\r\n    /// @param token The token address.\r\n    /// @param amount The allowed amount for the user.\r\n    function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {\r\n        require(user != address(0), \"Zero address user\");\r\n        allowedAmounts[user][token] = amount;\r\n        emit AllowedAmountUpdated(user, token, amount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for multiple users for a given token in one call.\r\n    function bulkSetAllowedAmount(\r\n        address[] calldata tokens,\r\n        address[] calldata users,\r\n        uint256[] calldata amounts\r\n    ) external onlyAdmin {\r\n        require(users.length == amounts.length, \"Mismatched array lengths\");\r\n        require(tokens.length == amounts.length, \"Mismatched array lengths\");\r\n        for (uint256 i = 0; i < users.length; i++) {\r\n            // You might want to check that the user is not a zero address if needed\r\n            allowedAmounts[users[i]][tokens[i]] = amounts[i];\r\n            emit AllowedAmountUpdated(users[i], tokens[i], amounts[i]);\r\n        }\r\n    }\r\n\r\n    /// @notice Sets the round duration and metadata URI.\r\n    ///\r\n    /// @param start The start timestamp of the round.\r\n    /// @param end The end timestamp of the round.\r\n    /// @param metadataURI The IPFS URI for the round metadata.\r\n    function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {\r\n        require(start < end, \"Start time must be before end time\");\r\n        currentRound = Round(start, end, metadataURI);\r\n        emit RoundUpdated(start, end, metadataURI);\r\n    }\r\n\r\n    /// @notice Withdraws funds from the jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The amount to withdraw.\r\n    function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {\r\n        require(amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        require(totalBalances[token] >= amount, \"Insufficient funds\");\r\n\r\n        totalBalances[token] -= amount;\r\n\r\n        if (token == NATIVE_TOKEN) {\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n        emit Withdraw(owner(), token, amount);\r\n    }\r\n\r\n    /// @notice Allows Ether deposits directly via fallback function.\r\n    receive() external payable {\r\n        totalBalances[NATIVE_TOKEN] += msg.value;\r\n        emit Deposit(msg.sender, NATIVE_TOKEN, msg.value);\r\n    }\r\n\r\n    fallback() external payable {\r\n        // Typically revert to avoid accidental calls with data\r\n        revert(\"Sweetspot: use deposit()\");\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n    /**\r\n     * @dev Returns the score of a specific user for a given score type.\r\n     *      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @param scoreType The type of score to query, represented as a `bytes32` hash.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user, string memory scoreType) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Checks if the provided address is an admin.\r\n     * @param admin The address to check for admin status.\r\n     * @return True if the address is an admin, false otherwise.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function isAdmin(address admin) external view returns (bool);\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b7a7648ae74a08170a8b3243505b3c57e690ef8ebb7de5b1368f8756ed7b7a5464736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7a7648ae74a08170a8b3243505b3c57e690ef8ebb7de5b1368f8756ed7b7a5464736f6c634300081d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xA7 PUSH5 0x8AE74A0817 EXP DUP12 ORIGIN NUMBER POP JUMPDEST EXTCODECOPY JUMPI DUPN 0x90 0xEF DUP15 0xBB PUSH30 0xE5B1368F8756ED7B7A5464736F6C634300081D0033000000000000000000 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7a7648ae74a08170a8b3243505b3c57e690ef8ebb7de5b1368f8756ed7b7a5464736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 0xA7 PUSH5 0x8AE74A0817 EXP DUP12 ORIGIN NUMBER POP JUMPDEST EXTCODECOPY JUMPI DUPN 0x90 0xEF DUP15 0xBB PUSH30 0xE5B1368F8756ED7B7A5464736F6C634300081D0033000000000000000000 ",
							"sourceMap": "750:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7a7648ae74a08170a8b3243505b3c57e690ef8ebb7de5b1368f8756ed7b7a5464736f6c634300081d0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206154504b0f2d989f97409442a67dabbd676e4a5d205ee35050b13998e3027a3f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206154504b0f2d989f97409442a67dabbd676e4a5d205ee35050b13998e3027a3f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x5450 0x4B 0xF 0x2D SWAP9 SWAP16 SWAP8 BLOCKHASH SWAP5 TIMESTAMP 0xA6 PUSH30 0xABBD676E4A5D205EE35050B13998E3027A3F64736F6C634300081D003300 ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206154504b0f2d989f97409442a67dabbd676e4a5d205ee35050b13998e3027a3f64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x5450 0x4B 0xF 0x2D SWAP9 SWAP16 SWAP8 BLOCKHASH SWAP5 TIMESTAMP 0xA6 PUSH30 0xABBD676E4A5D205EE35050B13998E3027A3F64736F6C634300081D003300 ",
							"sourceMap": "233:5799:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206154504b0f2d989f97409442a67dabbd676e4a5d205ee35050b13998e3027a3f64736f6c634300081d0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd9a21bdef448526e6d55a4040c2444395c768202cfe0e6507e81252dd533a7164736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd9a21bdef448526e6d55a4040c2444395c768202cfe0e6507e81252dd533a7164736f6c634300081d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT SWAP11 0x21 0xBD 0xEF PREVRANDAO DUP6 0x26 DUPN 0xD5 GAS BLOCKHASH BLOCKHASH 0xC2 PREVRANDAO NUMBER SWAP6 0xC7 PUSH9 0x202CFE0E6507E81252 0xDD MSTORE8 GASPRICE PUSH18 0x64736F6C634300081D003300000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd9a21bdef448526e6d55a4040c2444395c768202cfe0e6507e81252dd533a7164736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT SWAP11 0x21 0xBD 0xEF PREVRANDAO DUP6 0x26 DUPN 0xD5 GAS BLOCKHASH BLOCKHASH 0xC2 PREVRANDAO NUMBER SWAP6 0xC7 PUSH9 0x202CFE0E6507E81252 0xDD MSTORE8 GASPRICE PUSH18 0x64736F6C634300081D003300000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd9a21bdef448526e6d55a4040c2444395c768202cfe0e6507e81252dd533a7164736f6c634300081d0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "scoreType",
									"type": "string"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isAdmin(address)": {
								"details": "Checks if the provided address is an admin.",
								"params": {
									"admin": "The address to check for admin status."
								},
								"returns": {
									"_0": "True if the address is an admin, false otherwise."
								}
							},
							"score(address,string)": {
								"details": "Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"scoreType": "The type of score to query, represented as a `bytes32` hash.",
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"score(address,string)": "db4f1024"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"scoreType\",\"type\":\"string\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isAdmin(address)\":{\"details\":\"Checks if the provided address is an admin.\",\"params\":{\"admin\":\"The address to check for admin status.\"},\"returns\":{\"_0\":\"True if the address is an admin, false otherwise.\"}},\"score(address,string)\":{\"details\":\"Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\\\"Trust\\\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"scoreType\":\"The type of score to query, represented as a `bytes32` hash.\",\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isAdmin(address)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"},\"score(address,string)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isAdmin(address)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							},
							"score(address,string)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/sweetspot.sol": {
				"sweetspot": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "NotWithinRound",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowedAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "RoundUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "bulkSetAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "start",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "end",
									"type": "uint64"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256)": {
								"params": {
									"amount": "The value to add (in wei for Ether).",
									"token": "The token address (address(0) for Ether)."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_scorer": "The scoring contract address.",
									"owner": "The owner address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAllowedAmount(address,address,uint256)": {
								"params": {
									"amount": "The allowed amount for the user.",
									"token": "The token address.",
									"user": "The address of the user."
								}
							},
							"setRound(uint64,uint64,string)": {
								"params": {
									"end": "The end timestamp of the round.",
									"metadataURI": "The IPFS URI for the round metadata.",
									"start": "The start timestamp of the round."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "The amount to withdraw.",
									"token": "The token address (address(0) for Ether)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sweetspot.sol\":454:6803  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/sweetspot.sol\":454:6803  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb807a3c4\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb807a3c4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc5d60b51\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9012c89\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9590e8a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaee9c872\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x485cc955\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a19c8bc\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1e83409a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/sweetspot.sol\":6569:6578  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":6538:6551  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":6538:6565  totalBalances[NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      dup1\n        /* \"contracts/sweetspot.sol\":6538:6565  totalBalances[NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":6538:6578  totalBalances[NATIVE_TOKEN] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":6594:6638  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6602:6612  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":6594:6638  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":6628:6637  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":6594:6638  Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":454:6803  contract sweetspot is OwnableUpgradeable, ReentrancyGuardUpgradeable  {... */\n      stop\n    tag_2:\n        /* \"contracts/sweetspot.sol\":6758:6792  revert(\"Sweetspot: use deposit()\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_5:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":5360:5638  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/sweetspot.sol\":4495:5111  function bulkSetAllowedAmount(... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"contracts/sweetspot.sol\":5843:6421  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/sweetspot.sol\":3066:3078  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3066:3084  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3048:3084  block.timestamp < currentRound.start */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3048:3063  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3048:3084  block.timestamp < currentRound.start */\n      lt\n        /* \"contracts/sweetspot.sol\":3048:3122  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"contracts/sweetspot.sol\":3106:3118  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3106:3122  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3088:3122  block.timestamp > currentRound.end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3088:3103  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3088:3122  block.timestamp > currentRound.end */\n      gt\n        /* \"contracts/sweetspot.sol\":3048:3122  block.timestamp < currentRound.start || block.timestamp > currentRound.end */\n    tag_104:\n        /* \"contracts/sweetspot.sol\":3044:3227  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"contracts/sweetspot.sol\":3161:3176  block.timestamp */\n      timestamp\n        /* \"contracts/sweetspot.sol\":3178:3190  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3178:3196  currentRound.start */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3198:3210  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":3198:3214  currentRound.end */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3146:3215  NotWithinRound(block.timestamp, currentRound.start, currentRound.end) */\n      mload(0x40)\n      0xfa7410d400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sweetspot.sol\":3044:3227  if (block.timestamp < currentRound.start || block.timestamp > currentRound.end) {... */\n    tag_105:\n        /* \"contracts/sweetspot.sol\":3239:3264  uint256 userAllowedAmount */\n      0x00\n        /* \"contracts/sweetspot.sol\":3267:3281  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3267:3293  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3282:3292  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3267:3293  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3267:3300  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3294:3299  token */\n      dup4\n        /* \"contracts/sweetspot.sol\":3267:3300  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3239:3300  uint256 userAllowedAmount = allowedAmounts[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3339:3340  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3319:3336  userAllowedAmount */\n      dup2\n        /* \"contracts/sweetspot.sol\":3319:3340  userAllowedAmount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":3311:3364  require(userAllowedAmount > 0, \"No claimable amount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/sweetspot.sol\":3407:3424  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3383:3396  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3383:3403  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3397:3402  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3383:3403  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":3383:3424  totalBalances[token] >= userAllowedAmount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":3375:3454  require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/sweetspot.sol\":3503:3504  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3467:3481  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":3467:3493  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3482:3492  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3467:3493  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3467:3500  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3494:3499  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3467:3500  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":3467:3504  allowedAmounts[msg.sender][token] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":3539:3556  userAllowedAmount */\n      dup1\n        /* \"contracts/sweetspot.sol\":3515:3528  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":3515:3535  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":3529:3534  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3515:3535  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":3515:3556  totalBalances[token] -= userAllowedAmount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":3573:3594  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3573:3578  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":3573:3594  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n      tag_116\n      jumpi\n        /* \"contracts/sweetspot.sol\":3612:3624  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":3630:3640  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3630:3645  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3653:3670  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3630:3675  msg.sender.call{value: userAllowedAmount}(\"\") */\n      mload(0x40)\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n        /* \"contracts/sweetspot.sol\":3611:3675  (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":3698:3705  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":3690:3731  require(success, \"Ether transfer failed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/sweetspot.sol\":3596:3743  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n      jump(tag_125)\n    tag_116:\n        /* \"contracts/sweetspot.sol\":3764:3821  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      tag_126\n        /* \"contracts/sweetspot.sol\":3791:3801  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3803:3820  userAllowedAmount */\n      dup3\n        /* \"contracts/sweetspot.sol\":3771:3776  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":3764:3790  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"contracts/sweetspot.sol\":3764:3821  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/sweetspot.sol\":3569:3833  if (token == NATIVE_TOKEN) {... */\n    tag_125:\n        /* \"contracts/sweetspot.sol\":3870:3875  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":3858:3868  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"contracts/sweetspot.sol\":3877:3894  userAllowedAmount */\n      dup4\n        /* \"contracts/sweetspot.sol\":3850:3895  Claimed(msg.sender, token, userAllowedAmount) */\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":3023:3903  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_129:\n        /* \"contracts/sweetspot.sol\":2971:3903  function claim(address token) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n    tag_38:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":566:615  address public constant NATIVE_TOKEN = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2506:2527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2506:2511  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":2506:2527  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n      tag_134\n      jumpi\n        /* \"contracts/sweetspot.sol\":2565:2571  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2552:2561  msg.value */\n      callvalue\n        /* \"contracts/sweetspot.sol\":2552:2571  msg.value == amount */\n      eq\n        /* \"contracts/sweetspot.sol\":2544:2598  require(msg.value == amount, \"Incorrect Ether amount\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n      jump(tag_138)\n    tag_134:\n        /* \"contracts/sweetspot.sol\":2648:2649  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":2639:2645  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":2639:2649  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":2631:2694  require(amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/sweetspot.sol\":2709:2774  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_142\n        /* \"contracts/sweetspot.sol\":2740:2750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2760:2764  this */\n      address\n        /* \"contracts/sweetspot.sol\":2767:2773  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2716:2721  token */\n      dup6\n        /* \"contracts/sweetspot.sol\":2709:2739  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_143\n      swap1\n        /* \"contracts/sweetspot.sol\":2709:2774  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/sweetspot.sol\":2502:2786  if (token == NATIVE_TOKEN) {... */\n    tag_138:\n        /* \"contracts/sweetspot.sol\":2822:2828  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":2798:2811  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":2798:2818  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":2812:2817  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":2798:2818  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":2798:2828  totalBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":2864:2869  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":2852:2862  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/sweetspot.sol\":2871:2877  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":2844:2878  Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/sweetspot.sol\":2412:2886  function deposit(address token, uint256 amount) external payable nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_151\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_154:\n        /* \"contracts/sweetspot.sol\":2061:2082  __Ownable_init(owner) */\n      tag_156\n        /* \"contracts/sweetspot.sol\":2076:2081  owner */\n      dup7\n        /* \"contracts/sweetspot.sol\":2061:2075  __Ownable_init */\n      tag_157\n        /* \"contracts/sweetspot.sol\":2061:2082  __Ownable_init(owner) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/sweetspot.sol\":2126:2150  __ReentrancyGuard_init() */\n      tag_158\n        /* \"contracts/sweetspot.sol\":2126:2148  __ReentrancyGuard_init */\n      tag_159\n        /* \"contracts/sweetspot.sol\":2126:2150  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/sweetspot.sol\":2178:2185  _scorer */\n      dup7\n        /* \"contracts/sweetspot.sol\":2161:2167  scorer */\n      0x32\n      0x00\n        /* \"contracts/sweetspot.sol\":2161:2186  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":1977:2194  function initialize(address _scorer, address owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":622:643  IScorer public scorer */\n    tag_55:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":883:908  Round public currentRound */\n    tag_60:\n      0x33\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_171\n      swap1\n      tag_170\n      jump\t// in\n    tag_171:\n      dup1\n      iszero\n      tag_172\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_173\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_172)\n    tag_173:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_174:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_174\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5360:5638  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n    tag_71:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"contracts/sweetspot.sol\":5479:5482  end */\n      dup2\n        /* \"contracts/sweetspot.sol\":5471:5482  start < end */\n      0xffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5471:5476  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":5471:5482  start < end */\n      0xffffffffffffffff\n      and\n      lt\n        /* \"contracts/sweetspot.sol\":5463:5521  require(start < end, \"Start time must be before end time\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/sweetspot.sol\":5547:5577  Round(start, end, metadataURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/sweetspot.sol\":5553:5558  start */\n      dup5\n        /* \"contracts/sweetspot.sol\":5547:5577  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":5560:5563  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":5547:5577  Round(start, end, metadataURI) */\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/sweetspot.sol\":5565:5576  metadataURI */\n      dup3\n        /* \"contracts/sweetspot.sol\":5547:5577  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/sweetspot.sol\":5532:5544  currentRound */\n      0x33\n        /* \"contracts/sweetspot.sol\":5532:5577  currentRound = Round(start, end, metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":5593:5630  RoundUpdated(start, end, metadataURI) */\n      0x09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13\n        /* \"contracts/sweetspot.sol\":5606:5611  start */\n      dup4\n        /* \"contracts/sweetspot.sol\":5613:5616  end */\n      dup4\n        /* \"contracts/sweetspot.sol\":5618:5629  metadataURI */\n      dup4\n        /* \"contracts/sweetspot.sol\":5593:5630  RoundUpdated(start, end, metadataURI) */\n      mload(0x40)\n      tag_193\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sweetspot.sol\":5360:5638  function setRound(uint64  start, uint64  end, string memory metadataURI) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":1097:1166  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_75:\n      mstore(0x20, 0x36)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":999:1047  mapping(address => uint256) public totalBalances */\n    tag_80:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n    tag_86:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_199:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_186\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/sweetspot.sol\":4260:4261  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":4244:4262  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4244:4248  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4244:4262  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":4236:4284  require(user != address(0), \"Zero address user\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/sweetspot.sol\":4325:4331  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":4295:4309  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4295:4315  allowedAmounts[user] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4310:4314  user */\n      dup6\n        /* \"contracts/sweetspot.sol\":4295:4315  allowedAmounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4295:4322  allowedAmounts[user][token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4316:4321  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":4295:4322  allowedAmounts[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4295:4331  allowedAmounts[user][token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":4374:4379  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":4368:4372  user */\n      dup4\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":4381:4387  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":4347:4388  AllowedAmountUpdated(user, token, amount) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4135:4396  function setAllowedAmount(address user, address token, uint256 amount) external onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":4495:5111  function bulkSetAllowedAmount(... */\n    tag_91:\n        /* \"contracts/sweetspot.sol\":1725:1731  scorer */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":1725:1739  scorer.isAdmin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24d7806c\n        /* \"contracts/sweetspot.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/sweetspot.sol\":1725:1751  scorer.isAdmin(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_208:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_211:\n        /* \"contracts/sweetspot.sol\":1717:1778  require(scorer.isAdmin(msg.sender), \"Caller is not an admin\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_186\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"contracts/sweetspot.sol\":4694:4701  amounts */\n      dup2\n      dup2\n        /* \"contracts/sweetspot.sol\":4694:4708  amounts.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4678:4683  users */\n      dup5\n      dup5\n        /* \"contracts/sweetspot.sol\":4678:4690  users.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4678:4708  users.length == amounts.length */\n      eq\n        /* \"contracts/sweetspot.sol\":4670:4737  require(users.length == amounts.length, \"Mismatched array lengths\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/sweetspot.sol\":4773:4780  amounts */\n      dup2\n      dup2\n        /* \"contracts/sweetspot.sol\":4773:4787  amounts.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4756:4762  tokens */\n      dup7\n      dup7\n        /* \"contracts/sweetspot.sol\":4756:4769  tokens.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4756:4787  tokens.length == amounts.length */\n      eq\n        /* \"contracts/sweetspot.sol\":4748:4816  require(tokens.length == amounts.length, \"Mismatched array lengths\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_217\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/sweetspot.sol\":4832:4841  uint256 i */\n      0x00\n        /* \"contracts/sweetspot.sol\":4827:5104  for (uint256 i = 0; i < users.length; i++) {... */\n    tag_220:\n        /* \"contracts/sweetspot.sol\":4851:4856  users */\n      dup5\n      dup5\n        /* \"contracts/sweetspot.sol\":4851:4863  users.length */\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":4847:4848  i */\n      dup2\n        /* \"contracts/sweetspot.sol\":4847:4863  i < users.length */\n      lt\n        /* \"contracts/sweetspot.sol\":4827:5104  for (uint256 i = 0; i < users.length; i++) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/sweetspot.sol\":5009:5016  amounts */\n      dup3\n      dup3\n        /* \"contracts/sweetspot.sol\":5017:5018  i */\n      dup3\n        /* \"contracts/sweetspot.sol\":5009:5019  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n    tag_223:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sweetspot.sol\":4971:4985  allowedAmounts */\n      0x36\n        /* \"contracts/sweetspot.sol\":4971:4995  allowedAmounts[users[i]] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4986:4991  users */\n      dup8\n      dup8\n        /* \"contracts/sweetspot.sol\":4992:4993  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":4986:4994  users[i] */\n      dup2\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_227\n      tag_225\n      jump\t// in\n    tag_227:\n    tag_226:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_228:\n        /* \"contracts/sweetspot.sol\":4971:4995  allowedAmounts[users[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4971:5006  allowedAmounts[users[i]][tokens[i]] */\n      0x00\n        /* \"contracts/sweetspot.sol\":4996:5002  tokens */\n      dup10\n      dup10\n        /* \"contracts/sweetspot.sol\":5003:5004  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":4996:5005  tokens[i] */\n      dup2\n      dup2\n      lt\n      tag_229\n      jumpi\n      tag_230\n      tag_225\n      jump\t// in\n    tag_230:\n    tag_229:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_231\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_231:\n        /* \"contracts/sweetspot.sol\":4971:5006  allowedAmounts[users[i]][tokens[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/sweetspot.sol\":4971:5019  allowedAmounts[users[i]][tokens[i]] = amounts[i] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":5070:5076  tokens */\n      dup7\n      dup7\n        /* \"contracts/sweetspot.sol\":5077:5078  i */\n      dup3\n        /* \"contracts/sweetspot.sol\":5070:5079  tokens[i] */\n      dup2\n      dup2\n      lt\n      tag_232\n      jumpi\n      tag_233\n      tag_225\n      jump\t// in\n    tag_233:\n    tag_232:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_234:\n        /* \"contracts/sweetspot.sol\":5039:5092  AllowedAmountUpdated(users[i], tokens[i], amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":5060:5065  users */\n      dup6\n      dup6\n        /* \"contracts/sweetspot.sol\":5066:5067  i */\n      dup4\n        /* \"contracts/sweetspot.sol\":5060:5068  users[i] */\n      dup2\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_236\n      tag_225\n      jump\t// in\n    tag_236:\n    tag_235:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_237:\n        /* \"contracts/sweetspot.sol\":5039:5092  AllowedAmountUpdated(users[i], tokens[i], amounts[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/sweetspot.sol\":5081:5088  amounts */\n      dup6\n      dup6\n        /* \"contracts/sweetspot.sol\":5089:5090  i */\n      dup6\n        /* \"contracts/sweetspot.sol\":5081:5091  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_239\n      tag_225\n      jump\t// in\n    tag_239:\n    tag_238:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sweetspot.sol\":5039:5092  AllowedAmountUpdated(users[i], tokens[i], amounts[i]) */\n      mload(0x40)\n      tag_240\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/sweetspot.sol\":4865:4868  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/sweetspot.sol\":4827:5104  for (uint256 i = 0; i < users.length; i++) {... */\n      jump(tag_220)\n    tag_221:\n      pop\n        /* \"contracts/sweetspot.sol\":4495:5111  function bulkSetAllowedAmount(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sweetspot.sol\":5843:6421  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2545  _nonReentrantBefore */\n      tag_102\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2526:2547  _nonReentrantBefore() */\n      jump\t// in\n    tag_250:\n        /* \"contracts/sweetspot.sol\":5953:5954  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":5944:5950  amount */\n      dup2\n        /* \"contracts/sweetspot.sol\":5944:5954  amount > 0 */\n      gt\n        /* \"contracts/sweetspot.sol\":5936:6002  require(amount > 0, \"Withdrawal amount must be greater than zero\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_252:\n        /* \"contracts/sweetspot.sol\":6045:6051  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":6021:6034  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":6021:6041  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":6035:6040  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":6021:6041  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/sweetspot.sol\":6021:6051  totalBalances[token] >= amount */\n      lt\n      iszero\n        /* \"contracts/sweetspot.sol\":6013:6074  require(totalBalances[token] >= amount, \"Insufficient funds\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/sweetspot.sol\":6111:6117  amount */\n      dup1\n        /* \"contracts/sweetspot.sol\":6087:6100  totalBalances */\n      0x35\n        /* \"contracts/sweetspot.sol\":6087:6107  totalBalances[token] */\n      0x00\n        /* \"contracts/sweetspot.sol\":6101:6106  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":6087:6107  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/sweetspot.sol\":6087:6117  totalBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_258\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_258:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/sweetspot.sol\":613:614  0 */\n      0x00\n        /* \"contracts/sweetspot.sol\":6134:6155  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6134:6139  token */\n      dup3\n        /* \"contracts/sweetspot.sol\":6134:6155  token == NATIVE_TOKEN */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/sweetspot.sol\":6130:6366  if (token == NATIVE_TOKEN) {... */\n      tag_259\n      jumpi\n        /* \"contracts/sweetspot.sol\":6173:6185  bool success */\n      0x00\n        /* \"contracts/sweetspot.sol\":6191:6198  owner() */\n      tag_260\n        /* \"contracts/sweetspot.sol\":6191:6196  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6191:6198  owner() */\n      jump\t// in\n    tag_260:\n        /* \"contracts/sweetspot.sol\":6191:6203  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6211:6217  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":6191:6222  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_261\n      swap1\n      tag_118\n      jump\t// in\n    tag_261:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_264\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_263)\n    tag_264:\n      0x60\n      swap2\n      pop\n    tag_263:\n      pop\n        /* \"contracts/sweetspot.sol\":6172:6222  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/sweetspot.sol\":6245:6252  success */\n      dup1\n        /* \"contracts/sweetspot.sol\":6237:6278  require(success, \"Ether transfer failed\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap1\n      tag_124\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_265:\n        /* \"contracts/sweetspot.sol\":6157:6290  {... */\n      pop\n        /* \"contracts/sweetspot.sol\":6130:6366  if (token == NATIVE_TOKEN) {... */\n      jump(tag_267)\n    tag_259:\n        /* \"contracts/sweetspot.sol\":6311:6354  IERC20(token).safeTransfer(owner(), amount) */\n      tag_268\n        /* \"contracts/sweetspot.sol\":6338:6345  owner() */\n      tag_269\n        /* \"contracts/sweetspot.sol\":6338:6343  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6338:6345  owner() */\n      jump\t// in\n    tag_269:\n        /* \"contracts/sweetspot.sol\":6347:6353  amount */\n      dup3\n        /* \"contracts/sweetspot.sol\":6318:6323  token */\n      dup5\n        /* \"contracts/sweetspot.sol\":6311:6337  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_127\n      swap1\n        /* \"contracts/sweetspot.sol\":6311:6354  IERC20(token).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/sweetspot.sol\":6130:6366  if (token == NATIVE_TOKEN) {... */\n    tag_267:\n        /* \"contracts/sweetspot.sol\":6399:6404  token */\n      dup2\n        /* \"contracts/sweetspot.sol\":6381:6413  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/sweetspot.sol\":6390:6397  owner() */\n      tag_270\n        /* \"contracts/sweetspot.sol\":6390:6395  owner */\n      tag_65\n        /* \"contracts/sweetspot.sol\":6390:6397  owner() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/sweetspot.sol\":6381:6413  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/sweetspot.sol\":6406:6412  amount */\n      dup4\n        /* \"contracts/sweetspot.sol\":6381:6413  Withdraw(owner(), token, amount) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2586  _nonReentrantAfter */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2568:2588  _nonReentrantAfter() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/sweetspot.sol\":5843:6421  function withdraw(address token, uint256 amount) external onlyOwner nonReentrant  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2740  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2733:2752  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2725:2788  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1851:1852  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2870  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2863:2881  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2601:2888  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_279\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3081  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":3074:3096  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2894:3103  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_285\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_159:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_301\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_302\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_301\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_310\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_312)\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_314\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_314:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_326\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_331:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_332:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_24:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_427\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_331\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_428\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_331\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_430\n      tag_332\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":424:460   */\n    tag_429:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_333:\n        /* \"#utility.yul\":560:584   */\n      tag_432\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_331\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_26:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_434\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_333\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:994   */\n    tag_334:\n        /* \"#utility.yul\":909:920   */\n      0x00\n        /* \"#utility.yul\":943:949   */\n      dup3\n        /* \"#utility.yul\":938:941   */\n      dup3\n        /* \"#utility.yul\":931:950   */\n      mstore\n        /* \"#utility.yul\":983:987   */\n      0x20\n        /* \"#utility.yul\":978:981   */\n      dup3\n        /* \"#utility.yul\":974:988   */\n      add\n        /* \"#utility.yul\":959:988   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1000:1174   */\n    tag_335:\n        /* \"#utility.yul\":1140:1166   */\n      0x537765657473706f743a20757365206465706f73697428290000000000000000\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1128:1134   */\n      dup3\n        /* \"#utility.yul\":1124:1138   */\n      add\n        /* \"#utility.yul\":1117:1167   */\n      mstore\n        /* \"#utility.yul\":1000:1174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1546   */\n    tag_336:\n        /* \"#utility.yul\":1322:1325   */\n      0x00\n        /* \"#utility.yul\":1343:1410   */\n      tag_438\n        /* \"#utility.yul\":1407:1409   */\n      0x18\n        /* \"#utility.yul\":1402:1405   */\n      dup4\n        /* \"#utility.yul\":1343:1410   */\n      tag_334\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":1336:1410   */\n      swap2\n      pop\n        /* \"#utility.yul\":1419:1512   */\n      tag_439\n        /* \"#utility.yul\":1508:1511   */\n      dup3\n        /* \"#utility.yul\":1419:1512   */\n      tag_335\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1532:1535   */\n      dup3\n        /* \"#utility.yul\":1528:1540   */\n      add\n        /* \"#utility.yul\":1521:1540   */\n      swap1\n      pop\n        /* \"#utility.yul\":1180:1546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1552:1971   */\n    tag_30:\n        /* \"#utility.yul\":1718:1722   */\n      0x00\n        /* \"#utility.yul\":1756:1758   */\n      0x20\n        /* \"#utility.yul\":1745:1754   */\n      dup3\n        /* \"#utility.yul\":1741:1759   */\n      add\n        /* \"#utility.yul\":1733:1759   */\n      swap1\n      pop\n        /* \"#utility.yul\":1805:1814   */\n      dup2\n        /* \"#utility.yul\":1799:1803   */\n      dup2\n        /* \"#utility.yul\":1795:1815   */\n      sub\n        /* \"#utility.yul\":1791:1792   */\n      0x00\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1776:1793   */\n      add\n        /* \"#utility.yul\":1769:1816   */\n      mstore\n        /* \"#utility.yul\":1833:1964   */\n      tag_441\n        /* \"#utility.yul\":1959:1963   */\n      dup2\n        /* \"#utility.yul\":1833:1964   */\n      tag_336\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1825:1964   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1977:2052   */\n    tag_337:\n        /* \"#utility.yul\":2010:2016   */\n      0x00\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2037:2046   */\n      mload\n        /* \"#utility.yul\":2027:2046   */\n      swap1\n      pop\n        /* \"#utility.yul\":1977:2052   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2058:2175   */\n    tag_338:\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2164:2165   */\n      dup1\n        /* \"#utility.yul\":2157:2169   */\n      revert\n        /* \"#utility.yul\":2181:2298   */\n    tag_339:\n        /* \"#utility.yul\":2290:2291   */\n      0x00\n        /* \"#utility.yul\":2287:2288   */\n      dup1\n        /* \"#utility.yul\":2280:2292   */\n      revert\n        /* \"#utility.yul\":2304:2430   */\n    tag_340:\n        /* \"#utility.yul\":2341:2348   */\n      0x00\n        /* \"#utility.yul\":2381:2423   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2374:2379   */\n      dup3\n        /* \"#utility.yul\":2370:2424   */\n      and\n        /* \"#utility.yul\":2359:2424   */\n      swap1\n      pop\n        /* \"#utility.yul\":2304:2430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2436:2532   */\n    tag_341:\n        /* \"#utility.yul\":2473:2480   */\n      0x00\n        /* \"#utility.yul\":2502:2526   */\n      tag_447\n        /* \"#utility.yul\":2520:2525   */\n      dup3\n        /* \"#utility.yul\":2502:2526   */\n      tag_340\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2491:2526   */\n      swap1\n      pop\n        /* \"#utility.yul\":2436:2532   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2538:2660   */\n    tag_342:\n        /* \"#utility.yul\":2611:2635   */\n      tag_449\n        /* \"#utility.yul\":2629:2634   */\n      dup2\n        /* \"#utility.yul\":2611:2635   */\n      tag_341\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2604:2609   */\n      dup2\n        /* \"#utility.yul\":2601:2636   */\n      eq\n        /* \"#utility.yul\":2591:2654   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      dup1\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2591:2654   */\n    tag_450:\n        /* \"#utility.yul\":2538:2660   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2666:2805   */\n    tag_343:\n        /* \"#utility.yul\":2712:2717   */\n      0x00\n        /* \"#utility.yul\":2750:2756   */\n      dup2\n        /* \"#utility.yul\":2737:2757   */\n      calldataload\n        /* \"#utility.yul\":2728:2757   */\n      swap1\n      pop\n        /* \"#utility.yul\":2766:2799   */\n      tag_452\n        /* \"#utility.yul\":2793:2798   */\n      dup2\n        /* \"#utility.yul\":2766:2799   */\n      tag_342\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":2666:2805   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:3140   */\n    tag_34:\n        /* \"#utility.yul\":2870:2876   */\n      0x00\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2907:2916   */\n      dup3\n        /* \"#utility.yul\":2898:2905   */\n      dup5\n        /* \"#utility.yul\":2894:2917   */\n      sub\n        /* \"#utility.yul\":2890:2922   */\n      slt\n        /* \"#utility.yul\":2887:3006   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":2925:3004   */\n      tag_455\n      tag_338\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":2887:3006   */\n    tag_454:\n        /* \"#utility.yul\":3045:3046   */\n      0x00\n        /* \"#utility.yul\":3070:3123   */\n      tag_456\n        /* \"#utility.yul\":3115:3122   */\n      dup5\n        /* \"#utility.yul\":3106:3112   */\n      dup3\n        /* \"#utility.yul\":3095:3104   */\n      dup6\n        /* \"#utility.yul\":3091:3113   */\n      add\n        /* \"#utility.yul\":3070:3123   */\n      tag_343\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":3060:3123   */\n      swap2\n      pop\n        /* \"#utility.yul\":3016:3133   */\n      pop\n        /* \"#utility.yul\":2811:3140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3146:3264   */\n    tag_344:\n        /* \"#utility.yul\":3233:3257   */\n      tag_458\n        /* \"#utility.yul\":3251:3256   */\n      dup2\n        /* \"#utility.yul\":3233:3257   */\n      tag_341\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3228:3231   */\n      dup3\n        /* \"#utility.yul\":3221:3258   */\n      mstore\n        /* \"#utility.yul\":3146:3264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3492   */\n    tag_40:\n        /* \"#utility.yul\":3363:3367   */\n      0x00\n        /* \"#utility.yul\":3401:3403   */\n      0x20\n        /* \"#utility.yul\":3390:3399   */\n      dup3\n        /* \"#utility.yul\":3386:3404   */\n      add\n        /* \"#utility.yul\":3378:3404   */\n      swap1\n      pop\n        /* \"#utility.yul\":3414:3485   */\n      tag_460\n        /* \"#utility.yul\":3482:3483   */\n      0x00\n        /* \"#utility.yul\":3471:3480   */\n      dup4\n        /* \"#utility.yul\":3467:3484   */\n      add\n        /* \"#utility.yul\":3458:3464   */\n      dup5\n        /* \"#utility.yul\":3414:3485   */\n      tag_344\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3270:3492   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3498:3620   */\n    tag_345:\n        /* \"#utility.yul\":3571:3595   */\n      tag_462\n        /* \"#utility.yul\":3589:3594   */\n      dup2\n        /* \"#utility.yul\":3571:3595   */\n      tag_331\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3564:3569   */\n      dup2\n        /* \"#utility.yul\":3561:3596   */\n      eq\n        /* \"#utility.yul\":3551:3614   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":3610:3611   */\n      0x00\n        /* \"#utility.yul\":3607:3608   */\n      dup1\n        /* \"#utility.yul\":3600:3612   */\n      revert\n        /* \"#utility.yul\":3551:3614   */\n    tag_463:\n        /* \"#utility.yul\":3498:3620   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3765   */\n    tag_346:\n        /* \"#utility.yul\":3672:3677   */\n      0x00\n        /* \"#utility.yul\":3710:3716   */\n      dup2\n        /* \"#utility.yul\":3697:3717   */\n      calldataload\n        /* \"#utility.yul\":3688:3717   */\n      swap1\n      pop\n        /* \"#utility.yul\":3726:3759   */\n      tag_465\n        /* \"#utility.yul\":3753:3758   */\n      dup2\n        /* \"#utility.yul\":3726:3759   */\n      tag_345\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3626:3765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:4245   */\n    tag_43:\n        /* \"#utility.yul\":3839:3845   */\n      0x00\n        /* \"#utility.yul\":3847:3853   */\n      dup1\n        /* \"#utility.yul\":3896:3898   */\n      0x40\n        /* \"#utility.yul\":3884:3893   */\n      dup4\n        /* \"#utility.yul\":3875:3882   */\n      dup6\n        /* \"#utility.yul\":3871:3894   */\n      sub\n        /* \"#utility.yul\":3867:3899   */\n      slt\n        /* \"#utility.yul\":3864:3983   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3902:3981   */\n      tag_468\n      tag_338\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":3864:3983   */\n    tag_467:\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4047:4100   */\n      tag_469\n        /* \"#utility.yul\":4092:4099   */\n      dup6\n        /* \"#utility.yul\":4083:4089   */\n      dup3\n        /* \"#utility.yul\":4072:4081   */\n      dup7\n        /* \"#utility.yul\":4068:4090   */\n      add\n        /* \"#utility.yul\":4047:4100   */\n      tag_343\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4037:4100   */\n      swap3\n      pop\n        /* \"#utility.yul\":3993:4110   */\n      pop\n        /* \"#utility.yul\":4149:4151   */\n      0x20\n        /* \"#utility.yul\":4175:4228   */\n      tag_470\n        /* \"#utility.yul\":4220:4227   */\n      dup6\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup7\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_346\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":4165:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4120:4238   */\n      pop\n        /* \"#utility.yul\":3771:4245   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4725   */\n    tag_48:\n        /* \"#utility.yul\":4319:4325   */\n      0x00\n        /* \"#utility.yul\":4327:4333   */\n      dup1\n        /* \"#utility.yul\":4376:4378   */\n      0x40\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4355:4362   */\n      dup6\n        /* \"#utility.yul\":4351:4374   */\n      sub\n        /* \"#utility.yul\":4347:4379   */\n      slt\n        /* \"#utility.yul\":4344:4463   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":4382:4461   */\n      tag_473\n      tag_338\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4344:4463   */\n    tag_472:\n        /* \"#utility.yul\":4502:4503   */\n      0x00\n        /* \"#utility.yul\":4527:4580   */\n      tag_474\n        /* \"#utility.yul\":4572:4579   */\n      dup6\n        /* \"#utility.yul\":4563:4569   */\n      dup3\n        /* \"#utility.yul\":4552:4561   */\n      dup7\n        /* \"#utility.yul\":4548:4570   */\n      add\n        /* \"#utility.yul\":4527:4580   */\n      tag_343\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":4517:4580   */\n      swap3\n      pop\n        /* \"#utility.yul\":4473:4590   */\n      pop\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4655:4708   */\n      tag_475\n        /* \"#utility.yul\":4700:4707   */\n      dup6\n        /* \"#utility.yul\":4691:4697   */\n      dup3\n        /* \"#utility.yul\":4680:4689   */\n      dup7\n        /* \"#utility.yul\":4676:4698   */\n      add\n        /* \"#utility.yul\":4655:4708   */\n      tag_343\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4645:4708   */\n      swap2\n      pop\n        /* \"#utility.yul\":4600:4718   */\n      pop\n        /* \"#utility.yul\":4251:4725   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4731:4791   */\n    tag_347:\n        /* \"#utility.yul\":4759:4762   */\n      0x00\n        /* \"#utility.yul\":4780:4785   */\n      dup2\n        /* \"#utility.yul\":4773:4785   */\n      swap1\n      pop\n        /* \"#utility.yul\":4731:4791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4797:4939   */\n    tag_348:\n        /* \"#utility.yul\":4847:4856   */\n      0x00\n        /* \"#utility.yul\":4880:4933   */\n      tag_478\n        /* \"#utility.yul\":4898:4932   */\n      tag_479\n        /* \"#utility.yul\":4907:4931   */\n      tag_480\n        /* \"#utility.yul\":4925:4930   */\n      dup5\n        /* \"#utility.yul\":4907:4931   */\n      tag_340\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":4898:4932   */\n      tag_347\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":4880:4933   */\n      tag_340\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4867:4933   */\n      swap1\n      pop\n        /* \"#utility.yul\":4797:4939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4945:5071   */\n    tag_349:\n        /* \"#utility.yul\":4995:5004   */\n      0x00\n        /* \"#utility.yul\":5028:5065   */\n      tag_482\n        /* \"#utility.yul\":5059:5064   */\n      dup3\n        /* \"#utility.yul\":5028:5065   */\n      tag_348\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":5015:5065   */\n      swap1\n      pop\n        /* \"#utility.yul\":4945:5071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5219   */\n    tag_350:\n        /* \"#utility.yul\":5143:5152   */\n      0x00\n        /* \"#utility.yul\":5176:5213   */\n      tag_484\n        /* \"#utility.yul\":5207:5212   */\n      dup3\n        /* \"#utility.yul\":5176:5213   */\n      tag_349\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":5163:5213   */\n      swap1\n      pop\n        /* \"#utility.yul\":5077:5219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5225:5388   */\n    tag_351:\n        /* \"#utility.yul\":5328:5381   */\n      tag_486\n        /* \"#utility.yul\":5375:5380   */\n      dup2\n        /* \"#utility.yul\":5328:5381   */\n      tag_350\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5323:5326   */\n      dup3\n        /* \"#utility.yul\":5316:5382   */\n      mstore\n        /* \"#utility.yul\":5225:5388   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5648   */\n    tag_57:\n        /* \"#utility.yul\":5503:5507   */\n      0x00\n        /* \"#utility.yul\":5541:5543   */\n      0x20\n        /* \"#utility.yul\":5530:5539   */\n      dup3\n        /* \"#utility.yul\":5526:5544   */\n      add\n        /* \"#utility.yul\":5518:5544   */\n      swap1\n      pop\n        /* \"#utility.yul\":5554:5641   */\n      tag_488\n        /* \"#utility.yul\":5638:5639   */\n      0x00\n        /* \"#utility.yul\":5627:5636   */\n      dup4\n        /* \"#utility.yul\":5623:5640   */\n      add\n        /* \"#utility.yul\":5614:5620   */\n      dup5\n        /* \"#utility.yul\":5554:5641   */\n      tag_351\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":5394:5648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5654:5755   */\n    tag_352:\n        /* \"#utility.yul\":5690:5697   */\n      0x00\n        /* \"#utility.yul\":5730:5748   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5723:5728   */\n      dup3\n        /* \"#utility.yul\":5719:5749   */\n      and\n        /* \"#utility.yul\":5708:5749   */\n      swap1\n      pop\n        /* \"#utility.yul\":5654:5755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5761:5876   */\n    tag_353:\n        /* \"#utility.yul\":5846:5869   */\n      tag_491\n        /* \"#utility.yul\":5863:5868   */\n      dup2\n        /* \"#utility.yul\":5846:5869   */\n      tag_352\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5841:5844   */\n      dup3\n        /* \"#utility.yul\":5834:5870   */\n      mstore\n        /* \"#utility.yul\":5761:5876   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5882:5981   */\n    tag_354:\n        /* \"#utility.yul\":5934:5940   */\n      0x00\n        /* \"#utility.yul\":5968:5973   */\n      dup2\n        /* \"#utility.yul\":5962:5974   */\n      mload\n        /* \"#utility.yul\":5952:5974   */\n      swap1\n      pop\n        /* \"#utility.yul\":5882:5981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5987:6235   */\n    tag_355:\n        /* \"#utility.yul\":6069:6070   */\n      0x00\n        /* \"#utility.yul\":6079:6192   */\n    tag_494:\n        /* \"#utility.yul\":6093:6099   */\n      dup4\n        /* \"#utility.yul\":6090:6091   */\n      dup2\n        /* \"#utility.yul\":6087:6100   */\n      lt\n        /* \"#utility.yul\":6079:6192   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":6178:6179   */\n      dup1\n        /* \"#utility.yul\":6173:6176   */\n      dup3\n        /* \"#utility.yul\":6169:6180   */\n      add\n        /* \"#utility.yul\":6163:6181   */\n      mload\n        /* \"#utility.yul\":6159:6160   */\n      dup2\n        /* \"#utility.yul\":6154:6157   */\n      dup5\n        /* \"#utility.yul\":6150:6161   */\n      add\n        /* \"#utility.yul\":6143:6182   */\n      mstore\n        /* \"#utility.yul\":6115:6117   */\n      0x20\n        /* \"#utility.yul\":6112:6113   */\n      dup2\n        /* \"#utility.yul\":6108:6118   */\n      add\n        /* \"#utility.yul\":6103:6118   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6192   */\n      jump(tag_494)\n    tag_496:\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6217:6223   */\n      dup5\n        /* \"#utility.yul\":6212:6215   */\n      dup5\n        /* \"#utility.yul\":6208:6224   */\n      add\n        /* \"#utility.yul\":6201:6228   */\n      mstore\n        /* \"#utility.yul\":6049:6235   */\n      pop\n        /* \"#utility.yul\":5987:6235   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6241:6343   */\n    tag_356:\n        /* \"#utility.yul\":6282:6288   */\n      0x00\n        /* \"#utility.yul\":6333:6335   */\n      0x1f\n        /* \"#utility.yul\":6329:6336   */\n      not\n        /* \"#utility.yul\":6324:6326   */\n      0x1f\n        /* \"#utility.yul\":6317:6322   */\n      dup4\n        /* \"#utility.yul\":6313:6327   */\n      add\n        /* \"#utility.yul\":6309:6337   */\n      and\n        /* \"#utility.yul\":6299:6337   */\n      swap1\n      pop\n        /* \"#utility.yul\":6241:6343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6349:6726   */\n    tag_357:\n        /* \"#utility.yul\":6437:6440   */\n      0x00\n        /* \"#utility.yul\":6465:6504   */\n      tag_499\n        /* \"#utility.yul\":6498:6503   */\n      dup3\n        /* \"#utility.yul\":6465:6504   */\n      tag_354\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6520:6591   */\n      tag_500\n        /* \"#utility.yul\":6584:6590   */\n      dup2\n        /* \"#utility.yul\":6579:6582   */\n      dup6\n        /* \"#utility.yul\":6520:6591   */\n      tag_334\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6513:6591   */\n      swap4\n      pop\n        /* \"#utility.yul\":6600:6665   */\n      tag_501\n        /* \"#utility.yul\":6658:6664   */\n      dup2\n        /* \"#utility.yul\":6653:6656   */\n      dup6\n        /* \"#utility.yul\":6646:6650   */\n      0x20\n        /* \"#utility.yul\":6639:6644   */\n      dup7\n        /* \"#utility.yul\":6635:6651   */\n      add\n        /* \"#utility.yul\":6600:6665   */\n      tag_355\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":6690:6719   */\n      tag_502\n        /* \"#utility.yul\":6712:6718   */\n      dup2\n        /* \"#utility.yul\":6690:6719   */\n      tag_356\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":6685:6688   */\n      dup5\n        /* \"#utility.yul\":6681:6720   */\n      add\n        /* \"#utility.yul\":6674:6720   */\n      swap2\n      pop\n        /* \"#utility.yul\":6441:6726   */\n      pop\n        /* \"#utility.yul\":6349:6726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:7257   */\n    tag_62:\n        /* \"#utility.yul\":6897:6901   */\n      0x00\n        /* \"#utility.yul\":6935:6937   */\n      0x60\n        /* \"#utility.yul\":6924:6933   */\n      dup3\n        /* \"#utility.yul\":6920:6938   */\n      add\n        /* \"#utility.yul\":6912:6938   */\n      swap1\n      pop\n        /* \"#utility.yul\":6948:7017   */\n      tag_504\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7003:7012   */\n      dup4\n        /* \"#utility.yul\":6999:7016   */\n      add\n        /* \"#utility.yul\":6990:6996   */\n      dup7\n        /* \"#utility.yul\":6948:7017   */\n      tag_353\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":7027:7097   */\n      tag_505\n        /* \"#utility.yul\":7093:7095   */\n      0x20\n        /* \"#utility.yul\":7082:7091   */\n      dup4\n        /* \"#utility.yul\":7078:7096   */\n      add\n        /* \"#utility.yul\":7069:7075   */\n      dup6\n        /* \"#utility.yul\":7027:7097   */\n      tag_353\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":7144:7153   */\n      dup2\n        /* \"#utility.yul\":7138:7142   */\n      dup2\n        /* \"#utility.yul\":7134:7154   */\n      sub\n        /* \"#utility.yul\":7129:7131   */\n      0x40\n        /* \"#utility.yul\":7118:7127   */\n      dup4\n        /* \"#utility.yul\":7114:7132   */\n      add\n        /* \"#utility.yul\":7107:7155   */\n      mstore\n        /* \"#utility.yul\":7172:7250   */\n      tag_506\n        /* \"#utility.yul\":7245:7249   */\n      dup2\n        /* \"#utility.yul\":7236:7242   */\n      dup5\n        /* \"#utility.yul\":7172:7250   */\n      tag_357\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7164:7250   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:7257   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7263:7383   */\n    tag_358:\n        /* \"#utility.yul\":7335:7358   */\n      tag_508\n        /* \"#utility.yul\":7352:7357   */\n      dup2\n        /* \"#utility.yul\":7335:7358   */\n      tag_352\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7325:7359   */\n      eq\n        /* \"#utility.yul\":7315:7377   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":7373:7374   */\n      0x00\n        /* \"#utility.yul\":7370:7371   */\n      dup1\n        /* \"#utility.yul\":7363:7375   */\n      revert\n        /* \"#utility.yul\":7315:7377   */\n    tag_509:\n        /* \"#utility.yul\":7263:7383   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7389:7526   */\n    tag_359:\n        /* \"#utility.yul\":7434:7439   */\n      0x00\n        /* \"#utility.yul\":7472:7478   */\n      dup2\n        /* \"#utility.yul\":7459:7479   */\n      calldataload\n        /* \"#utility.yul\":7450:7479   */\n      swap1\n      pop\n        /* \"#utility.yul\":7488:7520   */\n      tag_511\n        /* \"#utility.yul\":7514:7519   */\n      dup2\n        /* \"#utility.yul\":7488:7520   */\n      tag_358\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":7389:7526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7532:7649   */\n    tag_360:\n        /* \"#utility.yul\":7641:7642   */\n      0x00\n        /* \"#utility.yul\":7638:7639   */\n      dup1\n        /* \"#utility.yul\":7631:7643   */\n      revert\n        /* \"#utility.yul\":7655:7772   */\n    tag_361:\n        /* \"#utility.yul\":7764:7765   */\n      0x00\n        /* \"#utility.yul\":7761:7762   */\n      dup1\n        /* \"#utility.yul\":7754:7766   */\n      revert\n        /* \"#utility.yul\":7778:7958   */\n    tag_362:\n        /* \"#utility.yul\":7826:7903   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7823:7824   */\n      0x00\n        /* \"#utility.yul\":7816:7904   */\n      mstore\n        /* \"#utility.yul\":7923:7927   */\n      0x41\n        /* \"#utility.yul\":7920:7921   */\n      0x04\n        /* \"#utility.yul\":7913:7928   */\n      mstore\n        /* \"#utility.yul\":7947:7951   */\n      0x24\n        /* \"#utility.yul\":7944:7945   */\n      0x00\n        /* \"#utility.yul\":7937:7952   */\n      revert\n        /* \"#utility.yul\":7964:8245   */\n    tag_363:\n        /* \"#utility.yul\":8047:8074   */\n      tag_516\n        /* \"#utility.yul\":8069:8073   */\n      dup3\n        /* \"#utility.yul\":8047:8074   */\n      tag_356\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":8039:8045   */\n      dup2\n        /* \"#utility.yul\":8035:8075   */\n      add\n        /* \"#utility.yul\":8177:8183   */\n      dup2\n        /* \"#utility.yul\":8165:8175   */\n      dup2\n        /* \"#utility.yul\":8162:8184   */\n      lt\n        /* \"#utility.yul\":8141:8159   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8129:8139   */\n      dup3\n        /* \"#utility.yul\":8126:8160   */\n      gt\n        /* \"#utility.yul\":8123:8185   */\n      or\n        /* \"#utility.yul\":8120:8208   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":8188:8206   */\n      tag_518\n      tag_362\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":8120:8208   */\n    tag_517:\n        /* \"#utility.yul\":8228:8238   */\n      dup1\n        /* \"#utility.yul\":8224:8226   */\n      0x40\n        /* \"#utility.yul\":8217:8239   */\n      mstore\n        /* \"#utility.yul\":8007:8245   */\n      pop\n        /* \"#utility.yul\":7964:8245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8251:8380   */\n    tag_364:\n        /* \"#utility.yul\":8285:8291   */\n      0x00\n        /* \"#utility.yul\":8312:8332   */\n      tag_520\n      tag_337\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":8302:8332   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8374   */\n      tag_521\n        /* \"#utility.yul\":8369:8373   */\n      dup3\n        /* \"#utility.yul\":8361:8367   */\n      dup3\n        /* \"#utility.yul\":8341:8374   */\n      tag_363\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":8251:8380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8386:8694   */\n    tag_365:\n        /* \"#utility.yul\":8448:8452   */\n      0x00\n        /* \"#utility.yul\":8538:8556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8530:8536   */\n      dup3\n        /* \"#utility.yul\":8527:8557   */\n      gt\n        /* \"#utility.yul\":8524:8580   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":8560:8578   */\n      tag_524\n      tag_362\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":8524:8580   */\n    tag_523:\n        /* \"#utility.yul\":8598:8627   */\n      tag_525\n        /* \"#utility.yul\":8620:8626   */\n      dup3\n        /* \"#utility.yul\":8598:8627   */\n      tag_356\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":8590:8627   */\n      swap1\n      pop\n        /* \"#utility.yul\":8682:8686   */\n      0x20\n        /* \"#utility.yul\":8676:8680   */\n      dup2\n        /* \"#utility.yul\":8672:8687   */\n      add\n        /* \"#utility.yul\":8664:8687   */\n      swap1\n      pop\n        /* \"#utility.yul\":8386:8694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8700:8848   */\n    tag_366:\n        /* \"#utility.yul\":8798:8804   */\n      dup3\n        /* \"#utility.yul\":8793:8796   */\n      dup2\n        /* \"#utility.yul\":8788:8791   */\n      dup4\n        /* \"#utility.yul\":8775:8805   */\n      calldatacopy\n        /* \"#utility.yul\":8839:8840   */\n      0x00\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8825:8828   */\n      dup4\n        /* \"#utility.yul\":8821:8837   */\n      add\n        /* \"#utility.yul\":8814:8841   */\n      mstore\n        /* \"#utility.yul\":8700:8848   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8854:9279   */\n    tag_367:\n        /* \"#utility.yul\":8932:8937   */\n      0x00\n        /* \"#utility.yul\":8957:9023   */\n      tag_528\n        /* \"#utility.yul\":8973:9022   */\n      tag_529\n        /* \"#utility.yul\":9015:9021   */\n      dup5\n        /* \"#utility.yul\":8973:9022   */\n      tag_365\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":8957:9023   */\n      tag_364\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":8948:9023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9046:9052   */\n      dup3\n        /* \"#utility.yul\":9039:9044   */\n      dup2\n        /* \"#utility.yul\":9032:9053   */\n      mstore\n        /* \"#utility.yul\":9084:9088   */\n      0x20\n        /* \"#utility.yul\":9077:9082   */\n      dup2\n        /* \"#utility.yul\":9073:9089   */\n      add\n        /* \"#utility.yul\":9122:9125   */\n      dup5\n        /* \"#utility.yul\":9113:9119   */\n      dup5\n        /* \"#utility.yul\":9108:9111   */\n      dup5\n        /* \"#utility.yul\":9104:9120   */\n      add\n        /* \"#utility.yul\":9101:9126   */\n      gt\n        /* \"#utility.yul\":9098:9210   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":9129:9208   */\n      tag_531\n      tag_361\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":9098:9210   */\n    tag_530:\n        /* \"#utility.yul\":9219:9273   */\n      tag_532\n        /* \"#utility.yul\":9266:9272   */\n      dup5\n        /* \"#utility.yul\":9261:9264   */\n      dup3\n        /* \"#utility.yul\":9256:9259   */\n      dup6\n        /* \"#utility.yul\":9219:9273   */\n      tag_366\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":8938:9279   */\n      pop\n        /* \"#utility.yul\":8854:9279   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9299:9639   */\n    tag_368:\n        /* \"#utility.yul\":9355:9360   */\n      0x00\n        /* \"#utility.yul\":9404:9407   */\n      dup3\n        /* \"#utility.yul\":9397:9401   */\n      0x1f\n        /* \"#utility.yul\":9389:9395   */\n      dup4\n        /* \"#utility.yul\":9385:9402   */\n      add\n        /* \"#utility.yul\":9381:9408   */\n      slt\n        /* \"#utility.yul\":9371:9493   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":9412:9491   */\n      tag_535\n      tag_360\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":9371:9493   */\n    tag_534:\n        /* \"#utility.yul\":9529:9535   */\n      dup2\n        /* \"#utility.yul\":9516:9536   */\n      calldataload\n        /* \"#utility.yul\":9554:9633   */\n      tag_536\n        /* \"#utility.yul\":9629:9632   */\n      dup5\n        /* \"#utility.yul\":9621:9627   */\n      dup3\n        /* \"#utility.yul\":9614:9618   */\n      0x20\n        /* \"#utility.yul\":9606:9612   */\n      dup7\n        /* \"#utility.yul\":9602:9619   */\n      add\n        /* \"#utility.yul\":9554:9633   */\n      tag_367\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":9545:9633   */\n      swap2\n      pop\n        /* \"#utility.yul\":9361:9639   */\n      pop\n        /* \"#utility.yul\":9299:9639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9645:10440   */\n    tag_70:\n        /* \"#utility.yul\":9730:9736   */\n      0x00\n        /* \"#utility.yul\":9738:9744   */\n      dup1\n        /* \"#utility.yul\":9746:9752   */\n      0x00\n        /* \"#utility.yul\":9795:9797   */\n      0x60\n        /* \"#utility.yul\":9783:9792   */\n      dup5\n        /* \"#utility.yul\":9774:9781   */\n      dup7\n        /* \"#utility.yul\":9770:9793   */\n      sub\n        /* \"#utility.yul\":9766:9798   */\n      slt\n        /* \"#utility.yul\":9763:9882   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_539\n      tag_338\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9763:9882   */\n    tag_538:\n        /* \"#utility.yul\":9921:9922   */\n      0x00\n        /* \"#utility.yul\":9946:9998   */\n      tag_540\n        /* \"#utility.yul\":9990:9997   */\n      dup7\n        /* \"#utility.yul\":9981:9987   */\n      dup3\n        /* \"#utility.yul\":9970:9979   */\n      dup8\n        /* \"#utility.yul\":9966:9988   */\n      add\n        /* \"#utility.yul\":9946:9998   */\n      tag_359\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9936:9998   */\n      swap4\n      pop\n        /* \"#utility.yul\":9892:10008   */\n      pop\n        /* \"#utility.yul\":10047:10049   */\n      0x20\n        /* \"#utility.yul\":10073:10125   */\n      tag_541\n        /* \"#utility.yul\":10117:10124   */\n      dup7\n        /* \"#utility.yul\":10108:10114   */\n      dup3\n        /* \"#utility.yul\":10097:10106   */\n      dup8\n        /* \"#utility.yul\":10093:10115   */\n      add\n        /* \"#utility.yul\":10073:10125   */\n      tag_359\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10063:10125   */\n      swap3\n      pop\n        /* \"#utility.yul\":10018:10135   */\n      pop\n        /* \"#utility.yul\":10202:10204   */\n      0x40\n        /* \"#utility.yul\":10191:10200   */\n      dup5\n        /* \"#utility.yul\":10187:10205   */\n      add\n        /* \"#utility.yul\":10174:10206   */\n      calldataload\n        /* \"#utility.yul\":10233:10251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10225:10231   */\n      dup2\n        /* \"#utility.yul\":10222:10252   */\n      gt\n        /* \"#utility.yul\":10219:10336   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":10255:10334   */\n      tag_543\n      tag_339\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":10219:10336   */\n    tag_542:\n        /* \"#utility.yul\":10360:10423   */\n      tag_544\n        /* \"#utility.yul\":10415:10422   */\n      dup7\n        /* \"#utility.yul\":10406:10412   */\n      dup3\n        /* \"#utility.yul\":10395:10404   */\n      dup8\n        /* \"#utility.yul\":10391:10413   */\n      add\n        /* \"#utility.yul\":10360:10423   */\n      tag_368\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":10350:10423   */\n      swap2\n      pop\n        /* \"#utility.yul\":10145:10433   */\n      pop\n        /* \"#utility.yul\":9645:10440   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10446:11065   */\n    tag_85:\n        /* \"#utility.yul\":10523:10529   */\n      0x00\n        /* \"#utility.yul\":10531:10537   */\n      dup1\n        /* \"#utility.yul\":10539:10545   */\n      0x00\n        /* \"#utility.yul\":10588:10590   */\n      0x60\n        /* \"#utility.yul\":10576:10585   */\n      dup5\n        /* \"#utility.yul\":10567:10574   */\n      dup7\n        /* \"#utility.yul\":10563:10586   */\n      sub\n        /* \"#utility.yul\":10559:10591   */\n      slt\n        /* \"#utility.yul\":10556:10675   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":10594:10673   */\n      tag_547\n      tag_338\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":10556:10675   */\n    tag_546:\n        /* \"#utility.yul\":10714:10715   */\n      0x00\n        /* \"#utility.yul\":10739:10792   */\n      tag_548\n        /* \"#utility.yul\":10784:10791   */\n      dup7\n        /* \"#utility.yul\":10775:10781   */\n      dup3\n        /* \"#utility.yul\":10764:10773   */\n      dup8\n        /* \"#utility.yul\":10760:10782   */\n      add\n        /* \"#utility.yul\":10739:10792   */\n      tag_343\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":10729:10792   */\n      swap4\n      pop\n        /* \"#utility.yul\":10685:10802   */\n      pop\n        /* \"#utility.yul\":10841:10843   */\n      0x20\n        /* \"#utility.yul\":10867:10920   */\n      tag_549\n        /* \"#utility.yul\":10912:10919   */\n      dup7\n        /* \"#utility.yul\":10903:10909   */\n      dup3\n        /* \"#utility.yul\":10892:10901   */\n      dup8\n        /* \"#utility.yul\":10888:10910   */\n      add\n        /* \"#utility.yul\":10867:10920   */\n      tag_343\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":10857:10920   */\n      swap3\n      pop\n        /* \"#utility.yul\":10812:10930   */\n      pop\n        /* \"#utility.yul\":10969:10971   */\n      0x40\n        /* \"#utility.yul\":10995:11048   */\n      tag_550\n        /* \"#utility.yul\":11040:11047   */\n      dup7\n        /* \"#utility.yul\":11031:11037   */\n      dup3\n        /* \"#utility.yul\":11020:11029   */\n      dup8\n        /* \"#utility.yul\":11016:11038   */\n      add\n        /* \"#utility.yul\":10995:11048   */\n      tag_346\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":10985:11048   */\n      swap2\n      pop\n        /* \"#utility.yul\":10940:11058   */\n      pop\n        /* \"#utility.yul\":10446:11065   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11071:11188   */\n    tag_369:\n        /* \"#utility.yul\":11180:11181   */\n      0x00\n        /* \"#utility.yul\":11177:11178   */\n      dup1\n        /* \"#utility.yul\":11170:11182   */\n      revert\n        /* \"#utility.yul\":11194:11311   */\n    tag_370:\n        /* \"#utility.yul\":11303:11304   */\n      0x00\n        /* \"#utility.yul\":11300:11301   */\n      dup1\n        /* \"#utility.yul\":11293:11305   */\n      revert\n        /* \"#utility.yul\":11334:11902   */\n    tag_371:\n        /* \"#utility.yul\":11407:11415   */\n      0x00\n        /* \"#utility.yul\":11417:11423   */\n      dup1\n        /* \"#utility.yul\":11467:11470   */\n      dup4\n        /* \"#utility.yul\":11460:11464   */\n      0x1f\n        /* \"#utility.yul\":11452:11458   */\n      dup5\n        /* \"#utility.yul\":11448:11465   */\n      add\n        /* \"#utility.yul\":11444:11471   */\n      slt\n        /* \"#utility.yul\":11434:11556   */\n      tag_554\n      jumpi\n        /* \"#utility.yul\":11475:11554   */\n      tag_555\n      tag_360\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":11434:11556   */\n    tag_554:\n        /* \"#utility.yul\":11588:11594   */\n      dup3\n        /* \"#utility.yul\":11575:11595   */\n      calldataload\n        /* \"#utility.yul\":11565:11595   */\n      swap1\n      pop\n        /* \"#utility.yul\":11618:11636   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11610:11616   */\n      dup2\n        /* \"#utility.yul\":11607:11637   */\n      gt\n        /* \"#utility.yul\":11604:11721   */\n      iszero\n      tag_556\n      jumpi\n        /* \"#utility.yul\":11640:11719   */\n      tag_557\n      tag_369\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":11604:11721   */\n    tag_556:\n        /* \"#utility.yul\":11754:11758   */\n      0x20\n        /* \"#utility.yul\":11746:11752   */\n      dup4\n        /* \"#utility.yul\":11742:11759   */\n      add\n        /* \"#utility.yul\":11730:11759   */\n      swap2\n      pop\n        /* \"#utility.yul\":11808:11811   */\n      dup4\n        /* \"#utility.yul\":11800:11804   */\n      0x20\n        /* \"#utility.yul\":11792:11798   */\n      dup3\n        /* \"#utility.yul\":11788:11805   */\n      mul\n        /* \"#utility.yul\":11778:11786   */\n      dup4\n        /* \"#utility.yul\":11774:11806   */\n      add\n        /* \"#utility.yul\":11771:11812   */\n      gt\n        /* \"#utility.yul\":11768:11896   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":11815:11894   */\n      tag_559\n      tag_370\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":11768:11896   */\n    tag_558:\n        /* \"#utility.yul\":11334:11902   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11925:12493   */\n    tag_372:\n        /* \"#utility.yul\":11998:12006   */\n      0x00\n        /* \"#utility.yul\":12008:12014   */\n      dup1\n        /* \"#utility.yul\":12058:12061   */\n      dup4\n        /* \"#utility.yul\":12051:12055   */\n      0x1f\n        /* \"#utility.yul\":12043:12049   */\n      dup5\n        /* \"#utility.yul\":12039:12056   */\n      add\n        /* \"#utility.yul\":12035:12062   */\n      slt\n        /* \"#utility.yul\":12025:12147   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":12066:12145   */\n      tag_562\n      tag_360\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":12025:12147   */\n    tag_561:\n        /* \"#utility.yul\":12179:12185   */\n      dup3\n        /* \"#utility.yul\":12166:12186   */\n      calldataload\n        /* \"#utility.yul\":12156:12186   */\n      swap1\n      pop\n        /* \"#utility.yul\":12209:12227   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12201:12207   */\n      dup2\n        /* \"#utility.yul\":12198:12228   */\n      gt\n        /* \"#utility.yul\":12195:12312   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":12231:12310   */\n      tag_564\n      tag_369\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":12195:12312   */\n    tag_563:\n        /* \"#utility.yul\":12345:12349   */\n      0x20\n        /* \"#utility.yul\":12337:12343   */\n      dup4\n        /* \"#utility.yul\":12333:12350   */\n      add\n        /* \"#utility.yul\":12321:12350   */\n      swap2\n      pop\n        /* \"#utility.yul\":12399:12402   */\n      dup4\n        /* \"#utility.yul\":12391:12395   */\n      0x20\n        /* \"#utility.yul\":12383:12389   */\n      dup3\n        /* \"#utility.yul\":12379:12396   */\n      mul\n        /* \"#utility.yul\":12369:12377   */\n      dup4\n        /* \"#utility.yul\":12365:12397   */\n      add\n        /* \"#utility.yul\":12362:12403   */\n      gt\n        /* \"#utility.yul\":12359:12487   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":12406:12485   */\n      tag_566\n      tag_370\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":12359:12487   */\n    tag_565:\n        /* \"#utility.yul\":11925:12493   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12499:13808   */\n    tag_90:\n        /* \"#utility.yul\":12657:12663   */\n      0x00\n        /* \"#utility.yul\":12665:12671   */\n      dup1\n        /* \"#utility.yul\":12673:12679   */\n      0x00\n        /* \"#utility.yul\":12681:12687   */\n      dup1\n        /* \"#utility.yul\":12689:12695   */\n      0x00\n        /* \"#utility.yul\":12697:12703   */\n      dup1\n        /* \"#utility.yul\":12746:12748   */\n      0x60\n        /* \"#utility.yul\":12734:12743   */\n      dup8\n        /* \"#utility.yul\":12725:12732   */\n      dup10\n        /* \"#utility.yul\":12721:12744   */\n      sub\n        /* \"#utility.yul\":12717:12749   */\n      slt\n        /* \"#utility.yul\":12714:12833   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":12752:12831   */\n      tag_569\n      tag_338\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":12714:12833   */\n    tag_568:\n        /* \"#utility.yul\":12900:12901   */\n      0x00\n        /* \"#utility.yul\":12889:12898   */\n      dup8\n        /* \"#utility.yul\":12885:12902   */\n      add\n        /* \"#utility.yul\":12872:12903   */\n      calldataload\n        /* \"#utility.yul\":12930:12948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12922:12928   */\n      dup2\n        /* \"#utility.yul\":12919:12949   */\n      gt\n        /* \"#utility.yul\":12916:13033   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":12952:13031   */\n      tag_571\n      tag_339\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":12916:13033   */\n    tag_570:\n        /* \"#utility.yul\":13065:13145   */\n      tag_572\n        /* \"#utility.yul\":13137:13144   */\n      dup10\n        /* \"#utility.yul\":13128:13134   */\n      dup3\n        /* \"#utility.yul\":13117:13126   */\n      dup11\n        /* \"#utility.yul\":13113:13135   */\n      add\n        /* \"#utility.yul\":13065:13145   */\n      tag_371\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13047:13145   */\n      swap7\n      pop\n      swap7\n      pop\n        /* \"#utility.yul\":12843:13155   */\n      pop\n        /* \"#utility.yul\":13222:13224   */\n      0x20\n        /* \"#utility.yul\":13211:13220   */\n      dup8\n        /* \"#utility.yul\":13207:13225   */\n      add\n        /* \"#utility.yul\":13194:13226   */\n      calldataload\n        /* \"#utility.yul\":13253:13271   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13245:13251   */\n      dup2\n        /* \"#utility.yul\":13242:13272   */\n      gt\n        /* \"#utility.yul\":13239:13356   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":13275:13354   */\n      tag_574\n      tag_339\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":13239:13356   */\n    tag_573:\n        /* \"#utility.yul\":13388:13468   */\n      tag_575\n        /* \"#utility.yul\":13460:13467   */\n      dup10\n        /* \"#utility.yul\":13451:13457   */\n      dup3\n        /* \"#utility.yul\":13440:13449   */\n      dup11\n        /* \"#utility.yul\":13436:13458   */\n      add\n        /* \"#utility.yul\":13388:13468   */\n      tag_371\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":13370:13468   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":13165:13478   */\n      pop\n        /* \"#utility.yul\":13545:13547   */\n      0x40\n        /* \"#utility.yul\":13534:13543   */\n      dup8\n        /* \"#utility.yul\":13530:13548   */\n      add\n        /* \"#utility.yul\":13517:13549   */\n      calldataload\n        /* \"#utility.yul\":13576:13594   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13568:13574   */\n      dup2\n        /* \"#utility.yul\":13565:13595   */\n      gt\n        /* \"#utility.yul\":13562:13679   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":13598:13677   */\n      tag_577\n      tag_339\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":13562:13679   */\n    tag_576:\n        /* \"#utility.yul\":13711:13791   */\n      tag_578\n        /* \"#utility.yul\":13783:13790   */\n      dup10\n        /* \"#utility.yul\":13774:13780   */\n      dup3\n        /* \"#utility.yul\":13763:13772   */\n      dup11\n        /* \"#utility.yul\":13759:13781   */\n      add\n        /* \"#utility.yul\":13711:13791   */\n      tag_372\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":13693:13791   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":13488:13801   */\n      pop\n        /* \"#utility.yul\":12499:13808   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":13814:13954   */\n    tag_373:\n        /* \"#utility.yul\":13863:13872   */\n      0x00\n        /* \"#utility.yul\":13896:13948   */\n      tag_580\n        /* \"#utility.yul\":13914:13947   */\n      tag_581\n        /* \"#utility.yul\":13923:13946   */\n      tag_582\n        /* \"#utility.yul\":13940:13945   */\n      dup5\n        /* \"#utility.yul\":13923:13946   */\n      tag_352\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13914:13947   */\n      tag_347\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":13896:13948   */\n      tag_331\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":13883:13948   */\n      swap1\n      pop\n        /* \"#utility.yul\":13814:13954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13960:14089   */\n    tag_374:\n        /* \"#utility.yul\":14046:14082   */\n      tag_584\n        /* \"#utility.yul\":14076:14081   */\n      dup2\n        /* \"#utility.yul\":14046:14082   */\n      tag_373\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":14041:14044   */\n      dup3\n        /* \"#utility.yul\":14034:14083   */\n      mstore\n        /* \"#utility.yul\":13960:14089   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14095:14533   */\n    tag_107:\n        /* \"#utility.yul\":14242:14246   */\n      0x00\n        /* \"#utility.yul\":14280:14282   */\n      0x60\n        /* \"#utility.yul\":14269:14278   */\n      dup3\n        /* \"#utility.yul\":14265:14283   */\n      add\n        /* \"#utility.yul\":14257:14283   */\n      swap1\n      pop\n        /* \"#utility.yul\":14293:14364   */\n      tag_586\n        /* \"#utility.yul\":14361:14362   */\n      0x00\n        /* \"#utility.yul\":14350:14359   */\n      dup4\n        /* \"#utility.yul\":14346:14363   */\n      add\n        /* \"#utility.yul\":14337:14343   */\n      dup7\n        /* \"#utility.yul\":14293:14364   */\n      tag_333\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14374:14445   */\n      tag_587\n        /* \"#utility.yul\":14441:14443   */\n      0x20\n        /* \"#utility.yul\":14430:14439   */\n      dup4\n        /* \"#utility.yul\":14426:14444   */\n      add\n        /* \"#utility.yul\":14417:14423   */\n      dup6\n        /* \"#utility.yul\":14374:14445   */\n      tag_374\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14455:14526   */\n      tag_588\n        /* \"#utility.yul\":14522:14524   */\n      0x40\n        /* \"#utility.yul\":14511:14520   */\n      dup4\n        /* \"#utility.yul\":14507:14525   */\n      add\n        /* \"#utility.yul\":14498:14504   */\n      dup5\n        /* \"#utility.yul\":14455:14526   */\n      tag_374\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":14095:14533   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14539:14708   */\n    tag_375:\n        /* \"#utility.yul\":14679:14700   */\n      0x4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":14675:14676   */\n      0x00\n        /* \"#utility.yul\":14667:14673   */\n      dup3\n        /* \"#utility.yul\":14663:14677   */\n      add\n        /* \"#utility.yul\":14656:14701   */\n      mstore\n        /* \"#utility.yul\":14539:14708   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14714:15080   */\n    tag_376:\n        /* \"#utility.yul\":14856:14859   */\n      0x00\n        /* \"#utility.yul\":14877:14944   */\n      tag_591\n        /* \"#utility.yul\":14941:14943   */\n      0x13\n        /* \"#utility.yul\":14936:14939   */\n      dup4\n        /* \"#utility.yul\":14877:14944   */\n      tag_334\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":14870:14944   */\n      swap2\n      pop\n        /* \"#utility.yul\":14953:15046   */\n      tag_592\n        /* \"#utility.yul\":15042:15045   */\n      dup3\n        /* \"#utility.yul\":14953:15046   */\n      tag_375\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15071:15073   */\n      0x20\n        /* \"#utility.yul\":15066:15069   */\n      dup3\n        /* \"#utility.yul\":15062:15074   */\n      add\n        /* \"#utility.yul\":15055:15074   */\n      swap1\n      pop\n        /* \"#utility.yul\":14714:15080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15086:15505   */\n    tag_110:\n        /* \"#utility.yul\":15252:15256   */\n      0x00\n        /* \"#utility.yul\":15290:15292   */\n      0x20\n        /* \"#utility.yul\":15279:15288   */\n      dup3\n        /* \"#utility.yul\":15275:15293   */\n      add\n        /* \"#utility.yul\":15267:15293   */\n      swap1\n      pop\n        /* \"#utility.yul\":15339:15348   */\n      dup2\n        /* \"#utility.yul\":15333:15337   */\n      dup2\n        /* \"#utility.yul\":15329:15349   */\n      sub\n        /* \"#utility.yul\":15325:15326   */\n      0x00\n        /* \"#utility.yul\":15314:15323   */\n      dup4\n        /* \"#utility.yul\":15310:15327   */\n      add\n        /* \"#utility.yul\":15303:15350   */\n      mstore\n        /* \"#utility.yul\":15367:15498   */\n      tag_594\n        /* \"#utility.yul\":15493:15497   */\n      dup2\n        /* \"#utility.yul\":15367:15498   */\n      tag_376\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":15359:15498   */\n      swap1\n      pop\n        /* \"#utility.yul\":15086:15505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15511:15686   */\n    tag_377:\n        /* \"#utility.yul\":15651:15678   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":15647:15648   */\n      0x00\n        /* \"#utility.yul\":15639:15645   */\n      dup3\n        /* \"#utility.yul\":15635:15649   */\n      add\n        /* \"#utility.yul\":15628:15679   */\n      mstore\n        /* \"#utility.yul\":15511:15686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15692:16058   */\n    tag_378:\n        /* \"#utility.yul\":15834:15837   */\n      0x00\n        /* \"#utility.yul\":15855:15922   */\n      tag_597\n        /* \"#utility.yul\":15919:15921   */\n      0x19\n        /* \"#utility.yul\":15914:15917   */\n      dup4\n        /* \"#utility.yul\":15855:15922   */\n      tag_334\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":15848:15922   */\n      swap2\n      pop\n        /* \"#utility.yul\":15931:16024   */\n      tag_598\n        /* \"#utility.yul\":16020:16023   */\n      dup3\n        /* \"#utility.yul\":15931:16024   */\n      tag_377\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16049:16051   */\n      0x20\n        /* \"#utility.yul\":16044:16047   */\n      dup3\n        /* \"#utility.yul\":16040:16052   */\n      add\n        /* \"#utility.yul\":16033:16052   */\n      swap1\n      pop\n        /* \"#utility.yul\":15692:16058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16064:16483   */\n    tag_113:\n        /* \"#utility.yul\":16230:16234   */\n      0x00\n        /* \"#utility.yul\":16268:16270   */\n      0x20\n        /* \"#utility.yul\":16257:16266   */\n      dup3\n        /* \"#utility.yul\":16253:16271   */\n      add\n        /* \"#utility.yul\":16245:16271   */\n      swap1\n      pop\n        /* \"#utility.yul\":16317:16326   */\n      dup2\n        /* \"#utility.yul\":16311:16315   */\n      dup2\n        /* \"#utility.yul\":16307:16327   */\n      sub\n        /* \"#utility.yul\":16303:16304   */\n      0x00\n        /* \"#utility.yul\":16292:16301   */\n      dup4\n        /* \"#utility.yul\":16288:16305   */\n      add\n        /* \"#utility.yul\":16281:16328   */\n      mstore\n        /* \"#utility.yul\":16345:16476   */\n      tag_600\n        /* \"#utility.yul\":16471:16475   */\n      dup2\n        /* \"#utility.yul\":16345:16476   */\n      tag_378\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16337:16476   */\n      swap1\n      pop\n        /* \"#utility.yul\":16064:16483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16489:16683   */\n    tag_115:\n        /* \"#utility.yul\":16529:16533   */\n      0x00\n        /* \"#utility.yul\":16549:16569   */\n      tag_602\n        /* \"#utility.yul\":16567:16568   */\n      dup3\n        /* \"#utility.yul\":16549:16569   */\n      tag_331\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16544:16569   */\n      swap2\n      pop\n        /* \"#utility.yul\":16583:16603   */\n      tag_603\n        /* \"#utility.yul\":16601:16602   */\n      dup4\n        /* \"#utility.yul\":16583:16603   */\n      tag_331\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16578:16603   */\n      swap3\n      pop\n        /* \"#utility.yul\":16627:16628   */\n      dup3\n        /* \"#utility.yul\":16624:16625   */\n      dup3\n        /* \"#utility.yul\":16620:16629   */\n      sub\n        /* \"#utility.yul\":16612:16629   */\n      swap1\n      pop\n        /* \"#utility.yul\":16651:16652   */\n      dup2\n        /* \"#utility.yul\":16645:16649   */\n      dup2\n        /* \"#utility.yul\":16642:16653   */\n      gt\n        /* \"#utility.yul\":16639:16676   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":16656:16674   */\n      tag_605\n      tag_332\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":16639:16676   */\n    tag_604:\n        /* \"#utility.yul\":16489:16683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16689:16836   */\n    tag_379:\n        /* \"#utility.yul\":16790:16801   */\n      0x00\n        /* \"#utility.yul\":16827:16830   */\n      dup2\n        /* \"#utility.yul\":16812:16830   */\n      swap1\n      pop\n        /* \"#utility.yul\":16689:16836   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16842:16956   */\n    tag_380:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16962:17360   */\n    tag_381:\n        /* \"#utility.yul\":17121:17124   */\n      0x00\n        /* \"#utility.yul\":17142:17225   */\n      tag_609\n        /* \"#utility.yul\":17223:17224   */\n      0x00\n        /* \"#utility.yul\":17218:17221   */\n      dup4\n        /* \"#utility.yul\":17142:17225   */\n      tag_379\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17135:17225   */\n      swap2\n      pop\n        /* \"#utility.yul\":17234:17327   */\n      tag_610\n        /* \"#utility.yul\":17323:17326   */\n      dup3\n        /* \"#utility.yul\":17234:17327   */\n      tag_380\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17352:17353   */\n      0x00\n        /* \"#utility.yul\":17347:17350   */\n      dup3\n        /* \"#utility.yul\":17343:17354   */\n      add\n        /* \"#utility.yul\":17336:17354   */\n      swap1\n      pop\n        /* \"#utility.yul\":16962:17360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17366:17745   */\n    tag_118:\n        /* \"#utility.yul\":17550:17553   */\n      0x00\n        /* \"#utility.yul\":17572:17719   */\n      tag_612\n        /* \"#utility.yul\":17715:17718   */\n      dup3\n        /* \"#utility.yul\":17572:17719   */\n      tag_381\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":17565:17719   */\n      swap2\n      pop\n        /* \"#utility.yul\":17736:17739   */\n      dup2\n        /* \"#utility.yul\":17729:17739   */\n      swap1\n      pop\n        /* \"#utility.yul\":17366:17745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17751:17922   */\n    tag_382:\n        /* \"#utility.yul\":17891:17914   */\n      0x4574686572207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":17887:17888   */\n      0x00\n        /* \"#utility.yul\":17879:17885   */\n      dup3\n        /* \"#utility.yul\":17875:17889   */\n      add\n        /* \"#utility.yul\":17868:17915   */\n      mstore\n        /* \"#utility.yul\":17751:17922   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17928:18294   */\n    tag_383:\n        /* \"#utility.yul\":18070:18073   */\n      0x00\n        /* \"#utility.yul\":18091:18158   */\n      tag_615\n        /* \"#utility.yul\":18155:18157   */\n      0x15\n        /* \"#utility.yul\":18150:18153   */\n      dup4\n        /* \"#utility.yul\":18091:18158   */\n      tag_334\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":18084:18158   */\n      swap2\n      pop\n        /* \"#utility.yul\":18167:18260   */\n      tag_616\n        /* \"#utility.yul\":18256:18259   */\n      dup3\n        /* \"#utility.yul\":18167:18260   */\n      tag_382\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":18285:18287   */\n      0x20\n        /* \"#utility.yul\":18280:18283   */\n      dup3\n        /* \"#utility.yul\":18276:18288   */\n      add\n        /* \"#utility.yul\":18269:18288   */\n      swap1\n      pop\n        /* \"#utility.yul\":17928:18294   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18300:18719   */\n    tag_124:\n        /* \"#utility.yul\":18466:18470   */\n      0x00\n        /* \"#utility.yul\":18504:18506   */\n      0x20\n        /* \"#utility.yul\":18493:18502   */\n      dup3\n        /* \"#utility.yul\":18489:18507   */\n      add\n        /* \"#utility.yul\":18481:18507   */\n      swap1\n      pop\n        /* \"#utility.yul\":18553:18562   */\n      dup2\n        /* \"#utility.yul\":18547:18551   */\n      dup2\n        /* \"#utility.yul\":18543:18563   */\n      sub\n        /* \"#utility.yul\":18539:18540   */\n      0x00\n        /* \"#utility.yul\":18528:18537   */\n      dup4\n        /* \"#utility.yul\":18524:18541   */\n      add\n        /* \"#utility.yul\":18517:18564   */\n      mstore\n        /* \"#utility.yul\":18581:18712   */\n      tag_618\n        /* \"#utility.yul\":18707:18711   */\n      dup2\n        /* \"#utility.yul\":18581:18712   */\n      tag_383\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":18573:18712   */\n      swap1\n      pop\n        /* \"#utility.yul\":18300:18719   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18725:18897   */\n    tag_384:\n        /* \"#utility.yul\":18865:18889   */\n      0x496e636f727265637420457468657220616d6f756e7400000000000000000000\n        /* \"#utility.yul\":18861:18862   */\n      0x00\n        /* \"#utility.yul\":18853:18859   */\n      dup3\n        /* \"#utility.yul\":18849:18863   */\n      add\n        /* \"#utility.yul\":18842:18890   */\n      mstore\n        /* \"#utility.yul\":18725:18897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18903:19269   */\n    tag_385:\n        /* \"#utility.yul\":19045:19048   */\n      0x00\n        /* \"#utility.yul\":19066:19133   */\n      tag_621\n        /* \"#utility.yul\":19130:19132   */\n      0x16\n        /* \"#utility.yul\":19125:19128   */\n      dup4\n        /* \"#utility.yul\":19066:19133   */\n      tag_334\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":19059:19133   */\n      swap2\n      pop\n        /* \"#utility.yul\":19142:19235   */\n      tag_622\n        /* \"#utility.yul\":19231:19234   */\n      dup3\n        /* \"#utility.yul\":19142:19235   */\n      tag_384\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":19260:19262   */\n      0x20\n        /* \"#utility.yul\":19255:19258   */\n      dup3\n        /* \"#utility.yul\":19251:19263   */\n      add\n        /* \"#utility.yul\":19244:19263   */\n      swap1\n      pop\n        /* \"#utility.yul\":18903:19269   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19275:19694   */\n    tag_137:\n        /* \"#utility.yul\":19441:19445   */\n      0x00\n        /* \"#utility.yul\":19479:19481   */\n      0x20\n        /* \"#utility.yul\":19468:19477   */\n      dup3\n        /* \"#utility.yul\":19464:19482   */\n      add\n        /* \"#utility.yul\":19456:19482   */\n      swap1\n      pop\n        /* \"#utility.yul\":19528:19537   */\n      dup2\n        /* \"#utility.yul\":19522:19526   */\n      dup2\n        /* \"#utility.yul\":19518:19538   */\n      sub\n        /* \"#utility.yul\":19514:19515   */\n      0x00\n        /* \"#utility.yul\":19503:19512   */\n      dup4\n        /* \"#utility.yul\":19499:19516   */\n      add\n        /* \"#utility.yul\":19492:19539   */\n      mstore\n        /* \"#utility.yul\":19556:19687   */\n      tag_624\n        /* \"#utility.yul\":19682:19686   */\n      dup2\n        /* \"#utility.yul\":19556:19687   */\n      tag_385\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":19548:19687   */\n      swap1\n      pop\n        /* \"#utility.yul\":19275:19694   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19700:19927   */\n    tag_386:\n        /* \"#utility.yul\":19840:19874   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":19836:19837   */\n      0x00\n        /* \"#utility.yul\":19828:19834   */\n      dup3\n        /* \"#utility.yul\":19824:19838   */\n      add\n        /* \"#utility.yul\":19817:19875   */\n      mstore\n        /* \"#utility.yul\":19909:19919   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19904:19906   */\n      0x20\n        /* \"#utility.yul\":19896:19902   */\n      dup3\n        /* \"#utility.yul\":19892:19907   */\n      add\n        /* \"#utility.yul\":19885:19920   */\n      mstore\n        /* \"#utility.yul\":19700:19927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19933:20299   */\n    tag_387:\n        /* \"#utility.yul\":20075:20078   */\n      0x00\n        /* \"#utility.yul\":20096:20163   */\n      tag_627\n        /* \"#utility.yul\":20160:20162   */\n      0x28\n        /* \"#utility.yul\":20155:20158   */\n      dup4\n        /* \"#utility.yul\":20096:20163   */\n      tag_334\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":20089:20163   */\n      swap2\n      pop\n        /* \"#utility.yul\":20172:20265   */\n      tag_628\n        /* \"#utility.yul\":20261:20264   */\n      dup3\n        /* \"#utility.yul\":20172:20265   */\n      tag_386\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":20290:20292   */\n      0x40\n        /* \"#utility.yul\":20285:20288   */\n      dup3\n        /* \"#utility.yul\":20281:20293   */\n      add\n        /* \"#utility.yul\":20274:20293   */\n      swap1\n      pop\n        /* \"#utility.yul\":19933:20299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20305:20724   */\n    tag_141:\n        /* \"#utility.yul\":20471:20475   */\n      0x00\n        /* \"#utility.yul\":20509:20511   */\n      0x20\n        /* \"#utility.yul\":20498:20507   */\n      dup3\n        /* \"#utility.yul\":20494:20512   */\n      add\n        /* \"#utility.yul\":20486:20512   */\n      swap1\n      pop\n        /* \"#utility.yul\":20558:20567   */\n      dup2\n        /* \"#utility.yul\":20552:20556   */\n      dup2\n        /* \"#utility.yul\":20548:20568   */\n      sub\n        /* \"#utility.yul\":20544:20545   */\n      0x00\n        /* \"#utility.yul\":20533:20542   */\n      dup4\n        /* \"#utility.yul\":20529:20546   */\n      add\n        /* \"#utility.yul\":20522:20569   */\n      mstore\n        /* \"#utility.yul\":20586:20717   */\n      tag_630\n        /* \"#utility.yul\":20712:20716   */\n      dup2\n        /* \"#utility.yul\":20586:20717   */\n      tag_387\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":20578:20717   */\n      swap1\n      pop\n        /* \"#utility.yul\":20305:20724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20730:20815   */\n    tag_388:\n        /* \"#utility.yul\":20775:20782   */\n      0x00\n        /* \"#utility.yul\":20804:20809   */\n      dup2\n        /* \"#utility.yul\":20793:20809   */\n      swap1\n      pop\n        /* \"#utility.yul\":20730:20815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20821:20977   */\n    tag_389:\n        /* \"#utility.yul\":20878:20887   */\n      0x00\n        /* \"#utility.yul\":20911:20971   */\n      tag_633\n        /* \"#utility.yul\":20928:20970   */\n      tag_634\n        /* \"#utility.yul\":20937:20969   */\n      tag_635\n        /* \"#utility.yul\":20963:20968   */\n      dup5\n        /* \"#utility.yul\":20937:20969   */\n      tag_388\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":20928:20970   */\n      tag_347\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":20911:20971   */\n      tag_352\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":20898:20971   */\n      swap1\n      pop\n        /* \"#utility.yul\":20821:20977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20983:21128   */\n    tag_390:\n        /* \"#utility.yul\":21077:21121   */\n      tag_637\n        /* \"#utility.yul\":21115:21120   */\n      dup2\n        /* \"#utility.yul\":21077:21121   */\n      tag_389\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21072:21075   */\n      dup3\n        /* \"#utility.yul\":21065:21122   */\n      mstore\n        /* \"#utility.yul\":20983:21128   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21134:21370   */\n    tag_162:\n        /* \"#utility.yul\":21234:21238   */\n      0x00\n        /* \"#utility.yul\":21272:21274   */\n      0x20\n        /* \"#utility.yul\":21261:21270   */\n      dup3\n        /* \"#utility.yul\":21257:21275   */\n      add\n        /* \"#utility.yul\":21249:21275   */\n      swap1\n      pop\n        /* \"#utility.yul\":21285:21363   */\n      tag_639\n        /* \"#utility.yul\":21360:21361   */\n      0x00\n        /* \"#utility.yul\":21349:21358   */\n      dup4\n        /* \"#utility.yul\":21345:21362   */\n      add\n        /* \"#utility.yul\":21336:21342   */\n      dup5\n        /* \"#utility.yul\":21285:21363   */\n      tag_390\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":21134:21370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21376:21556   */\n    tag_391:\n        /* \"#utility.yul\":21424:21501   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21421:21422   */\n      0x00\n        /* \"#utility.yul\":21414:21502   */\n      mstore\n        /* \"#utility.yul\":21521:21525   */\n      0x22\n        /* \"#utility.yul\":21518:21519   */\n      0x04\n        /* \"#utility.yul\":21511:21526   */\n      mstore\n        /* \"#utility.yul\":21545:21549   */\n      0x24\n        /* \"#utility.yul\":21542:21543   */\n      0x00\n        /* \"#utility.yul\":21535:21550   */\n      revert\n        /* \"#utility.yul\":21562:21882   */\n    tag_170:\n        /* \"#utility.yul\":21606:21612   */\n      0x00\n        /* \"#utility.yul\":21643:21644   */\n      0x02\n        /* \"#utility.yul\":21637:21641   */\n      dup3\n        /* \"#utility.yul\":21633:21645   */\n      div\n        /* \"#utility.yul\":21623:21645   */\n      swap1\n      pop\n        /* \"#utility.yul\":21690:21691   */\n      0x01\n        /* \"#utility.yul\":21684:21688   */\n      dup3\n        /* \"#utility.yul\":21680:21692   */\n      and\n        /* \"#utility.yul\":21711:21729   */\n      dup1\n        /* \"#utility.yul\":21701:21782   */\n      tag_642\n      jumpi\n        /* \"#utility.yul\":21767:21771   */\n      0x7f\n        /* \"#utility.yul\":21759:21765   */\n      dup3\n        /* \"#utility.yul\":21755:21772   */\n      and\n        /* \"#utility.yul\":21745:21772   */\n      swap2\n      pop\n        /* \"#utility.yul\":21701:21782   */\n    tag_642:\n        /* \"#utility.yul\":21829:21831   */\n      0x20\n        /* \"#utility.yul\":21821:21827   */\n      dup3\n        /* \"#utility.yul\":21818:21832   */\n      lt\n        /* \"#utility.yul\":21798:21816   */\n      dup2\n        /* \"#utility.yul\":21795:21833   */\n      sub\n        /* \"#utility.yul\":21792:21876   */\n      tag_643\n      jumpi\n        /* \"#utility.yul\":21848:21866   */\n      tag_644\n      tag_391\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":21792:21876   */\n    tag_643:\n        /* \"#utility.yul\":21613:21882   */\n      pop\n        /* \"#utility.yul\":21562:21882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21888:21978   */\n    tag_392:\n        /* \"#utility.yul\":21922:21929   */\n      0x00\n        /* \"#utility.yul\":21965:21970   */\n      dup2\n        /* \"#utility.yul\":21958:21971   */\n      iszero\n        /* \"#utility.yul\":21951:21972   */\n      iszero\n        /* \"#utility.yul\":21940:21972   */\n      swap1\n      pop\n        /* \"#utility.yul\":21888:21978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21984:22100   */\n    tag_393:\n        /* \"#utility.yul\":22054:22075   */\n      tag_647\n        /* \"#utility.yul\":22069:22074   */\n      dup2\n        /* \"#utility.yul\":22054:22075   */\n      tag_392\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":22047:22052   */\n      dup2\n        /* \"#utility.yul\":22044:22076   */\n      eq\n        /* \"#utility.yul\":22034:22094   */\n      tag_648\n      jumpi\n        /* \"#utility.yul\":22090:22091   */\n      0x00\n        /* \"#utility.yul\":22087:22088   */\n      dup1\n        /* \"#utility.yul\":22080:22092   */\n      revert\n        /* \"#utility.yul\":22034:22094   */\n    tag_648:\n        /* \"#utility.yul\":21984:22100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22106:22243   */\n    tag_394:\n        /* \"#utility.yul\":22160:22165   */\n      0x00\n        /* \"#utility.yul\":22191:22197   */\n      dup2\n        /* \"#utility.yul\":22185:22198   */\n      mload\n        /* \"#utility.yul\":22176:22198   */\n      swap1\n      pop\n        /* \"#utility.yul\":22207:22237   */\n      tag_650\n        /* \"#utility.yul\":22231:22236   */\n      dup2\n        /* \"#utility.yul\":22207:22237   */\n      tag_393\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":22106:22243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22249:22594   */\n    tag_183:\n        /* \"#utility.yul\":22316:22322   */\n      0x00\n        /* \"#utility.yul\":22365:22367   */\n      0x20\n        /* \"#utility.yul\":22353:22362   */\n      dup3\n        /* \"#utility.yul\":22344:22351   */\n      dup5\n        /* \"#utility.yul\":22340:22363   */\n      sub\n        /* \"#utility.yul\":22336:22368   */\n      slt\n        /* \"#utility.yul\":22333:22452   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":22371:22450   */\n      tag_653\n      tag_338\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":22333:22452   */\n    tag_652:\n        /* \"#utility.yul\":22491:22492   */\n      0x00\n        /* \"#utility.yul\":22516:22577   */\n      tag_654\n        /* \"#utility.yul\":22569:22576   */\n      dup5\n        /* \"#utility.yul\":22560:22566   */\n      dup3\n        /* \"#utility.yul\":22549:22558   */\n      dup6\n        /* \"#utility.yul\":22545:22567   */\n      add\n        /* \"#utility.yul\":22516:22577   */\n      tag_394\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":22506:22577   */\n      swap2\n      pop\n        /* \"#utility.yul\":22462:22587   */\n      pop\n        /* \"#utility.yul\":22249:22594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22600:22772   */\n    tag_395:\n        /* \"#utility.yul\":22740:22764   */\n      0x43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000\n        /* \"#utility.yul\":22736:22737   */\n      0x00\n        /* \"#utility.yul\":22728:22734   */\n      dup3\n        /* \"#utility.yul\":22724:22738   */\n      add\n        /* \"#utility.yul\":22717:22765   */\n      mstore\n        /* \"#utility.yul\":22600:22772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22778:23144   */\n    tag_396:\n        /* \"#utility.yul\":22920:22923   */\n      0x00\n        /* \"#utility.yul\":22941:23008   */\n      tag_657\n        /* \"#utility.yul\":23005:23007   */\n      0x16\n        /* \"#utility.yul\":23000:23003   */\n      dup4\n        /* \"#utility.yul\":22941:23008   */\n      tag_334\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":22934:23008   */\n      swap2\n      pop\n        /* \"#utility.yul\":23017:23110   */\n      tag_658\n        /* \"#utility.yul\":23106:23109   */\n      dup3\n        /* \"#utility.yul\":23017:23110   */\n      tag_395\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":23135:23137   */\n      0x20\n        /* \"#utility.yul\":23130:23133   */\n      dup3\n        /* \"#utility.yul\":23126:23138   */\n      add\n        /* \"#utility.yul\":23119:23138   */\n      swap1\n      pop\n        /* \"#utility.yul\":22778:23144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23150:23569   */\n    tag_186:\n        /* \"#utility.yul\":23316:23320   */\n      0x00\n        /* \"#utility.yul\":23354:23356   */\n      0x20\n        /* \"#utility.yul\":23343:23352   */\n      dup3\n        /* \"#utility.yul\":23339:23357   */\n      add\n        /* \"#utility.yul\":23331:23357   */\n      swap1\n      pop\n        /* \"#utility.yul\":23403:23412   */\n      dup2\n        /* \"#utility.yul\":23397:23401   */\n      dup2\n        /* \"#utility.yul\":23393:23413   */\n      sub\n        /* \"#utility.yul\":23389:23390   */\n      0x00\n        /* \"#utility.yul\":23378:23387   */\n      dup4\n        /* \"#utility.yul\":23374:23391   */\n      add\n        /* \"#utility.yul\":23367:23414   */\n      mstore\n        /* \"#utility.yul\":23431:23562   */\n      tag_660\n        /* \"#utility.yul\":23557:23561   */\n      dup2\n        /* \"#utility.yul\":23431:23562   */\n      tag_396\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":23423:23562   */\n      swap1\n      pop\n        /* \"#utility.yul\":23150:23569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23575:23796   */\n    tag_397:\n        /* \"#utility.yul\":23715:23749   */\n      0x53746172742074696d65206d757374206265206265666f726520656e64207469\n        /* \"#utility.yul\":23711:23712   */\n      0x00\n        /* \"#utility.yul\":23703:23709   */\n      dup3\n        /* \"#utility.yul\":23699:23713   */\n      add\n        /* \"#utility.yul\":23692:23750   */\n      mstore\n        /* \"#utility.yul\":23784:23788   */\n      0x6d65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23779:23781   */\n      0x20\n        /* \"#utility.yul\":23771:23777   */\n      dup3\n        /* \"#utility.yul\":23767:23782   */\n      add\n        /* \"#utility.yul\":23760:23789   */\n      mstore\n        /* \"#utility.yul\":23575:23796   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23802:24168   */\n    tag_398:\n        /* \"#utility.yul\":23944:23947   */\n      0x00\n        /* \"#utility.yul\":23965:24032   */\n      tag_663\n        /* \"#utility.yul\":24029:24031   */\n      0x22\n        /* \"#utility.yul\":24024:24027   */\n      dup4\n        /* \"#utility.yul\":23965:24032   */\n      tag_334\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":23958:24032   */\n      swap2\n      pop\n        /* \"#utility.yul\":24041:24134   */\n      tag_664\n        /* \"#utility.yul\":24130:24133   */\n      dup3\n        /* \"#utility.yul\":24041:24134   */\n      tag_397\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":24159:24161   */\n      0x40\n        /* \"#utility.yul\":24154:24157   */\n      dup3\n        /* \"#utility.yul\":24150:24162   */\n      add\n        /* \"#utility.yul\":24143:24162   */\n      swap1\n      pop\n        /* \"#utility.yul\":23802:24168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24174:24593   */\n    tag_190:\n        /* \"#utility.yul\":24340:24344   */\n      0x00\n        /* \"#utility.yul\":24378:24380   */\n      0x20\n        /* \"#utility.yul\":24367:24376   */\n      dup3\n        /* \"#utility.yul\":24363:24381   */\n      add\n        /* \"#utility.yul\":24355:24381   */\n      swap1\n      pop\n        /* \"#utility.yul\":24427:24436   */\n      dup2\n        /* \"#utility.yul\":24421:24425   */\n      dup2\n        /* \"#utility.yul\":24417:24437   */\n      sub\n        /* \"#utility.yul\":24413:24414   */\n      0x00\n        /* \"#utility.yul\":24402:24411   */\n      dup4\n        /* \"#utility.yul\":24398:24415   */\n      add\n        /* \"#utility.yul\":24391:24438   */\n      mstore\n        /* \"#utility.yul\":24455:24586   */\n      tag_666\n        /* \"#utility.yul\":24581:24585   */\n      dup2\n        /* \"#utility.yul\":24455:24586   */\n      tag_398\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":24447:24586   */\n      swap1\n      pop\n        /* \"#utility.yul\":24174:24593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24599:24740   */\n    tag_399:\n        /* \"#utility.yul\":24648:24652   */\n      0x00\n        /* \"#utility.yul\":24671:24674   */\n      dup2\n        /* \"#utility.yul\":24663:24674   */\n      swap1\n      pop\n        /* \"#utility.yul\":24694:24697   */\n      dup2\n        /* \"#utility.yul\":24691:24692   */\n      0x00\n        /* \"#utility.yul\":24684:24698   */\n      mstore\n        /* \"#utility.yul\":24728:24732   */\n      0x20\n        /* \"#utility.yul\":24725:24726   */\n      0x00\n        /* \"#utility.yul\":24715:24733   */\n      keccak256\n        /* \"#utility.yul\":24707:24733   */\n      swap1\n      pop\n        /* \"#utility.yul\":24599:24740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24746:24839   */\n    tag_400:\n        /* \"#utility.yul\":24783:24789   */\n      0x00\n        /* \"#utility.yul\":24830:24832   */\n      0x20\n        /* \"#utility.yul\":24825:24827   */\n      0x1f\n        /* \"#utility.yul\":24818:24823   */\n      dup4\n        /* \"#utility.yul\":24814:24828   */\n      add\n        /* \"#utility.yul\":24810:24833   */\n      div\n        /* \"#utility.yul\":24800:24833   */\n      swap1\n      pop\n        /* \"#utility.yul\":24746:24839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24845:24952   */\n    tag_401:\n        /* \"#utility.yul\":24889:24897   */\n      0x00\n        /* \"#utility.yul\":24939:24944   */\n      dup3\n        /* \"#utility.yul\":24933:24937   */\n      dup3\n        /* \"#utility.yul\":24929:24945   */\n      shl\n        /* \"#utility.yul\":24908:24945   */\n      swap1\n      pop\n        /* \"#utility.yul\":24845:24952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24958:25351   */\n    tag_402:\n        /* \"#utility.yul\":25027:25033   */\n      0x00\n        /* \"#utility.yul\":25077:25078   */\n      0x08\n        /* \"#utility.yul\":25065:25075   */\n      dup4\n        /* \"#utility.yul\":25061:25079   */\n      mul\n        /* \"#utility.yul\":25100:25197   */\n      tag_671\n        /* \"#utility.yul\":25130:25196   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25119:25128   */\n      dup3\n        /* \"#utility.yul\":25100:25197   */\n      tag_401\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":25218:25257   */\n      tag_672\n        /* \"#utility.yul\":25248:25256   */\n      dup7\n        /* \"#utility.yul\":25237:25246   */\n      dup4\n        /* \"#utility.yul\":25218:25257   */\n      tag_401\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":25206:25257   */\n      swap6\n      pop\n        /* \"#utility.yul\":25290:25294   */\n      dup1\n        /* \"#utility.yul\":25286:25295   */\n      not\n        /* \"#utility.yul\":25279:25284   */\n      dup5\n        /* \"#utility.yul\":25275:25296   */\n      and\n        /* \"#utility.yul\":25266:25296   */\n      swap4\n      pop\n        /* \"#utility.yul\":25339:25343   */\n      dup1\n        /* \"#utility.yul\":25329:25337   */\n      dup7\n        /* \"#utility.yul\":25325:25344   */\n      and\n        /* \"#utility.yul\":25318:25323   */\n      dup5\n        /* \"#utility.yul\":25315:25345   */\n      or\n        /* \"#utility.yul\":25305:25345   */\n      swap3\n      pop\n        /* \"#utility.yul\":25034:25351   */\n      pop\n      pop\n        /* \"#utility.yul\":24958:25351   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25357:25499   */\n    tag_403:\n        /* \"#utility.yul\":25407:25416   */\n      0x00\n        /* \"#utility.yul\":25440:25493   */\n      tag_674\n        /* \"#utility.yul\":25458:25492   */\n      tag_675\n        /* \"#utility.yul\":25467:25491   */\n      tag_676\n        /* \"#utility.yul\":25485:25490   */\n      dup5\n        /* \"#utility.yul\":25467:25491   */\n      tag_331\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":25458:25492   */\n      tag_347\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":25440:25493   */\n      tag_331\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":25427:25493   */\n      swap1\n      pop\n        /* \"#utility.yul\":25357:25499   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25505:25580   */\n    tag_404:\n        /* \"#utility.yul\":25548:25551   */\n      0x00\n        /* \"#utility.yul\":25569:25574   */\n      dup2\n        /* \"#utility.yul\":25562:25574   */\n      swap1\n      pop\n        /* \"#utility.yul\":25505:25580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25586:25855   */\n    tag_405:\n        /* \"#utility.yul\":25696:25735   */\n      tag_679\n        /* \"#utility.yul\":25727:25734   */\n      dup4\n        /* \"#utility.yul\":25696:25735   */\n      tag_403\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":25757:25848   */\n      tag_680\n        /* \"#utility.yul\":25806:25847   */\n      tag_681\n        /* \"#utility.yul\":25830:25846   */\n      dup3\n        /* \"#utility.yul\":25806:25847   */\n      tag_404\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":25798:25804   */\n      dup5\n        /* \"#utility.yul\":25791:25795   */\n      dup5\n        /* \"#utility.yul\":25785:25796   */\n      sload\n        /* \"#utility.yul\":25757:25848   */\n      tag_402\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":25751:25755   */\n      dup3\n        /* \"#utility.yul\":25744:25849   */\n      sstore\n        /* \"#utility.yul\":25662:25855   */\n      pop\n        /* \"#utility.yul\":25586:25855   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25861:25934   */\n    tag_406:\n        /* \"#utility.yul\":25906:25909   */\n      0x00\n        /* \"#utility.yul\":25861:25934   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":25940:26129   */\n    tag_407:\n        /* \"#utility.yul\":26017:26049   */\n      tag_684\n      tag_406\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":26058:26123   */\n      tag_685\n        /* \"#utility.yul\":26116:26122   */\n      dup2\n        /* \"#utility.yul\":26108:26114   */\n      dup5\n        /* \"#utility.yul\":26102:26106   */\n      dup5\n        /* \"#utility.yul\":26058:26123   */\n      tag_405\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":25993:26129   */\n      pop\n        /* \"#utility.yul\":25940:26129   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26135:26321   */\n    tag_408:\n        /* \"#utility.yul\":26195:26315   */\n    tag_687:\n        /* \"#utility.yul\":26212:26215   */\n      dup2\n        /* \"#utility.yul\":26205:26210   */\n      dup2\n        /* \"#utility.yul\":26202:26216   */\n      lt\n        /* \"#utility.yul\":26195:26315   */\n      iszero\n      tag_689\n      jumpi\n        /* \"#utility.yul\":26266:26305   */\n      tag_690\n        /* \"#utility.yul\":26303:26304   */\n      0x00\n        /* \"#utility.yul\":26296:26301   */\n      dup3\n        /* \"#utility.yul\":26266:26305   */\n      tag_407\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":26239:26240   */\n      0x01\n        /* \"#utility.yul\":26232:26237   */\n      dup2\n        /* \"#utility.yul\":26228:26241   */\n      add\n        /* \"#utility.yul\":26219:26241   */\n      swap1\n      pop\n        /* \"#utility.yul\":26195:26315   */\n      jump(tag_687)\n    tag_689:\n        /* \"#utility.yul\":26135:26321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26327:26870   */\n    tag_409:\n        /* \"#utility.yul\":26428:26430   */\n      0x1f\n        /* \"#utility.yul\":26423:26426   */\n      dup3\n        /* \"#utility.yul\":26420:26431   */\n      gt\n        /* \"#utility.yul\":26417:26863   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":26462:26500   */\n      tag_693\n        /* \"#utility.yul\":26494:26499   */\n      dup2\n        /* \"#utility.yul\":26462:26500   */\n      tag_399\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":26546:26575   */\n      tag_694\n        /* \"#utility.yul\":26564:26574   */\n      dup5\n        /* \"#utility.yul\":26546:26575   */\n      tag_400\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":26536:26544   */\n      dup2\n        /* \"#utility.yul\":26532:26576   */\n      add\n        /* \"#utility.yul\":26729:26731   */\n      0x20\n        /* \"#utility.yul\":26717:26727   */\n      dup6\n        /* \"#utility.yul\":26714:26732   */\n      lt\n        /* \"#utility.yul\":26711:26760   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":26750:26758   */\n      dup2\n        /* \"#utility.yul\":26735:26758   */\n      swap1\n      pop\n        /* \"#utility.yul\":26711:26760   */\n    tag_695:\n        /* \"#utility.yul\":26773:26853   */\n      tag_696\n        /* \"#utility.yul\":26829:26851   */\n      tag_697\n        /* \"#utility.yul\":26847:26850   */\n      dup6\n        /* \"#utility.yul\":26829:26851   */\n      tag_400\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":26819:26827   */\n      dup4\n        /* \"#utility.yul\":26815:26852   */\n      add\n        /* \"#utility.yul\":26802:26813   */\n      dup3\n        /* \"#utility.yul\":26773:26853   */\n      tag_408\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":26432:26863   */\n      pop\n      pop\n        /* \"#utility.yul\":26417:26863   */\n    tag_692:\n        /* \"#utility.yul\":26327:26870   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26876:26993   */\n    tag_410:\n        /* \"#utility.yul\":26930:26938   */\n      0x00\n        /* \"#utility.yul\":26980:26985   */\n      dup3\n        /* \"#utility.yul\":26974:26978   */\n      dup3\n        /* \"#utility.yul\":26970:26986   */\n      shr\n        /* \"#utility.yul\":26949:26986   */\n      swap1\n      pop\n        /* \"#utility.yul\":26876:26993   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26999:27168   */\n    tag_411:\n        /* \"#utility.yul\":27043:27049   */\n      0x00\n        /* \"#utility.yul\":27076:27127   */\n      tag_700\n        /* \"#utility.yul\":27124:27125   */\n      0x00\n        /* \"#utility.yul\":27120:27126   */\n      not\n        /* \"#utility.yul\":27112:27117   */\n      dup5\n        /* \"#utility.yul\":27109:27110   */\n      0x08\n        /* \"#utility.yul\":27105:27118   */\n      mul\n        /* \"#utility.yul\":27076:27127   */\n      tag_410\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":27072:27128   */\n      not\n        /* \"#utility.yul\":27157:27161   */\n      dup1\n        /* \"#utility.yul\":27151:27155   */\n      dup4\n        /* \"#utility.yul\":27147:27162   */\n      and\n        /* \"#utility.yul\":27137:27162   */\n      swap2\n      pop\n        /* \"#utility.yul\":27050:27168   */\n      pop\n        /* \"#utility.yul\":26999:27168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27173:27468   */\n    tag_412:\n        /* \"#utility.yul\":27249:27253   */\n      0x00\n        /* \"#utility.yul\":27395:27424   */\n      tag_702\n        /* \"#utility.yul\":27420:27423   */\n      dup4\n        /* \"#utility.yul\":27414:27418   */\n      dup4\n        /* \"#utility.yul\":27395:27424   */\n      tag_411\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":27387:27424   */\n      swap2\n      pop\n        /* \"#utility.yul\":27457:27460   */\n      dup3\n        /* \"#utility.yul\":27454:27455   */\n      0x02\n        /* \"#utility.yul\":27450:27461   */\n      mul\n        /* \"#utility.yul\":27444:27448   */\n      dup3\n        /* \"#utility.yul\":27441:27462   */\n      or\n        /* \"#utility.yul\":27433:27462   */\n      swap1\n      pop\n        /* \"#utility.yul\":27173:27468   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27473:28868   */\n    tag_192:\n        /* \"#utility.yul\":27590:27627   */\n      tag_704\n        /* \"#utility.yul\":27623:27626   */\n      dup3\n        /* \"#utility.yul\":27590:27627   */\n      tag_354\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":27692:27710   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":27684:27690   */\n      dup2\n        /* \"#utility.yul\":27681:27711   */\n      gt\n        /* \"#utility.yul\":27678:27734   */\n      iszero\n      tag_705\n      jumpi\n        /* \"#utility.yul\":27714:27732   */\n      tag_706\n      tag_362\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":27678:27734   */\n    tag_705:\n        /* \"#utility.yul\":27758:27796   */\n      tag_707\n        /* \"#utility.yul\":27790:27794   */\n      dup3\n        /* \"#utility.yul\":27784:27795   */\n      sload\n        /* \"#utility.yul\":27758:27796   */\n      tag_170\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":27843:27910   */\n      tag_708\n        /* \"#utility.yul\":27903:27909   */\n      dup3\n        /* \"#utility.yul\":27895:27901   */\n      dup3\n        /* \"#utility.yul\":27889:27893   */\n      dup6\n        /* \"#utility.yul\":27843:27910   */\n      tag_409\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":27937:27938   */\n      0x00\n        /* \"#utility.yul\":27961:27965   */\n      0x20\n        /* \"#utility.yul\":27948:27965   */\n      swap1\n      pop\n        /* \"#utility.yul\":27993:27995   */\n      0x1f\n        /* \"#utility.yul\":27985:27991   */\n      dup4\n        /* \"#utility.yul\":27982:27996   */\n      gt\n        /* \"#utility.yul\":28010:28011   */\n      0x01\n        /* \"#utility.yul\":28005:28623   */\n      dup2\n      eq\n      tag_710\n      jumpi\n        /* \"#utility.yul\":28667:28668   */\n      0x00\n        /* \"#utility.yul\":28684:28690   */\n      dup5\n        /* \"#utility.yul\":28681:28758   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":28733:28742   */\n      dup3\n        /* \"#utility.yul\":28728:28731   */\n      dup8\n        /* \"#utility.yul\":28724:28743   */\n      add\n        /* \"#utility.yul\":28718:28744   */\n      mload\n        /* \"#utility.yul\":28709:28744   */\n      swap1\n      pop\n        /* \"#utility.yul\":28681:28758   */\n    tag_711:\n        /* \"#utility.yul\":28784:28851   */\n      tag_712\n        /* \"#utility.yul\":28844:28850   */\n      dup6\n        /* \"#utility.yul\":28837:28842   */\n      dup3\n        /* \"#utility.yul\":28784:28851   */\n      tag_412\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":28778:28782   */\n      dup7\n        /* \"#utility.yul\":28771:28852   */\n      sstore\n        /* \"#utility.yul\":28640:28862   */\n      pop\n        /* \"#utility.yul\":27975:28862   */\n      jump(tag_709)\n        /* \"#utility.yul\":28005:28623   */\n    tag_710:\n        /* \"#utility.yul\":28057:28061   */\n      0x1f\n        /* \"#utility.yul\":28053:28062   */\n      not\n        /* \"#utility.yul\":28045:28051   */\n      dup5\n        /* \"#utility.yul\":28041:28063   */\n      and\n        /* \"#utility.yul\":28091:28128   */\n      tag_713\n        /* \"#utility.yul\":28123:28127   */\n      dup7\n        /* \"#utility.yul\":28091:28128   */\n      tag_399\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":28150:28151   */\n      0x00\n        /* \"#utility.yul\":28164:28372   */\n    tag_714:\n        /* \"#utility.yul\":28178:28185   */\n      dup3\n        /* \"#utility.yul\":28175:28176   */\n      dup2\n        /* \"#utility.yul\":28172:28186   */\n      lt\n        /* \"#utility.yul\":28164:28372   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":28257:28266   */\n      dup5\n        /* \"#utility.yul\":28252:28255   */\n      dup10\n        /* \"#utility.yul\":28248:28267   */\n      add\n        /* \"#utility.yul\":28242:28268   */\n      mload\n        /* \"#utility.yul\":28234:28240   */\n      dup3\n        /* \"#utility.yul\":28227:28269   */\n      sstore\n        /* \"#utility.yul\":28308:28309   */\n      0x01\n        /* \"#utility.yul\":28300:28306   */\n      dup3\n        /* \"#utility.yul\":28296:28310   */\n      add\n        /* \"#utility.yul\":28286:28310   */\n      swap2\n      pop\n        /* \"#utility.yul\":28355:28357   */\n      0x20\n        /* \"#utility.yul\":28344:28353   */\n      dup6\n        /* \"#utility.yul\":28340:28358   */\n      add\n        /* \"#utility.yul\":28327:28358   */\n      swap5\n      pop\n        /* \"#utility.yul\":28201:28205   */\n      0x20\n        /* \"#utility.yul\":28198:28199   */\n      dup2\n        /* \"#utility.yul\":28194:28206   */\n      add\n        /* \"#utility.yul\":28189:28206   */\n      swap1\n      pop\n        /* \"#utility.yul\":28164:28372   */\n      jump(tag_714)\n    tag_716:\n        /* \"#utility.yul\":28400:28406   */\n      dup7\n        /* \"#utility.yul\":28391:28398   */\n      dup4\n        /* \"#utility.yul\":28388:28407   */\n      lt\n        /* \"#utility.yul\":28385:28564   */\n      iszero\n      tag_717\n      jumpi\n        /* \"#utility.yul\":28458:28467   */\n      dup5\n        /* \"#utility.yul\":28453:28456   */\n      dup10\n        /* \"#utility.yul\":28449:28468   */\n      add\n        /* \"#utility.yul\":28443:28469   */\n      mload\n        /* \"#utility.yul\":28501:28549   */\n      tag_718\n        /* \"#utility.yul\":28543:28547   */\n      0x1f\n        /* \"#utility.yul\":28535:28541   */\n      dup10\n        /* \"#utility.yul\":28531:28548   */\n      and\n        /* \"#utility.yul\":28520:28529   */\n      dup3\n        /* \"#utility.yul\":28501:28549   */\n      tag_411\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":28493:28499   */\n      dup4\n        /* \"#utility.yul\":28486:28550   */\n      sstore\n        /* \"#utility.yul\":28408:28564   */\n      pop\n        /* \"#utility.yul\":28385:28564   */\n    tag_717:\n        /* \"#utility.yul\":28610:28611   */\n      0x01\n        /* \"#utility.yul\":28606:28607   */\n      0x02\n        /* \"#utility.yul\":28598:28604   */\n      dup9\n        /* \"#utility.yul\":28594:28608   */\n      mul\n        /* \"#utility.yul\":28590:28612   */\n      add\n        /* \"#utility.yul\":28584:28588   */\n      dup9\n        /* \"#utility.yul\":28577:28613   */\n      sstore\n        /* \"#utility.yul\":28012:28623   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27975:28862   */\n    tag_709:\n      pop\n        /* \"#utility.yul\":27565:28868   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":27473:28868   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28874:29403   */\n    tag_194:\n        /* \"#utility.yul\":29041:29045   */\n      0x00\n        /* \"#utility.yul\":29079:29081   */\n      0x60\n        /* \"#utility.yul\":29068:29077   */\n      dup3\n        /* \"#utility.yul\":29064:29082   */\n      add\n        /* \"#utility.yul\":29056:29082   */\n      swap1\n      pop\n        /* \"#utility.yul\":29092:29162   */\n      tag_720\n        /* \"#utility.yul\":29159:29160   */\n      0x00\n        /* \"#utility.yul\":29148:29157   */\n      dup4\n        /* \"#utility.yul\":29144:29161   */\n      add\n        /* \"#utility.yul\":29135:29141   */\n      dup7\n        /* \"#utility.yul\":29092:29162   */\n      tag_374\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":29172:29243   */\n      tag_721\n        /* \"#utility.yul\":29239:29241   */\n      0x20\n        /* \"#utility.yul\":29228:29237   */\n      dup4\n        /* \"#utility.yul\":29224:29242   */\n      add\n        /* \"#utility.yul\":29215:29221   */\n      dup6\n        /* \"#utility.yul\":29172:29243   */\n      tag_374\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":29290:29299   */\n      dup2\n        /* \"#utility.yul\":29284:29288   */\n      dup2\n        /* \"#utility.yul\":29280:29300   */\n      sub\n        /* \"#utility.yul\":29275:29277   */\n      0x40\n        /* \"#utility.yul\":29264:29273   */\n      dup4\n        /* \"#utility.yul\":29260:29278   */\n      add\n        /* \"#utility.yul\":29253:29301   */\n      mstore\n        /* \"#utility.yul\":29318:29396   */\n      tag_722\n        /* \"#utility.yul\":29391:29395   */\n      dup2\n        /* \"#utility.yul\":29382:29388   */\n      dup5\n        /* \"#utility.yul\":29318:29396   */\n      tag_357\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":29310:29396   */\n      swap1\n      pop\n        /* \"#utility.yul\":28874:29403   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29409:29576   */\n    tag_413:\n        /* \"#utility.yul\":29549:29568   */\n      0x5a65726f20616464726573732075736572000000000000000000000000000000\n        /* \"#utility.yul\":29545:29546   */\n      0x00\n        /* \"#utility.yul\":29537:29543   */\n      dup3\n        /* \"#utility.yul\":29533:29547   */\n      add\n        /* \"#utility.yul\":29526:29569   */\n      mstore\n        /* \"#utility.yul\":29409:29576   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29582:29948   */\n    tag_414:\n        /* \"#utility.yul\":29724:29727   */\n      0x00\n        /* \"#utility.yul\":29745:29812   */\n      tag_725\n        /* \"#utility.yul\":29809:29811   */\n      0x11\n        /* \"#utility.yul\":29804:29807   */\n      dup4\n        /* \"#utility.yul\":29745:29812   */\n      tag_334\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":29738:29812   */\n      swap2\n      pop\n        /* \"#utility.yul\":29821:29914   */\n      tag_726\n        /* \"#utility.yul\":29910:29913   */\n      dup3\n        /* \"#utility.yul\":29821:29914   */\n      tag_413\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":29939:29941   */\n      0x20\n        /* \"#utility.yul\":29934:29937   */\n      dup3\n        /* \"#utility.yul\":29930:29942   */\n      add\n        /* \"#utility.yul\":29923:29942   */\n      swap1\n      pop\n        /* \"#utility.yul\":29582:29948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29954:30373   */\n    tag_205:\n        /* \"#utility.yul\":30120:30124   */\n      0x00\n        /* \"#utility.yul\":30158:30160   */\n      0x20\n        /* \"#utility.yul\":30147:30156   */\n      dup3\n        /* \"#utility.yul\":30143:30161   */\n      add\n        /* \"#utility.yul\":30135:30161   */\n      swap1\n      pop\n        /* \"#utility.yul\":30207:30216   */\n      dup2\n        /* \"#utility.yul\":30201:30205   */\n      dup2\n        /* \"#utility.yul\":30197:30217   */\n      sub\n        /* \"#utility.yul\":30193:30194   */\n      0x00\n        /* \"#utility.yul\":30182:30191   */\n      dup4\n        /* \"#utility.yul\":30178:30195   */\n      add\n        /* \"#utility.yul\":30171:30218   */\n      mstore\n        /* \"#utility.yul\":30235:30366   */\n      tag_728\n        /* \"#utility.yul\":30361:30365   */\n      dup2\n        /* \"#utility.yul\":30235:30366   */\n      tag_414\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":30227:30366   */\n      swap1\n      pop\n        /* \"#utility.yul\":29954:30373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30379:30553   */\n    tag_415:\n        /* \"#utility.yul\":30519:30545   */\n      0x4d69736d617463686564206172726179206c656e677468730000000000000000\n        /* \"#utility.yul\":30515:30516   */\n      0x00\n        /* \"#utility.yul\":30507:30513   */\n      dup3\n        /* \"#utility.yul\":30503:30517   */\n      add\n        /* \"#utility.yul\":30496:30546   */\n      mstore\n        /* \"#utility.yul\":30379:30553   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30559:30925   */\n    tag_416:\n        /* \"#utility.yul\":30701:30704   */\n      0x00\n        /* \"#utility.yul\":30722:30789   */\n      tag_731\n        /* \"#utility.yul\":30786:30788   */\n      0x18\n        /* \"#utility.yul\":30781:30784   */\n      dup4\n        /* \"#utility.yul\":30722:30789   */\n      tag_334\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":30715:30789   */\n      swap2\n      pop\n        /* \"#utility.yul\":30798:30891   */\n      tag_732\n        /* \"#utility.yul\":30887:30890   */\n      dup3\n        /* \"#utility.yul\":30798:30891   */\n      tag_415\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":30916:30918   */\n      0x20\n        /* \"#utility.yul\":30911:30914   */\n      dup3\n        /* \"#utility.yul\":30907:30919   */\n      add\n        /* \"#utility.yul\":30900:30919   */\n      swap1\n      pop\n        /* \"#utility.yul\":30559:30925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30931:31350   */\n    tag_217:\n        /* \"#utility.yul\":31097:31101   */\n      0x00\n        /* \"#utility.yul\":31135:31137   */\n      0x20\n        /* \"#utility.yul\":31124:31133   */\n      dup3\n        /* \"#utility.yul\":31120:31138   */\n      add\n        /* \"#utility.yul\":31112:31138   */\n      swap1\n      pop\n        /* \"#utility.yul\":31184:31193   */\n      dup2\n        /* \"#utility.yul\":31178:31182   */\n      dup2\n        /* \"#utility.yul\":31174:31194   */\n      sub\n        /* \"#utility.yul\":31170:31171   */\n      0x00\n        /* \"#utility.yul\":31159:31168   */\n      dup4\n        /* \"#utility.yul\":31155:31172   */\n      add\n        /* \"#utility.yul\":31148:31195   */\n      mstore\n        /* \"#utility.yul\":31212:31343   */\n      tag_734\n        /* \"#utility.yul\":31338:31342   */\n      dup2\n        /* \"#utility.yul\":31212:31343   */\n      tag_416\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":31204:31343   */\n      swap1\n      pop\n        /* \"#utility.yul\":30931:31350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31356:31536   */\n    tag_225:\n        /* \"#utility.yul\":31404:31481   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31401:31402   */\n      0x00\n        /* \"#utility.yul\":31394:31482   */\n      mstore\n        /* \"#utility.yul\":31501:31505   */\n      0x32\n        /* \"#utility.yul\":31498:31499   */\n      0x04\n        /* \"#utility.yul\":31491:31506   */\n      mstore\n        /* \"#utility.yul\":31525:31529   */\n      0x24\n        /* \"#utility.yul\":31522:31523   */\n      0x00\n        /* \"#utility.yul\":31515:31530   */\n      revert\n        /* \"#utility.yul\":31542:31772   */\n    tag_417:\n        /* \"#utility.yul\":31682:31716   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":31678:31679   */\n      0x00\n        /* \"#utility.yul\":31670:31676   */\n      dup3\n        /* \"#utility.yul\":31666:31680   */\n      add\n        /* \"#utility.yul\":31659:31717   */\n      mstore\n        /* \"#utility.yul\":31751:31764   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":31746:31748   */\n      0x20\n        /* \"#utility.yul\":31738:31744   */\n      dup3\n        /* \"#utility.yul\":31734:31749   */\n      add\n        /* \"#utility.yul\":31727:31765   */\n      mstore\n        /* \"#utility.yul\":31542:31772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31778:32144   */\n    tag_418:\n        /* \"#utility.yul\":31920:31923   */\n      0x00\n        /* \"#utility.yul\":31941:32008   */\n      tag_738\n        /* \"#utility.yul\":32005:32007   */\n      0x2b\n        /* \"#utility.yul\":32000:32003   */\n      dup4\n        /* \"#utility.yul\":31941:32008   */\n      tag_334\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":31934:32008   */\n      swap2\n      pop\n        /* \"#utility.yul\":32017:32110   */\n      tag_739\n        /* \"#utility.yul\":32106:32109   */\n      dup3\n        /* \"#utility.yul\":32017:32110   */\n      tag_417\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":32135:32137   */\n      0x40\n        /* \"#utility.yul\":32130:32133   */\n      dup3\n        /* \"#utility.yul\":32126:32138   */\n      add\n        /* \"#utility.yul\":32119:32138   */\n      swap1\n      pop\n        /* \"#utility.yul\":31778:32144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32150:32569   */\n    tag_254:\n        /* \"#utility.yul\":32316:32320   */\n      0x00\n        /* \"#utility.yul\":32354:32356   */\n      0x20\n        /* \"#utility.yul\":32343:32352   */\n      dup3\n        /* \"#utility.yul\":32339:32357   */\n      add\n        /* \"#utility.yul\":32331:32357   */\n      swap1\n      pop\n        /* \"#utility.yul\":32403:32412   */\n      dup2\n        /* \"#utility.yul\":32397:32401   */\n      dup2\n        /* \"#utility.yul\":32393:32413   */\n      sub\n        /* \"#utility.yul\":32389:32390   */\n      0x00\n        /* \"#utility.yul\":32378:32387   */\n      dup4\n        /* \"#utility.yul\":32374:32391   */\n      add\n        /* \"#utility.yul\":32367:32414   */\n      mstore\n        /* \"#utility.yul\":32431:32562   */\n      tag_741\n        /* \"#utility.yul\":32557:32561   */\n      dup2\n        /* \"#utility.yul\":32431:32562   */\n      tag_418\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":32423:32562   */\n      swap1\n      pop\n        /* \"#utility.yul\":32150:32569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32575:32743   */\n    tag_419:\n        /* \"#utility.yul\":32715:32735   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":32711:32712   */\n      0x00\n        /* \"#utility.yul\":32703:32709   */\n      dup3\n        /* \"#utility.yul\":32699:32713   */\n      add\n        /* \"#utility.yul\":32692:32736   */\n      mstore\n        /* \"#utility.yul\":32575:32743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32749:33115   */\n    tag_420:\n        /* \"#utility.yul\":32891:32894   */\n      0x00\n        /* \"#utility.yul\":32912:32979   */\n      tag_744\n        /* \"#utility.yul\":32976:32978   */\n      0x12\n        /* \"#utility.yul\":32971:32974   */\n      dup4\n        /* \"#utility.yul\":32912:32979   */\n      tag_334\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":32905:32979   */\n      swap2\n      pop\n        /* \"#utility.yul\":32988:33081   */\n      tag_745\n        /* \"#utility.yul\":33077:33080   */\n      dup3\n        /* \"#utility.yul\":32988:33081   */\n      tag_419\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":33106:33108   */\n      0x20\n        /* \"#utility.yul\":33101:33104   */\n      dup3\n        /* \"#utility.yul\":33097:33109   */\n      add\n        /* \"#utility.yul\":33090:33109   */\n      swap1\n      pop\n        /* \"#utility.yul\":32749:33115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33121:33540   */\n    tag_257:\n        /* \"#utility.yul\":33287:33291   */\n      0x00\n        /* \"#utility.yul\":33325:33327   */\n      0x20\n        /* \"#utility.yul\":33314:33323   */\n      dup3\n        /* \"#utility.yul\":33310:33328   */\n      add\n        /* \"#utility.yul\":33302:33328   */\n      swap1\n      pop\n        /* \"#utility.yul\":33374:33383   */\n      dup2\n        /* \"#utility.yul\":33368:33372   */\n      dup2\n        /* \"#utility.yul\":33364:33384   */\n      sub\n        /* \"#utility.yul\":33360:33361   */\n      0x00\n        /* \"#utility.yul\":33349:33358   */\n      dup4\n        /* \"#utility.yul\":33345:33362   */\n      add\n        /* \"#utility.yul\":33338:33385   */\n      mstore\n        /* \"#utility.yul\":33402:33533   */\n      tag_747\n        /* \"#utility.yul\":33528:33532   */\n      dup2\n        /* \"#utility.yul\":33402:33533   */\n      tag_420\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":33394:33533   */\n      swap1\n      pop\n        /* \"#utility.yul\":33121:33540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33546:33727   */\n    tag_421:\n        /* \"#utility.yul\":33686:33719   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":33682:33683   */\n      0x00\n        /* \"#utility.yul\":33674:33680   */\n      dup3\n        /* \"#utility.yul\":33670:33684   */\n      add\n        /* \"#utility.yul\":33663:33720   */\n      mstore\n        /* \"#utility.yul\":33546:33727   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33733:34099   */\n    tag_422:\n        /* \"#utility.yul\":33875:33878   */\n      0x00\n        /* \"#utility.yul\":33896:33963   */\n      tag_750\n        /* \"#utility.yul\":33960:33962   */\n      0x1f\n        /* \"#utility.yul\":33955:33958   */\n      dup4\n        /* \"#utility.yul\":33896:33963   */\n      tag_334\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":33889:33963   */\n      swap2\n      pop\n        /* \"#utility.yul\":33972:34065   */\n      tag_751\n        /* \"#utility.yul\":34061:34064   */\n      dup3\n        /* \"#utility.yul\":33972:34065   */\n      tag_421\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":34090:34092   */\n      0x20\n        /* \"#utility.yul\":34085:34088   */\n      dup3\n        /* \"#utility.yul\":34081:34093   */\n      add\n        /* \"#utility.yul\":34074:34093   */\n      swap1\n      pop\n        /* \"#utility.yul\":33733:34099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34105:34524   */\n    tag_276:\n        /* \"#utility.yul\":34271:34275   */\n      0x00\n        /* \"#utility.yul\":34309:34311   */\n      0x20\n        /* \"#utility.yul\":34298:34307   */\n      dup3\n        /* \"#utility.yul\":34294:34312   */\n      add\n        /* \"#utility.yul\":34286:34312   */\n      swap1\n      pop\n        /* \"#utility.yul\":34358:34367   */\n      dup2\n        /* \"#utility.yul\":34352:34356   */\n      dup2\n        /* \"#utility.yul\":34348:34368   */\n      sub\n        /* \"#utility.yul\":34344:34345   */\n      0x00\n        /* \"#utility.yul\":34333:34342   */\n      dup4\n        /* \"#utility.yul\":34329:34346   */\n      add\n        /* \"#utility.yul\":34322:34369   */\n      mstore\n        /* \"#utility.yul\":34386:34517   */\n      tag_753\n        /* \"#utility.yul\":34512:34516   */\n      dup2\n        /* \"#utility.yul\":34386:34517   */\n      tag_422\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":34378:34517   */\n      swap1\n      pop\n        /* \"#utility.yul\":34105:34524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34530:34862   */\n    tag_280:\n        /* \"#utility.yul\":34651:34655   */\n      0x00\n        /* \"#utility.yul\":34689:34691   */\n      0x40\n        /* \"#utility.yul\":34678:34687   */\n      dup3\n        /* \"#utility.yul\":34674:34692   */\n      add\n        /* \"#utility.yul\":34666:34692   */\n      swap1\n      pop\n        /* \"#utility.yul\":34702:34773   */\n      tag_755\n        /* \"#utility.yul\":34770:34771   */\n      0x00\n        /* \"#utility.yul\":34759:34768   */\n      dup4\n        /* \"#utility.yul\":34755:34772   */\n      add\n        /* \"#utility.yul\":34746:34752   */\n      dup6\n        /* \"#utility.yul\":34702:34773   */\n      tag_344\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":34783:34855   */\n      tag_756\n        /* \"#utility.yul\":34851:34853   */\n      0x20\n        /* \"#utility.yul\":34840:34849   */\n      dup4\n        /* \"#utility.yul\":34836:34854   */\n      add\n        /* \"#utility.yul\":34827:34833   */\n      dup5\n        /* \"#utility.yul\":34783:34855   */\n      tag_333\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":34530:34862   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34868:35310   */\n    tag_286:\n        /* \"#utility.yul\":35017:35021   */\n      0x00\n        /* \"#utility.yul\":35055:35057   */\n      0x60\n        /* \"#utility.yul\":35044:35053   */\n      dup3\n        /* \"#utility.yul\":35040:35058   */\n      add\n        /* \"#utility.yul\":35032:35058   */\n      swap1\n      pop\n        /* \"#utility.yul\":35068:35139   */\n      tag_758\n        /* \"#utility.yul\":35136:35137   */\n      0x00\n        /* \"#utility.yul\":35125:35134   */\n      dup4\n        /* \"#utility.yul\":35121:35138   */\n      add\n        /* \"#utility.yul\":35112:35118   */\n      dup7\n        /* \"#utility.yul\":35068:35139   */\n      tag_344\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":35149:35221   */\n      tag_759\n        /* \"#utility.yul\":35217:35219   */\n      0x20\n        /* \"#utility.yul\":35206:35215   */\n      dup4\n        /* \"#utility.yul\":35202:35220   */\n      add\n        /* \"#utility.yul\":35193:35199   */\n      dup6\n        /* \"#utility.yul\":35149:35221   */\n      tag_344\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":35231:35303   */\n      tag_760\n        /* \"#utility.yul\":35299:35301   */\n      0x40\n        /* \"#utility.yul\":35288:35297   */\n      dup4\n        /* \"#utility.yul\":35284:35302   */\n      add\n        /* \"#utility.yul\":35275:35281   */\n      dup5\n        /* \"#utility.yul\":35231:35303   */\n      tag_333\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":34868:35310   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122076bcc156c65dfa0af393912351e7f6495699685159b2066782948d09fc9782ba64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50612ff88061001f6000396000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063b807a3c411610059578063b807a3c4146103c0578063c5d60b51146103e9578063f2fde38b14610412578063f3fef3a31461043b576101af565b80638da5cb5b146102f2578063a9012c891461031d578063a9590e8a14610346578063aee9c87214610383576101af565b8063485cc955116100c6578063485cc9551461025a578063715018a61461028357806385c758f71461029a5780638a19c8bc146102c5576101af565b80631e83409a146101ea57806331f7d9641461021357806347e7ef241461023e576101af565b366101af5734603560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101409190611dcb565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101a59190611e0e565b60405180910390a3005b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e190611e86565b60405180910390fd5b3480156101f657600080fd5b50610211600480360381019061020c9190611f18565b610464565b005b34801561021f57600080fd5b506102286108d8565b6040516102359190611f54565b60405180910390f35b61025860048036038101906102539190611f9b565b6108dd565b005b34801561026657600080fd5b50610281600480360381019061027c9190611fdb565b610a98565b005b34801561028f57600080fd5b50610298610c71565b005b3480156102a657600080fd5b506102af610c85565b6040516102bc919061207a565b60405180910390f35b3480156102d157600080fd5b506102da610cab565b6040516102e993929190612137565b60405180910390f35b3480156102fe57600080fd5b50610307610d73565b6040516103149190611f54565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f91906122d6565b610dab565b005b34801561035257600080fd5b5061036d60048036038101906103689190611fdb565b610fc4565b60405161037a9190611e0e565b60405180910390f35b34801561038f57600080fd5b506103aa60048036038101906103a59190611f18565b610fe9565b6040516103b79190611e0e565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e29190612345565b611001565b005b3480156103f557600080fd5b50610410600480360381019061040b919061244e565b611236565b005b34801561041e57600080fd5b5061043960048036038101906104349190611f18565b611579565b005b34801561044757600080fd5b50610462600480360381019061045d9190611f9b565b6115ff565b005b61046c6118c2565b603360000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff164210806104bf5750603360000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1642115b156105375742603360000160009054906101000a900467ffffffffffffffff16603360000160089054906101000a900467ffffffffffffffff166040517ffa7410d400000000000000000000000000000000000000000000000000000000815260040161052e93929190612533565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906125b6565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490612622565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074e9190612642565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083b5760003373ffffffffffffffffffffffffffffffffffffffff16826040516107af906126a7565b60006040518083038185875af1925050503d80600081146107ec576040519150601f19603f3d011682016040523d82523d6000602084013e6107f1565b606091505b5050905080610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90612708565b60405180910390fd5b50610867565b61086633828473ffffffffffffffffffffffffffffffffffffffff166119119092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108c49190611e0e565b60405180910390a3506108d5611990565b50565b600081565b6108e56118c2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109605780341461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290612774565b60405180910390fd5b6109d1565b600081116109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90612806565b60405180910390fd5b6109d03330838573ffffffffffffffffffffffffffffffffffffffff1661199a909392919063ffffffff16565b5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a209190611dcb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a849190611e0e565b60405180910390a3610a94611990565b5050565b6000610aa2611a1c565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610af05750825b9050600060018367ffffffffffffffff16148015610b25575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b33575080155b15610b6a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bba5760018560000160086101000a81548160ff0219169083151502179055505b610bc386611a44565b610bcb611a58565b86603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c685760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c5f9190612861565b60405180910390a15b50505050505050565b610c79611a6a565b610c836000611af1565b565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60338060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff1690806001018054610cf0906128ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1c906128ab565b8015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b5050505050905083565b600080610d7e611bc8565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610e069190611f54565b602060405180830381865afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e479190612914565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d9061298d565b60405180910390fd5b8167ffffffffffffffff168367ffffffffffffffff1610610edc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed390612a1f565b60405180910390fd5b60405180606001604052808467ffffffffffffffff1681526020018367ffffffffffffffff16815260200182815250603360008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019081610f809190612be1565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13838383604051610fb793929190612cb3565b60405180910390a1505050565b6036602052816000526040600020602052806000526040600020600091509150505481565b60356020528060005260406000206000915090505481565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b815260040161105c9190611f54565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190612914565b6110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d39061298d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361114b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114290612d3d565b60405180910390fd5b80603660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2836040516112299190611e0e565b60405180910390a3505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b81526004016112919190611f54565b602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d29190612914565b611311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113089061298d565b60405180910390fd5b818190508484905014611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135090612da9565b60405180910390fd5b8181905086869050146113a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139890612da9565b60405180910390fd5b60005b84849050811015611570578282828181106113c2576113c1612dc9565b5b90506020020135603660008787858181106113e0576113df612dc9565b5b90506020020160208101906113f59190611f18565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089898581811061144457611443612dc9565b5b90506020020160208101906114599190611f18565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508686828181106114aa576114a9612dc9565b5b90506020020160208101906114bf9190611f18565b73ffffffffffffffffffffffffffffffffffffffff168585838181106114e8576114e7612dc9565b5b90506020020160208101906114fd9190611f18565b73ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc285858581811061154757611546612dc9565b5b9050602002013560405161155b9190611e0e565b60405180910390a380806001019150506113a4565b50505050505050565b611581611a6a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115f35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115ea9190611f54565b60405180910390fd5b6115fc81611af1565b50565b611607611a6a565b61160f6118c2565b60008111611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164990612e6a565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156116d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cb90612ed6565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117239190612642565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611817576000611768610d73565b73ffffffffffffffffffffffffffffffffffffffff168260405161178b906126a7565b60006040518083038185875af1925050503d80600081146117c8576040519150601f19603f3d011682016040523d82523d6000602084013e6117cd565b606091505b5050905080611811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180890612708565b60405180910390fd5b5061184a565b611849611822610d73565b828473ffffffffffffffffffffffffffffffffffffffff166119119092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff16611869610d73565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516118ae9190611e0e565b60405180910390a36118be611990565b5050565b600260005403611907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fe90612f42565b60405180910390fd5b6002600081905550565b61198b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611944929190612f62565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bf0565b505050565b6001600081905550565b611a16848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016119cf93929190612f8b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bf0565b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611a4c611c92565b611a5581611cd2565b50565b611a60611c92565b611a68611d58565b565b611a72611d6a565b73ffffffffffffffffffffffffffffffffffffffff16611a90610d73565b73ffffffffffffffffffffffffffffffffffffffff1614611aef57611ab3611d6a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611ae69190611f54565b60405180910390fd5b565b6000611afb611bc8565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080602060008451602086016000885af180611c13576040513d6000823e3d81fd5b3d925060005191505060008214611c2e576001811415611c4a565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611c8c57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611c839190611f54565b60405180910390fd5b50505050565b611c9a611d72565b611cd0576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611cda611c92565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d4c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611d439190611f54565b60405180910390fd5b611d5581611af1565b50565b611d60611c92565b6001600081905550565b600033905090565b6000611d7c611a1c565b60000160089054906101000a900460ff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dd682611d92565b9150611de183611d92565b9250828201905080821115611df957611df8611d9c565b5b92915050565b611e0881611d92565b82525050565b6000602082019050611e236000830184611dff565b92915050565b600082825260208201905092915050565b7f537765657473706f743a20757365206465706f73697428290000000000000000600082015250565b6000611e70601883611e29565b9150611e7b82611e3a565b602082019050919050565b60006020820190508181036000830152611e9f81611e63565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ee582611eba565b9050919050565b611ef581611eda565b8114611f0057600080fd5b50565b600081359050611f1281611eec565b92915050565b600060208284031215611f2e57611f2d611eb0565b5b6000611f3c84828501611f03565b91505092915050565b611f4e81611eda565b82525050565b6000602082019050611f696000830184611f45565b92915050565b611f7881611d92565b8114611f8357600080fd5b50565b600081359050611f9581611f6f565b92915050565b60008060408385031215611fb257611fb1611eb0565b5b6000611fc085828601611f03565b9250506020611fd185828601611f86565b9150509250929050565b60008060408385031215611ff257611ff1611eb0565b5b600061200085828601611f03565b925050602061201185828601611f03565b9150509250929050565b6000819050919050565b600061204061203b61203684611eba565b61201b565b611eba565b9050919050565b600061205282612025565b9050919050565b600061206482612047565b9050919050565b61207481612059565b82525050565b600060208201905061208f600083018461206b565b92915050565b600067ffffffffffffffff82169050919050565b6120b281612095565b82525050565b600081519050919050565b60005b838110156120e15780820151818401526020810190506120c6565b60008484015250505050565b6000601f19601f8301169050919050565b6000612109826120b8565b6121138185611e29565b93506121238185602086016120c3565b61212c816120ed565b840191505092915050565b600060608201905061214c60008301866120a9565b61215960208301856120a9565b818103604083015261216b81846120fe565b9050949350505050565b61217e81612095565b811461218957600080fd5b50565b60008135905061219b81612175565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6121e3826120ed565b810181811067ffffffffffffffff82111715612202576122016121ab565b5b80604052505050565b6000612215611ea6565b905061222182826121da565b919050565b600067ffffffffffffffff821115612241576122406121ab565b5b61224a826120ed565b9050602081019050919050565b82818337600083830152505050565b600061227961227484612226565b61220b565b905082815260208101848484011115612295576122946121a6565b5b6122a0848285612257565b509392505050565b600082601f8301126122bd576122bc6121a1565b5b81356122cd848260208601612266565b91505092915050565b6000806000606084860312156122ef576122ee611eb0565b5b60006122fd8682870161218c565b935050602061230e8682870161218c565b925050604084013567ffffffffffffffff81111561232f5761232e611eb5565b5b61233b868287016122a8565b9150509250925092565b60008060006060848603121561235e5761235d611eb0565b5b600061236c86828701611f03565b935050602061237d86828701611f03565b925050604061238e86828701611f86565b9150509250925092565b600080fd5b600080fd5b60008083601f8401126123b8576123b76121a1565b5b8235905067ffffffffffffffff8111156123d5576123d4612398565b5b6020830191508360208202830111156123f1576123f061239d565b5b9250929050565b60008083601f84011261240e5761240d6121a1565b5b8235905067ffffffffffffffff81111561242b5761242a612398565b5b6020830191508360208202830111156124475761244661239d565b5b9250929050565b6000806000806000806060878903121561246b5761246a611eb0565b5b600087013567ffffffffffffffff81111561248957612488611eb5565b5b61249589828a016123a2565b9650965050602087013567ffffffffffffffff8111156124b8576124b7611eb5565b5b6124c489828a016123a2565b9450945050604087013567ffffffffffffffff8111156124e7576124e6611eb5565b5b6124f389828a016123f8565b92509250509295509295509295565b600061251d61251861251384612095565b61201b565b611d92565b9050919050565b61252d81612502565b82525050565b60006060820190506125486000830186611dff565b6125556020830185612524565b6125626040830184612524565b949350505050565b7f4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000600082015250565b60006125a0601383611e29565b91506125ab8261256a565b602082019050919050565b600060208201905081810360008301526125cf81612593565b9050919050565b7f496e73756666696369656e742066756e647320696e206a617200000000000000600082015250565b600061260c601983611e29565b9150612617826125d6565b602082019050919050565b6000602082019050818103600083015261263b816125ff565b9050919050565b600061264d82611d92565b915061265883611d92565b92508282039050818111156126705761266f611d9c565b5b92915050565b600081905092915050565b50565b6000612691600083612676565b915061269c82612681565b600082019050919050565b60006126b282612684565b9150819050919050565b7f4574686572207472616e73666572206661696c65640000000000000000000000600082015250565b60006126f2601583611e29565b91506126fd826126bc565b602082019050919050565b60006020820190508181036000830152612721816126e5565b9050919050565b7f496e636f727265637420457468657220616d6f756e7400000000000000000000600082015250565b600061275e601683611e29565b915061276982612728565b602082019050919050565b6000602082019050818103600083015261278d81612751565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b60006127f0602883611e29565b91506127fb82612794565b604082019050919050565b6000602082019050818103600083015261281f816127e3565b9050919050565b6000819050919050565b600061284b61284661284184612826565b61201b565b612095565b9050919050565b61285b81612830565b82525050565b60006020820190506128766000830184612852565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806128c357607f821691505b6020821081036128d6576128d561287c565b5b50919050565b60008115159050919050565b6128f1816128dc565b81146128fc57600080fd5b50565b60008151905061290e816128e8565b92915050565b60006020828403121561292a57612929611eb0565b5b6000612938848285016128ff565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000600082015250565b6000612977601683611e29565b915061298282612941565b602082019050919050565b600060208201905081810360008301526129a68161296a565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e6420746960008201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b6000612a09602283611e29565b9150612a14826129ad565b604082019050919050565b60006020820190508181036000830152612a38816129fc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612aa17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a64565b612aab8683612a64565b95508019841693508086168417925050509392505050565b6000612ade612ad9612ad484611d92565b61201b565b611d92565b9050919050565b6000819050919050565b612af883612ac3565b612b0c612b0482612ae5565b848454612a71565b825550505050565b600090565b612b21612b14565b612b2c818484612aef565b505050565b5b81811015612b5057612b45600082612b19565b600181019050612b32565b5050565b601f821115612b9557612b6681612a3f565b612b6f84612a54565b81016020851015612b7e578190505b612b92612b8a85612a54565b830182612b31565b50505b505050565b600082821c905092915050565b6000612bb860001984600802612b9a565b1980831691505092915050565b6000612bd18383612ba7565b9150826002028217905092915050565b612bea826120b8565b67ffffffffffffffff811115612c0357612c026121ab565b5b612c0d82546128ab565b612c18828285612b54565b600060209050601f831160018114612c4b5760008415612c39578287015190505b612c438582612bc5565b865550612cab565b601f198416612c5986612a3f565b60005b82811015612c8157848901518255600182019150602085019450602081019050612c5c565b86831015612c9e5784890151612c9a601f891682612ba7565b8355505b6001600288020188555050505b505050505050565b6000606082019050612cc86000830186612524565b612cd56020830185612524565b8181036040830152612ce781846120fe565b9050949350505050565b7f5a65726f20616464726573732075736572000000000000000000000000000000600082015250565b6000612d27601183611e29565b9150612d3282612cf1565b602082019050919050565b60006020820190508181036000830152612d5681612d1a565b9050919050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b6000612d93601883611e29565b9150612d9e82612d5d565b602082019050919050565b60006020820190508181036000830152612dc281612d86565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5769746864726177616c20616d6f756e74206d7573742062652067726561746560008201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b6000612e54602b83611e29565b9150612e5f82612df8565b604082019050919050565b60006020820190508181036000830152612e8381612e47565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000612ec0601283611e29565b9150612ecb82612e8a565b602082019050919050565b60006020820190508181036000830152612eef81612eb3565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612f2c601f83611e29565b9150612f3782612ef6565b602082019050919050565b60006020820190508181036000830152612f5b81612f1f565b9050919050565b6000604082019050612f776000830185611f45565b612f846020830184611dff565b9392505050565b6000606082019050612fa06000830186611f45565b612fad6020830185611f45565b612fba6040830184611dff565b94935050505056fea264697066735822122076bcc156c65dfa0af393912351e7f6495699685159b2066782948d09fc9782ba64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FF8 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xC5D60B51 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x43B JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x383 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2C5 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E JUMPI PUSH2 0x1AF JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AF JUMPI CALLVALUE PUSH1 0x35 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xC71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x1236 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0x1579 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x4BF JUMPI POP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x537 JUMPI TIMESTAMP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x25B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x2642 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83B JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AF SWAP1 PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x867 JUMP JUMPDEST PUSH2 0x866 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1911 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8D5 PUSH2 0x1990 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x960 JUMPI DUP1 CALLVALUE EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D0 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x199A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA94 PUSH2 0x1990 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA2 PUSH2 0x1A1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAF0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB25 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBA JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC3 DUP7 PUSH2 0x1A44 JUMP JUMPDEST PUSH2 0xBCB PUSH2 0x1A58 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0xC83 PUSH1 0x0 PUSH2 0x1AF1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xCF0 SWAP1 PUSH2 0x28AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD1C SWAP1 PUSH2 0x28AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7E PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP1 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1142 SWAP1 PUSH2 0x2D3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1291 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1398 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1570 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x36 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x13E0 JUMPI PUSH2 0x13DF PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1444 JUMPI PUSH2 0x1443 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1459 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14FD SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1547 JUMPI PUSH2 0x1546 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x155B SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13A4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1581 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x1AF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1607 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x160F PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1649 SWAP1 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CB SWAP1 PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1723 SWAP2 SWAP1 PUSH2 0x2642 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1817 JUMPI PUSH1 0x0 PUSH2 0x1768 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x178B SWAP1 PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1811 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1808 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1849 PUSH2 0x1822 PUSH2 0xD73 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1911 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1869 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x18AE SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18BE PUSH2 0x1990 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FE SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x198B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1944 SWAP3 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A16 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A4C PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0x1A55 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A60 PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0x1A68 PUSH2 0x1D58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1A72 PUSH2 0x1D6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A90 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AEF JUMPI PUSH2 0x1AB3 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE6 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFB PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1C13 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1C2E JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C8C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C83 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C9A PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1CD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1CDA PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D4C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D43 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D55 DUP2 PUSH2 0x1AF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D60 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE1 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DF9 JUMPI PUSH2 0x1DF8 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537765657473706F743A20757365206465706F73697428290000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 PUSH1 0x18 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7B DUP3 PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9F DUP2 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 DUP3 PUSH2 0x1EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF5 DUP2 PUSH2 0x1EDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F12 DUP2 PUSH2 0x1EEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2E JUMPI PUSH2 0x1F2D PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F3C DUP5 DUP3 DUP6 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F4E DUP2 PUSH2 0x1EDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F78 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F95 DUP2 PUSH2 0x1F6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD1 DUP6 DUP3 DUP7 ADD PUSH2 0x1F86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP6 DUP3 DUP7 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2011 DUP6 DUP3 DUP7 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2040 PUSH2 0x203B PUSH2 0x2036 DUP5 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x1EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2052 DUP3 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2064 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2074 DUP2 PUSH2 0x2059 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x208F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B2 DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20C6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2109 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0x2113 DUP2 DUP6 PUSH2 0x1E29 JUMP JUMPDEST SWAP4 POP PUSH2 0x2123 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x212C DUP2 PUSH2 0x20ED JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x214C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x2159 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20A9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x216B DUP2 DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP2 EQ PUSH2 0x2189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x219B DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21E3 DUP3 PUSH2 0x20ED JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2202 JUMPI PUSH2 0x2201 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2215 PUSH2 0x1EA6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2221 DUP3 DUP3 PUSH2 0x21DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2241 JUMPI PUSH2 0x2240 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST PUSH2 0x224A DUP3 PUSH2 0x20ED JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2279 PUSH2 0x2274 DUP5 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x220B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST PUSH2 0x22A0 DUP5 DUP3 DUP6 PUSH2 0x2257 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22BD JUMPI PUSH2 0x22BC PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22CD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22EF JUMPI PUSH2 0x22EE PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP7 DUP3 DUP8 ADD PUSH2 0x218C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x230E DUP7 DUP3 DUP8 ADD PUSH2 0x218C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x232F JUMPI PUSH2 0x232E PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x233B DUP7 DUP3 DUP8 ADD PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x235E JUMPI PUSH2 0x235D PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x236C DUP7 DUP3 DUP8 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x237D DUP7 DUP3 DUP8 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x238E DUP7 DUP3 DUP8 ADD PUSH2 0x1F86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23B8 JUMPI PUSH2 0x23B7 PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D5 JUMPI PUSH2 0x23D4 PUSH2 0x2398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x239D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x240E JUMPI PUSH2 0x240D PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242B JUMPI PUSH2 0x242A PUSH2 0x2398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2447 JUMPI PUSH2 0x2446 PUSH2 0x239D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x246B JUMPI PUSH2 0x246A PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2489 JUMPI PUSH2 0x2488 PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x2495 DUP10 DUP3 DUP11 ADD PUSH2 0x23A2 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24B8 JUMPI PUSH2 0x24B7 PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x24C4 DUP10 DUP3 DUP11 ADD PUSH2 0x23A2 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24E7 JUMPI PUSH2 0x24E6 PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x24F3 DUP10 DUP3 DUP11 ADD PUSH2 0x23F8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251D PUSH2 0x2518 PUSH2 0x2513 DUP5 PUSH2 0x2095 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252D DUP2 PUSH2 0x2502 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2548 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x2555 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2524 JUMP JUMPDEST PUSH2 0x2562 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2524 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A0 PUSH1 0x13 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AB DUP3 PUSH2 0x256A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25CF DUP2 PUSH2 0x2593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260C PUSH1 0x19 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2617 DUP3 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x263B DUP2 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264D DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2658 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2670 JUMPI PUSH2 0x266F PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2691 PUSH1 0x0 DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP PUSH2 0x269C DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B2 DUP3 PUSH2 0x2684 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 PUSH1 0x15 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x26FD DUP3 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2721 DUP2 PUSH2 0x26E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275E PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2769 DUP3 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278D DUP2 PUSH2 0x2751 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F0 PUSH1 0x28 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x27FB DUP3 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281F DUP2 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284B PUSH2 0x2846 PUSH2 0x2841 DUP5 PUSH2 0x2826 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285B DUP2 PUSH2 0x2830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2876 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x28D6 JUMPI PUSH2 0x28D5 PUSH2 0x287C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F1 DUP2 PUSH2 0x28DC JUMP JUMPDEST DUP2 EQ PUSH2 0x28FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x290E DUP2 PUSH2 0x28E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292A JUMPI PUSH2 0x2929 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2938 DUP5 DUP3 DUP6 ADD PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2977 PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2982 DUP3 PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29A6 DUP2 PUSH2 0x296A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A09 PUSH1 0x22 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A14 DUP3 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A38 DUP2 PUSH2 0x29FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AA1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A64 JUMP JUMPDEST PUSH2 0x2AAB DUP7 DUP4 PUSH2 0x2A64 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADE PUSH2 0x2AD9 PUSH2 0x2AD4 DUP5 PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF8 DUP4 PUSH2 0x2AC3 JUMP JUMPDEST PUSH2 0x2B0C PUSH2 0x2B04 DUP3 PUSH2 0x2AE5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A71 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2B21 PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x2B2C DUP2 DUP5 DUP5 PUSH2 0x2AEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B50 JUMPI PUSH2 0x2B45 PUSH1 0x0 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B95 JUMPI PUSH2 0x2B66 DUP2 PUSH2 0x2A3F JUMP JUMPDEST PUSH2 0x2B6F DUP5 PUSH2 0x2A54 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B7E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2B92 PUSH2 0x2B8A DUP6 PUSH2 0x2A54 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B31 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B9A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD1 DUP4 DUP4 PUSH2 0x2BA7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BEA DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C03 JUMPI PUSH2 0x2C02 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST PUSH2 0x2C0D DUP3 SLOAD PUSH2 0x28AB JUMP JUMPDEST PUSH2 0x2C18 DUP3 DUP3 DUP6 PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C4B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C39 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C43 DUP6 DUP3 PUSH2 0x2BC5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C59 DUP7 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C81 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C5C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2C9E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2C9A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BA7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CC8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2524 JUMP JUMPDEST PUSH2 0x2CD5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2524 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2CE7 DUP2 DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D27 PUSH1 0x11 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D32 DUP3 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D56 DUP2 PUSH2 0x2D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D93 PUSH1 0x18 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9E DUP3 PUSH2 0x2D5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DC2 DUP2 PUSH2 0x2D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E54 PUSH1 0x2B DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5F DUP3 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E83 DUP2 PUSH2 0x2E47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC0 PUSH1 0x12 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ECB DUP3 PUSH2 0x2E8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EEF DUP2 PUSH2 0x2EB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2C PUSH1 0x1F DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F37 DUP3 PUSH2 0x2EF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F5B DUP2 PUSH2 0x2F1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F77 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x2F84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DFF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FA0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x2FAD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x2FBA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DFF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xBCC156C65DFA0AF393912351E7F6495699685159B20667 DUP3 SWAP5 DUP14 MULMOD 0xFC SWAP8 DUP3 0xBA PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "454:6349:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@NATIVE_TOKEN_1495": {
									"entryPoint": 2264,
									"id": 1495,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2005": {
									"entryPoint": null,
									"id": 2005,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2013": {
									"entryPoint": null,
									"id": 2013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 6724,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 7378,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_472": {
									"entryPoint": 6744,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_482": {
									"entryPoint": 7512,
									"id": 482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1116": {
									"entryPoint": 7152,
									"id": 1116,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 7314,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 6762,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 6684,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7112,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 7538,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_561": {
									"entryPoint": 7530,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_516": {
									"entryPoint": 6544,
									"id": 516,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_508": {
									"entryPoint": 6338,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 6897,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedAmounts_1518": {
									"entryPoint": 4036,
									"id": 1518,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bulkSetAllowedAmount_1879": {
									"entryPoint": 4662,
									"id": 1879,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@claim_1769": {
									"entryPoint": 1124,
									"id": 1769,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentRound_1508": {
									"entryPoint": 3243,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1661": {
									"entryPoint": 2269,
									"id": 1661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1603": {
									"entryPoint": 2712,
									"id": 1603,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3443,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3185,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_821": {
									"entryPoint": 6554,
									"id": 821,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_794": {
									"entryPoint": 6417,
									"id": 794,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scorer_1498": {
									"entryPoint": 3205,
									"id": 1498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowedAmount_1806": {
									"entryPoint": 4097,
									"id": 1806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRound_1913": {
									"entryPoint": 3499,
									"id": 1913,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalBalances_1512": {
									"entryPoint": 4073,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 5497,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1985": {
									"entryPoint": 5631,
									"id": 1985,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 9122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr": {
									"entryPoint": 8918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 10322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint256_fromStack": {
									"entryPoint": 9508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 8361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12171,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed": {
									"entryPoint": 8314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 10337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9523,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11443,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8503,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 10815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11092,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 10278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IScorer_$1472_to_t_address": {
									"entryPoint": 8281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 10288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint64_to_t_uint256": {
									"entryPoint": 9474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8791,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 10836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11721,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 9112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 10852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf": {
									"entryPoint": 9578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f": {
									"entryPoint": 10669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be": {
									"entryPoint": 9916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 11914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375": {
									"entryPoint": 10024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 9686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085": {
									"entryPoint": 11613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226": {
									"entryPoint": 10561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 9857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d": {
									"entryPoint": 11505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 10132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76": {
									"entryPoint": 11768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 10865,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 8565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11028,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:35313:14",
										"nodeType": "YulBlock",
										"src": "0:35313:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:14",
													"nodeType": "YulBlock",
													"src": "52:32:14",
													"statements": [
														{
															"nativeSrc": "62:16:14",
															"nodeType": "YulAssignment",
															"src": "62:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:14",
																"nodeType": "YulIdentifier",
																"src": "73:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:14",
														"nodeType": "YulTypedName",
														"src": "34:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:14",
														"nodeType": "YulTypedName",
														"src": "44:7:14",
														"type": ""
													}
												],
												"src": "7:77:14"
											},
											{
												"body": {
													"nativeSrc": "118:152:14",
													"nodeType": "YulBlock",
													"src": "118:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:14",
																		"nodeType": "YulLiteral",
																		"src": "135:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:14",
																		"nodeType": "YulLiteral",
																		"src": "138:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:14"
																},
																"nativeSrc": "128:88:14",
																"nodeType": "YulFunctionCall",
																"src": "128:88:14"
															},
															"nativeSrc": "128:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:14",
																		"nodeType": "YulLiteral",
																		"src": "232:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:14",
																		"nodeType": "YulLiteral",
																		"src": "235:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:14"
																},
																"nativeSrc": "225:15:14",
																"nodeType": "YulFunctionCall",
																"src": "225:15:14"
															},
															"nativeSrc": "225:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:14",
																		"nodeType": "YulLiteral",
																		"src": "256:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:14",
																		"nodeType": "YulLiteral",
																		"src": "259:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:14"
																},
																"nativeSrc": "249:15:14",
																"nodeType": "YulFunctionCall",
																"src": "249:15:14"
															},
															"nativeSrc": "249:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:14"
											},
											{
												"body": {
													"nativeSrc": "320:147:14",
													"nodeType": "YulBlock",
													"src": "320:147:14",
													"statements": [
														{
															"nativeSrc": "330:25:14",
															"nodeType": "YulAssignment",
															"src": "330:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:14"
																},
																"nativeSrc": "335:20:14",
																"nodeType": "YulFunctionCall",
																"src": "335:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:14"
																}
															]
														},
														{
															"nativeSrc": "364:25:14",
															"nodeType": "YulAssignment",
															"src": "364:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:14"
																},
																"nativeSrc": "369:20:14",
																"nodeType": "YulFunctionCall",
																"src": "369:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:14"
																}
															]
														},
														{
															"nativeSrc": "398:16:14",
															"nodeType": "YulAssignment",
															"src": "398:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:14"
																},
																"nativeSrc": "405:9:14",
																"nodeType": "YulFunctionCall",
																"src": "405:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:14",
																"nodeType": "YulBlock",
																"src": "438:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:14"
																			},
																			"nativeSrc": "440:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:14"
																		},
																		"nativeSrc": "440:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:14"
																},
																"nativeSrc": "427:10:14",
																"nodeType": "YulFunctionCall",
																"src": "427:10:14"
															},
															"nativeSrc": "424:36:14",
															"nodeType": "YulIf",
															"src": "424:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:14",
														"nodeType": "YulTypedName",
														"src": "307:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:14",
														"nodeType": "YulTypedName",
														"src": "310:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:14",
														"nodeType": "YulTypedName",
														"src": "316:3:14",
														"type": ""
													}
												],
												"src": "276:191:14"
											},
											{
												"body": {
													"nativeSrc": "538:53:14",
													"nodeType": "YulBlock",
													"src": "538:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:14"
																		},
																		"nativeSrc": "560:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:14"
																},
																"nativeSrc": "548:37:14",
																"nodeType": "YulFunctionCall",
																"src": "548:37:14"
															},
															"nativeSrc": "548:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:14",
														"nodeType": "YulTypedName",
														"src": "526:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:14",
														"nodeType": "YulTypedName",
														"src": "533:3:14",
														"type": ""
													}
												],
												"src": "473:118:14"
											},
											{
												"body": {
													"nativeSrc": "695:124:14",
													"nodeType": "YulBlock",
													"src": "695:124:14",
													"statements": [
														{
															"nativeSrc": "705:26:14",
															"nodeType": "YulAssignment",
															"src": "705:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:14",
																		"nodeType": "YulLiteral",
																		"src": "728:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:14"
																},
																"nativeSrc": "713:18:14",
																"nodeType": "YulFunctionCall",
																"src": "713:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:14",
																				"nodeType": "YulLiteral",
																				"src": "809:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:14"
																		},
																		"nativeSrc": "794:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:14"
																},
																"nativeSrc": "741:71:14",
																"nodeType": "YulFunctionCall",
																"src": "741:71:14"
															},
															"nativeSrc": "741:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:14",
														"nodeType": "YulTypedName",
														"src": "667:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:14",
														"nodeType": "YulTypedName",
														"src": "679:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:14",
														"nodeType": "YulTypedName",
														"src": "690:4:14",
														"type": ""
													}
												],
												"src": "597:222:14"
											},
											{
												"body": {
													"nativeSrc": "921:73:14",
													"nodeType": "YulBlock",
													"src": "921:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "938:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "938:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "943:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "943:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "931:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "931:6:14"
																},
																"nativeSrc": "931:19:14",
																"nodeType": "YulFunctionCall",
																"src": "931:19:14"
															},
															"nativeSrc": "931:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "931:19:14"
														},
														{
															"nativeSrc": "959:29:14",
															"nodeType": "YulAssignment",
															"src": "959:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "978:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "978:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "983:4:14",
																		"nodeType": "YulLiteral",
																		"src": "983:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "974:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:14"
																},
																"nativeSrc": "974:14:14",
																"nodeType": "YulFunctionCall",
																"src": "974:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "959:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "959:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "825:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "893:3:14",
														"nodeType": "YulTypedName",
														"src": "893:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "898:6:14",
														"nodeType": "YulTypedName",
														"src": "898:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "909:11:14",
														"nodeType": "YulTypedName",
														"src": "909:11:14",
														"type": ""
													}
												],
												"src": "825:169:14"
											},
											{
												"body": {
													"nativeSrc": "1106:68:14",
													"nodeType": "YulBlock",
													"src": "1106:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1128:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1128:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1136:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1136:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1124:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1124:3:14"
																		},
																		"nativeSrc": "1124:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1124:14:14"
																	},
																	{
																		"hexValue": "537765657473706f743a20757365206465706f7369742829",
																		"kind": "string",
																		"nativeSrc": "1140:26:14",
																		"nodeType": "YulLiteral",
																		"src": "1140:26:14",
																		"type": "",
																		"value": "Sweetspot: use deposit()"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1117:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1117:6:14"
																},
																"nativeSrc": "1117:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1117:50:14"
															},
															"nativeSrc": "1117:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "1117:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
												"nativeSrc": "1000:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1098:6:14",
														"nodeType": "YulTypedName",
														"src": "1098:6:14",
														"type": ""
													}
												],
												"src": "1000:174:14"
											},
											{
												"body": {
													"nativeSrc": "1326:220:14",
													"nodeType": "YulBlock",
													"src": "1326:220:14",
													"statements": [
														{
															"nativeSrc": "1336:74:14",
															"nodeType": "YulAssignment",
															"src": "1336:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1402:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1402:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1407:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1407:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1343:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "1343:58:14"
																},
																"nativeSrc": "1343:67:14",
																"nodeType": "YulFunctionCall",
																"src": "1343:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1336:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1508:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1508:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																	"nativeSrc": "1419:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "1419:88:14"
																},
																"nativeSrc": "1419:93:14",
																"nodeType": "YulFunctionCall",
																"src": "1419:93:14"
															},
															"nativeSrc": "1419:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "1419:93:14"
														},
														{
															"nativeSrc": "1521:19:14",
															"nodeType": "YulAssignment",
															"src": "1521:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1532:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1532:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1537:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1537:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1528:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:14"
																},
																"nativeSrc": "1528:12:14",
																"nodeType": "YulFunctionCall",
																"src": "1528:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1521:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1521:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1180:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1314:3:14",
														"nodeType": "YulTypedName",
														"src": "1314:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1322:3:14",
														"nodeType": "YulTypedName",
														"src": "1322:3:14",
														"type": ""
													}
												],
												"src": "1180:366:14"
											},
											{
												"body": {
													"nativeSrc": "1723:248:14",
													"nodeType": "YulBlock",
													"src": "1723:248:14",
													"statements": [
														{
															"nativeSrc": "1733:26:14",
															"nodeType": "YulAssignment",
															"src": "1733:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1745:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1745:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1756:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1756:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1741:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:14"
																},
																"nativeSrc": "1741:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1741:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1733:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1733:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1791:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1791:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1776:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:14"
																		},
																		"nativeSrc": "1776:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1799:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1799:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1805:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1805:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1795:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:14"
																		},
																		"nativeSrc": "1795:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1795:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1769:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:14"
																},
																"nativeSrc": "1769:47:14",
																"nodeType": "YulFunctionCall",
																"src": "1769:47:14"
															},
															"nativeSrc": "1769:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "1769:47:14"
														},
														{
															"nativeSrc": "1825:139:14",
															"nodeType": "YulAssignment",
															"src": "1825:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1959:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1959:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1833:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "1833:124:14"
																},
																"nativeSrc": "1833:131:14",
																"nodeType": "YulFunctionCall",
																"src": "1833:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1825:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1825:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1552:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1703:9:14",
														"nodeType": "YulTypedName",
														"src": "1703:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1718:4:14",
														"nodeType": "YulTypedName",
														"src": "1718:4:14",
														"type": ""
													}
												],
												"src": "1552:419:14"
											},
											{
												"body": {
													"nativeSrc": "2017:35:14",
													"nodeType": "YulBlock",
													"src": "2017:35:14",
													"statements": [
														{
															"nativeSrc": "2027:19:14",
															"nodeType": "YulAssignment",
															"src": "2027:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2043:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2037:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2037:5:14"
																},
																"nativeSrc": "2037:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2037:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2027:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2027:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1977:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2010:6:14",
														"nodeType": "YulTypedName",
														"src": "2010:6:14",
														"type": ""
													}
												],
												"src": "1977:75:14"
											},
											{
												"body": {
													"nativeSrc": "2147:28:14",
													"nodeType": "YulBlock",
													"src": "2147:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2164:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2164:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2167:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2167:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2157:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:14"
																},
																"nativeSrc": "2157:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2157:12:14"
															},
															"nativeSrc": "2157:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2157:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2058:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2058:117:14"
											},
											{
												"body": {
													"nativeSrc": "2270:28:14",
													"nodeType": "YulBlock",
													"src": "2270:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2290:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2280:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2280:6:14"
																},
																"nativeSrc": "2280:12:14",
																"nodeType": "YulFunctionCall",
																"src": "2280:12:14"
															},
															"nativeSrc": "2280:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "2280:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2181:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "2181:117:14"
											},
											{
												"body": {
													"nativeSrc": "2349:81:14",
													"nodeType": "YulBlock",
													"src": "2349:81:14",
													"statements": [
														{
															"nativeSrc": "2359:65:14",
															"nodeType": "YulAssignment",
															"src": "2359:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2374:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2374:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2381:42:14",
																		"nodeType": "YulLiteral",
																		"src": "2381:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2370:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:14"
																},
																"nativeSrc": "2370:54:14",
																"nodeType": "YulFunctionCall",
																"src": "2370:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2359:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2359:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2304:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2331:5:14",
														"nodeType": "YulTypedName",
														"src": "2331:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2341:7:14",
														"nodeType": "YulTypedName",
														"src": "2341:7:14",
														"type": ""
													}
												],
												"src": "2304:126:14"
											},
											{
												"body": {
													"nativeSrc": "2481:51:14",
													"nodeType": "YulBlock",
													"src": "2481:51:14",
													"statements": [
														{
															"nativeSrc": "2491:35:14",
															"nodeType": "YulAssignment",
															"src": "2491:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2520:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2520:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2502:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "2502:17:14"
																},
																"nativeSrc": "2502:24:14",
																"nodeType": "YulFunctionCall",
																"src": "2502:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2491:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2491:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2436:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2463:5:14",
														"nodeType": "YulTypedName",
														"src": "2463:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2473:7:14",
														"nodeType": "YulTypedName",
														"src": "2473:7:14",
														"type": ""
													}
												],
												"src": "2436:96:14"
											},
											{
												"body": {
													"nativeSrc": "2581:79:14",
													"nodeType": "YulBlock",
													"src": "2581:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2638:16:14",
																"nodeType": "YulBlock",
																"src": "2638:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2640:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:14"
																			},
																			"nativeSrc": "2640:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:14"
																		},
																		"nativeSrc": "2640:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2604:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2604:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2629:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2629:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2611:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2611:17:14"
																				},
																				"nativeSrc": "2611:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2611:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2601:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2601:2:14"
																		},
																		"nativeSrc": "2601:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2594:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:14"
																},
																"nativeSrc": "2594:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2594:43:14"
															},
															"nativeSrc": "2591:63:14",
															"nodeType": "YulIf",
															"src": "2591:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2538:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2574:5:14",
														"nodeType": "YulTypedName",
														"src": "2574:5:14",
														"type": ""
													}
												],
												"src": "2538:122:14"
											},
											{
												"body": {
													"nativeSrc": "2718:87:14",
													"nodeType": "YulBlock",
													"src": "2718:87:14",
													"statements": [
														{
															"nativeSrc": "2728:29:14",
															"nodeType": "YulAssignment",
															"src": "2728:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2750:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2737:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2737:12:14"
																},
																"nativeSrc": "2737:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2737:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2728:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2728:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2793:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2793:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2766:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2766:26:14"
																},
																"nativeSrc": "2766:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2766:33:14"
															},
															"nativeSrc": "2766:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2766:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2666:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2696:6:14",
														"nodeType": "YulTypedName",
														"src": "2696:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2704:3:14",
														"nodeType": "YulTypedName",
														"src": "2704:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2712:5:14",
														"nodeType": "YulTypedName",
														"src": "2712:5:14",
														"type": ""
													}
												],
												"src": "2666:139:14"
											},
											{
												"body": {
													"nativeSrc": "2877:263:14",
													"nodeType": "YulBlock",
													"src": "2877:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2923:83:14",
																"nodeType": "YulBlock",
																"src": "2923:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2925:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2925:77:14"
																			},
																			"nativeSrc": "2925:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2925:79:14"
																		},
																		"nativeSrc": "2925:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2925:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2898:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2898:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2907:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2907:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2894:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2894:3:14"
																		},
																		"nativeSrc": "2894:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2894:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2919:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2890:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2890:3:14"
																},
																"nativeSrc": "2890:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2890:32:14"
															},
															"nativeSrc": "2887:119:14",
															"nodeType": "YulIf",
															"src": "2887:119:14"
														},
														{
															"nativeSrc": "3016:117:14",
															"nodeType": "YulBlock",
															"src": "3016:117:14",
															"statements": [
																{
																	"nativeSrc": "3031:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3031:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3045:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3045:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3035:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3035:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3060:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3060:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3095:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3095:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3106:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3106:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3091:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3091:3:14"
																				},
																				"nativeSrc": "3091:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3091:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3115:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3115:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3070:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3070:20:14"
																		},
																		"nativeSrc": "3070:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3070:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3060:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3060:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2811:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2847:9:14",
														"nodeType": "YulTypedName",
														"src": "2847:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2858:7:14",
														"nodeType": "YulTypedName",
														"src": "2858:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2870:6:14",
														"nodeType": "YulTypedName",
														"src": "2870:6:14",
														"type": ""
													}
												],
												"src": "2811:329:14"
											},
											{
												"body": {
													"nativeSrc": "3211:53:14",
													"nodeType": "YulBlock",
													"src": "3211:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3228:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3228:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3251:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3251:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3233:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3233:17:14"
																		},
																		"nativeSrc": "3233:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3233:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3221:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:14"
																},
																"nativeSrc": "3221:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3221:37:14"
															},
															"nativeSrc": "3221:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3221:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3146:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3199:5:14",
														"nodeType": "YulTypedName",
														"src": "3199:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3206:3:14",
														"nodeType": "YulTypedName",
														"src": "3206:3:14",
														"type": ""
													}
												],
												"src": "3146:118:14"
											},
											{
												"body": {
													"nativeSrc": "3368:124:14",
													"nodeType": "YulBlock",
													"src": "3368:124:14",
													"statements": [
														{
															"nativeSrc": "3378:26:14",
															"nodeType": "YulAssignment",
															"src": "3378:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3390:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3390:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3401:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3401:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3386:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3386:3:14"
																},
																"nativeSrc": "3386:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3386:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3378:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3378:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3458:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3458:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3471:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3471:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3482:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3482:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3467:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3467:3:14"
																		},
																		"nativeSrc": "3467:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3467:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3414:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3414:43:14"
																},
																"nativeSrc": "3414:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3414:71:14"
															},
															"nativeSrc": "3414:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3414:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3270:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3340:9:14",
														"nodeType": "YulTypedName",
														"src": "3340:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3352:6:14",
														"nodeType": "YulTypedName",
														"src": "3352:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3363:4:14",
														"nodeType": "YulTypedName",
														"src": "3363:4:14",
														"type": ""
													}
												],
												"src": "3270:222:14"
											},
											{
												"body": {
													"nativeSrc": "3541:79:14",
													"nodeType": "YulBlock",
													"src": "3541:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3598:16:14",
																"nodeType": "YulBlock",
																"src": "3598:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3607:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3607:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3610:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3600:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3600:6:14"
																			},
																			"nativeSrc": "3600:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3600:12:14"
																		},
																		"nativeSrc": "3600:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3600:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3564:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3564:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3589:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "3589:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3571:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "3571:17:14"
																				},
																				"nativeSrc": "3571:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3561:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "3561:2:14"
																		},
																		"nativeSrc": "3561:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3561:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3554:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3554:6:14"
																},
																"nativeSrc": "3554:43:14",
																"nodeType": "YulFunctionCall",
																"src": "3554:43:14"
															},
															"nativeSrc": "3551:63:14",
															"nodeType": "YulIf",
															"src": "3551:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3498:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3534:5:14",
														"nodeType": "YulTypedName",
														"src": "3534:5:14",
														"type": ""
													}
												],
												"src": "3498:122:14"
											},
											{
												"body": {
													"nativeSrc": "3678:87:14",
													"nodeType": "YulBlock",
													"src": "3678:87:14",
													"statements": [
														{
															"nativeSrc": "3688:29:14",
															"nodeType": "YulAssignment",
															"src": "3688:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3710:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3710:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3697:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3697:12:14"
																},
																"nativeSrc": "3697:20:14",
																"nodeType": "YulFunctionCall",
																"src": "3697:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3688:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "3688:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3753:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "3753:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3726:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "3726:26:14"
																},
																"nativeSrc": "3726:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3726:33:14"
															},
															"nativeSrc": "3726:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "3726:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3626:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3656:6:14",
														"nodeType": "YulTypedName",
														"src": "3656:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3664:3:14",
														"nodeType": "YulTypedName",
														"src": "3664:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3672:5:14",
														"nodeType": "YulTypedName",
														"src": "3672:5:14",
														"type": ""
													}
												],
												"src": "3626:139:14"
											},
											{
												"body": {
													"nativeSrc": "3854:391:14",
													"nodeType": "YulBlock",
													"src": "3854:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3900:83:14",
																"nodeType": "YulBlock",
																"src": "3900:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3902:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3902:77:14"
																			},
																			"nativeSrc": "3902:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3902:79:14"
																		},
																		"nativeSrc": "3902:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3902:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3875:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3875:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3884:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3884:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3871:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:14"
																		},
																		"nativeSrc": "3871:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3896:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3867:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3867:3:14"
																},
																"nativeSrc": "3867:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3867:32:14"
															},
															"nativeSrc": "3864:119:14",
															"nodeType": "YulIf",
															"src": "3864:119:14"
														},
														{
															"nativeSrc": "3993:117:14",
															"nodeType": "YulBlock",
															"src": "3993:117:14",
															"statements": [
																{
																	"nativeSrc": "4008:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4008:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4022:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4022:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4012:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4012:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4037:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4037:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4072:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4072:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4083:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4083:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4068:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4068:3:14"
																				},
																				"nativeSrc": "4068:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4068:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4092:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4092:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4047:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4047:20:14"
																		},
																		"nativeSrc": "4047:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4047:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4037:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4037:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4120:118:14",
															"nodeType": "YulBlock",
															"src": "4120:118:14",
															"statements": [
																{
																	"nativeSrc": "4135:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4135:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4149:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4139:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4139:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4165:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4165:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4200:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4211:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4196:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:14"
																				},
																				"nativeSrc": "4196:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4220:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4175:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:14"
																		},
																		"nativeSrc": "4175:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4165:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3771:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3816:9:14",
														"nodeType": "YulTypedName",
														"src": "3816:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3827:7:14",
														"nodeType": "YulTypedName",
														"src": "3827:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3839:6:14",
														"nodeType": "YulTypedName",
														"src": "3839:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3847:6:14",
														"nodeType": "YulTypedName",
														"src": "3847:6:14",
														"type": ""
													}
												],
												"src": "3771:474:14"
											},
											{
												"body": {
													"nativeSrc": "4334:391:14",
													"nodeType": "YulBlock",
													"src": "4334:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4380:83:14",
																"nodeType": "YulBlock",
																"src": "4380:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4382:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4382:77:14"
																			},
																			"nativeSrc": "4382:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4382:79:14"
																		},
																		"nativeSrc": "4382:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4382:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4355:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4355:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4351:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:14"
																		},
																		"nativeSrc": "4351:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4351:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4347:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:14"
																},
																"nativeSrc": "4347:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4347:32:14"
															},
															"nativeSrc": "4344:119:14",
															"nodeType": "YulIf",
															"src": "4344:119:14"
														},
														{
															"nativeSrc": "4473:117:14",
															"nodeType": "YulBlock",
															"src": "4473:117:14",
															"statements": [
																{
																	"nativeSrc": "4488:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4488:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4502:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4502:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4492:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4492:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4517:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4517:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4552:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4552:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4563:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4563:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4548:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4548:3:14"
																				},
																				"nativeSrc": "4548:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4548:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4572:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4572:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4527:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4527:20:14"
																		},
																		"nativeSrc": "4527:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4517:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4517:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4600:118:14",
															"nodeType": "YulBlock",
															"src": "4600:118:14",
															"statements": [
																{
																	"nativeSrc": "4615:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4615:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4629:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4619:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4619:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4645:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4645:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4680:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4680:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4691:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4691:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4676:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4676:3:14"
																				},
																				"nativeSrc": "4676:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4676:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4700:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4700:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4655:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4655:20:14"
																		},
																		"nativeSrc": "4655:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4655:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4645:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4645:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4251:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4296:9:14",
														"nodeType": "YulTypedName",
														"src": "4296:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4307:7:14",
														"nodeType": "YulTypedName",
														"src": "4307:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4319:6:14",
														"nodeType": "YulTypedName",
														"src": "4319:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4327:6:14",
														"nodeType": "YulTypedName",
														"src": "4327:6:14",
														"type": ""
													}
												],
												"src": "4251:474:14"
											},
											{
												"body": {
													"nativeSrc": "4763:28:14",
													"nodeType": "YulBlock",
													"src": "4763:28:14",
													"statements": [
														{
															"nativeSrc": "4773:12:14",
															"nodeType": "YulAssignment",
															"src": "4773:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "4780:5:14",
																"nodeType": "YulIdentifier",
																"src": "4780:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4773:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4731:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4749:5:14",
														"nodeType": "YulTypedName",
														"src": "4749:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4759:3:14",
														"nodeType": "YulTypedName",
														"src": "4759:3:14",
														"type": ""
													}
												],
												"src": "4731:60:14"
											},
											{
												"body": {
													"nativeSrc": "4857:82:14",
													"nodeType": "YulBlock",
													"src": "4857:82:14",
													"statements": [
														{
															"nativeSrc": "4867:66:14",
															"nodeType": "YulAssignment",
															"src": "4867:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4925:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4925:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4907:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4907:17:14"
																				},
																				"nativeSrc": "4907:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4907:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4898:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "4898:8:14"
																		},
																		"nativeSrc": "4898:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4898:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4880:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4880:17:14"
																},
																"nativeSrc": "4880:53:14",
																"nodeType": "YulFunctionCall",
																"src": "4880:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4867:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4867:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4797:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4837:5:14",
														"nodeType": "YulTypedName",
														"src": "4837:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4847:9:14",
														"nodeType": "YulTypedName",
														"src": "4847:9:14",
														"type": ""
													}
												],
												"src": "4797:142:14"
											},
											{
												"body": {
													"nativeSrc": "5005:66:14",
													"nodeType": "YulBlock",
													"src": "5005:66:14",
													"statements": [
														{
															"nativeSrc": "5015:50:14",
															"nodeType": "YulAssignment",
															"src": "5015:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5059:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5028:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5028:30:14"
																},
																"nativeSrc": "5028:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5028:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5015:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5015:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4945:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4985:5:14",
														"nodeType": "YulTypedName",
														"src": "4985:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4995:9:14",
														"nodeType": "YulTypedName",
														"src": "4995:9:14",
														"type": ""
													}
												],
												"src": "4945:126:14"
											},
											{
												"body": {
													"nativeSrc": "5153:66:14",
													"nodeType": "YulBlock",
													"src": "5153:66:14",
													"statements": [
														{
															"nativeSrc": "5163:50:14",
															"nodeType": "YulAssignment",
															"src": "5163:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5207:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5207:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5176:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5176:30:14"
																},
																"nativeSrc": "5176:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5176:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5163:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5163:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1472_to_t_address",
												"nativeSrc": "5077:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5133:5:14",
														"nodeType": "YulTypedName",
														"src": "5133:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5143:9:14",
														"nodeType": "YulTypedName",
														"src": "5143:9:14",
														"type": ""
													}
												],
												"src": "5077:142:14"
											},
											{
												"body": {
													"nativeSrc": "5306:82:14",
													"nodeType": "YulBlock",
													"src": "5306:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5323:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5375:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5375:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1472_to_t_address",
																			"nativeSrc": "5328:46:14",
																			"nodeType": "YulIdentifier",
																			"src": "5328:46:14"
																		},
																		"nativeSrc": "5328:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5328:53:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5316:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:14"
																},
																"nativeSrc": "5316:66:14",
																"nodeType": "YulFunctionCall",
																"src": "5316:66:14"
															},
															"nativeSrc": "5316:66:14",
															"nodeType": "YulExpressionStatement",
															"src": "5316:66:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
												"nativeSrc": "5225:163:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5294:5:14",
														"nodeType": "YulTypedName",
														"src": "5294:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5301:3:14",
														"nodeType": "YulTypedName",
														"src": "5301:3:14",
														"type": ""
													}
												],
												"src": "5225:163:14"
											},
											{
												"body": {
													"nativeSrc": "5508:140:14",
													"nodeType": "YulBlock",
													"src": "5508:140:14",
													"statements": [
														{
															"nativeSrc": "5518:26:14",
															"nodeType": "YulAssignment",
															"src": "5518:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5530:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5530:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5541:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5541:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5526:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5526:3:14"
																},
																"nativeSrc": "5526:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5526:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5518:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5518:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5614:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5627:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5638:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5638:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5623:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:14"
																		},
																		"nativeSrc": "5623:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5623:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack",
																	"nativeSrc": "5554:59:14",
																	"nodeType": "YulIdentifier",
																	"src": "5554:59:14"
																},
																"nativeSrc": "5554:87:14",
																"nodeType": "YulFunctionCall",
																"src": "5554:87:14"
															},
															"nativeSrc": "5554:87:14",
															"nodeType": "YulExpressionStatement",
															"src": "5554:87:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed",
												"nativeSrc": "5394:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:14",
														"nodeType": "YulTypedName",
														"src": "5480:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5492:6:14",
														"nodeType": "YulTypedName",
														"src": "5492:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5503:4:14",
														"nodeType": "YulTypedName",
														"src": "5503:4:14",
														"type": ""
													}
												],
												"src": "5394:254:14"
											},
											{
												"body": {
													"nativeSrc": "5698:57:14",
													"nodeType": "YulBlock",
													"src": "5698:57:14",
													"statements": [
														{
															"nativeSrc": "5708:41:14",
															"nodeType": "YulAssignment",
															"src": "5708:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5723:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5723:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5730:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5719:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5719:3:14"
																},
																"nativeSrc": "5719:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5719:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5708:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5708:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "5654:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5680:5:14",
														"nodeType": "YulTypedName",
														"src": "5680:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5690:7:14",
														"nodeType": "YulTypedName",
														"src": "5690:7:14",
														"type": ""
													}
												],
												"src": "5654:101:14"
											},
											{
												"body": {
													"nativeSrc": "5824:52:14",
													"nodeType": "YulBlock",
													"src": "5824:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5841:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5841:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5863:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "5846:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "5846:16:14"
																		},
																		"nativeSrc": "5846:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5846:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5834:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5834:6:14"
																},
																"nativeSrc": "5834:36:14",
																"nodeType": "YulFunctionCall",
																"src": "5834:36:14"
															},
															"nativeSrc": "5834:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "5834:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "5761:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5812:5:14",
														"nodeType": "YulTypedName",
														"src": "5812:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5819:3:14",
														"nodeType": "YulTypedName",
														"src": "5819:3:14",
														"type": ""
													}
												],
												"src": "5761:115:14"
											},
											{
												"body": {
													"nativeSrc": "5941:40:14",
													"nodeType": "YulBlock",
													"src": "5941:40:14",
													"statements": [
														{
															"nativeSrc": "5952:22:14",
															"nodeType": "YulAssignment",
															"src": "5952:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5968:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5968:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5962:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5962:5:14"
																},
																"nativeSrc": "5962:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5962:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5952:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5952:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "5882:99:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:14",
														"nodeType": "YulTypedName",
														"src": "5924:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5934:6:14",
														"nodeType": "YulTypedName",
														"src": "5934:6:14",
														"type": ""
													}
												],
												"src": "5882:99:14"
											},
											{
												"body": {
													"nativeSrc": "6049:186:14",
													"nodeType": "YulBlock",
													"src": "6049:186:14",
													"statements": [
														{
															"nativeSrc": "6060:10:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6060:10:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6069:1:14",
																"nodeType": "YulLiteral",
																"src": "6069:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6064:1:14",
																	"nodeType": "YulTypedName",
																	"src": "6064:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6129:63:14",
																"nodeType": "YulBlock",
																"src": "6129:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6154:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6154:3:14"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6159:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "6159:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6150:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6150:3:14"
																					},
																					"nativeSrc": "6150:11:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6150:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6173:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6173:3:14"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6178:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "6178:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6169:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6169:3:14"
																							},
																							"nativeSrc": "6169:11:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6169:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6163:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "6163:5:14"
																					},
																					"nativeSrc": "6163:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6163:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6143:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6143:6:14"
																			},
																			"nativeSrc": "6143:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6143:39:14"
																		},
																		"nativeSrc": "6143:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6143:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6090:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6090:1:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6093:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6093:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6087:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6087:2:14"
																},
																"nativeSrc": "6087:13:14",
																"nodeType": "YulFunctionCall",
																"src": "6087:13:14"
															},
															"nativeSrc": "6079:113:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6101:19:14",
																"nodeType": "YulBlock",
																"src": "6101:19:14",
																"statements": [
																	{
																		"nativeSrc": "6103:15:14",
																		"nodeType": "YulAssignment",
																		"src": "6103:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6112:1:14",
																					"nodeType": "YulIdentifier",
																					"src": "6112:1:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6115:2:14",
																					"nodeType": "YulLiteral",
																					"src": "6115:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6108:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6108:3:14"
																			},
																			"nativeSrc": "6108:10:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6108:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6103:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "6103:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6083:3:14",
																"nodeType": "YulBlock",
																"src": "6083:3:14",
																"statements": []
															},
															"src": "6079:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6212:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6212:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6217:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6217:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6208:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:14"
																		},
																		"nativeSrc": "6208:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6226:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6226:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6201:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:14"
																},
																"nativeSrc": "6201:27:14",
																"nodeType": "YulFunctionCall",
																"src": "6201:27:14"
															},
															"nativeSrc": "6201:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "6201:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5987:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6031:3:14",
														"nodeType": "YulTypedName",
														"src": "6031:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6036:3:14",
														"nodeType": "YulTypedName",
														"src": "6036:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6041:6:14",
														"nodeType": "YulTypedName",
														"src": "6041:6:14",
														"type": ""
													}
												],
												"src": "5987:248:14"
											},
											{
												"body": {
													"nativeSrc": "6289:54:14",
													"nodeType": "YulBlock",
													"src": "6289:54:14",
													"statements": [
														{
															"nativeSrc": "6299:38:14",
															"nodeType": "YulAssignment",
															"src": "6299:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6317:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6317:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6324:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6324:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6313:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6313:3:14"
																		},
																		"nativeSrc": "6313:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6313:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6333:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6333:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6329:3:14"
																		},
																		"nativeSrc": "6329:7:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6329:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6309:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6309:3:14"
																},
																"nativeSrc": "6309:28:14",
																"nodeType": "YulFunctionCall",
																"src": "6309:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6299:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6299:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6241:102:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6272:5:14",
														"nodeType": "YulTypedName",
														"src": "6272:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6282:6:14",
														"nodeType": "YulTypedName",
														"src": "6282:6:14",
														"type": ""
													}
												],
												"src": "6241:102:14"
											},
											{
												"body": {
													"nativeSrc": "6441:285:14",
													"nodeType": "YulBlock",
													"src": "6441:285:14",
													"statements": [
														{
															"nativeSrc": "6451:53:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6451:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6498:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6498:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6465:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "6465:32:14"
																},
																"nativeSrc": "6465:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6465:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6455:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6455:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6513:78:14",
															"nodeType": "YulAssignment",
															"src": "6513:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6579:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6579:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6584:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6584:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6520:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "6520:58:14"
																},
																"nativeSrc": "6520:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6520:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6513:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6513:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6639:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6639:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6646:4:14",
																				"nodeType": "YulLiteral",
																				"src": "6646:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6635:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6635:3:14"
																		},
																		"nativeSrc": "6635:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6635:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6653:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6653:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6658:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6658:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6600:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "6600:34:14"
																},
																"nativeSrc": "6600:65:14",
																"nodeType": "YulFunctionCall",
																"src": "6600:65:14"
															},
															"nativeSrc": "6600:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "6600:65:14"
														},
														{
															"nativeSrc": "6674:46:14",
															"nodeType": "YulAssignment",
															"src": "6674:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6685:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6685:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6712:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6712:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6690:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "6690:21:14"
																		},
																		"nativeSrc": "6690:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6681:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6681:3:14"
																},
																"nativeSrc": "6681:39:14",
																"nodeType": "YulFunctionCall",
																"src": "6681:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6674:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6674:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6349:377:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6422:5:14",
														"nodeType": "YulTypedName",
														"src": "6422:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6429:3:14",
														"nodeType": "YulTypedName",
														"src": "6429:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6437:3:14",
														"nodeType": "YulTypedName",
														"src": "6437:3:14",
														"type": ""
													}
												],
												"src": "6349:377:14"
											},
											{
												"body": {
													"nativeSrc": "6902:355:14",
													"nodeType": "YulBlock",
													"src": "6902:355:14",
													"statements": [
														{
															"nativeSrc": "6912:26:14",
															"nodeType": "YulAssignment",
															"src": "6912:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6924:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6924:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6935:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6935:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6920:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6920:3:14"
																},
																"nativeSrc": "6920:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6920:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6912:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6912:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6990:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7003:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7003:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7014:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7014:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6999:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6999:3:14"
																		},
																		"nativeSrc": "6999:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6999:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "6948:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "6948:41:14"
																},
																"nativeSrc": "6948:69:14",
																"nodeType": "YulFunctionCall",
																"src": "6948:69:14"
															},
															"nativeSrc": "6948:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "6948:69:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7069:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7069:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7082:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7093:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7093:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7078:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:14"
																		},
																		"nativeSrc": "7078:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7078:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "7027:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "7027:41:14"
																},
																"nativeSrc": "7027:70:14",
																"nodeType": "YulFunctionCall",
																"src": "7027:70:14"
															},
															"nativeSrc": "7027:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "7027:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7118:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7118:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7129:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7129:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7114:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7114:3:14"
																		},
																		"nativeSrc": "7114:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7114:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7138:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7138:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7144:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7144:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7134:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7134:3:14"
																		},
																		"nativeSrc": "7134:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7134:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7107:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7107:6:14"
																},
																"nativeSrc": "7107:48:14",
																"nodeType": "YulFunctionCall",
																"src": "7107:48:14"
															},
															"nativeSrc": "7107:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "7107:48:14"
														},
														{
															"nativeSrc": "7164:86:14",
															"nodeType": "YulAssignment",
															"src": "7164:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7236:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7236:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7245:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7245:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7172:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "7172:63:14"
																},
																"nativeSrc": "7172:78:14",
																"nodeType": "YulFunctionCall",
																"src": "7172:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7164:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7164:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6732:525:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6858:9:14",
														"nodeType": "YulTypedName",
														"src": "6858:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6870:6:14",
														"nodeType": "YulTypedName",
														"src": "6870:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6878:6:14",
														"nodeType": "YulTypedName",
														"src": "6878:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6886:6:14",
														"nodeType": "YulTypedName",
														"src": "6886:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6897:4:14",
														"nodeType": "YulTypedName",
														"src": "6897:4:14",
														"type": ""
													}
												],
												"src": "6732:525:14"
											},
											{
												"body": {
													"nativeSrc": "7305:78:14",
													"nodeType": "YulBlock",
													"src": "7305:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7361:16:14",
																"nodeType": "YulBlock",
																"src": "7361:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7370:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7370:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7373:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7373:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7363:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7363:6:14"
																			},
																			"nativeSrc": "7363:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7363:12:14"
																		},
																		"nativeSrc": "7363:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7363:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7328:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7352:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7352:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "7335:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "7335:16:14"
																				},
																				"nativeSrc": "7335:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7335:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7325:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7325:2:14"
																		},
																		"nativeSrc": "7325:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7325:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7318:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:14"
																},
																"nativeSrc": "7318:42:14",
																"nodeType": "YulFunctionCall",
																"src": "7318:42:14"
															},
															"nativeSrc": "7315:62:14",
															"nodeType": "YulIf",
															"src": "7315:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "7263:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7298:5:14",
														"nodeType": "YulTypedName",
														"src": "7298:5:14",
														"type": ""
													}
												],
												"src": "7263:120:14"
											},
											{
												"body": {
													"nativeSrc": "7440:86:14",
													"nodeType": "YulBlock",
													"src": "7440:86:14",
													"statements": [
														{
															"nativeSrc": "7450:29:14",
															"nodeType": "YulAssignment",
															"src": "7450:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7472:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7472:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7459:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7459:12:14"
																},
																"nativeSrc": "7459:20:14",
																"nodeType": "YulFunctionCall",
																"src": "7459:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7450:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7450:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7514:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7514:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "7488:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "7488:25:14"
																},
																"nativeSrc": "7488:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7488:32:14"
															},
															"nativeSrc": "7488:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "7488:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "7389:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7418:6:14",
														"nodeType": "YulTypedName",
														"src": "7418:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7426:3:14",
														"nodeType": "YulTypedName",
														"src": "7426:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7434:5:14",
														"nodeType": "YulTypedName",
														"src": "7434:5:14",
														"type": ""
													}
												],
												"src": "7389:137:14"
											},
											{
												"body": {
													"nativeSrc": "7621:28:14",
													"nodeType": "YulBlock",
													"src": "7621:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7638:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7638:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7641:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7641:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7631:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7631:6:14"
																},
																"nativeSrc": "7631:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7631:12:14"
															},
															"nativeSrc": "7631:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7631:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7532:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7532:117:14"
											},
											{
												"body": {
													"nativeSrc": "7744:28:14",
													"nodeType": "YulBlock",
													"src": "7744:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7761:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7764:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7764:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7754:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7754:6:14"
																},
																"nativeSrc": "7754:12:14",
																"nodeType": "YulFunctionCall",
																"src": "7754:12:14"
															},
															"nativeSrc": "7754:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "7754:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7655:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7655:117:14"
											},
											{
												"body": {
													"nativeSrc": "7806:152:14",
													"nodeType": "YulBlock",
													"src": "7806:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7823:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7823:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7826:77:14",
																		"nodeType": "YulLiteral",
																		"src": "7826:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7816:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:14"
																},
																"nativeSrc": "7816:88:14",
																"nodeType": "YulFunctionCall",
																"src": "7816:88:14"
															},
															"nativeSrc": "7816:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "7816:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7920:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7920:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7923:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7923:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7913:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7913:6:14"
																},
																"nativeSrc": "7913:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7913:15:14"
															},
															"nativeSrc": "7913:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7913:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7944:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7944:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7947:4:14",
																		"nodeType": "YulLiteral",
																		"src": "7947:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7937:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:14"
																},
																"nativeSrc": "7937:15:14",
																"nodeType": "YulFunctionCall",
																"src": "7937:15:14"
															},
															"nativeSrc": "7937:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "7937:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7778:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "7778:180:14"
											},
											{
												"body": {
													"nativeSrc": "8007:238:14",
													"nodeType": "YulBlock",
													"src": "8007:238:14",
													"statements": [
														{
															"nativeSrc": "8017:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8017:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8039:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8069:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "8069:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8047:21:14",
																			"nodeType": "YulIdentifier",
																			"src": "8047:21:14"
																		},
																		"nativeSrc": "8047:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8035:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8035:3:14"
																},
																"nativeSrc": "8035:40:14",
																"nodeType": "YulFunctionCall",
																"src": "8035:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8021:10:14",
																	"nodeType": "YulTypedName",
																	"src": "8021:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8186:22:14",
																"nodeType": "YulBlock",
																"src": "8186:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8188:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8188:16:14"
																			},
																			"nativeSrc": "8188:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8188:18:14"
																		},
																		"nativeSrc": "8188:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8188:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8129:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8129:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8141:18:14",
																				"nodeType": "YulLiteral",
																				"src": "8141:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8126:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8126:2:14"
																		},
																		"nativeSrc": "8126:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8126:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8165:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "8165:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8177:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8177:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8162:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "8162:2:14"
																		},
																		"nativeSrc": "8162:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8162:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8123:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8123:2:14"
																},
																"nativeSrc": "8123:62:14",
																"nodeType": "YulFunctionCall",
																"src": "8123:62:14"
															},
															"nativeSrc": "8120:88:14",
															"nodeType": "YulIf",
															"src": "8120:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8224:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8224:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8228:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "8228:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:14"
																},
																"nativeSrc": "8217:22:14",
																"nodeType": "YulFunctionCall",
																"src": "8217:22:14"
															},
															"nativeSrc": "8217:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "8217:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7964:281:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7993:6:14",
														"nodeType": "YulTypedName",
														"src": "7993:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8001:4:14",
														"nodeType": "YulTypedName",
														"src": "8001:4:14",
														"type": ""
													}
												],
												"src": "7964:281:14"
											},
											{
												"body": {
													"nativeSrc": "8292:88:14",
													"nodeType": "YulBlock",
													"src": "8292:88:14",
													"statements": [
														{
															"nativeSrc": "8302:30:14",
															"nodeType": "YulAssignment",
															"src": "8302:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8312:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8312:18:14"
																},
																"nativeSrc": "8312:20:14",
																"nodeType": "YulFunctionCall",
																"src": "8312:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8302:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8361:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8361:6:14"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8369:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8369:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8341:19:14",
																	"nodeType": "YulIdentifier",
																	"src": "8341:19:14"
																},
																"nativeSrc": "8341:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8341:33:14"
															},
															"nativeSrc": "8341:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8341:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8251:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8276:4:14",
														"nodeType": "YulTypedName",
														"src": "8276:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8285:6:14",
														"nodeType": "YulTypedName",
														"src": "8285:6:14",
														"type": ""
													}
												],
												"src": "8251:129:14"
											},
											{
												"body": {
													"nativeSrc": "8453:241:14",
													"nodeType": "YulBlock",
													"src": "8453:241:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8558:22:14",
																"nodeType": "YulBlock",
																"src": "8558:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8560:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "8560:16:14"
																			},
																			"nativeSrc": "8560:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8560:18:14"
																		},
																		"nativeSrc": "8560:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8560:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8530:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8530:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:18:14",
																		"nodeType": "YulLiteral",
																		"src": "8538:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8527:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "8527:2:14"
																},
																"nativeSrc": "8527:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8527:30:14"
															},
															"nativeSrc": "8524:56:14",
															"nodeType": "YulIf",
															"src": "8524:56:14"
														},
														{
															"nativeSrc": "8590:37:14",
															"nodeType": "YulAssignment",
															"src": "8590:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8620:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8620:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8598:21:14",
																	"nodeType": "YulIdentifier",
																	"src": "8598:21:14"
																},
																"nativeSrc": "8598:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8598:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8590:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8590:4:14"
																}
															]
														},
														{
															"nativeSrc": "8664:23:14",
															"nodeType": "YulAssignment",
															"src": "8664:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8676:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "8676:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8682:4:14",
																		"nodeType": "YulLiteral",
																		"src": "8682:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8672:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:14"
																},
																"nativeSrc": "8672:15:14",
																"nodeType": "YulFunctionCall",
																"src": "8672:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8664:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8664:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8386:308:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8437:6:14",
														"nodeType": "YulTypedName",
														"src": "8437:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8448:4:14",
														"nodeType": "YulTypedName",
														"src": "8448:4:14",
														"type": ""
													}
												],
												"src": "8386:308:14"
											},
											{
												"body": {
													"nativeSrc": "8764:84:14",
													"nodeType": "YulBlock",
													"src": "8764:84:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8788:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8788:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8793:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8793:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8798:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8798:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8775:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8775:12:14"
																},
																"nativeSrc": "8775:30:14",
																"nodeType": "YulFunctionCall",
																"src": "8775:30:14"
															},
															"nativeSrc": "8775:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "8775:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8825:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "8825:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8830:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8830:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8821:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8821:3:14"
																		},
																		"nativeSrc": "8821:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8821:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8814:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8814:6:14"
																},
																"nativeSrc": "8814:27:14",
																"nodeType": "YulFunctionCall",
																"src": "8814:27:14"
															},
															"nativeSrc": "8814:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "8814:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8700:148:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8746:3:14",
														"nodeType": "YulTypedName",
														"src": "8746:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8751:3:14",
														"nodeType": "YulTypedName",
														"src": "8751:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8756:6:14",
														"nodeType": "YulTypedName",
														"src": "8756:6:14",
														"type": ""
													}
												],
												"src": "8700:148:14"
											},
											{
												"body": {
													"nativeSrc": "8938:341:14",
													"nodeType": "YulBlock",
													"src": "8938:341:14",
													"statements": [
														{
															"nativeSrc": "8948:75:14",
															"nodeType": "YulAssignment",
															"src": "8948:75:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9015:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9015:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8973:41:14",
																			"nodeType": "YulIdentifier",
																			"src": "8973:41:14"
																		},
																		"nativeSrc": "8973:49:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:49:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8957:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "8957:15:14"
																},
																"nativeSrc": "8957:66:14",
																"nodeType": "YulFunctionCall",
																"src": "8957:66:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8948:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8948:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9039:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9039:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9046:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9046:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9032:6:14"
																},
																"nativeSrc": "9032:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9032:21:14"
															},
															"nativeSrc": "9032:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9032:21:14"
														},
														{
															"nativeSrc": "9062:27:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9062:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9077:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9077:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9084:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9084:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9073:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9073:3:14"
																},
																"nativeSrc": "9073:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9073:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9066:3:14",
																	"nodeType": "YulTypedName",
																	"src": "9066:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9127:83:14",
																"nodeType": "YulBlock",
																"src": "9127:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9129:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9129:77:14"
																			},
																			"nativeSrc": "9129:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9129:79:14"
																		},
																		"nativeSrc": "9129:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9129:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9108:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9108:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9113:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9113:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9104:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9104:3:14"
																		},
																		"nativeSrc": "9104:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9104:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9122:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9122:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9101:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "9101:2:14"
																},
																"nativeSrc": "9101:25:14",
																"nodeType": "YulFunctionCall",
																"src": "9101:25:14"
															},
															"nativeSrc": "9098:112:14",
															"nodeType": "YulIf",
															"src": "9098:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9256:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9256:3:14"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9261:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9261:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9266:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9266:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9219:36:14",
																	"nodeType": "YulIdentifier",
																	"src": "9219:36:14"
																},
																"nativeSrc": "9219:54:14",
																"nodeType": "YulFunctionCall",
																"src": "9219:54:14"
															},
															"nativeSrc": "9219:54:14",
															"nodeType": "YulExpressionStatement",
															"src": "9219:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "8854:425:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8911:3:14",
														"nodeType": "YulTypedName",
														"src": "8911:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8916:6:14",
														"nodeType": "YulTypedName",
														"src": "8916:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8924:3:14",
														"nodeType": "YulTypedName",
														"src": "8924:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8932:5:14",
														"nodeType": "YulTypedName",
														"src": "8932:5:14",
														"type": ""
													}
												],
												"src": "8854:425:14"
											},
											{
												"body": {
													"nativeSrc": "9361:278:14",
													"nodeType": "YulBlock",
													"src": "9361:278:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9410:83:14",
																"nodeType": "YulBlock",
																"src": "9410:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9412:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9412:77:14"
																			},
																			"nativeSrc": "9412:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9412:79:14"
																		},
																		"nativeSrc": "9412:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9412:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9389:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9389:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9397:4:14",
																						"nodeType": "YulLiteral",
																						"src": "9397:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9385:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9385:3:14"
																				},
																				"nativeSrc": "9385:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9385:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9404:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9404:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9381:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9381:3:14"
																		},
																		"nativeSrc": "9381:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9374:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9374:6:14"
																},
																"nativeSrc": "9374:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9374:35:14"
															},
															"nativeSrc": "9371:122:14",
															"nodeType": "YulIf",
															"src": "9371:122:14"
														},
														{
															"nativeSrc": "9502:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9502:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9529:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9529:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9516:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "9516:12:14"
																},
																"nativeSrc": "9516:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9516:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9506:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9506:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9545:88:14",
															"nodeType": "YulAssignment",
															"src": "9545:88:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9606:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9606:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9614:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9614:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9602:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9602:3:14"
																		},
																		"nativeSrc": "9602:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9602:17:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9621:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9621:6:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9629:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9629:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "9554:47:14",
																	"nodeType": "YulIdentifier",
																	"src": "9554:47:14"
																},
																"nativeSrc": "9554:79:14",
																"nodeType": "YulFunctionCall",
																"src": "9554:79:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9545:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9545:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9299:340:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9339:6:14",
														"nodeType": "YulTypedName",
														"src": "9339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9347:3:14",
														"nodeType": "YulTypedName",
														"src": "9347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9355:5:14",
														"nodeType": "YulTypedName",
														"src": "9355:5:14",
														"type": ""
													}
												],
												"src": "9299:340:14"
											},
											{
												"body": {
													"nativeSrc": "9753:687:14",
													"nodeType": "YulBlock",
													"src": "9753:687:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9799:83:14",
																"nodeType": "YulBlock",
																"src": "9799:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9801:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9801:77:14"
																			},
																			"nativeSrc": "9801:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9801:79:14"
																		},
																		"nativeSrc": "9801:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9801:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9774:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9774:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9783:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9783:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9770:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9770:3:14"
																		},
																		"nativeSrc": "9770:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9770:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9795:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9795:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9766:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9766:3:14"
																},
																"nativeSrc": "9766:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9766:32:14"
															},
															"nativeSrc": "9763:119:14",
															"nodeType": "YulIf",
															"src": "9763:119:14"
														},
														{
															"nativeSrc": "9892:116:14",
															"nodeType": "YulBlock",
															"src": "9892:116:14",
															"statements": [
																{
																	"nativeSrc": "9907:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9907:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9921:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9921:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9911:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9911:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9936:62:14",
																	"nodeType": "YulAssignment",
																	"src": "9936:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9970:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9970:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9981:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9981:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9966:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9966:3:14"
																				},
																				"nativeSrc": "9966:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9966:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9946:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "9946:19:14"
																		},
																		"nativeSrc": "9946:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9946:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9936:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9936:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10018:117:14",
															"nodeType": "YulBlock",
															"src": "10018:117:14",
															"statements": [
																{
																	"nativeSrc": "10033:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10033:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10047:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10047:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10037:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10037:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10063:62:14",
																	"nodeType": "YulAssignment",
																	"src": "10063:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10097:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10097:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10108:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10108:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10093:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10093:3:14"
																				},
																				"nativeSrc": "10093:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10093:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10117:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10117:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "10073:19:14",
																			"nodeType": "YulIdentifier",
																			"src": "10073:19:14"
																		},
																		"nativeSrc": "10073:52:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10073:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10063:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10063:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10145:288:14",
															"nodeType": "YulBlock",
															"src": "10145:288:14",
															"statements": [
																{
																	"nativeSrc": "10160:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10160:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10191:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10191:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10202:2:14",
																						"nodeType": "YulLiteral",
																						"src": "10202:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10187:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10187:3:14"
																				},
																				"nativeSrc": "10187:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10187:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10174:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "10174:12:14"
																		},
																		"nativeSrc": "10174:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10174:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10164:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10164:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10253:83:14",
																		"nodeType": "YulBlock",
																		"src": "10253:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10255:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "10255:77:14"
																					},
																					"nativeSrc": "10255:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10255:79:14"
																				},
																				"nativeSrc": "10255:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "10255:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10225:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10225:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10233:18:14",
																				"nodeType": "YulLiteral",
																				"src": "10233:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10222:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10222:2:14"
																		},
																		"nativeSrc": "10222:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10222:30:14"
																	},
																	"nativeSrc": "10219:117:14",
																	"nodeType": "YulIf",
																	"src": "10219:117:14"
																},
																{
																	"nativeSrc": "10350:73:14",
																	"nodeType": "YulAssignment",
																	"src": "10350:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10395:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10395:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10406:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10406:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10391:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10391:3:14"
																				},
																				"nativeSrc": "10391:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10391:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10415:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10415:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10360:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "10360:30:14"
																		},
																		"nativeSrc": "10360:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10360:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10350:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10350:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr",
												"nativeSrc": "9645:795:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9707:9:14",
														"nodeType": "YulTypedName",
														"src": "9707:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9718:7:14",
														"nodeType": "YulTypedName",
														"src": "9718:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9730:6:14",
														"nodeType": "YulTypedName",
														"src": "9730:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9738:6:14",
														"nodeType": "YulTypedName",
														"src": "9738:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9746:6:14",
														"nodeType": "YulTypedName",
														"src": "9746:6:14",
														"type": ""
													}
												],
												"src": "9645:795:14"
											},
											{
												"body": {
													"nativeSrc": "10546:519:14",
													"nodeType": "YulBlock",
													"src": "10546:519:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10592:83:14",
																"nodeType": "YulBlock",
																"src": "10592:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10594:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "10594:77:14"
																			},
																			"nativeSrc": "10594:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10594:79:14"
																		},
																		"nativeSrc": "10594:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10594:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10567:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10567:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10576:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10576:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10563:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10563:3:14"
																		},
																		"nativeSrc": "10563:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10563:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10588:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10588:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10559:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10559:3:14"
																},
																"nativeSrc": "10559:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10559:32:14"
															},
															"nativeSrc": "10556:119:14",
															"nodeType": "YulIf",
															"src": "10556:119:14"
														},
														{
															"nativeSrc": "10685:117:14",
															"nodeType": "YulBlock",
															"src": "10685:117:14",
															"statements": [
																{
																	"nativeSrc": "10700:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10700:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10714:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10714:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10704:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10704:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10729:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10729:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10764:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10764:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10775:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10775:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10760:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10760:3:14"
																				},
																				"nativeSrc": "10760:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10760:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10784:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10784:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10739:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10739:20:14"
																		},
																		"nativeSrc": "10739:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10739:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10729:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10729:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10812:118:14",
															"nodeType": "YulBlock",
															"src": "10812:118:14",
															"statements": [
																{
																	"nativeSrc": "10827:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10827:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10841:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10841:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10831:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10831:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10857:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10857:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10892:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "10892:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10903:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "10903:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10888:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10888:3:14"
																				},
																				"nativeSrc": "10888:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10888:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10912:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10912:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10867:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10867:20:14"
																		},
																		"nativeSrc": "10867:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10867:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10857:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10857:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10940:118:14",
															"nodeType": "YulBlock",
															"src": "10940:118:14",
															"statements": [
																{
																	"nativeSrc": "10955:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10955:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10969:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10969:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10959:6:14",
																			"nodeType": "YulTypedName",
																			"src": "10959:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10985:63:14",
																	"nodeType": "YulAssignment",
																	"src": "10985:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11020:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11020:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11031:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11031:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11016:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11016:3:14"
																				},
																				"nativeSrc": "11016:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11016:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11040:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11040:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10995:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "10995:20:14"
																		},
																		"nativeSrc": "10995:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10995:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10985:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "10985:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "10446:619:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10500:9:14",
														"nodeType": "YulTypedName",
														"src": "10500:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10511:7:14",
														"nodeType": "YulTypedName",
														"src": "10511:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10523:6:14",
														"nodeType": "YulTypedName",
														"src": "10523:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10531:6:14",
														"nodeType": "YulTypedName",
														"src": "10531:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10539:6:14",
														"nodeType": "YulTypedName",
														"src": "10539:6:14",
														"type": ""
													}
												],
												"src": "10446:619:14"
											},
											{
												"body": {
													"nativeSrc": "11160:28:14",
													"nodeType": "YulBlock",
													"src": "11160:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11177:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11177:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11180:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11180:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11170:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11170:6:14"
																},
																"nativeSrc": "11170:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11170:12:14"
															},
															"nativeSrc": "11170:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "11170:12:14"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "11071:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11071:117:14"
											},
											{
												"body": {
													"nativeSrc": "11283:28:14",
													"nodeType": "YulBlock",
													"src": "11283:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11300:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11300:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11303:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11303:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11293:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:14"
																},
																"nativeSrc": "11293:12:14",
																"nodeType": "YulFunctionCall",
																"src": "11293:12:14"
															},
															"nativeSrc": "11293:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "11293:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "11194:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11194:117:14"
											},
											{
												"body": {
													"nativeSrc": "11424:478:14",
													"nodeType": "YulBlock",
													"src": "11424:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11473:83:14",
																"nodeType": "YulBlock",
																"src": "11473:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11475:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11475:77:14"
																			},
																			"nativeSrc": "11475:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11475:79:14"
																		},
																		"nativeSrc": "11475:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11475:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11452:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11452:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11460:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11460:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11448:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11448:3:14"
																				},
																				"nativeSrc": "11448:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11448:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11467:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "11467:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11444:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11444:3:14"
																		},
																		"nativeSrc": "11444:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11444:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11437:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11437:6:14"
																},
																"nativeSrc": "11437:35:14",
																"nodeType": "YulFunctionCall",
																"src": "11437:35:14"
															},
															"nativeSrc": "11434:122:14",
															"nodeType": "YulIf",
															"src": "11434:122:14"
														},
														{
															"nativeSrc": "11565:30:14",
															"nodeType": "YulAssignment",
															"src": "11565:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11588:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11588:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11575:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "11575:12:14"
																},
																"nativeSrc": "11575:20:14",
																"nodeType": "YulFunctionCall",
																"src": "11575:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11565:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11565:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11638:83:14",
																"nodeType": "YulBlock",
																"src": "11638:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "11640:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11640:77:14"
																			},
																			"nativeSrc": "11640:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11640:79:14"
																		},
																		"nativeSrc": "11640:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11640:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11610:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11610:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11618:18:14",
																		"nodeType": "YulLiteral",
																		"src": "11618:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11607:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11607:2:14"
																},
																"nativeSrc": "11607:30:14",
																"nodeType": "YulFunctionCall",
																"src": "11607:30:14"
															},
															"nativeSrc": "11604:117:14",
															"nodeType": "YulIf",
															"src": "11604:117:14"
														},
														{
															"nativeSrc": "11730:29:14",
															"nodeType": "YulAssignment",
															"src": "11730:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11746:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "11746:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11754:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11754:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11742:3:14"
																},
																"nativeSrc": "11742:17:14",
																"nodeType": "YulFunctionCall",
																"src": "11742:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "11730:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "11730:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11813:83:14",
																"nodeType": "YulBlock",
																"src": "11813:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "11815:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11815:77:14"
																			},
																			"nativeSrc": "11815:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11815:79:14"
																		},
																		"nativeSrc": "11815:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11815:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "11778:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "11778:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "11792:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11792:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11800:4:14",
																						"nodeType": "YulLiteral",
																						"src": "11800:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "11788:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11788:3:14"
																				},
																				"nativeSrc": "11788:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11788:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11774:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11774:3:14"
																		},
																		"nativeSrc": "11774:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11774:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11808:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11808:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11771:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11771:2:14"
																},
																"nativeSrc": "11771:41:14",
																"nodeType": "YulFunctionCall",
																"src": "11771:41:14"
															},
															"nativeSrc": "11768:128:14",
															"nodeType": "YulIf",
															"src": "11768:128:14"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "11334:568:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11391:6:14",
														"nodeType": "YulTypedName",
														"src": "11391:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11399:3:14",
														"nodeType": "YulTypedName",
														"src": "11399:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11407:8:14",
														"nodeType": "YulTypedName",
														"src": "11407:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11417:6:14",
														"nodeType": "YulTypedName",
														"src": "11417:6:14",
														"type": ""
													}
												],
												"src": "11334:568:14"
											},
											{
												"body": {
													"nativeSrc": "12015:478:14",
													"nodeType": "YulBlock",
													"src": "12015:478:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12064:83:14",
																"nodeType": "YulBlock",
																"src": "12064:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12066:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12066:77:14"
																			},
																			"nativeSrc": "12066:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12066:79:14"
																		},
																		"nativeSrc": "12066:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12066:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12043:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12043:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12051:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12051:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12039:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12039:3:14"
																				},
																				"nativeSrc": "12039:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12039:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12058:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12058:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12035:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:14"
																		},
																		"nativeSrc": "12035:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12035:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:14"
																},
																"nativeSrc": "12028:35:14",
																"nodeType": "YulFunctionCall",
																"src": "12028:35:14"
															},
															"nativeSrc": "12025:122:14",
															"nodeType": "YulIf",
															"src": "12025:122:14"
														},
														{
															"nativeSrc": "12156:30:14",
															"nodeType": "YulAssignment",
															"src": "12156:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12179:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12179:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12166:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "12166:12:14"
																},
																"nativeSrc": "12166:20:14",
																"nodeType": "YulFunctionCall",
																"src": "12166:20:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12156:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12156:6:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12229:83:14",
																"nodeType": "YulBlock",
																"src": "12229:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "12231:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12231:77:14"
																			},
																			"nativeSrc": "12231:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12231:79:14"
																		},
																		"nativeSrc": "12231:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12231:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12201:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12201:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12209:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12209:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12198:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12198:2:14"
																},
																"nativeSrc": "12198:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12198:30:14"
															},
															"nativeSrc": "12195:117:14",
															"nodeType": "YulIf",
															"src": "12195:117:14"
														},
														{
															"nativeSrc": "12321:29:14",
															"nodeType": "YulAssignment",
															"src": "12321:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12337:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12337:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12345:4:14",
																		"nodeType": "YulLiteral",
																		"src": "12345:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12333:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12333:3:14"
																},
																"nativeSrc": "12333:17:14",
																"nodeType": "YulFunctionCall",
																"src": "12333:17:14"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "12321:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "12321:8:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12404:83:14",
																"nodeType": "YulBlock",
																"src": "12404:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12406:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12406:77:14"
																			},
																			"nativeSrc": "12406:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12406:79:14"
																		},
																		"nativeSrc": "12406:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12406:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "12369:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "12369:8:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "12383:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12383:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12391:4:14",
																						"nodeType": "YulLiteral",
																						"src": "12391:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12379:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12379:3:14"
																				},
																				"nativeSrc": "12379:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12379:17:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12365:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12365:3:14"
																		},
																		"nativeSrc": "12365:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12365:32:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12399:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12399:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12362:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12362:2:14"
																},
																"nativeSrc": "12362:41:14",
																"nodeType": "YulFunctionCall",
																"src": "12362:41:14"
															},
															"nativeSrc": "12359:128:14",
															"nodeType": "YulIf",
															"src": "12359:128:14"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "11925:568:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11982:6:14",
														"nodeType": "YulTypedName",
														"src": "11982:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11990:3:14",
														"nodeType": "YulTypedName",
														"src": "11990:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "11998:8:14",
														"nodeType": "YulTypedName",
														"src": "11998:8:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12008:6:14",
														"nodeType": "YulTypedName",
														"src": "12008:6:14",
														"type": ""
													}
												],
												"src": "11925:568:14"
											},
											{
												"body": {
													"nativeSrc": "12704:1104:14",
													"nodeType": "YulBlock",
													"src": "12704:1104:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12750:83:14",
																"nodeType": "YulBlock",
																"src": "12750:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12752:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "12752:77:14"
																			},
																			"nativeSrc": "12752:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12752:79:14"
																		},
																		"nativeSrc": "12752:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12752:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12725:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12725:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12734:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12734:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12721:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12721:3:14"
																		},
																		"nativeSrc": "12721:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12721:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12746:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12746:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12717:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12717:3:14"
																},
																"nativeSrc": "12717:32:14",
																"nodeType": "YulFunctionCall",
																"src": "12717:32:14"
															},
															"nativeSrc": "12714:119:14",
															"nodeType": "YulIf",
															"src": "12714:119:14"
														},
														{
															"nativeSrc": "12843:312:14",
															"nodeType": "YulBlock",
															"src": "12843:312:14",
															"statements": [
																{
																	"nativeSrc": "12858:45:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12858:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12889:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12889:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12900:1:14",
																						"nodeType": "YulLiteral",
																						"src": "12900:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12885:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12885:3:14"
																				},
																				"nativeSrc": "12885:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12885:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12872:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "12872:12:14"
																		},
																		"nativeSrc": "12872:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12872:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12862:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12862:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12950:83:14",
																		"nodeType": "YulBlock",
																		"src": "12950:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12952:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "12952:77:14"
																					},
																					"nativeSrc": "12952:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12952:79:14"
																				},
																				"nativeSrc": "12952:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "12952:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12922:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12922:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12930:18:14",
																				"nodeType": "YulLiteral",
																				"src": "12930:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12919:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "12919:2:14"
																		},
																		"nativeSrc": "12919:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12919:30:14"
																	},
																	"nativeSrc": "12916:117:14",
																	"nodeType": "YulIf",
																	"src": "12916:117:14"
																},
																{
																	"nativeSrc": "13047:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13047:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13117:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13117:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13128:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13128:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13113:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13113:3:14"
																				},
																				"nativeSrc": "13113:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13113:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13137:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13137:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "13065:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13065:47:14"
																		},
																		"nativeSrc": "13065:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13065:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13047:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13047:6:14"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "13055:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13055:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13165:313:14",
															"nodeType": "YulBlock",
															"src": "13165:313:14",
															"statements": [
																{
																	"nativeSrc": "13180:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13180:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13211:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13211:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13222:2:14",
																						"nodeType": "YulLiteral",
																						"src": "13222:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13207:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13207:3:14"
																				},
																				"nativeSrc": "13207:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13207:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13194:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "13194:12:14"
																		},
																		"nativeSrc": "13194:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13194:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13184:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13184:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13273:83:14",
																		"nodeType": "YulBlock",
																		"src": "13273:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13275:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13275:77:14"
																					},
																					"nativeSrc": "13275:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13275:79:14"
																				},
																				"nativeSrc": "13275:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13275:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13245:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13245:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13253:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13253:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13242:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13242:2:14"
																		},
																		"nativeSrc": "13242:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13242:30:14"
																	},
																	"nativeSrc": "13239:117:14",
																	"nodeType": "YulIf",
																	"src": "13239:117:14"
																},
																{
																	"nativeSrc": "13370:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13370:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13440:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13440:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13451:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13451:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13436:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13436:3:14"
																				},
																				"nativeSrc": "13436:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13436:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13460:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13460:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "13388:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13388:47:14"
																		},
																		"nativeSrc": "13388:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13388:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13370:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13370:6:14"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "13378:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13378:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13488:313:14",
															"nodeType": "YulBlock",
															"src": "13488:313:14",
															"statements": [
																{
																	"nativeSrc": "13503:46:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13503:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13534:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13534:9:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13545:2:14",
																						"nodeType": "YulLiteral",
																						"src": "13545:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13530:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13530:3:14"
																				},
																				"nativeSrc": "13530:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13530:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13517:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "13517:12:14"
																		},
																		"nativeSrc": "13517:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13517:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13507:6:14",
																			"nodeType": "YulTypedName",
																			"src": "13507:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13596:83:14",
																		"nodeType": "YulBlock",
																		"src": "13596:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13598:77:14",
																						"nodeType": "YulIdentifier",
																						"src": "13598:77:14"
																					},
																					"nativeSrc": "13598:79:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13598:79:14"
																				},
																				"nativeSrc": "13598:79:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13598:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13568:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "13568:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13576:18:14",
																				"nodeType": "YulLiteral",
																				"src": "13576:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13565:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "13565:2:14"
																		},
																		"nativeSrc": "13565:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13565:30:14"
																	},
																	"nativeSrc": "13562:117:14",
																	"nodeType": "YulIf",
																	"src": "13562:117:14"
																},
																{
																	"nativeSrc": "13693:98:14",
																	"nodeType": "YulAssignment",
																	"src": "13693:98:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13763:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "13763:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13774:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13774:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13759:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13759:3:14"
																				},
																				"nativeSrc": "13759:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13759:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13783:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "13783:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "13711:47:14",
																			"nodeType": "YulIdentifier",
																			"src": "13711:47:14"
																		},
																		"nativeSrc": "13711:80:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13711:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13693:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13693:6:14"
																		},
																		{
																			"name": "value5",
																			"nativeSrc": "13701:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "13701:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "12499:1309:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12634:9:14",
														"nodeType": "YulTypedName",
														"src": "12634:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12645:7:14",
														"nodeType": "YulTypedName",
														"src": "12645:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12657:6:14",
														"nodeType": "YulTypedName",
														"src": "12657:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12665:6:14",
														"nodeType": "YulTypedName",
														"src": "12665:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12673:6:14",
														"nodeType": "YulTypedName",
														"src": "12673:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12681:6:14",
														"nodeType": "YulTypedName",
														"src": "12681:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12689:6:14",
														"nodeType": "YulTypedName",
														"src": "12689:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12697:6:14",
														"nodeType": "YulTypedName",
														"src": "12697:6:14",
														"type": ""
													}
												],
												"src": "12499:1309:14"
											},
											{
												"body": {
													"nativeSrc": "13873:81:14",
													"nodeType": "YulBlock",
													"src": "13873:81:14",
													"statements": [
														{
															"nativeSrc": "13883:65:14",
															"nodeType": "YulAssignment",
															"src": "13883:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13940:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13940:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "13923:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "13923:16:14"
																				},
																				"nativeSrc": "13923:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13923:23:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13914:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "13914:8:14"
																		},
																		"nativeSrc": "13914:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13914:33:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13896:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "13896:17:14"
																},
																"nativeSrc": "13896:52:14",
																"nodeType": "YulFunctionCall",
																"src": "13896:52:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13883:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "13883:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint64_to_t_uint256",
												"nativeSrc": "13814:140:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13853:5:14",
														"nodeType": "YulTypedName",
														"src": "13853:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13863:9:14",
														"nodeType": "YulTypedName",
														"src": "13863:9:14",
														"type": ""
													}
												],
												"src": "13814:140:14"
											},
											{
												"body": {
													"nativeSrc": "14024:65:14",
													"nodeType": "YulBlock",
													"src": "14024:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14041:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14041:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14076:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "14076:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint64_to_t_uint256",
																			"nativeSrc": "14046:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "14046:29:14"
																		},
																		"nativeSrc": "14046:36:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14046:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14034:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14034:6:14"
																},
																"nativeSrc": "14034:49:14",
																"nodeType": "YulFunctionCall",
																"src": "14034:49:14"
															},
															"nativeSrc": "14034:49:14",
															"nodeType": "YulExpressionStatement",
															"src": "14034:49:14"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
												"nativeSrc": "13960:129:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14012:5:14",
														"nodeType": "YulTypedName",
														"src": "14012:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14019:3:14",
														"nodeType": "YulTypedName",
														"src": "14019:3:14",
														"type": ""
													}
												],
												"src": "13960:129:14"
											},
											{
												"body": {
													"nativeSrc": "14247:286:14",
													"nodeType": "YulBlock",
													"src": "14247:286:14",
													"statements": [
														{
															"nativeSrc": "14257:26:14",
															"nodeType": "YulAssignment",
															"src": "14257:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14269:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14269:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14280:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14280:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14265:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14265:3:14"
																},
																"nativeSrc": "14265:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14265:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14257:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14257:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14337:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14337:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14350:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14350:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14361:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14361:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14346:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14346:3:14"
																		},
																		"nativeSrc": "14346:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14346:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14293:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "14293:43:14"
																},
																"nativeSrc": "14293:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14293:71:14"
															},
															"nativeSrc": "14293:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14293:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14417:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14417:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14430:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14430:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14441:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14441:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14426:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14426:3:14"
																		},
																		"nativeSrc": "14426:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14426:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "14374:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "14374:42:14"
																},
																"nativeSrc": "14374:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14374:71:14"
															},
															"nativeSrc": "14374:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14374:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14498:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14498:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14511:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14511:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14522:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14522:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14507:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14507:3:14"
																		},
																		"nativeSrc": "14507:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14507:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "14455:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "14455:42:14"
																},
																"nativeSrc": "14455:71:14",
																"nodeType": "YulFunctionCall",
																"src": "14455:71:14"
															},
															"nativeSrc": "14455:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "14455:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14095:438:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14203:9:14",
														"nodeType": "YulTypedName",
														"src": "14203:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14215:6:14",
														"nodeType": "YulTypedName",
														"src": "14215:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14223:6:14",
														"nodeType": "YulTypedName",
														"src": "14223:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14231:6:14",
														"nodeType": "YulTypedName",
														"src": "14231:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14242:4:14",
														"nodeType": "YulTypedName",
														"src": "14242:4:14",
														"type": ""
													}
												],
												"src": "14095:438:14"
											},
											{
												"body": {
													"nativeSrc": "14645:63:14",
													"nodeType": "YulBlock",
													"src": "14645:63:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14667:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "14667:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14675:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14675:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14663:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14663:3:14"
																		},
																		"nativeSrc": "14663:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14663:14:14"
																	},
																	{
																		"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "14679:21:14",
																		"nodeType": "YulLiteral",
																		"src": "14679:21:14",
																		"type": "",
																		"value": "No claimable amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14656:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14656:6:14"
																},
																"nativeSrc": "14656:45:14",
																"nodeType": "YulFunctionCall",
																"src": "14656:45:14"
															},
															"nativeSrc": "14656:45:14",
															"nodeType": "YulExpressionStatement",
															"src": "14656:45:14"
														}
													]
												},
												"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
												"nativeSrc": "14539:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14637:6:14",
														"nodeType": "YulTypedName",
														"src": "14637:6:14",
														"type": ""
													}
												],
												"src": "14539:169:14"
											},
											{
												"body": {
													"nativeSrc": "14860:220:14",
													"nodeType": "YulBlock",
													"src": "14860:220:14",
													"statements": [
														{
															"nativeSrc": "14870:74:14",
															"nodeType": "YulAssignment",
															"src": "14870:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14936:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14936:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14941:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14941:2:14",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14877:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "14877:58:14"
																},
																"nativeSrc": "14877:67:14",
																"nodeType": "YulFunctionCall",
																"src": "14877:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14870:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14870:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15042:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15042:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																	"nativeSrc": "14953:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "14953:88:14"
																},
																"nativeSrc": "14953:93:14",
																"nodeType": "YulFunctionCall",
																"src": "14953:93:14"
															},
															"nativeSrc": "14953:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "14953:93:14"
														},
														{
															"nativeSrc": "15055:19:14",
															"nodeType": "YulAssignment",
															"src": "15055:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15066:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15066:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15071:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15071:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15062:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15062:3:14"
																},
																"nativeSrc": "15062:12:14",
																"nodeType": "YulFunctionCall",
																"src": "15062:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15055:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15055:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14714:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14848:3:14",
														"nodeType": "YulTypedName",
														"src": "14848:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14856:3:14",
														"nodeType": "YulTypedName",
														"src": "14856:3:14",
														"type": ""
													}
												],
												"src": "14714:366:14"
											},
											{
												"body": {
													"nativeSrc": "15257:248:14",
													"nodeType": "YulBlock",
													"src": "15257:248:14",
													"statements": [
														{
															"nativeSrc": "15267:26:14",
															"nodeType": "YulAssignment",
															"src": "15267:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15279:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15279:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15290:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15290:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15275:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15275:3:14"
																},
																"nativeSrc": "15275:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15275:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15267:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15267:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15314:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15314:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15325:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15325:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15310:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15310:3:14"
																		},
																		"nativeSrc": "15310:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15310:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15333:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "15333:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15339:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15339:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15329:3:14"
																		},
																		"nativeSrc": "15329:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15329:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15303:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15303:6:14"
																},
																"nativeSrc": "15303:47:14",
																"nodeType": "YulFunctionCall",
																"src": "15303:47:14"
															},
															"nativeSrc": "15303:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "15303:47:14"
														},
														{
															"nativeSrc": "15359:139:14",
															"nodeType": "YulAssignment",
															"src": "15359:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15493:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15493:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15367:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "15367:124:14"
																},
																"nativeSrc": "15367:131:14",
																"nodeType": "YulFunctionCall",
																"src": "15367:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15359:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15359:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15086:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15237:9:14",
														"nodeType": "YulTypedName",
														"src": "15237:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15252:4:14",
														"nodeType": "YulTypedName",
														"src": "15252:4:14",
														"type": ""
													}
												],
												"src": "15086:419:14"
											},
											{
												"body": {
													"nativeSrc": "15617:69:14",
													"nodeType": "YulBlock",
													"src": "15617:69:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15639:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "15639:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15647:1:14",
																				"nodeType": "YulLiteral",
																				"src": "15647:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15635:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15635:3:14"
																		},
																		"nativeSrc": "15635:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15635:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "15651:27:14",
																		"nodeType": "YulLiteral",
																		"src": "15651:27:14",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15628:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15628:6:14"
																},
																"nativeSrc": "15628:51:14",
																"nodeType": "YulFunctionCall",
																"src": "15628:51:14"
															},
															"nativeSrc": "15628:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "15628:51:14"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "15511:175:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15609:6:14",
														"nodeType": "YulTypedName",
														"src": "15609:6:14",
														"type": ""
													}
												],
												"src": "15511:175:14"
											},
											{
												"body": {
													"nativeSrc": "15838:220:14",
													"nodeType": "YulBlock",
													"src": "15838:220:14",
													"statements": [
														{
															"nativeSrc": "15848:74:14",
															"nodeType": "YulAssignment",
															"src": "15848:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15914:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "15914:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15919:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15919:2:14",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15855:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "15855:58:14"
																},
																"nativeSrc": "15855:67:14",
																"nodeType": "YulFunctionCall",
																"src": "15855:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15848:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15848:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16020:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16020:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "15931:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "15931:88:14"
																},
																"nativeSrc": "15931:93:14",
																"nodeType": "YulFunctionCall",
																"src": "15931:93:14"
															},
															"nativeSrc": "15931:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "15931:93:14"
														},
														{
															"nativeSrc": "16033:19:14",
															"nodeType": "YulAssignment",
															"src": "16033:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16044:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16044:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16049:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16049:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16040:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16040:3:14"
																},
																"nativeSrc": "16040:12:14",
																"nodeType": "YulFunctionCall",
																"src": "16040:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16033:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16033:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15692:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15826:3:14",
														"nodeType": "YulTypedName",
														"src": "15826:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15834:3:14",
														"nodeType": "YulTypedName",
														"src": "15834:3:14",
														"type": ""
													}
												],
												"src": "15692:366:14"
											},
											{
												"body": {
													"nativeSrc": "16235:248:14",
													"nodeType": "YulBlock",
													"src": "16235:248:14",
													"statements": [
														{
															"nativeSrc": "16245:26:14",
															"nodeType": "YulAssignment",
															"src": "16245:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16257:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16257:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16268:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16268:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16253:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16253:3:14"
																},
																"nativeSrc": "16253:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16253:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16245:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16245:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16292:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16292:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16303:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16303:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16288:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16288:3:14"
																		},
																		"nativeSrc": "16288:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16288:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16311:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "16311:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16317:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16317:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16307:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16307:3:14"
																		},
																		"nativeSrc": "16307:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16307:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16281:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16281:6:14"
																},
																"nativeSrc": "16281:47:14",
																"nodeType": "YulFunctionCall",
																"src": "16281:47:14"
															},
															"nativeSrc": "16281:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "16281:47:14"
														},
														{
															"nativeSrc": "16337:139:14",
															"nodeType": "YulAssignment",
															"src": "16337:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16471:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16471:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16345:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "16345:124:14"
																},
																"nativeSrc": "16345:131:14",
																"nodeType": "YulFunctionCall",
																"src": "16345:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16337:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16337:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16064:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16215:9:14",
														"nodeType": "YulTypedName",
														"src": "16215:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16230:4:14",
														"nodeType": "YulTypedName",
														"src": "16230:4:14",
														"type": ""
													}
												],
												"src": "16064:419:14"
											},
											{
												"body": {
													"nativeSrc": "16534:149:14",
													"nodeType": "YulBlock",
													"src": "16534:149:14",
													"statements": [
														{
															"nativeSrc": "16544:25:14",
															"nodeType": "YulAssignment",
															"src": "16544:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16567:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16567:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16549:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16549:17:14"
																},
																"nativeSrc": "16549:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16549:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16544:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16544:1:14"
																}
															]
														},
														{
															"nativeSrc": "16578:25:14",
															"nodeType": "YulAssignment",
															"src": "16578:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16601:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16601:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16583:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "16583:17:14"
																},
																"nativeSrc": "16583:20:14",
																"nodeType": "YulFunctionCall",
																"src": "16583:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16578:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "16578:1:14"
																}
															]
														},
														{
															"nativeSrc": "16612:17:14",
															"nodeType": "YulAssignment",
															"src": "16612:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16624:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16624:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16627:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16627:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16620:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16620:3:14"
																},
																"nativeSrc": "16620:9:14",
																"nodeType": "YulFunctionCall",
																"src": "16620:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "16612:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16612:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16654:22:14",
																"nodeType": "YulBlock",
																"src": "16654:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16656:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "16656:16:14"
																			},
																			"nativeSrc": "16656:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "16656:18:14"
																		},
																		"nativeSrc": "16656:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "16656:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "16645:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "16645:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "16651:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "16651:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16642:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "16642:2:14"
																},
																"nativeSrc": "16642:11:14",
																"nodeType": "YulFunctionCall",
																"src": "16642:11:14"
															},
															"nativeSrc": "16639:37:14",
															"nodeType": "YulIf",
															"src": "16639:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "16489:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16520:1:14",
														"nodeType": "YulTypedName",
														"src": "16520:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16523:1:14",
														"nodeType": "YulTypedName",
														"src": "16523:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "16529:4:14",
														"nodeType": "YulTypedName",
														"src": "16529:4:14",
														"type": ""
													}
												],
												"src": "16489:194:14"
											},
											{
												"body": {
													"nativeSrc": "16802:34:14",
													"nodeType": "YulBlock",
													"src": "16802:34:14",
													"statements": [
														{
															"nativeSrc": "16812:18:14",
															"nodeType": "YulAssignment",
															"src": "16812:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16827:3:14",
																"nodeType": "YulIdentifier",
																"src": "16827:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16812:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "16812:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16689:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16774:3:14",
														"nodeType": "YulTypedName",
														"src": "16774:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16779:6:14",
														"nodeType": "YulTypedName",
														"src": "16779:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16790:11:14",
														"nodeType": "YulTypedName",
														"src": "16790:11:14",
														"type": ""
													}
												],
												"src": "16689:147:14"
											},
											{
												"body": {
													"nativeSrc": "16948:8:14",
													"nodeType": "YulBlock",
													"src": "16948:8:14",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "16842:114:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16940:6:14",
														"nodeType": "YulTypedName",
														"src": "16940:6:14",
														"type": ""
													}
												],
												"src": "16842:114:14"
											},
											{
												"body": {
													"nativeSrc": "17125:235:14",
													"nodeType": "YulBlock",
													"src": "17125:235:14",
													"statements": [
														{
															"nativeSrc": "17135:90:14",
															"nodeType": "YulAssignment",
															"src": "17135:90:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17218:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17218:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17223:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17223:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17142:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "17142:75:14"
																},
																"nativeSrc": "17142:83:14",
																"nodeType": "YulFunctionCall",
																"src": "17142:83:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17135:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17135:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17323:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17323:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "17234:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "17234:88:14"
																},
																"nativeSrc": "17234:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17234:93:14"
															},
															"nativeSrc": "17234:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "17234:93:14"
														},
														{
															"nativeSrc": "17336:18:14",
															"nodeType": "YulAssignment",
															"src": "17336:18:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17347:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17347:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17352:1:14",
																		"nodeType": "YulLiteral",
																		"src": "17352:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17343:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17343:3:14"
																},
																"nativeSrc": "17343:11:14",
																"nodeType": "YulFunctionCall",
																"src": "17343:11:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17336:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16962:398:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17113:3:14",
														"nodeType": "YulTypedName",
														"src": "17113:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17121:3:14",
														"nodeType": "YulTypedName",
														"src": "17121:3:14",
														"type": ""
													}
												],
												"src": "16962:398:14"
											},
											{
												"body": {
													"nativeSrc": "17554:191:14",
													"nodeType": "YulBlock",
													"src": "17554:191:14",
													"statements": [
														{
															"nativeSrc": "17565:154:14",
															"nodeType": "YulAssignment",
															"src": "17565:154:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17715:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17715:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17572:141:14",
																	"nodeType": "YulIdentifier",
																	"src": "17572:141:14"
																},
																"nativeSrc": "17572:147:14",
																"nodeType": "YulFunctionCall",
																"src": "17572:147:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17565:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17565:3:14"
																}
															]
														},
														{
															"nativeSrc": "17729:10:14",
															"nodeType": "YulAssignment",
															"src": "17729:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17736:3:14",
																"nodeType": "YulIdentifier",
																"src": "17736:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17729:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17729:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17366:379:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17541:3:14",
														"nodeType": "YulTypedName",
														"src": "17541:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17550:3:14",
														"nodeType": "YulTypedName",
														"src": "17550:3:14",
														"type": ""
													}
												],
												"src": "17366:379:14"
											},
											{
												"body": {
													"nativeSrc": "17857:65:14",
													"nodeType": "YulBlock",
													"src": "17857:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17879:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17879:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17887:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17887:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17875:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17875:3:14"
																		},
																		"nativeSrc": "17875:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17875:14:14"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "17891:23:14",
																		"nodeType": "YulLiteral",
																		"src": "17891:23:14",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17868:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17868:6:14"
																},
																"nativeSrc": "17868:47:14",
																"nodeType": "YulFunctionCall",
																"src": "17868:47:14"
															},
															"nativeSrc": "17868:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "17868:47:14"
														}
													]
												},
												"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
												"nativeSrc": "17751:171:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17849:6:14",
														"nodeType": "YulTypedName",
														"src": "17849:6:14",
														"type": ""
													}
												],
												"src": "17751:171:14"
											},
											{
												"body": {
													"nativeSrc": "18074:220:14",
													"nodeType": "YulBlock",
													"src": "18074:220:14",
													"statements": [
														{
															"nativeSrc": "18084:74:14",
															"nodeType": "YulAssignment",
															"src": "18084:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18150:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18150:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18155:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18155:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18091:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18091:58:14"
																},
																"nativeSrc": "18091:67:14",
																"nodeType": "YulFunctionCall",
																"src": "18091:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18084:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18084:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18256:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18256:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																	"nativeSrc": "18167:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18167:88:14"
																},
																"nativeSrc": "18167:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18167:93:14"
															},
															"nativeSrc": "18167:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18167:93:14"
														},
														{
															"nativeSrc": "18269:19:14",
															"nodeType": "YulAssignment",
															"src": "18269:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18280:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18280:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18285:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18285:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18276:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18276:3:14"
																},
																"nativeSrc": "18276:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18276:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18269:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18269:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17928:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18062:3:14",
														"nodeType": "YulTypedName",
														"src": "18062:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18070:3:14",
														"nodeType": "YulTypedName",
														"src": "18070:3:14",
														"type": ""
													}
												],
												"src": "17928:366:14"
											},
											{
												"body": {
													"nativeSrc": "18471:248:14",
													"nodeType": "YulBlock",
													"src": "18471:248:14",
													"statements": [
														{
															"nativeSrc": "18481:26:14",
															"nodeType": "YulAssignment",
															"src": "18481:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18493:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18493:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18504:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18504:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18489:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18489:3:14"
																},
																"nativeSrc": "18489:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18489:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18481:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18481:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18528:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18528:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18539:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18539:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18524:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18524:3:14"
																		},
																		"nativeSrc": "18524:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18524:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18547:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18547:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18553:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18553:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18543:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18543:3:14"
																		},
																		"nativeSrc": "18543:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18543:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18517:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18517:6:14"
																},
																"nativeSrc": "18517:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18517:47:14"
															},
															"nativeSrc": "18517:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18517:47:14"
														},
														{
															"nativeSrc": "18573:139:14",
															"nodeType": "YulAssignment",
															"src": "18573:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18707:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18707:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18581:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18581:124:14"
																},
																"nativeSrc": "18581:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18581:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18573:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18573:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18300:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18451:9:14",
														"nodeType": "YulTypedName",
														"src": "18451:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18466:4:14",
														"nodeType": "YulTypedName",
														"src": "18466:4:14",
														"type": ""
													}
												],
												"src": "18300:419:14"
											},
											{
												"body": {
													"nativeSrc": "18831:66:14",
													"nodeType": "YulBlock",
													"src": "18831:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18853:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "18853:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18861:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18861:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18849:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18849:3:14"
																		},
																		"nativeSrc": "18849:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18849:14:14"
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "18865:24:14",
																		"nodeType": "YulLiteral",
																		"src": "18865:24:14",
																		"type": "",
																		"value": "Incorrect Ether amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18842:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18842:6:14"
																},
																"nativeSrc": "18842:48:14",
																"nodeType": "YulFunctionCall",
																"src": "18842:48:14"
															},
															"nativeSrc": "18842:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "18842:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
												"nativeSrc": "18725:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18823:6:14",
														"nodeType": "YulTypedName",
														"src": "18823:6:14",
														"type": ""
													}
												],
												"src": "18725:172:14"
											},
											{
												"body": {
													"nativeSrc": "19049:220:14",
													"nodeType": "YulBlock",
													"src": "19049:220:14",
													"statements": [
														{
															"nativeSrc": "19059:74:14",
															"nodeType": "YulAssignment",
															"src": "19059:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19125:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19125:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19130:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19130:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19066:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "19066:58:14"
																},
																"nativeSrc": "19066:67:14",
																"nodeType": "YulFunctionCall",
																"src": "19066:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19059:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19059:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19231:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19231:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																	"nativeSrc": "19142:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "19142:88:14"
																},
																"nativeSrc": "19142:93:14",
																"nodeType": "YulFunctionCall",
																"src": "19142:93:14"
															},
															"nativeSrc": "19142:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "19142:93:14"
														},
														{
															"nativeSrc": "19244:19:14",
															"nodeType": "YulAssignment",
															"src": "19244:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19255:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "19255:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19260:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19260:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19251:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19251:3:14"
																},
																"nativeSrc": "19251:12:14",
																"nodeType": "YulFunctionCall",
																"src": "19251:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19244:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19244:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18903:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19037:3:14",
														"nodeType": "YulTypedName",
														"src": "19037:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19045:3:14",
														"nodeType": "YulTypedName",
														"src": "19045:3:14",
														"type": ""
													}
												],
												"src": "18903:366:14"
											},
											{
												"body": {
													"nativeSrc": "19446:248:14",
													"nodeType": "YulBlock",
													"src": "19446:248:14",
													"statements": [
														{
															"nativeSrc": "19456:26:14",
															"nodeType": "YulAssignment",
															"src": "19456:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19468:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "19468:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19479:2:14",
																		"nodeType": "YulLiteral",
																		"src": "19479:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19464:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "19464:3:14"
																},
																"nativeSrc": "19464:18:14",
																"nodeType": "YulFunctionCall",
																"src": "19464:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19456:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19456:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19503:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19503:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19514:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19514:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19499:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19499:3:14"
																		},
																		"nativeSrc": "19499:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19499:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19522:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "19522:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19528:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "19528:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19518:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19518:3:14"
																		},
																		"nativeSrc": "19518:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19518:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19492:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19492:6:14"
																},
																"nativeSrc": "19492:47:14",
																"nodeType": "YulFunctionCall",
																"src": "19492:47:14"
															},
															"nativeSrc": "19492:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "19492:47:14"
														},
														{
															"nativeSrc": "19548:139:14",
															"nodeType": "YulAssignment",
															"src": "19548:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19682:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "19682:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19556:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "19556:124:14"
																},
																"nativeSrc": "19556:131:14",
																"nodeType": "YulFunctionCall",
																"src": "19556:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19548:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "19548:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19275:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19426:9:14",
														"nodeType": "YulTypedName",
														"src": "19426:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19441:4:14",
														"nodeType": "YulTypedName",
														"src": "19441:4:14",
														"type": ""
													}
												],
												"src": "19275:419:14"
											},
											{
												"body": {
													"nativeSrc": "19806:121:14",
													"nodeType": "YulBlock",
													"src": "19806:121:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19828:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19828:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19836:1:14",
																				"nodeType": "YulLiteral",
																				"src": "19836:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19824:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19824:3:14"
																		},
																		"nativeSrc": "19824:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19824:14:14"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "19840:34:14",
																		"nodeType": "YulLiteral",
																		"src": "19840:34:14",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19817:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19817:6:14"
																},
																"nativeSrc": "19817:58:14",
																"nodeType": "YulFunctionCall",
																"src": "19817:58:14"
															},
															"nativeSrc": "19817:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "19817:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19896:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "19896:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19904:2:14",
																				"nodeType": "YulLiteral",
																				"src": "19904:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19892:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "19892:3:14"
																		},
																		"nativeSrc": "19892:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "19892:15:14"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "19909:10:14",
																		"nodeType": "YulLiteral",
																		"src": "19909:10:14",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19885:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "19885:6:14"
																},
																"nativeSrc": "19885:35:14",
																"nodeType": "YulFunctionCall",
																"src": "19885:35:14"
															},
															"nativeSrc": "19885:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "19885:35:14"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "19700:227:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19798:6:14",
														"nodeType": "YulTypedName",
														"src": "19798:6:14",
														"type": ""
													}
												],
												"src": "19700:227:14"
											},
											{
												"body": {
													"nativeSrc": "20079:220:14",
													"nodeType": "YulBlock",
													"src": "20079:220:14",
													"statements": [
														{
															"nativeSrc": "20089:74:14",
															"nodeType": "YulAssignment",
															"src": "20089:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20155:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20155:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20160:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20160:2:14",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20096:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "20096:58:14"
																},
																"nativeSrc": "20096:67:14",
																"nodeType": "YulFunctionCall",
																"src": "20096:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20089:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20089:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20261:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20261:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "20172:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "20172:88:14"
																},
																"nativeSrc": "20172:93:14",
																"nodeType": "YulFunctionCall",
																"src": "20172:93:14"
															},
															"nativeSrc": "20172:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "20172:93:14"
														},
														{
															"nativeSrc": "20274:19:14",
															"nodeType": "YulAssignment",
															"src": "20274:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20285:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "20285:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20290:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20290:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20281:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20281:3:14"
																},
																"nativeSrc": "20281:12:14",
																"nodeType": "YulFunctionCall",
																"src": "20281:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20274:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20274:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19933:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20067:3:14",
														"nodeType": "YulTypedName",
														"src": "20067:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20075:3:14",
														"nodeType": "YulTypedName",
														"src": "20075:3:14",
														"type": ""
													}
												],
												"src": "19933:366:14"
											},
											{
												"body": {
													"nativeSrc": "20476:248:14",
													"nodeType": "YulBlock",
													"src": "20476:248:14",
													"statements": [
														{
															"nativeSrc": "20486:26:14",
															"nodeType": "YulAssignment",
															"src": "20486:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20498:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "20498:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20509:2:14",
																		"nodeType": "YulLiteral",
																		"src": "20509:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20494:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "20494:3:14"
																},
																"nativeSrc": "20494:18:14",
																"nodeType": "YulFunctionCall",
																"src": "20494:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20486:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20486:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20533:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20533:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20544:1:14",
																				"nodeType": "YulLiteral",
																				"src": "20544:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20529:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20529:3:14"
																		},
																		"nativeSrc": "20529:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20529:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20552:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "20552:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20558:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "20558:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20548:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "20548:3:14"
																		},
																		"nativeSrc": "20548:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20548:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20522:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "20522:6:14"
																},
																"nativeSrc": "20522:47:14",
																"nodeType": "YulFunctionCall",
																"src": "20522:47:14"
															},
															"nativeSrc": "20522:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "20522:47:14"
														},
														{
															"nativeSrc": "20578:139:14",
															"nodeType": "YulAssignment",
															"src": "20578:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20712:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "20712:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20586:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "20586:124:14"
																},
																"nativeSrc": "20586:131:14",
																"nodeType": "YulFunctionCall",
																"src": "20586:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20578:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "20578:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20305:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20456:9:14",
														"nodeType": "YulTypedName",
														"src": "20456:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20471:4:14",
														"nodeType": "YulTypedName",
														"src": "20471:4:14",
														"type": ""
													}
												],
												"src": "20305:419:14"
											},
											{
												"body": {
													"nativeSrc": "20783:32:14",
													"nodeType": "YulBlock",
													"src": "20783:32:14",
													"statements": [
														{
															"nativeSrc": "20793:16:14",
															"nodeType": "YulAssignment",
															"src": "20793:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "20804:5:14",
																"nodeType": "YulIdentifier",
																"src": "20804:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20793:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "20793:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "20730:85:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20765:5:14",
														"nodeType": "YulTypedName",
														"src": "20765:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20775:7:14",
														"nodeType": "YulTypedName",
														"src": "20775:7:14",
														"type": ""
													}
												],
												"src": "20730:85:14"
											},
											{
												"body": {
													"nativeSrc": "20888:89:14",
													"nodeType": "YulBlock",
													"src": "20888:89:14",
													"statements": [
														{
															"nativeSrc": "20898:73:14",
															"nodeType": "YulAssignment",
															"src": "20898:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20963:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "20963:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "20937:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "20937:25:14"
																				},
																				"nativeSrc": "20937:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "20937:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "20928:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "20928:8:14"
																		},
																		"nativeSrc": "20928:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "20928:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "20911:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "20911:16:14"
																},
																"nativeSrc": "20911:60:14",
																"nodeType": "YulFunctionCall",
																"src": "20911:60:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "20898:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "20898:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "20821:156:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20868:5:14",
														"nodeType": "YulTypedName",
														"src": "20868:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "20878:9:14",
														"nodeType": "YulTypedName",
														"src": "20878:9:14",
														"type": ""
													}
												],
												"src": "20821:156:14"
											},
											{
												"body": {
													"nativeSrc": "21055:73:14",
													"nodeType": "YulBlock",
													"src": "21055:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21072:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "21072:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21115:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21115:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "21077:37:14",
																			"nodeType": "YulIdentifier",
																			"src": "21077:37:14"
																		},
																		"nativeSrc": "21077:44:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21077:44:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21065:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21065:6:14"
																},
																"nativeSrc": "21065:57:14",
																"nodeType": "YulFunctionCall",
																"src": "21065:57:14"
															},
															"nativeSrc": "21065:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "21065:57:14"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "20983:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21043:5:14",
														"nodeType": "YulTypedName",
														"src": "21043:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21050:3:14",
														"nodeType": "YulTypedName",
														"src": "21050:3:14",
														"type": ""
													}
												],
												"src": "20983:145:14"
											},
											{
												"body": {
													"nativeSrc": "21239:131:14",
													"nodeType": "YulBlock",
													"src": "21239:131:14",
													"statements": [
														{
															"nativeSrc": "21249:26:14",
															"nodeType": "YulAssignment",
															"src": "21249:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21261:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "21261:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21272:2:14",
																		"nodeType": "YulLiteral",
																		"src": "21272:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21257:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21257:3:14"
																},
																"nativeSrc": "21257:18:14",
																"nodeType": "YulFunctionCall",
																"src": "21257:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21249:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "21249:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21336:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "21336:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21349:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "21349:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21360:1:14",
																				"nodeType": "YulLiteral",
																				"src": "21360:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21345:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "21345:3:14"
																		},
																		"nativeSrc": "21345:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21345:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "21285:50:14",
																	"nodeType": "YulIdentifier",
																	"src": "21285:50:14"
																},
																"nativeSrc": "21285:78:14",
																"nodeType": "YulFunctionCall",
																"src": "21285:78:14"
															},
															"nativeSrc": "21285:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "21285:78:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "21134:236:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21211:9:14",
														"nodeType": "YulTypedName",
														"src": "21211:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21223:6:14",
														"nodeType": "YulTypedName",
														"src": "21223:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21234:4:14",
														"nodeType": "YulTypedName",
														"src": "21234:4:14",
														"type": ""
													}
												],
												"src": "21134:236:14"
											},
											{
												"body": {
													"nativeSrc": "21404:152:14",
													"nodeType": "YulBlock",
													"src": "21404:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21421:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21421:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21424:77:14",
																		"nodeType": "YulLiteral",
																		"src": "21424:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21414:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21414:6:14"
																},
																"nativeSrc": "21414:88:14",
																"nodeType": "YulFunctionCall",
																"src": "21414:88:14"
															},
															"nativeSrc": "21414:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "21414:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21518:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21518:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21521:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21521:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21511:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21511:6:14"
																},
																"nativeSrc": "21511:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21511:15:14"
															},
															"nativeSrc": "21511:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21511:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21542:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21542:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21545:4:14",
																		"nodeType": "YulLiteral",
																		"src": "21545:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21535:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21535:6:14"
																},
																"nativeSrc": "21535:15:14",
																"nodeType": "YulFunctionCall",
																"src": "21535:15:14"
															},
															"nativeSrc": "21535:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "21535:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "21376:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "21376:180:14"
											},
											{
												"body": {
													"nativeSrc": "21613:269:14",
													"nodeType": "YulBlock",
													"src": "21613:269:14",
													"statements": [
														{
															"nativeSrc": "21623:22:14",
															"nodeType": "YulAssignment",
															"src": "21623:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21637:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21637:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21643:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21643:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21633:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21633:3:14"
																},
																"nativeSrc": "21633:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21633:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "21623:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21623:6:14"
																}
															]
														},
														{
															"nativeSrc": "21654:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "21654:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21684:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "21684:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21690:1:14",
																		"nodeType": "YulLiteral",
																		"src": "21690:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21680:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "21680:3:14"
																},
																"nativeSrc": "21680:12:14",
																"nodeType": "YulFunctionCall",
																"src": "21680:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "21658:18:14",
																	"nodeType": "YulTypedName",
																	"src": "21658:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21731:51:14",
																"nodeType": "YulBlock",
																"src": "21731:51:14",
																"statements": [
																	{
																		"nativeSrc": "21745:27:14",
																		"nodeType": "YulAssignment",
																		"src": "21745:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "21759:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "21759:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "21767:4:14",
																					"nodeType": "YulLiteral",
																					"src": "21767:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "21755:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "21755:3:14"
																			},
																			"nativeSrc": "21755:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21755:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "21745:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21745:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21711:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21711:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21704:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21704:6:14"
																},
																"nativeSrc": "21704:26:14",
																"nodeType": "YulFunctionCall",
																"src": "21704:26:14"
															},
															"nativeSrc": "21701:81:14",
															"nodeType": "YulIf",
															"src": "21701:81:14"
														},
														{
															"body": {
																"nativeSrc": "21834:42:14",
																"nodeType": "YulBlock",
																"src": "21834:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "21848:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "21848:16:14"
																			},
																			"nativeSrc": "21848:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "21848:18:14"
																		},
																		"nativeSrc": "21848:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "21848:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "21798:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "21798:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21821:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "21821:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21829:2:14",
																				"nodeType": "YulLiteral",
																				"src": "21829:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "21818:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "21818:2:14"
																		},
																		"nativeSrc": "21818:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21818:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21795:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "21795:2:14"
																},
																"nativeSrc": "21795:38:14",
																"nodeType": "YulFunctionCall",
																"src": "21795:38:14"
															},
															"nativeSrc": "21792:84:14",
															"nodeType": "YulIf",
															"src": "21792:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "21562:320:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "21597:4:14",
														"nodeType": "YulTypedName",
														"src": "21597:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "21606:6:14",
														"nodeType": "YulTypedName",
														"src": "21606:6:14",
														"type": ""
													}
												],
												"src": "21562:320:14"
											},
											{
												"body": {
													"nativeSrc": "21930:48:14",
													"nodeType": "YulBlock",
													"src": "21930:48:14",
													"statements": [
														{
															"nativeSrc": "21940:32:14",
															"nodeType": "YulAssignment",
															"src": "21940:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21965:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "21965:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "21958:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "21958:6:14"
																		},
																		"nativeSrc": "21958:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "21958:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "21951:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "21951:6:14"
																},
																"nativeSrc": "21951:21:14",
																"nodeType": "YulFunctionCall",
																"src": "21951:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "21940:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "21940:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "21888:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21912:5:14",
														"nodeType": "YulTypedName",
														"src": "21912:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "21922:7:14",
														"nodeType": "YulTypedName",
														"src": "21922:7:14",
														"type": ""
													}
												],
												"src": "21888:90:14"
											},
											{
												"body": {
													"nativeSrc": "22024:76:14",
													"nodeType": "YulBlock",
													"src": "22024:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "22078:16:14",
																"nodeType": "YulBlock",
																"src": "22078:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "22087:1:14",
																					"nodeType": "YulLiteral",
																					"src": "22087:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22090:1:14",
																					"nodeType": "YulLiteral",
																					"src": "22090:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "22080:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22080:6:14"
																			},
																			"nativeSrc": "22080:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22080:12:14"
																		},
																		"nativeSrc": "22080:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22080:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22047:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "22047:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22069:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "22069:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "22054:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "22054:14:14"
																				},
																				"nativeSrc": "22054:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22054:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "22044:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "22044:2:14"
																		},
																		"nativeSrc": "22044:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22044:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "22037:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22037:6:14"
																},
																"nativeSrc": "22037:40:14",
																"nodeType": "YulFunctionCall",
																"src": "22037:40:14"
															},
															"nativeSrc": "22034:60:14",
															"nodeType": "YulIf",
															"src": "22034:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "21984:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22017:5:14",
														"nodeType": "YulTypedName",
														"src": "22017:5:14",
														"type": ""
													}
												],
												"src": "21984:116:14"
											},
											{
												"body": {
													"nativeSrc": "22166:77:14",
													"nodeType": "YulBlock",
													"src": "22166:77:14",
													"statements": [
														{
															"nativeSrc": "22176:22:14",
															"nodeType": "YulAssignment",
															"src": "22176:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "22191:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "22191:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "22185:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "22185:5:14"
																},
																"nativeSrc": "22185:13:14",
																"nodeType": "YulFunctionCall",
																"src": "22185:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22176:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "22176:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22231:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "22231:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "22207:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "22207:23:14"
																},
																"nativeSrc": "22207:30:14",
																"nodeType": "YulFunctionCall",
																"src": "22207:30:14"
															},
															"nativeSrc": "22207:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "22207:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "22106:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "22144:6:14",
														"nodeType": "YulTypedName",
														"src": "22144:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22152:3:14",
														"nodeType": "YulTypedName",
														"src": "22152:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "22160:5:14",
														"nodeType": "YulTypedName",
														"src": "22160:5:14",
														"type": ""
													}
												],
												"src": "22106:137:14"
											},
											{
												"body": {
													"nativeSrc": "22323:271:14",
													"nodeType": "YulBlock",
													"src": "22323:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "22369:83:14",
																"nodeType": "YulBlock",
																"src": "22369:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22371:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "22371:77:14"
																			},
																			"nativeSrc": "22371:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "22371:79:14"
																		},
																		"nativeSrc": "22371:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "22371:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22344:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22344:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22353:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "22353:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22340:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22340:3:14"
																		},
																		"nativeSrc": "22340:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22340:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22365:2:14",
																		"nodeType": "YulLiteral",
																		"src": "22365:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22336:3:14"
																},
																"nativeSrc": "22336:32:14",
																"nodeType": "YulFunctionCall",
																"src": "22336:32:14"
															},
															"nativeSrc": "22333:119:14",
															"nodeType": "YulIf",
															"src": "22333:119:14"
														},
														{
															"nativeSrc": "22462:125:14",
															"nodeType": "YulBlock",
															"src": "22462:125:14",
															"statements": [
																{
																	"nativeSrc": "22477:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22477:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22491:1:14",
																		"nodeType": "YulLiteral",
																		"src": "22491:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22481:6:14",
																			"nodeType": "YulTypedName",
																			"src": "22481:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22506:71:14",
																	"nodeType": "YulAssignment",
																	"src": "22506:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22549:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "22549:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22560:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "22560:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22545:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "22545:3:14"
																				},
																				"nativeSrc": "22545:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "22545:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22569:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "22569:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "22516:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "22516:28:14"
																		},
																		"nativeSrc": "22516:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22516:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22506:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "22506:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "22249:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22293:9:14",
														"nodeType": "YulTypedName",
														"src": "22293:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22304:7:14",
														"nodeType": "YulTypedName",
														"src": "22304:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22316:6:14",
														"nodeType": "YulTypedName",
														"src": "22316:6:14",
														"type": ""
													}
												],
												"src": "22249:345:14"
											},
											{
												"body": {
													"nativeSrc": "22706:66:14",
													"nodeType": "YulBlock",
													"src": "22706:66:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22728:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "22728:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22736:1:14",
																				"nodeType": "YulLiteral",
																				"src": "22736:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22724:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "22724:3:14"
																		},
																		"nativeSrc": "22724:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "22724:14:14"
																	},
																	{
																		"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "22740:24:14",
																		"nodeType": "YulLiteral",
																		"src": "22740:24:14",
																		"type": "",
																		"value": "Caller is not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22717:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "22717:6:14"
																},
																"nativeSrc": "22717:48:14",
																"nodeType": "YulFunctionCall",
																"src": "22717:48:14"
															},
															"nativeSrc": "22717:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "22717:48:14"
														}
													]
												},
												"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
												"nativeSrc": "22600:172:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22698:6:14",
														"nodeType": "YulTypedName",
														"src": "22698:6:14",
														"type": ""
													}
												],
												"src": "22600:172:14"
											},
											{
												"body": {
													"nativeSrc": "22924:220:14",
													"nodeType": "YulBlock",
													"src": "22924:220:14",
													"statements": [
														{
															"nativeSrc": "22934:74:14",
															"nodeType": "YulAssignment",
															"src": "22934:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23000:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23000:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23005:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23005:2:14",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22941:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "22941:58:14"
																},
																"nativeSrc": "22941:67:14",
																"nodeType": "YulFunctionCall",
																"src": "22941:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22934:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "22934:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23106:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23106:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																	"nativeSrc": "23017:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "23017:88:14"
																},
																"nativeSrc": "23017:93:14",
																"nodeType": "YulFunctionCall",
																"src": "23017:93:14"
															},
															"nativeSrc": "23017:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "23017:93:14"
														},
														{
															"nativeSrc": "23119:19:14",
															"nodeType": "YulAssignment",
															"src": "23119:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23130:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "23130:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23135:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23135:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23126:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23126:3:14"
																},
																"nativeSrc": "23126:12:14",
																"nodeType": "YulFunctionCall",
																"src": "23126:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23119:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23119:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22778:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22912:3:14",
														"nodeType": "YulTypedName",
														"src": "22912:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22920:3:14",
														"nodeType": "YulTypedName",
														"src": "22920:3:14",
														"type": ""
													}
												],
												"src": "22778:366:14"
											},
											{
												"body": {
													"nativeSrc": "23321:248:14",
													"nodeType": "YulBlock",
													"src": "23321:248:14",
													"statements": [
														{
															"nativeSrc": "23331:26:14",
															"nodeType": "YulAssignment",
															"src": "23331:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23343:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "23343:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23354:2:14",
																		"nodeType": "YulLiteral",
																		"src": "23354:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23339:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23339:3:14"
																},
																"nativeSrc": "23339:18:14",
																"nodeType": "YulFunctionCall",
																"src": "23339:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23331:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23331:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23378:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23378:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23389:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23389:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23374:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23374:3:14"
																		},
																		"nativeSrc": "23374:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23374:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23397:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "23397:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23403:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "23403:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23393:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23393:3:14"
																		},
																		"nativeSrc": "23393:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23393:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23367:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23367:6:14"
																},
																"nativeSrc": "23367:47:14",
																"nodeType": "YulFunctionCall",
																"src": "23367:47:14"
															},
															"nativeSrc": "23367:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "23367:47:14"
														},
														{
															"nativeSrc": "23423:139:14",
															"nodeType": "YulAssignment",
															"src": "23423:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23557:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "23557:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23431:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "23431:124:14"
																},
																"nativeSrc": "23431:131:14",
																"nodeType": "YulFunctionCall",
																"src": "23431:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23423:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "23423:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23150:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23301:9:14",
														"nodeType": "YulTypedName",
														"src": "23301:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23316:4:14",
														"nodeType": "YulTypedName",
														"src": "23316:4:14",
														"type": ""
													}
												],
												"src": "23150:419:14"
											},
											{
												"body": {
													"nativeSrc": "23681:115:14",
													"nodeType": "YulBlock",
													"src": "23681:115:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23703:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23703:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23711:1:14",
																				"nodeType": "YulLiteral",
																				"src": "23711:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23699:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23699:3:14"
																		},
																		"nativeSrc": "23699:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23699:14:14"
																	},
																	{
																		"hexValue": "53746172742074696d65206d757374206265206265666f726520656e64207469",
																		"kind": "string",
																		"nativeSrc": "23715:34:14",
																		"nodeType": "YulLiteral",
																		"src": "23715:34:14",
																		"type": "",
																		"value": "Start time must be before end ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23692:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23692:6:14"
																},
																"nativeSrc": "23692:58:14",
																"nodeType": "YulFunctionCall",
																"src": "23692:58:14"
															},
															"nativeSrc": "23692:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "23692:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23771:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "23771:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23779:2:14",
																				"nodeType": "YulLiteral",
																				"src": "23779:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23767:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "23767:3:14"
																		},
																		"nativeSrc": "23767:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "23767:15:14"
																	},
																	{
																		"hexValue": "6d65",
																		"kind": "string",
																		"nativeSrc": "23784:4:14",
																		"nodeType": "YulLiteral",
																		"src": "23784:4:14",
																		"type": "",
																		"value": "me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23760:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "23760:6:14"
																},
																"nativeSrc": "23760:29:14",
																"nodeType": "YulFunctionCall",
																"src": "23760:29:14"
															},
															"nativeSrc": "23760:29:14",
															"nodeType": "YulExpressionStatement",
															"src": "23760:29:14"
														}
													]
												},
												"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
												"nativeSrc": "23575:221:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23673:6:14",
														"nodeType": "YulTypedName",
														"src": "23673:6:14",
														"type": ""
													}
												],
												"src": "23575:221:14"
											},
											{
												"body": {
													"nativeSrc": "23948:220:14",
													"nodeType": "YulBlock",
													"src": "23948:220:14",
													"statements": [
														{
															"nativeSrc": "23958:74:14",
															"nodeType": "YulAssignment",
															"src": "23958:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24024:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24024:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24029:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24029:2:14",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23965:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "23965:58:14"
																},
																"nativeSrc": "23965:67:14",
																"nodeType": "YulFunctionCall",
																"src": "23965:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23958:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "23958:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24130:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24130:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																	"nativeSrc": "24041:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "24041:88:14"
																},
																"nativeSrc": "24041:93:14",
																"nodeType": "YulFunctionCall",
																"src": "24041:93:14"
															},
															"nativeSrc": "24041:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "24041:93:14"
														},
														{
															"nativeSrc": "24143:19:14",
															"nodeType": "YulAssignment",
															"src": "24143:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24154:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24154:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24159:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24159:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24150:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24150:3:14"
																},
																"nativeSrc": "24150:12:14",
																"nodeType": "YulFunctionCall",
																"src": "24150:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24143:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24143:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23802:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23936:3:14",
														"nodeType": "YulTypedName",
														"src": "23936:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23944:3:14",
														"nodeType": "YulTypedName",
														"src": "23944:3:14",
														"type": ""
													}
												],
												"src": "23802:366:14"
											},
											{
												"body": {
													"nativeSrc": "24345:248:14",
													"nodeType": "YulBlock",
													"src": "24345:248:14",
													"statements": [
														{
															"nativeSrc": "24355:26:14",
															"nodeType": "YulAssignment",
															"src": "24355:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24367:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "24367:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24378:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24378:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24363:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24363:3:14"
																},
																"nativeSrc": "24363:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24363:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24355:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24355:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24402:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24402:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24413:1:14",
																				"nodeType": "YulLiteral",
																				"src": "24413:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24398:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24398:3:14"
																		},
																		"nativeSrc": "24398:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24398:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24421:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "24421:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24427:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "24427:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24417:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24417:3:14"
																		},
																		"nativeSrc": "24417:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24417:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24391:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24391:6:14"
																},
																"nativeSrc": "24391:47:14",
																"nodeType": "YulFunctionCall",
																"src": "24391:47:14"
															},
															"nativeSrc": "24391:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "24391:47:14"
														},
														{
															"nativeSrc": "24447:139:14",
															"nodeType": "YulAssignment",
															"src": "24447:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24581:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24581:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24455:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "24455:124:14"
																},
																"nativeSrc": "24455:131:14",
																"nodeType": "YulFunctionCall",
																"src": "24455:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24447:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24447:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24174:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24325:9:14",
														"nodeType": "YulTypedName",
														"src": "24325:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24340:4:14",
														"nodeType": "YulTypedName",
														"src": "24340:4:14",
														"type": ""
													}
												],
												"src": "24174:419:14"
											},
											{
												"body": {
													"nativeSrc": "24653:87:14",
													"nodeType": "YulBlock",
													"src": "24653:87:14",
													"statements": [
														{
															"nativeSrc": "24663:11:14",
															"nodeType": "YulAssignment",
															"src": "24663:11:14",
															"value": {
																"name": "ptr",
																"nativeSrc": "24671:3:14",
																"nodeType": "YulIdentifier",
																"src": "24671:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24663:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24663:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24691:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24691:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "24694:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "24694:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24684:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24684:6:14"
																},
																"nativeSrc": "24684:14:14",
																"nodeType": "YulFunctionCall",
																"src": "24684:14:14"
															},
															"nativeSrc": "24684:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "24684:14:14"
														},
														{
															"nativeSrc": "24707:26:14",
															"nodeType": "YulAssignment",
															"src": "24707:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24725:1:14",
																		"nodeType": "YulLiteral",
																		"src": "24725:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24728:4:14",
																		"nodeType": "YulLiteral",
																		"src": "24728:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "24715:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "24715:9:14"
																},
																"nativeSrc": "24715:18:14",
																"nodeType": "YulFunctionCall",
																"src": "24715:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24707:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "24707:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "24599:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "24640:3:14",
														"nodeType": "YulTypedName",
														"src": "24640:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "24648:4:14",
														"nodeType": "YulTypedName",
														"src": "24648:4:14",
														"type": ""
													}
												],
												"src": "24599:141:14"
											},
											{
												"body": {
													"nativeSrc": "24790:49:14",
													"nodeType": "YulBlock",
													"src": "24790:49:14",
													"statements": [
														{
															"nativeSrc": "24800:33:14",
															"nodeType": "YulAssignment",
															"src": "24800:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24818:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "24818:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24825:2:14",
																				"nodeType": "YulLiteral",
																				"src": "24825:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24814:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "24814:3:14"
																		},
																		"nativeSrc": "24814:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "24814:14:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24830:2:14",
																		"nodeType": "YulLiteral",
																		"src": "24830:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "24810:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24810:3:14"
																},
																"nativeSrc": "24810:23:14",
																"nodeType": "YulFunctionCall",
																"src": "24810:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24800:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "24800:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "24746:93:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24773:5:14",
														"nodeType": "YulTypedName",
														"src": "24773:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24783:6:14",
														"nodeType": "YulTypedName",
														"src": "24783:6:14",
														"type": ""
													}
												],
												"src": "24746:93:14"
											},
											{
												"body": {
													"nativeSrc": "24898:54:14",
													"nodeType": "YulBlock",
													"src": "24898:54:14",
													"statements": [
														{
															"nativeSrc": "24908:37:14",
															"nodeType": "YulAssignment",
															"src": "24908:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24933:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "24933:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24939:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "24939:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "24929:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "24929:3:14"
																},
																"nativeSrc": "24929:16:14",
																"nodeType": "YulFunctionCall",
																"src": "24929:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24908:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "24908:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "24845:107:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24873:4:14",
														"nodeType": "YulTypedName",
														"src": "24873:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24879:5:14",
														"nodeType": "YulTypedName",
														"src": "24879:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24889:8:14",
														"nodeType": "YulTypedName",
														"src": "24889:8:14",
														"type": ""
													}
												],
												"src": "24845:107:14"
											},
											{
												"body": {
													"nativeSrc": "25034:317:14",
													"nodeType": "YulBlock",
													"src": "25034:317:14",
													"statements": [
														{
															"nativeSrc": "25044:35:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25044:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "25065:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "25065:10:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25077:1:14",
																		"nodeType": "YulLiteral",
																		"src": "25077:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "25061:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25061:3:14"
																},
																"nativeSrc": "25061:18:14",
																"nodeType": "YulFunctionCall",
																"src": "25061:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "25048:9:14",
																	"nodeType": "YulTypedName",
																	"src": "25048:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25088:109:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25088:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "25119:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "25119:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25130:66:14",
																		"nodeType": "YulLiteral",
																		"src": "25130:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "25100:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "25100:18:14"
																},
																"nativeSrc": "25100:97:14",
																"nodeType": "YulFunctionCall",
																"src": "25100:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "25092:4:14",
																	"nodeType": "YulTypedName",
																	"src": "25092:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25206:51:14",
															"nodeType": "YulAssignment",
															"src": "25206:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "25237:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "25237:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "25248:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "25248:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "25218:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "25218:18:14"
																},
																"nativeSrc": "25218:39:14",
																"nodeType": "YulFunctionCall",
																"src": "25218:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "25206:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "25206:8:14"
																}
															]
														},
														{
															"nativeSrc": "25266:30:14",
															"nodeType": "YulAssignment",
															"src": "25266:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25279:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25279:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "25290:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25290:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "25286:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25286:3:14"
																		},
																		"nativeSrc": "25286:9:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25286:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "25275:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25275:3:14"
																},
																"nativeSrc": "25275:21:14",
																"nodeType": "YulFunctionCall",
																"src": "25275:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "25266:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "25266:5:14"
																}
															]
														},
														{
															"nativeSrc": "25305:40:14",
															"nodeType": "YulAssignment",
															"src": "25305:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25318:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "25318:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "25329:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "25329:8:14"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "25339:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "25339:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "25325:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "25325:3:14"
																		},
																		"nativeSrc": "25325:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25325:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "25315:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "25315:2:14"
																},
																"nativeSrc": "25315:30:14",
																"nodeType": "YulFunctionCall",
																"src": "25315:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "25305:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25305:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "24958:393:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24995:5:14",
														"nodeType": "YulTypedName",
														"src": "24995:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "25002:10:14",
														"nodeType": "YulTypedName",
														"src": "25002:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "25014:8:14",
														"nodeType": "YulTypedName",
														"src": "25014:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "25027:6:14",
														"nodeType": "YulTypedName",
														"src": "25027:6:14",
														"type": ""
													}
												],
												"src": "24958:393:14"
											},
											{
												"body": {
													"nativeSrc": "25417:82:14",
													"nodeType": "YulBlock",
													"src": "25417:82:14",
													"statements": [
														{
															"nativeSrc": "25427:66:14",
															"nodeType": "YulAssignment",
															"src": "25427:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "25485:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "25485:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "25467:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "25467:17:14"
																				},
																				"nativeSrc": "25467:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25467:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "25458:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "25458:8:14"
																		},
																		"nativeSrc": "25458:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25458:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "25440:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "25440:17:14"
																},
																"nativeSrc": "25440:53:14",
																"nodeType": "YulFunctionCall",
																"src": "25440:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "25427:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "25427:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "25357:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25397:5:14",
														"nodeType": "YulTypedName",
														"src": "25397:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "25407:9:14",
														"nodeType": "YulTypedName",
														"src": "25407:9:14",
														"type": ""
													}
												],
												"src": "25357:142:14"
											},
											{
												"body": {
													"nativeSrc": "25552:28:14",
													"nodeType": "YulBlock",
													"src": "25552:28:14",
													"statements": [
														{
															"nativeSrc": "25562:12:14",
															"nodeType": "YulAssignment",
															"src": "25562:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "25569:5:14",
																"nodeType": "YulIdentifier",
																"src": "25569:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25562:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25562:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "25505:75:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "25538:5:14",
														"nodeType": "YulTypedName",
														"src": "25538:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25548:3:14",
														"nodeType": "YulTypedName",
														"src": "25548:3:14",
														"type": ""
													}
												],
												"src": "25505:75:14"
											},
											{
												"body": {
													"nativeSrc": "25662:193:14",
													"nodeType": "YulBlock",
													"src": "25662:193:14",
													"statements": [
														{
															"nativeSrc": "25672:63:14",
															"nodeType": "YulVariableDeclaration",
															"src": "25672:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "25727:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "25727:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "25696:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "25696:30:14"
																},
																"nativeSrc": "25696:39:14",
																"nodeType": "YulFunctionCall",
																"src": "25696:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "25676:16:14",
																	"nodeType": "YulTypedName",
																	"src": "25676:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25751:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "25751:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "25791:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "25791:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "25785:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "25785:5:14"
																				},
																				"nativeSrc": "25785:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25785:11:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "25798:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "25798:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "25830:16:14",
																						"nodeType": "YulIdentifier",
																						"src": "25830:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "25806:23:14",
																					"nodeType": "YulIdentifier",
																					"src": "25806:23:14"
																				},
																				"nativeSrc": "25806:41:14",
																				"nodeType": "YulFunctionCall",
																				"src": "25806:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "25757:27:14",
																			"nodeType": "YulIdentifier",
																			"src": "25757:27:14"
																		},
																		"nativeSrc": "25757:91:14",
																		"nodeType": "YulFunctionCall",
																		"src": "25757:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "25744:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "25744:6:14"
																},
																"nativeSrc": "25744:105:14",
																"nodeType": "YulFunctionCall",
																"src": "25744:105:14"
															},
															"nativeSrc": "25744:105:14",
															"nodeType": "YulExpressionStatement",
															"src": "25744:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "25586:269:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25639:4:14",
														"nodeType": "YulTypedName",
														"src": "25639:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25645:6:14",
														"nodeType": "YulTypedName",
														"src": "25645:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "25653:7:14",
														"nodeType": "YulTypedName",
														"src": "25653:7:14",
														"type": ""
													}
												],
												"src": "25586:269:14"
											},
											{
												"body": {
													"nativeSrc": "25910:24:14",
													"nodeType": "YulBlock",
													"src": "25910:24:14",
													"statements": [
														{
															"nativeSrc": "25920:8:14",
															"nodeType": "YulAssignment",
															"src": "25920:8:14",
															"value": {
																"kind": "number",
																"nativeSrc": "25927:1:14",
																"nodeType": "YulLiteral",
																"src": "25927:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "25920:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "25920:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "25861:73:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "25906:3:14",
														"nodeType": "YulTypedName",
														"src": "25906:3:14",
														"type": ""
													}
												],
												"src": "25861:73:14"
											},
											{
												"body": {
													"nativeSrc": "25993:136:14",
													"nodeType": "YulBlock",
													"src": "25993:136:14",
													"statements": [
														{
															"nativeSrc": "26003:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "26003:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "26017:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "26017:30:14"
																},
																"nativeSrc": "26017:32:14",
																"nodeType": "YulFunctionCall",
																"src": "26017:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "26007:6:14",
																	"nodeType": "YulTypedName",
																	"src": "26007:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "26102:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26102:4:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "26108:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26108:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "26116:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "26116:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "26058:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "26058:43:14"
																},
																"nativeSrc": "26058:65:14",
																"nodeType": "YulFunctionCall",
																"src": "26058:65:14"
															},
															"nativeSrc": "26058:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "26058:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "25940:189:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "25979:4:14",
														"nodeType": "YulTypedName",
														"src": "25979:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "25985:6:14",
														"nodeType": "YulTypedName",
														"src": "25985:6:14",
														"type": ""
													}
												],
												"src": "25940:189:14"
											},
											{
												"body": {
													"nativeSrc": "26185:136:14",
													"nodeType": "YulBlock",
													"src": "26185:136:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "26252:63:14",
																"nodeType": "YulBlock",
																"src": "26252:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "26296:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26296:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26303:1:14",
																					"nodeType": "YulLiteral",
																					"src": "26303:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "26266:29:14",
																				"nodeType": "YulIdentifier",
																				"src": "26266:29:14"
																			},
																			"nativeSrc": "26266:39:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26266:39:14"
																		},
																		"nativeSrc": "26266:39:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26266:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "26205:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "26205:5:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "26212:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26212:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "26202:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26202:2:14"
																},
																"nativeSrc": "26202:14:14",
																"nodeType": "YulFunctionCall",
																"src": "26202:14:14"
															},
															"nativeSrc": "26195:120:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "26217:26:14",
																"nodeType": "YulBlock",
																"src": "26217:26:14",
																"statements": [
																	{
																		"nativeSrc": "26219:22:14",
																		"nodeType": "YulAssignment",
																		"src": "26219:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "26232:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26232:5:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26239:1:14",
																					"nodeType": "YulLiteral",
																					"src": "26239:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "26228:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "26228:3:14"
																			},
																			"nativeSrc": "26228:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26228:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "26219:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "26219:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "26199:2:14",
																"nodeType": "YulBlock",
																"src": "26199:2:14",
																"statements": []
															},
															"src": "26195:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "26135:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "26173:5:14",
														"nodeType": "YulTypedName",
														"src": "26173:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "26180:3:14",
														"nodeType": "YulTypedName",
														"src": "26180:3:14",
														"type": ""
													}
												],
												"src": "26135:186:14"
											},
											{
												"body": {
													"nativeSrc": "26406:464:14",
													"nodeType": "YulBlock",
													"src": "26406:464:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "26432:431:14",
																"nodeType": "YulBlock",
																"src": "26432:431:14",
																"statements": [
																	{
																		"nativeSrc": "26446:54:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26446:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "26494:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "26494:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "26462:31:14",
																				"nodeType": "YulIdentifier",
																				"src": "26462:31:14"
																			},
																			"nativeSrc": "26462:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26462:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "26450:8:14",
																				"nodeType": "YulTypedName",
																				"src": "26450:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "26513:63:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "26513:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "26536:8:14",
																					"nodeType": "YulIdentifier",
																					"src": "26536:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "26564:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "26564:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "26546:17:14",
																						"nodeType": "YulIdentifier",
																						"src": "26546:17:14"
																					},
																					"nativeSrc": "26546:29:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26546:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "26532:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "26532:3:14"
																			},
																			"nativeSrc": "26532:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26532:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "26517:11:14",
																				"nodeType": "YulTypedName",
																				"src": "26517:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "26733:27:14",
																			"nodeType": "YulBlock",
																			"src": "26733:27:14",
																			"statements": [
																				{
																					"nativeSrc": "26735:23:14",
																					"nodeType": "YulAssignment",
																					"src": "26735:23:14",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "26750:8:14",
																						"nodeType": "YulIdentifier",
																						"src": "26750:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "26735:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "26735:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "26717:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "26717:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "26729:2:14",
																					"nodeType": "YulLiteral",
																					"src": "26729:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "26714:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "26714:2:14"
																			},
																			"nativeSrc": "26714:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26714:18:14"
																		},
																		"nativeSrc": "26711:49:14",
																		"nodeType": "YulIf",
																		"src": "26711:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "26802:11:14",
																					"nodeType": "YulIdentifier",
																					"src": "26802:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "26819:8:14",
																							"nodeType": "YulIdentifier",
																							"src": "26819:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "26847:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "26847:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "26829:17:14",
																								"nodeType": "YulIdentifier",
																								"src": "26829:17:14"
																							},
																							"nativeSrc": "26829:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "26829:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "26815:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "26815:3:14"
																					},
																					"nativeSrc": "26815:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "26815:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "26773:28:14",
																				"nodeType": "YulIdentifier",
																				"src": "26773:28:14"
																			},
																			"nativeSrc": "26773:80:14",
																			"nodeType": "YulFunctionCall",
																			"src": "26773:80:14"
																		},
																		"nativeSrc": "26773:80:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "26773:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "26423:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "26423:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26428:2:14",
																		"nodeType": "YulLiteral",
																		"src": "26428:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "26420:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "26420:2:14"
																},
																"nativeSrc": "26420:11:14",
																"nodeType": "YulFunctionCall",
																"src": "26420:11:14"
															},
															"nativeSrc": "26417:446:14",
															"nodeType": "YulIf",
															"src": "26417:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "26327:543:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "26382:5:14",
														"nodeType": "YulTypedName",
														"src": "26382:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "26389:3:14",
														"nodeType": "YulTypedName",
														"src": "26389:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "26394:10:14",
														"nodeType": "YulTypedName",
														"src": "26394:10:14",
														"type": ""
													}
												],
												"src": "26327:543:14"
											},
											{
												"body": {
													"nativeSrc": "26939:54:14",
													"nodeType": "YulBlock",
													"src": "26939:54:14",
													"statements": [
														{
															"nativeSrc": "26949:37:14",
															"nodeType": "YulAssignment",
															"src": "26949:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "26974:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "26974:4:14"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "26980:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "26980:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "26970:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "26970:3:14"
																},
																"nativeSrc": "26970:16:14",
																"nodeType": "YulFunctionCall",
																"src": "26970:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "26949:8:14",
																	"nodeType": "YulIdentifier",
																	"src": "26949:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "26876:117:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "26914:4:14",
														"nodeType": "YulTypedName",
														"src": "26914:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "26920:5:14",
														"nodeType": "YulTypedName",
														"src": "26920:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "26930:8:14",
														"nodeType": "YulTypedName",
														"src": "26930:8:14",
														"type": ""
													}
												],
												"src": "26876:117:14"
											},
											{
												"body": {
													"nativeSrc": "27050:118:14",
													"nodeType": "YulBlock",
													"src": "27050:118:14",
													"statements": [
														{
															"nativeSrc": "27060:68:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27060:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27109:1:14",
																						"nodeType": "YulLiteral",
																						"src": "27109:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "27112:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "27112:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "27105:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "27105:3:14"
																				},
																				"nativeSrc": "27105:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "27105:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27124:1:14",
																						"nodeType": "YulLiteral",
																						"src": "27124:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "27120:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "27120:3:14"
																				},
																				"nativeSrc": "27120:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "27120:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "27076:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "27076:28:14"
																		},
																		"nativeSrc": "27076:51:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27076:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "27072:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "27072:3:14"
																},
																"nativeSrc": "27072:56:14",
																"nodeType": "YulFunctionCall",
																"src": "27072:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "27064:4:14",
																	"nodeType": "YulTypedName",
																	"src": "27064:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27137:25:14",
															"nodeType": "YulAssignment",
															"src": "27137:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27151:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27151:4:14"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "27157:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27157:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "27147:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "27147:3:14"
																},
																"nativeSrc": "27147:15:14",
																"nodeType": "YulFunctionCall",
																"src": "27147:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "27137:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "27137:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "26999:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "27027:4:14",
														"nodeType": "YulTypedName",
														"src": "27027:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "27033:5:14",
														"nodeType": "YulTypedName",
														"src": "27033:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "27043:6:14",
														"nodeType": "YulTypedName",
														"src": "27043:6:14",
														"type": ""
													}
												],
												"src": "26999:169:14"
											},
											{
												"body": {
													"nativeSrc": "27254:214:14",
													"nodeType": "YulBlock",
													"src": "27254:214:14",
													"statements": [
														{
															"nativeSrc": "27387:37:14",
															"nodeType": "YulAssignment",
															"src": "27387:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27414:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27414:4:14"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "27420:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27420:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "27395:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "27395:18:14"
																},
																"nativeSrc": "27395:29:14",
																"nodeType": "YulFunctionCall",
																"src": "27395:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "27387:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27387:4:14"
																}
															]
														},
														{
															"nativeSrc": "27433:29:14",
															"nodeType": "YulAssignment",
															"src": "27433:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "27444:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27444:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "27454:1:14",
																				"nodeType": "YulLiteral",
																				"src": "27454:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "27457:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "27457:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "27450:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "27450:3:14"
																		},
																		"nativeSrc": "27450:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27450:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "27441:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27441:2:14"
																},
																"nativeSrc": "27441:21:14",
																"nodeType": "YulFunctionCall",
																"src": "27441:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "27433:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "27433:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "27173:295:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "27235:4:14",
														"nodeType": "YulTypedName",
														"src": "27235:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "27241:3:14",
														"nodeType": "YulTypedName",
														"src": "27241:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "27249:4:14",
														"nodeType": "YulTypedName",
														"src": "27249:4:14",
														"type": ""
													}
												],
												"src": "27173:295:14"
											},
											{
												"body": {
													"nativeSrc": "27565:1303:14",
													"nodeType": "YulBlock",
													"src": "27565:1303:14",
													"statements": [
														{
															"nativeSrc": "27576:51:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27576:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "27623:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "27623:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "27590:32:14",
																	"nodeType": "YulIdentifier",
																	"src": "27590:32:14"
																},
																"nativeSrc": "27590:37:14",
																"nodeType": "YulFunctionCall",
																"src": "27590:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "27580:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27580:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27712:22:14",
																"nodeType": "YulBlock",
																"src": "27712:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "27714:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "27714:16:14"
																			},
																			"nativeSrc": "27714:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "27714:18:14"
																		},
																		"nativeSrc": "27714:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "27714:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27684:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27684:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27692:18:14",
																		"nodeType": "YulLiteral",
																		"src": "27692:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27681:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27681:2:14"
																},
																"nativeSrc": "27681:30:14",
																"nodeType": "YulFunctionCall",
																"src": "27681:30:14"
															},
															"nativeSrc": "27678:56:14",
															"nodeType": "YulIf",
															"src": "27678:56:14"
														},
														{
															"nativeSrc": "27744:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27744:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "27790:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "27790:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "27784:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "27784:5:14"
																		},
																		"nativeSrc": "27784:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "27784:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "27758:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "27758:25:14"
																},
																"nativeSrc": "27758:38:14",
																"nodeType": "YulFunctionCall",
																"src": "27758:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "27748:6:14",
																	"nodeType": "YulTypedName",
																	"src": "27748:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "27889:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "27889:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "27895:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27895:6:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "27903:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27903:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "27843:45:14",
																	"nodeType": "YulIdentifier",
																	"src": "27843:45:14"
																},
																"nativeSrc": "27843:67:14",
																"nodeType": "YulFunctionCall",
																"src": "27843:67:14"
															},
															"nativeSrc": "27843:67:14",
															"nodeType": "YulExpressionStatement",
															"src": "27843:67:14"
														},
														{
															"nativeSrc": "27920:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "27920:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27937:1:14",
																"nodeType": "YulLiteral",
																"src": "27937:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27924:9:14",
																	"nodeType": "YulTypedName",
																	"src": "27924:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "27948:17:14",
															"nodeType": "YulAssignment",
															"src": "27948:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "27961:4:14",
																"nodeType": "YulLiteral",
																"src": "27961:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "27948:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "27948:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "28012:611:14",
																		"nodeType": "YulBlock",
																		"src": "28012:611:14",
																		"statements": [
																			{
																				"nativeSrc": "28026:37:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28026:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "28045:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "28045:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "28057:4:14",
																									"nodeType": "YulLiteral",
																									"src": "28057:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "28053:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "28053:3:14"
																							},
																							"nativeSrc": "28053:9:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28053:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "28041:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "28041:3:14"
																					},
																					"nativeSrc": "28041:22:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28041:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "28030:7:14",
																						"nodeType": "YulTypedName",
																						"src": "28030:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "28077:51:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28077:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28123:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28123:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "28091:31:14",
																						"nodeType": "YulIdentifier",
																						"src": "28091:31:14"
																					},
																					"nativeSrc": "28091:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28091:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "28081:6:14",
																						"nodeType": "YulTypedName",
																						"src": "28081:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "28141:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28141:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28150:1:14",
																					"nodeType": "YulLiteral",
																					"src": "28150:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "28145:1:14",
																						"nodeType": "YulTypedName",
																						"src": "28145:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28209:163:14",
																					"nodeType": "YulBlock",
																					"src": "28209:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28234:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28234:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "28252:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "28252:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "28257:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "28257:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "28248:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "28248:3:14"
																												},
																												"nativeSrc": "28248:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "28248:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "28242:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "28242:5:14"
																										},
																										"nativeSrc": "28242:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28242:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28227:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28227:6:14"
																								},
																								"nativeSrc": "28227:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28227:42:14"
																							},
																							"nativeSrc": "28227:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "28227:42:14"
																						},
																						{
																							"nativeSrc": "28286:24:14",
																							"nodeType": "YulAssignment",
																							"src": "28286:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28300:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28300:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28308:1:14",
																										"nodeType": "YulLiteral",
																										"src": "28308:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28296:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28296:3:14"
																								},
																								"nativeSrc": "28296:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28296:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "28286:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28286:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "28327:31:14",
																							"nodeType": "YulAssignment",
																							"src": "28327:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "28344:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "28344:9:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28355:2:14",
																										"nodeType": "YulLiteral",
																										"src": "28355:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28340:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28340:3:14"
																								},
																								"nativeSrc": "28340:18:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28340:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "28327:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "28327:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "28175:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "28175:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28178:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "28178:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28172:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "28172:2:14"
																					},
																					"nativeSrc": "28172:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28172:14:14"
																				},
																				"nativeSrc": "28164:208:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "28187:21:14",
																					"nodeType": "YulBlock",
																					"src": "28187:21:14",
																					"statements": [
																						{
																							"nativeSrc": "28189:17:14",
																							"nodeType": "YulAssignment",
																							"src": "28189:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "28198:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "28198:1:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "28201:4:14",
																										"nodeType": "YulLiteral",
																										"src": "28201:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "28194:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "28194:3:14"
																								},
																								"nativeSrc": "28194:12:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28194:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "28189:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "28189:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "28168:3:14",
																					"nodeType": "YulBlock",
																					"src": "28168:3:14",
																					"statements": []
																				},
																				"src": "28164:208:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "28408:156:14",
																					"nodeType": "YulBlock",
																					"src": "28408:156:14",
																					"statements": [
																						{
																							"nativeSrc": "28426:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "28426:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28453:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28453:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28458:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28458:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28449:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28449:3:14"
																										},
																										"nativeSrc": "28449:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28449:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28443:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28443:5:14"
																								},
																								"nativeSrc": "28443:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28443:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "28430:9:14",
																									"nodeType": "YulTypedName",
																									"src": "28430:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "28493:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "28493:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "28520:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28520:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "28535:6:14",
																														"nodeType": "YulIdentifier",
																														"src": "28535:6:14"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "28543:4:14",
																														"nodeType": "YulLiteral",
																														"src": "28543:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "28531:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "28531:3:14"
																												},
																												"nativeSrc": "28531:17:14",
																												"nodeType": "YulFunctionCall",
																												"src": "28531:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "28501:18:14",
																											"nodeType": "YulIdentifier",
																											"src": "28501:18:14"
																										},
																										"nativeSrc": "28501:48:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28501:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "28486:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28486:6:14"
																								},
																								"nativeSrc": "28486:64:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28486:64:14"
																							},
																							"nativeSrc": "28486:64:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "28486:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "28391:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "28391:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "28400:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "28400:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "28388:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "28388:2:14"
																					},
																					"nativeSrc": "28388:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28388:19:14"
																				},
																				"nativeSrc": "28385:179:14",
																				"nodeType": "YulIf",
																				"src": "28385:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28584:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28584:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "28598:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "28598:6:14"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28606:1:14",
																											"nodeType": "YulLiteral",
																											"src": "28606:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "28594:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "28594:3:14"
																									},
																									"nativeSrc": "28594:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "28594:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "28610:1:14",
																									"nodeType": "YulLiteral",
																									"src": "28610:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "28590:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "28590:3:14"
																							},
																							"nativeSrc": "28590:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28590:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28577:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28577:6:14"
																					},
																					"nativeSrc": "28577:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28577:36:14"
																				},
																				"nativeSrc": "28577:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28577:36:14"
																			}
																		]
																	},
																	"nativeSrc": "28005:618:14",
																	"nodeType": "YulCase",
																	"src": "28005:618:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "28010:1:14",
																		"nodeType": "YulLiteral",
																		"src": "28010:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "28640:222:14",
																		"nodeType": "YulBlock",
																		"src": "28640:222:14",
																		"statements": [
																			{
																				"nativeSrc": "28654:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "28654:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "28667:1:14",
																					"nodeType": "YulLiteral",
																					"src": "28667:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "28658:5:14",
																						"nodeType": "YulTypedName",
																						"src": "28658:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "28691:67:14",
																					"nodeType": "YulBlock",
																					"src": "28691:67:14",
																					"statements": [
																						{
																							"nativeSrc": "28709:35:14",
																							"nodeType": "YulAssignment",
																							"src": "28709:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "28728:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "28728:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "28733:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "28733:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "28724:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "28724:3:14"
																										},
																										"nativeSrc": "28724:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "28724:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "28718:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28718:5:14"
																								},
																								"nativeSrc": "28718:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "28718:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "28709:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28709:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "28684:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "28684:6:14"
																				},
																				"nativeSrc": "28681:77:14",
																				"nodeType": "YulIf",
																				"src": "28681:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "28778:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "28778:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "28837:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "28837:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "28844:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "28844:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "28784:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "28784:52:14"
																							},
																							"nativeSrc": "28784:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "28784:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "28771:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "28771:6:14"
																					},
																					"nativeSrc": "28771:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "28771:81:14"
																				},
																				"nativeSrc": "28771:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "28771:81:14"
																			}
																		]
																	},
																	"nativeSrc": "28632:230:14",
																	"nodeType": "YulCase",
																	"src": "28632:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "27985:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "27985:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27993:2:14",
																		"nodeType": "YulLiteral",
																		"src": "27993:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27982:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "27982:2:14"
																},
																"nativeSrc": "27982:14:14",
																"nodeType": "YulFunctionCall",
																"src": "27982:14:14"
															},
															"nativeSrc": "27975:887:14",
															"nodeType": "YulSwitch",
															"src": "27975:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "27473:1395:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "27554:4:14",
														"nodeType": "YulTypedName",
														"src": "27554:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "27560:3:14",
														"nodeType": "YulTypedName",
														"src": "27560:3:14",
														"type": ""
													}
												],
												"src": "27473:1395:14"
											},
											{
												"body": {
													"nativeSrc": "29046:357:14",
													"nodeType": "YulBlock",
													"src": "29046:357:14",
													"statements": [
														{
															"nativeSrc": "29056:26:14",
															"nodeType": "YulAssignment",
															"src": "29056:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29068:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "29068:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29079:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29079:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29064:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29064:3:14"
																},
																"nativeSrc": "29064:18:14",
																"nodeType": "YulFunctionCall",
																"src": "29064:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29056:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29056:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "29135:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29135:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29148:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29148:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29159:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29159:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29144:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29144:3:14"
																		},
																		"nativeSrc": "29144:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29144:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "29092:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "29092:42:14"
																},
																"nativeSrc": "29092:70:14",
																"nodeType": "YulFunctionCall",
																"src": "29092:70:14"
															},
															"nativeSrc": "29092:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "29092:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "29215:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29215:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29228:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29228:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29239:2:14",
																				"nodeType": "YulLiteral",
																				"src": "29239:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29224:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29224:3:14"
																		},
																		"nativeSrc": "29224:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29224:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint256_fromStack",
																	"nativeSrc": "29172:42:14",
																	"nodeType": "YulIdentifier",
																	"src": "29172:42:14"
																},
																"nativeSrc": "29172:71:14",
																"nodeType": "YulFunctionCall",
																"src": "29172:71:14"
															},
															"nativeSrc": "29172:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "29172:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29264:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29264:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29275:2:14",
																				"nodeType": "YulLiteral",
																				"src": "29275:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29260:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29260:3:14"
																		},
																		"nativeSrc": "29260:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29260:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29284:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "29284:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29290:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "29290:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29280:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29280:3:14"
																		},
																		"nativeSrc": "29280:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29280:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29253:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29253:6:14"
																},
																"nativeSrc": "29253:48:14",
																"nodeType": "YulFunctionCall",
																"src": "29253:48:14"
															},
															"nativeSrc": "29253:48:14",
															"nodeType": "YulExpressionStatement",
															"src": "29253:48:14"
														},
														{
															"nativeSrc": "29310:86:14",
															"nodeType": "YulAssignment",
															"src": "29310:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "29382:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "29382:6:14"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29391:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "29391:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29318:63:14",
																	"nodeType": "YulIdentifier",
																	"src": "29318:63:14"
																},
																"nativeSrc": "29318:78:14",
																"nodeType": "YulFunctionCall",
																"src": "29318:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29310:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "29310:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28874:529:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29002:9:14",
														"nodeType": "YulTypedName",
														"src": "29002:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "29014:6:14",
														"nodeType": "YulTypedName",
														"src": "29014:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "29022:6:14",
														"nodeType": "YulTypedName",
														"src": "29022:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "29030:6:14",
														"nodeType": "YulTypedName",
														"src": "29030:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29041:4:14",
														"nodeType": "YulTypedName",
														"src": "29041:4:14",
														"type": ""
													}
												],
												"src": "28874:529:14"
											},
											{
												"body": {
													"nativeSrc": "29515:61:14",
													"nodeType": "YulBlock",
													"src": "29515:61:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29537:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "29537:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29545:1:14",
																				"nodeType": "YulLiteral",
																				"src": "29545:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29533:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "29533:3:14"
																		},
																		"nativeSrc": "29533:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "29533:14:14"
																	},
																	{
																		"hexValue": "5a65726f20616464726573732075736572",
																		"kind": "string",
																		"nativeSrc": "29549:19:14",
																		"nodeType": "YulLiteral",
																		"src": "29549:19:14",
																		"type": "",
																		"value": "Zero address user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29526:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "29526:6:14"
																},
																"nativeSrc": "29526:43:14",
																"nodeType": "YulFunctionCall",
																"src": "29526:43:14"
															},
															"nativeSrc": "29526:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "29526:43:14"
														}
													]
												},
												"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
												"nativeSrc": "29409:167:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29507:6:14",
														"nodeType": "YulTypedName",
														"src": "29507:6:14",
														"type": ""
													}
												],
												"src": "29409:167:14"
											},
											{
												"body": {
													"nativeSrc": "29728:220:14",
													"nodeType": "YulBlock",
													"src": "29728:220:14",
													"statements": [
														{
															"nativeSrc": "29738:74:14",
															"nodeType": "YulAssignment",
															"src": "29738:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29804:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29804:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29809:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29809:2:14",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29745:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "29745:58:14"
																},
																"nativeSrc": "29745:67:14",
																"nodeType": "YulFunctionCall",
																"src": "29745:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29738:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29738:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29910:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29910:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																	"nativeSrc": "29821:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "29821:88:14"
																},
																"nativeSrc": "29821:93:14",
																"nodeType": "YulFunctionCall",
																"src": "29821:93:14"
															},
															"nativeSrc": "29821:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "29821:93:14"
														},
														{
															"nativeSrc": "29923:19:14",
															"nodeType": "YulAssignment",
															"src": "29923:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29934:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "29934:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29939:2:14",
																		"nodeType": "YulLiteral",
																		"src": "29939:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29930:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29930:3:14"
																},
																"nativeSrc": "29930:12:14",
																"nodeType": "YulFunctionCall",
																"src": "29930:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29923:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "29923:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29582:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29716:3:14",
														"nodeType": "YulTypedName",
														"src": "29716:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29724:3:14",
														"nodeType": "YulTypedName",
														"src": "29724:3:14",
														"type": ""
													}
												],
												"src": "29582:366:14"
											},
											{
												"body": {
													"nativeSrc": "30125:248:14",
													"nodeType": "YulBlock",
													"src": "30125:248:14",
													"statements": [
														{
															"nativeSrc": "30135:26:14",
															"nodeType": "YulAssignment",
															"src": "30135:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30147:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "30147:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30158:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30158:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30143:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30143:3:14"
																},
																"nativeSrc": "30143:18:14",
																"nodeType": "YulFunctionCall",
																"src": "30143:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30135:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30135:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30182:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30182:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30193:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30193:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30178:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30178:3:14"
																		},
																		"nativeSrc": "30178:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30178:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30201:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "30201:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30207:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "30207:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30197:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30197:3:14"
																		},
																		"nativeSrc": "30197:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30197:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30171:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30171:6:14"
																},
																"nativeSrc": "30171:47:14",
																"nodeType": "YulFunctionCall",
																"src": "30171:47:14"
															},
															"nativeSrc": "30171:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "30171:47:14"
														},
														{
															"nativeSrc": "30227:139:14",
															"nodeType": "YulAssignment",
															"src": "30227:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30361:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "30361:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30235:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "30235:124:14"
																},
																"nativeSrc": "30235:131:14",
																"nodeType": "YulFunctionCall",
																"src": "30235:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30227:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "30227:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29954:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30105:9:14",
														"nodeType": "YulTypedName",
														"src": "30105:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30120:4:14",
														"nodeType": "YulTypedName",
														"src": "30120:4:14",
														"type": ""
													}
												],
												"src": "29954:419:14"
											},
											{
												"body": {
													"nativeSrc": "30485:68:14",
													"nodeType": "YulBlock",
													"src": "30485:68:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "30507:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "30507:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30515:1:14",
																				"nodeType": "YulLiteral",
																				"src": "30515:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30503:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "30503:3:14"
																		},
																		"nativeSrc": "30503:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "30503:14:14"
																	},
																	{
																		"hexValue": "4d69736d617463686564206172726179206c656e67746873",
																		"kind": "string",
																		"nativeSrc": "30519:26:14",
																		"nodeType": "YulLiteral",
																		"src": "30519:26:14",
																		"type": "",
																		"value": "Mismatched array lengths"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30496:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "30496:6:14"
																},
																"nativeSrc": "30496:50:14",
																"nodeType": "YulFunctionCall",
																"src": "30496:50:14"
															},
															"nativeSrc": "30496:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "30496:50:14"
														}
													]
												},
												"name": "store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
												"nativeSrc": "30379:174:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "30477:6:14",
														"nodeType": "YulTypedName",
														"src": "30477:6:14",
														"type": ""
													}
												],
												"src": "30379:174:14"
											},
											{
												"body": {
													"nativeSrc": "30705:220:14",
													"nodeType": "YulBlock",
													"src": "30705:220:14",
													"statements": [
														{
															"nativeSrc": "30715:74:14",
															"nodeType": "YulAssignment",
															"src": "30715:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30781:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30781:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30786:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30786:2:14",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30722:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "30722:58:14"
																},
																"nativeSrc": "30722:67:14",
																"nodeType": "YulFunctionCall",
																"src": "30722:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "30715:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30715:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30887:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30887:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																	"nativeSrc": "30798:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "30798:88:14"
																},
																"nativeSrc": "30798:93:14",
																"nodeType": "YulFunctionCall",
																"src": "30798:93:14"
															},
															"nativeSrc": "30798:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "30798:93:14"
														},
														{
															"nativeSrc": "30900:19:14",
															"nodeType": "YulAssignment",
															"src": "30900:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "30911:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "30911:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30916:2:14",
																		"nodeType": "YulLiteral",
																		"src": "30916:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30907:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30907:3:14"
																},
																"nativeSrc": "30907:12:14",
																"nodeType": "YulFunctionCall",
																"src": "30907:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "30900:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "30900:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "30559:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "30693:3:14",
														"nodeType": "YulTypedName",
														"src": "30693:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "30701:3:14",
														"nodeType": "YulTypedName",
														"src": "30701:3:14",
														"type": ""
													}
												],
												"src": "30559:366:14"
											},
											{
												"body": {
													"nativeSrc": "31102:248:14",
													"nodeType": "YulBlock",
													"src": "31102:248:14",
													"statements": [
														{
															"nativeSrc": "31112:26:14",
															"nodeType": "YulAssignment",
															"src": "31112:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31124:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "31124:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31135:2:14",
																		"nodeType": "YulLiteral",
																		"src": "31135:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31120:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31120:3:14"
																},
																"nativeSrc": "31120:18:14",
																"nodeType": "YulFunctionCall",
																"src": "31120:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31112:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31112:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31159:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31159:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31170:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31170:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31155:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31155:3:14"
																		},
																		"nativeSrc": "31155:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31155:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31178:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "31178:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31184:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "31184:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31174:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31174:3:14"
																		},
																		"nativeSrc": "31174:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31174:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31148:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31148:6:14"
																},
																"nativeSrc": "31148:47:14",
																"nodeType": "YulFunctionCall",
																"src": "31148:47:14"
															},
															"nativeSrc": "31148:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "31148:47:14"
														},
														{
															"nativeSrc": "31204:139:14",
															"nodeType": "YulAssignment",
															"src": "31204:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "31338:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "31338:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31212:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "31212:124:14"
																},
																"nativeSrc": "31212:131:14",
																"nodeType": "YulFunctionCall",
																"src": "31212:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31204:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "31204:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "30931:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31082:9:14",
														"nodeType": "YulTypedName",
														"src": "31082:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31097:4:14",
														"nodeType": "YulTypedName",
														"src": "31097:4:14",
														"type": ""
													}
												],
												"src": "30931:419:14"
											},
											{
												"body": {
													"nativeSrc": "31384:152:14",
													"nodeType": "YulBlock",
													"src": "31384:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31401:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31401:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31404:77:14",
																		"nodeType": "YulLiteral",
																		"src": "31404:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31394:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31394:6:14"
																},
																"nativeSrc": "31394:88:14",
																"nodeType": "YulFunctionCall",
																"src": "31394:88:14"
															},
															"nativeSrc": "31394:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "31394:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31498:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31498:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31501:4:14",
																		"nodeType": "YulLiteral",
																		"src": "31501:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31491:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31491:6:14"
																},
																"nativeSrc": "31491:15:14",
																"nodeType": "YulFunctionCall",
																"src": "31491:15:14"
															},
															"nativeSrc": "31491:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "31491:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31522:1:14",
																		"nodeType": "YulLiteral",
																		"src": "31522:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31525:4:14",
																		"nodeType": "YulLiteral",
																		"src": "31525:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "31515:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31515:6:14"
																},
																"nativeSrc": "31515:15:14",
																"nodeType": "YulFunctionCall",
																"src": "31515:15:14"
															},
															"nativeSrc": "31515:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "31515:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "31356:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "31356:180:14"
											},
											{
												"body": {
													"nativeSrc": "31648:124:14",
													"nodeType": "YulBlock",
													"src": "31648:124:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31670:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31678:1:14",
																				"nodeType": "YulLiteral",
																				"src": "31678:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31666:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31666:3:14"
																		},
																		"nativeSrc": "31666:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31666:14:14"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e74206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "31682:34:14",
																		"nodeType": "YulLiteral",
																		"src": "31682:34:14",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31659:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31659:6:14"
																},
																"nativeSrc": "31659:58:14",
																"nodeType": "YulFunctionCall",
																"src": "31659:58:14"
															},
															"nativeSrc": "31659:58:14",
															"nodeType": "YulExpressionStatement",
															"src": "31659:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31738:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "31738:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31746:2:14",
																				"nodeType": "YulLiteral",
																				"src": "31746:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31734:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "31734:3:14"
																		},
																		"nativeSrc": "31734:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "31734:15:14"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "31751:13:14",
																		"nodeType": "YulLiteral",
																		"src": "31751:13:14",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31727:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "31727:6:14"
																},
																"nativeSrc": "31727:38:14",
																"nodeType": "YulFunctionCall",
																"src": "31727:38:14"
															},
															"nativeSrc": "31727:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "31727:38:14"
														}
													]
												},
												"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
												"nativeSrc": "31542:230:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31640:6:14",
														"nodeType": "YulTypedName",
														"src": "31640:6:14",
														"type": ""
													}
												],
												"src": "31542:230:14"
											},
											{
												"body": {
													"nativeSrc": "31924:220:14",
													"nodeType": "YulBlock",
													"src": "31924:220:14",
													"statements": [
														{
															"nativeSrc": "31934:74:14",
															"nodeType": "YulAssignment",
															"src": "31934:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32000:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32000:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32005:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32005:2:14",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31941:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "31941:58:14"
																},
																"nativeSrc": "31941:67:14",
																"nodeType": "YulFunctionCall",
																"src": "31941:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31934:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "31934:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32106:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32106:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																	"nativeSrc": "32017:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "32017:88:14"
																},
																"nativeSrc": "32017:93:14",
																"nodeType": "YulFunctionCall",
																"src": "32017:93:14"
															},
															"nativeSrc": "32017:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "32017:93:14"
														},
														{
															"nativeSrc": "32119:19:14",
															"nodeType": "YulAssignment",
															"src": "32119:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32130:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32130:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32135:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32135:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32126:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32126:3:14"
																},
																"nativeSrc": "32126:12:14",
																"nodeType": "YulFunctionCall",
																"src": "32126:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "32119:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32119:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31778:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31912:3:14",
														"nodeType": "YulTypedName",
														"src": "31912:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31920:3:14",
														"nodeType": "YulTypedName",
														"src": "31920:3:14",
														"type": ""
													}
												],
												"src": "31778:366:14"
											},
											{
												"body": {
													"nativeSrc": "32321:248:14",
													"nodeType": "YulBlock",
													"src": "32321:248:14",
													"statements": [
														{
															"nativeSrc": "32331:26:14",
															"nodeType": "YulAssignment",
															"src": "32331:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32343:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "32343:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32354:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32354:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32339:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32339:3:14"
																},
																"nativeSrc": "32339:18:14",
																"nodeType": "YulFunctionCall",
																"src": "32339:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32331:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32331:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32378:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32378:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32389:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32389:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32374:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32374:3:14"
																		},
																		"nativeSrc": "32374:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32374:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "32397:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "32397:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "32403:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "32403:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "32393:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32393:3:14"
																		},
																		"nativeSrc": "32393:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32393:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32367:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32367:6:14"
																},
																"nativeSrc": "32367:47:14",
																"nodeType": "YulFunctionCall",
																"src": "32367:47:14"
															},
															"nativeSrc": "32367:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "32367:47:14"
														},
														{
															"nativeSrc": "32423:139:14",
															"nodeType": "YulAssignment",
															"src": "32423:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32557:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "32557:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32431:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "32431:124:14"
																},
																"nativeSrc": "32431:131:14",
																"nodeType": "YulFunctionCall",
																"src": "32431:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32423:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "32423:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "32150:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32301:9:14",
														"nodeType": "YulTypedName",
														"src": "32301:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32316:4:14",
														"nodeType": "YulTypedName",
														"src": "32316:4:14",
														"type": ""
													}
												],
												"src": "32150:419:14"
											},
											{
												"body": {
													"nativeSrc": "32681:62:14",
													"nodeType": "YulBlock",
													"src": "32681:62:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32703:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "32703:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32711:1:14",
																				"nodeType": "YulLiteral",
																				"src": "32711:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32699:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "32699:3:14"
																		},
																		"nativeSrc": "32699:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "32699:14:14"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "32715:20:14",
																		"nodeType": "YulLiteral",
																		"src": "32715:20:14",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32692:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "32692:6:14"
																},
																"nativeSrc": "32692:44:14",
																"nodeType": "YulFunctionCall",
																"src": "32692:44:14"
															},
															"nativeSrc": "32692:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "32692:44:14"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "32575:168:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32673:6:14",
														"nodeType": "YulTypedName",
														"src": "32673:6:14",
														"type": ""
													}
												],
												"src": "32575:168:14"
											},
											{
												"body": {
													"nativeSrc": "32895:220:14",
													"nodeType": "YulBlock",
													"src": "32895:220:14",
													"statements": [
														{
															"nativeSrc": "32905:74:14",
															"nodeType": "YulAssignment",
															"src": "32905:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32971:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "32971:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32976:2:14",
																		"nodeType": "YulLiteral",
																		"src": "32976:2:14",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32912:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "32912:58:14"
																},
																"nativeSrc": "32912:67:14",
																"nodeType": "YulFunctionCall",
																"src": "32912:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32905:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "32905:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33077:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33077:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "32988:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "32988:88:14"
																},
																"nativeSrc": "32988:93:14",
																"nodeType": "YulFunctionCall",
																"src": "32988:93:14"
															},
															"nativeSrc": "32988:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "32988:93:14"
														},
														{
															"nativeSrc": "33090:19:14",
															"nodeType": "YulAssignment",
															"src": "33090:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33101:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33101:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33106:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33106:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33097:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33097:3:14"
																},
																"nativeSrc": "33097:12:14",
																"nodeType": "YulFunctionCall",
																"src": "33097:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "33090:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33090:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32749:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32883:3:14",
														"nodeType": "YulTypedName",
														"src": "32883:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32891:3:14",
														"nodeType": "YulTypedName",
														"src": "32891:3:14",
														"type": ""
													}
												],
												"src": "32749:366:14"
											},
											{
												"body": {
													"nativeSrc": "33292:248:14",
													"nodeType": "YulBlock",
													"src": "33292:248:14",
													"statements": [
														{
															"nativeSrc": "33302:26:14",
															"nodeType": "YulAssignment",
															"src": "33302:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33314:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "33314:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33325:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33325:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33310:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33310:3:14"
																},
																"nativeSrc": "33310:18:14",
																"nodeType": "YulFunctionCall",
																"src": "33310:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33302:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33302:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33349:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33349:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33360:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33360:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33345:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33345:3:14"
																		},
																		"nativeSrc": "33345:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33345:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "33368:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "33368:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "33374:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "33374:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "33364:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33364:3:14"
																		},
																		"nativeSrc": "33364:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33364:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33338:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "33338:6:14"
																},
																"nativeSrc": "33338:47:14",
																"nodeType": "YulFunctionCall",
																"src": "33338:47:14"
															},
															"nativeSrc": "33338:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "33338:47:14"
														},
														{
															"nativeSrc": "33394:139:14",
															"nodeType": "YulAssignment",
															"src": "33394:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "33528:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "33528:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33402:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "33402:124:14"
																},
																"nativeSrc": "33402:131:14",
																"nodeType": "YulFunctionCall",
																"src": "33402:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33394:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "33394:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "33121:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33272:9:14",
														"nodeType": "YulTypedName",
														"src": "33272:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33287:4:14",
														"nodeType": "YulTypedName",
														"src": "33287:4:14",
														"type": ""
													}
												],
												"src": "33121:419:14"
											},
											{
												"body": {
													"nativeSrc": "33652:75:14",
													"nodeType": "YulBlock",
													"src": "33652:75:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "33674:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "33674:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33682:1:14",
																				"nodeType": "YulLiteral",
																				"src": "33682:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33670:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "33670:3:14"
																		},
																		"nativeSrc": "33670:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "33670:14:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "33686:33:14",
																		"nodeType": "YulLiteral",
																		"src": "33686:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33663:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "33663:6:14"
																},
																"nativeSrc": "33663:57:14",
																"nodeType": "YulFunctionCall",
																"src": "33663:57:14"
															},
															"nativeSrc": "33663:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "33663:57:14"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "33546:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "33644:6:14",
														"nodeType": "YulTypedName",
														"src": "33644:6:14",
														"type": ""
													}
												],
												"src": "33546:181:14"
											},
											{
												"body": {
													"nativeSrc": "33879:220:14",
													"nodeType": "YulBlock",
													"src": "33879:220:14",
													"statements": [
														{
															"nativeSrc": "33889:74:14",
															"nodeType": "YulAssignment",
															"src": "33889:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33955:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "33955:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33960:2:14",
																		"nodeType": "YulLiteral",
																		"src": "33960:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33896:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "33896:58:14"
																},
																"nativeSrc": "33896:67:14",
																"nodeType": "YulFunctionCall",
																"src": "33896:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "33889:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "33889:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "34061:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "34061:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "33972:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "33972:88:14"
																},
																"nativeSrc": "33972:93:14",
																"nodeType": "YulFunctionCall",
																"src": "33972:93:14"
															},
															"nativeSrc": "33972:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "33972:93:14"
														},
														{
															"nativeSrc": "34074:19:14",
															"nodeType": "YulAssignment",
															"src": "34074:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "34085:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "34085:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34090:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34090:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34081:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34081:3:14"
																},
																"nativeSrc": "34081:12:14",
																"nodeType": "YulFunctionCall",
																"src": "34081:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "34074:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34074:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "33733:366:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "33867:3:14",
														"nodeType": "YulTypedName",
														"src": "33867:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "33875:3:14",
														"nodeType": "YulTypedName",
														"src": "33875:3:14",
														"type": ""
													}
												],
												"src": "33733:366:14"
											},
											{
												"body": {
													"nativeSrc": "34276:248:14",
													"nodeType": "YulBlock",
													"src": "34276:248:14",
													"statements": [
														{
															"nativeSrc": "34286:26:14",
															"nodeType": "YulAssignment",
															"src": "34286:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34298:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34298:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34309:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34309:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34294:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34294:3:14"
																},
																"nativeSrc": "34294:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34294:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34286:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34286:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34333:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34333:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34344:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34344:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34329:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34329:3:14"
																		},
																		"nativeSrc": "34329:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34329:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "34352:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "34352:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "34358:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34358:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "34348:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34348:3:14"
																		},
																		"nativeSrc": "34348:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34348:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "34322:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "34322:6:14"
																},
																"nativeSrc": "34322:47:14",
																"nodeType": "YulFunctionCall",
																"src": "34322:47:14"
															},
															"nativeSrc": "34322:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "34322:47:14"
														},
														{
															"nativeSrc": "34378:139:14",
															"nodeType": "YulAssignment",
															"src": "34378:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "34512:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "34512:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "34386:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "34386:124:14"
																},
																"nativeSrc": "34386:131:14",
																"nodeType": "YulFunctionCall",
																"src": "34386:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34378:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34378:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "34105:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34256:9:14",
														"nodeType": "YulTypedName",
														"src": "34256:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34271:4:14",
														"nodeType": "YulTypedName",
														"src": "34271:4:14",
														"type": ""
													}
												],
												"src": "34105:419:14"
											},
											{
												"body": {
													"nativeSrc": "34656:206:14",
													"nodeType": "YulBlock",
													"src": "34656:206:14",
													"statements": [
														{
															"nativeSrc": "34666:26:14",
															"nodeType": "YulAssignment",
															"src": "34666:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "34678:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "34678:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "34689:2:14",
																		"nodeType": "YulLiteral",
																		"src": "34689:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "34674:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "34674:3:14"
																},
																"nativeSrc": "34674:18:14",
																"nodeType": "YulFunctionCall",
																"src": "34674:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "34666:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "34666:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "34746:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34746:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34759:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34759:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34770:1:14",
																				"nodeType": "YulLiteral",
																				"src": "34770:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34755:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34755:3:14"
																		},
																		"nativeSrc": "34755:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34755:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "34702:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34702:43:14"
																},
																"nativeSrc": "34702:71:14",
																"nodeType": "YulFunctionCall",
																"src": "34702:71:14"
															},
															"nativeSrc": "34702:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "34702:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "34827:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "34827:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "34840:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "34840:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "34851:2:14",
																				"nodeType": "YulLiteral",
																				"src": "34851:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "34836:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "34836:3:14"
																		},
																		"nativeSrc": "34836:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "34836:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "34783:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "34783:43:14"
																},
																"nativeSrc": "34783:72:14",
																"nodeType": "YulFunctionCall",
																"src": "34783:72:14"
															},
															"nativeSrc": "34783:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "34783:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "34530:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34620:9:14",
														"nodeType": "YulTypedName",
														"src": "34620:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "34632:6:14",
														"nodeType": "YulTypedName",
														"src": "34632:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "34640:6:14",
														"nodeType": "YulTypedName",
														"src": "34640:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "34651:4:14",
														"nodeType": "YulTypedName",
														"src": "34651:4:14",
														"type": ""
													}
												],
												"src": "34530:332:14"
											},
											{
												"body": {
													"nativeSrc": "35022:288:14",
													"nodeType": "YulBlock",
													"src": "35022:288:14",
													"statements": [
														{
															"nativeSrc": "35032:26:14",
															"nodeType": "YulAssignment",
															"src": "35032:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "35044:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "35044:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "35055:2:14",
																		"nodeType": "YulLiteral",
																		"src": "35055:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "35040:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "35040:3:14"
																},
																"nativeSrc": "35040:18:14",
																"nodeType": "YulFunctionCall",
																"src": "35040:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "35032:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "35032:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "35112:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "35112:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "35125:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "35125:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35136:1:14",
																				"nodeType": "YulLiteral",
																				"src": "35136:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35121:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "35121:3:14"
																		},
																		"nativeSrc": "35121:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "35121:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "35068:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "35068:43:14"
																},
																"nativeSrc": "35068:71:14",
																"nodeType": "YulFunctionCall",
																"src": "35068:71:14"
															},
															"nativeSrc": "35068:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "35068:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "35193:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "35193:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "35206:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "35206:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35217:2:14",
																				"nodeType": "YulLiteral",
																				"src": "35217:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35202:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "35202:3:14"
																		},
																		"nativeSrc": "35202:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "35202:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "35149:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "35149:43:14"
																},
																"nativeSrc": "35149:72:14",
																"nodeType": "YulFunctionCall",
																"src": "35149:72:14"
															},
															"nativeSrc": "35149:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "35149:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "35275:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "35275:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "35288:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "35288:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "35299:2:14",
																				"nodeType": "YulLiteral",
																				"src": "35299:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "35284:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "35284:3:14"
																		},
																		"nativeSrc": "35284:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "35284:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "35231:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "35231:43:14"
																},
																"nativeSrc": "35231:72:14",
																"nodeType": "YulFunctionCall",
																"src": "35231:72:14"
															},
															"nativeSrc": "35231:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "35231:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "34868:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "34978:9:14",
														"nodeType": "YulTypedName",
														"src": "34978:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "34990:6:14",
														"nodeType": "YulTypedName",
														"src": "34990:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "34998:6:14",
														"nodeType": "YulTypedName",
														"src": "34998:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "35006:6:14",
														"nodeType": "YulTypedName",
														"src": "35006:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "35017:4:14",
														"nodeType": "YulTypedName",
														"src": "35017:4:14",
														"type": ""
													}
												],
												"src": "34868:442:14"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sweetspot: use deposit()\")\n\n    }\n\n    function abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1472_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1472_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1472__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1472_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint64_t_uint64_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint64t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint64_t_uint64__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claimable amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect Ether amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not an admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be before end ti\")\n\n        mstore(add(memPtr, 32), \"me\")\n\n    }\n\n    function abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address user\")\n\n    }\n\n    function abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(memPtr) {\n\n        mstore(add(memPtr, 0), \"Mismatched array lengths\")\n\n    }\n\n    function abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal amount must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063b807a3c411610059578063b807a3c4146103c0578063c5d60b51146103e9578063f2fde38b14610412578063f3fef3a31461043b576101af565b80638da5cb5b146102f2578063a9012c891461031d578063a9590e8a14610346578063aee9c87214610383576101af565b8063485cc955116100c6578063485cc9551461025a578063715018a61461028357806385c758f71461029a5780638a19c8bc146102c5576101af565b80631e83409a146101ea57806331f7d9641461021357806347e7ef241461023e576101af565b366101af5734603560008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101409190611dcb565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62346040516101a59190611e0e565b60405180910390a3005b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e190611e86565b60405180910390fd5b3480156101f657600080fd5b50610211600480360381019061020c9190611f18565b610464565b005b34801561021f57600080fd5b506102286108d8565b6040516102359190611f54565b60405180910390f35b61025860048036038101906102539190611f9b565b6108dd565b005b34801561026657600080fd5b50610281600480360381019061027c9190611fdb565b610a98565b005b34801561028f57600080fd5b50610298610c71565b005b3480156102a657600080fd5b506102af610c85565b6040516102bc919061207a565b60405180910390f35b3480156102d157600080fd5b506102da610cab565b6040516102e993929190612137565b60405180910390f35b3480156102fe57600080fd5b50610307610d73565b6040516103149190611f54565b60405180910390f35b34801561032957600080fd5b50610344600480360381019061033f91906122d6565b610dab565b005b34801561035257600080fd5b5061036d60048036038101906103689190611fdb565b610fc4565b60405161037a9190611e0e565b60405180910390f35b34801561038f57600080fd5b506103aa60048036038101906103a59190611f18565b610fe9565b6040516103b79190611e0e565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e29190612345565b611001565b005b3480156103f557600080fd5b50610410600480360381019061040b919061244e565b611236565b005b34801561041e57600080fd5b5061043960048036038101906104349190611f18565b611579565b005b34801561044757600080fd5b50610462600480360381019061045d9190611f9b565b6115ff565b005b61046c6118c2565b603360000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff164210806104bf5750603360000160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1642115b156105375742603360000160009054906101000a900467ffffffffffffffff16603360000160089054906101000a900467ffffffffffffffff166040517ffa7410d400000000000000000000000000000000000000000000000000000000815260040161052e93929190612533565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f2906125b6565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561067d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067490612622565b60405180910390fd5b6000603660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074e9190612642565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361083b5760003373ffffffffffffffffffffffffffffffffffffffff16826040516107af906126a7565b60006040518083038185875af1925050503d80600081146107ec576040519150601f19603f3d011682016040523d82523d6000602084013e6107f1565b606091505b5050905080610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90612708565b60405180910390fd5b50610867565b61086633828473ffffffffffffffffffffffffffffffffffffffff166119119092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516108c49190611e0e565b60405180910390a3506108d5611990565b50565b600081565b6108e56118c2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109605780341461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290612774565b60405180910390fd5b6109d1565b600081116109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90612806565b60405180910390fd5b6109d03330838573ffffffffffffffffffffffffffffffffffffffff1661199a909392919063ffffffff16565b5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a209190611dcb565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a849190611e0e565b60405180910390a3610a94611990565b5050565b6000610aa2611a1c565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff16148015610af05750825b9050600060018367ffffffffffffffff16148015610b25575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610b33575080155b15610b6a576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610bba5760018560000160086101000a81548160ff0219169083151502179055505b610bc386611a44565b610bcb611a58565b86603260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c685760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c5f9190612861565b60405180910390a15b50505050505050565b610c79611a6a565b610c836000611af1565b565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60338060000160009054906101000a900467ffffffffffffffff16908060000160089054906101000a900467ffffffffffffffff1690806001018054610cf0906128ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1c906128ab565b8015610d695780601f10610d3e57610100808354040283529160200191610d69565b820191906000526020600020905b815481529060010190602001808311610d4c57829003601f168201915b5050505050905083565b600080610d7e611bc8565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b8152600401610e069190611f54565b602060405180830381865afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e479190612914565b610e86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7d9061298d565b60405180910390fd5b8167ffffffffffffffff168367ffffffffffffffff1610610edc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed390612a1f565b60405180910390fd5b60405180606001604052808467ffffffffffffffff1681526020018367ffffffffffffffff16815260200182815250603360008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506040820151816001019081610f809190612be1565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13838383604051610fb793929190612cb3565b60405180910390a1505050565b6036602052816000526040600020602052806000526040600020600091509150505481565b60356020528060005260406000206000915090505481565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b815260040161105c9190611f54565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190612914565b6110dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d39061298d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361114b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114290612d3d565b60405180910390fd5b80603660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2836040516112299190611e0e565b60405180910390a3505050565b603260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166324d7806c336040518263ffffffff1660e01b81526004016112919190611f54565b602060405180830381865afa1580156112ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112d29190612914565b611311576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113089061298d565b60405180910390fd5b818190508484905014611359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135090612da9565b60405180910390fd5b8181905086869050146113a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139890612da9565b60405180910390fd5b60005b84849050811015611570578282828181106113c2576113c1612dc9565b5b90506020020135603660008787858181106113e0576113df612dc9565b5b90506020020160208101906113f59190611f18565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600089898581811061144457611443612dc9565b5b90506020020160208101906114599190611f18565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508686828181106114aa576114a9612dc9565b5b90506020020160208101906114bf9190611f18565b73ffffffffffffffffffffffffffffffffffffffff168585838181106114e8576114e7612dc9565b5b90506020020160208101906114fd9190611f18565b73ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc285858581811061154757611546612dc9565b5b9050602002013560405161155b9190611e0e565b60405180910390a380806001019150506113a4565b50505050505050565b611581611a6a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115f35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115ea9190611f54565b60405180910390fd5b6115fc81611af1565b50565b611607611a6a565b61160f6118c2565b60008111611652576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164990612e6a565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156116d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cb90612ed6565b60405180910390fd5b80603560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117239190612642565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611817576000611768610d73565b73ffffffffffffffffffffffffffffffffffffffff168260405161178b906126a7565b60006040518083038185875af1925050503d80600081146117c8576040519150601f19603f3d011682016040523d82523d6000602084013e6117cd565b606091505b5050905080611811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180890612708565b60405180910390fd5b5061184a565b611849611822610d73565b828473ffffffffffffffffffffffffffffffffffffffff166119119092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff16611869610d73565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516118ae9190611e0e565b60405180910390a36118be611990565b5050565b600260005403611907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118fe90612f42565b60405180910390fd5b6002600081905550565b61198b838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611944929190612f62565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bf0565b505050565b6001600081905550565b611a16848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016119cf93929190612f8b565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611bf0565b50505050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611a4c611c92565b611a5581611cd2565b50565b611a60611c92565b611a68611d58565b565b611a72611d6a565b73ffffffffffffffffffffffffffffffffffffffff16611a90610d73565b73ffffffffffffffffffffffffffffffffffffffff1614611aef57611ab3611d6a565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611ae69190611f54565b60405180910390fd5b565b6000611afb611bc8565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b600080602060008451602086016000885af180611c13576040513d6000823e3d81fd5b3d925060005191505060008214611c2e576001811415611c4a565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b15611c8c57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611c839190611f54565b60405180910390fd5b50505050565b611c9a611d72565b611cd0576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611cda611c92565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d4c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611d439190611f54565b60405180910390fd5b611d5581611af1565b50565b611d60611c92565b6001600081905550565b600033905090565b6000611d7c611a1c565b60000160089054906101000a900460ff16905090565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dd682611d92565b9150611de183611d92565b9250828201905080821115611df957611df8611d9c565b5b92915050565b611e0881611d92565b82525050565b6000602082019050611e236000830184611dff565b92915050565b600082825260208201905092915050565b7f537765657473706f743a20757365206465706f73697428290000000000000000600082015250565b6000611e70601883611e29565b9150611e7b82611e3a565b602082019050919050565b60006020820190508181036000830152611e9f81611e63565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ee582611eba565b9050919050565b611ef581611eda565b8114611f0057600080fd5b50565b600081359050611f1281611eec565b92915050565b600060208284031215611f2e57611f2d611eb0565b5b6000611f3c84828501611f03565b91505092915050565b611f4e81611eda565b82525050565b6000602082019050611f696000830184611f45565b92915050565b611f7881611d92565b8114611f8357600080fd5b50565b600081359050611f9581611f6f565b92915050565b60008060408385031215611fb257611fb1611eb0565b5b6000611fc085828601611f03565b9250506020611fd185828601611f86565b9150509250929050565b60008060408385031215611ff257611ff1611eb0565b5b600061200085828601611f03565b925050602061201185828601611f03565b9150509250929050565b6000819050919050565b600061204061203b61203684611eba565b61201b565b611eba565b9050919050565b600061205282612025565b9050919050565b600061206482612047565b9050919050565b61207481612059565b82525050565b600060208201905061208f600083018461206b565b92915050565b600067ffffffffffffffff82169050919050565b6120b281612095565b82525050565b600081519050919050565b60005b838110156120e15780820151818401526020810190506120c6565b60008484015250505050565b6000601f19601f8301169050919050565b6000612109826120b8565b6121138185611e29565b93506121238185602086016120c3565b61212c816120ed565b840191505092915050565b600060608201905061214c60008301866120a9565b61215960208301856120a9565b818103604083015261216b81846120fe565b9050949350505050565b61217e81612095565b811461218957600080fd5b50565b60008135905061219b81612175565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6121e3826120ed565b810181811067ffffffffffffffff82111715612202576122016121ab565b5b80604052505050565b6000612215611ea6565b905061222182826121da565b919050565b600067ffffffffffffffff821115612241576122406121ab565b5b61224a826120ed565b9050602081019050919050565b82818337600083830152505050565b600061227961227484612226565b61220b565b905082815260208101848484011115612295576122946121a6565b5b6122a0848285612257565b509392505050565b600082601f8301126122bd576122bc6121a1565b5b81356122cd848260208601612266565b91505092915050565b6000806000606084860312156122ef576122ee611eb0565b5b60006122fd8682870161218c565b935050602061230e8682870161218c565b925050604084013567ffffffffffffffff81111561232f5761232e611eb5565b5b61233b868287016122a8565b9150509250925092565b60008060006060848603121561235e5761235d611eb0565b5b600061236c86828701611f03565b935050602061237d86828701611f03565b925050604061238e86828701611f86565b9150509250925092565b600080fd5b600080fd5b60008083601f8401126123b8576123b76121a1565b5b8235905067ffffffffffffffff8111156123d5576123d4612398565b5b6020830191508360208202830111156123f1576123f061239d565b5b9250929050565b60008083601f84011261240e5761240d6121a1565b5b8235905067ffffffffffffffff81111561242b5761242a612398565b5b6020830191508360208202830111156124475761244661239d565b5b9250929050565b6000806000806000806060878903121561246b5761246a611eb0565b5b600087013567ffffffffffffffff81111561248957612488611eb5565b5b61249589828a016123a2565b9650965050602087013567ffffffffffffffff8111156124b8576124b7611eb5565b5b6124c489828a016123a2565b9450945050604087013567ffffffffffffffff8111156124e7576124e6611eb5565b5b6124f389828a016123f8565b92509250509295509295509295565b600061251d61251861251384612095565b61201b565b611d92565b9050919050565b61252d81612502565b82525050565b60006060820190506125486000830186611dff565b6125556020830185612524565b6125626040830184612524565b949350505050565b7f4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000600082015250565b60006125a0601383611e29565b91506125ab8261256a565b602082019050919050565b600060208201905081810360008301526125cf81612593565b9050919050565b7f496e73756666696369656e742066756e647320696e206a617200000000000000600082015250565b600061260c601983611e29565b9150612617826125d6565b602082019050919050565b6000602082019050818103600083015261263b816125ff565b9050919050565b600061264d82611d92565b915061265883611d92565b92508282039050818111156126705761266f611d9c565b5b92915050565b600081905092915050565b50565b6000612691600083612676565b915061269c82612681565b600082019050919050565b60006126b282612684565b9150819050919050565b7f4574686572207472616e73666572206661696c65640000000000000000000000600082015250565b60006126f2601583611e29565b91506126fd826126bc565b602082019050919050565b60006020820190508181036000830152612721816126e5565b9050919050565b7f496e636f727265637420457468657220616d6f756e7400000000000000000000600082015250565b600061275e601683611e29565b915061276982612728565b602082019050919050565b6000602082019050818103600083015261278d81612751565b9050919050565b7f4465706f73697420616d6f756e74206d7573742062652067726561746572207460008201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b60006127f0602883611e29565b91506127fb82612794565b604082019050919050565b6000602082019050818103600083015261281f816127e3565b9050919050565b6000819050919050565b600061284b61284661284184612826565b61201b565b612095565b9050919050565b61285b81612830565b82525050565b60006020820190506128766000830184612852565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806128c357607f821691505b6020821081036128d6576128d561287c565b5b50919050565b60008115159050919050565b6128f1816128dc565b81146128fc57600080fd5b50565b60008151905061290e816128e8565b92915050565b60006020828403121561292a57612929611eb0565b5b6000612938848285016128ff565b91505092915050565b7f43616c6c6572206973206e6f7420616e2061646d696e00000000000000000000600082015250565b6000612977601683611e29565b915061298282612941565b602082019050919050565b600060208201905081810360008301526129a68161296a565b9050919050565b7f53746172742074696d65206d757374206265206265666f726520656e6420746960008201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b6000612a09602283611e29565b9150612a14826129ad565b604082019050919050565b60006020820190508181036000830152612a38816129fc565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612aa17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a64565b612aab8683612a64565b95508019841693508086168417925050509392505050565b6000612ade612ad9612ad484611d92565b61201b565b611d92565b9050919050565b6000819050919050565b612af883612ac3565b612b0c612b0482612ae5565b848454612a71565b825550505050565b600090565b612b21612b14565b612b2c818484612aef565b505050565b5b81811015612b5057612b45600082612b19565b600181019050612b32565b5050565b601f821115612b9557612b6681612a3f565b612b6f84612a54565b81016020851015612b7e578190505b612b92612b8a85612a54565b830182612b31565b50505b505050565b600082821c905092915050565b6000612bb860001984600802612b9a565b1980831691505092915050565b6000612bd18383612ba7565b9150826002028217905092915050565b612bea826120b8565b67ffffffffffffffff811115612c0357612c026121ab565b5b612c0d82546128ab565b612c18828285612b54565b600060209050601f831160018114612c4b5760008415612c39578287015190505b612c438582612bc5565b865550612cab565b601f198416612c5986612a3f565b60005b82811015612c8157848901518255600182019150602085019450602081019050612c5c565b86831015612c9e5784890151612c9a601f891682612ba7565b8355505b6001600288020188555050505b505050505050565b6000606082019050612cc86000830186612524565b612cd56020830185612524565b8181036040830152612ce781846120fe565b9050949350505050565b7f5a65726f20616464726573732075736572000000000000000000000000000000600082015250565b6000612d27601183611e29565b9150612d3282612cf1565b602082019050919050565b60006020820190508181036000830152612d5681612d1a565b9050919050565b7f4d69736d617463686564206172726179206c656e677468730000000000000000600082015250565b6000612d93601883611e29565b9150612d9e82612d5d565b602082019050919050565b60006020820190508181036000830152612dc281612d86565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5769746864726177616c20616d6f756e74206d7573742062652067726561746560008201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b6000612e54602b83611e29565b9150612e5f82612df8565b604082019050919050565b60006020820190508181036000830152612e8381612e47565b9050919050565b7f496e73756666696369656e742066756e64730000000000000000000000000000600082015250565b6000612ec0601283611e29565b9150612ecb82612e8a565b602082019050919050565b60006020820190508181036000830152612eef81612eb3565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612f2c601f83611e29565b9150612f3782612ef6565b602082019050919050565b60006020820190508181036000830152612f5b81612f1f565b9050919050565b6000604082019050612f776000830185611f45565b612f846020830184611dff565b9392505050565b6000606082019050612fa06000830186611f45565b612fad6020830185611f45565b612fba6040830184611dff565b94935050505056fea264697066735822122076bcc156c65dfa0af393912351e7f6495699685159b2066782948d09fc9782ba64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xC5D60B51 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x43B JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA9012C89 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x383 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x2C5 JUMPI PUSH2 0x1AF JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x23E JUMPI PUSH2 0x1AF JUMP JUMPDEST CALLDATASIZE PUSH2 0x1AF JUMPI CALLVALUE PUSH1 0x35 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E1 SWAP1 PUSH2 0x1E86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0xA98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x298 PUSH2 0xC71 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AF PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x207A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DA PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2137 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1FDB JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0xFE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH2 0x1001 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x244E JUMP JUMPDEST PUSH2 0x1236 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x439 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0x1579 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x4BF JUMPI POP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x537 JUMPI TIMESTAMP PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xFA7410D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x25B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x67D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x674 SWAP1 PUSH2 0x2622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x2642 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83B JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x7AF SWAP1 PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x867 JUMP JUMPDEST PUSH2 0x866 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1911 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x8D5 PUSH2 0x1990 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x960 JUMPI DUP1 CALLVALUE EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x952 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99A SWAP1 PUSH2 0x2806 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D0 CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x199A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA20 SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA94 PUSH2 0x1990 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA2 PUSH2 0x1A1C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAF0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB25 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xBBA JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xBC3 DUP7 PUSH2 0x1A44 JUMP JUMPDEST PUSH2 0xBCB PUSH2 0x1A58 JUMP JUMPDEST DUP7 PUSH1 0x32 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC68 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC79 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0xC83 PUSH1 0x0 PUSH2 0x1AF1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x33 DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xCF0 SWAP1 PUSH2 0x28AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD1C SWAP1 PUSH2 0x28AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD69 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD3E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD69 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD4C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD7E PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE06 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE47 SWAP2 SWAP1 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7D SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT PUSH2 0xEDC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP1 PUSH2 0x2A1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x33 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D3 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1142 SWAP1 PUSH2 0x2D3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x36 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1229 SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x24D7806C CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1291 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12D2 SWAP2 SWAP1 PUSH2 0x2914 JUMP JUMPDEST PUSH2 0x1311 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1308 SWAP1 PUSH2 0x298D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP7 DUP7 SWAP1 POP EQ PUSH2 0x13A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1398 SWAP1 PUSH2 0x2DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP5 SWAP1 POP DUP2 LT ISZERO PUSH2 0x1570 JUMPI DUP3 DUP3 DUP3 DUP2 DUP2 LT PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x36 PUSH1 0x0 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x13E0 JUMPI PUSH2 0x13DF PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x13F5 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1444 JUMPI PUSH2 0x1443 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1459 SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14BF SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x14E8 JUMPI PUSH2 0x14E7 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x14FD SWAP2 SWAP1 PUSH2 0x1F18 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0x1547 JUMPI PUSH2 0x1546 PUSH2 0x2DC9 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x155B SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x13A4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1581 PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F3 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EA SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x1AF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1607 PUSH2 0x1A6A JUMP JUMPDEST PUSH2 0x160F PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1652 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1649 SWAP1 PUSH2 0x2E6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x16D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CB SWAP1 PUSH2 0x2ED6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1723 SWAP2 SWAP1 PUSH2 0x2642 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1817 JUMPI PUSH1 0x0 PUSH2 0x1768 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x178B SWAP1 PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1811 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1808 SWAP1 PUSH2 0x2708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1849 PUSH2 0x1822 PUSH2 0xD73 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1911 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1869 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x18AE SWAP2 SWAP1 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x18BE PUSH2 0x1990 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x1907 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18FE SWAP1 PUSH2 0x2F42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x198B DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1944 SWAP3 SWAP2 SWAP1 PUSH2 0x2F62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1A16 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x19CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1BF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A4C PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0x1A55 DUP2 PUSH2 0x1CD2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A60 PUSH2 0x1C92 JUMP JUMPDEST PUSH2 0x1A68 PUSH2 0x1D58 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1A72 PUSH2 0x1D6A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A90 PUSH2 0xD73 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AEF JUMPI PUSH2 0x1AB3 PUSH2 0x1D6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AE6 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFB PUSH2 0x1BC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 PUSH1 0x0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 GAS CALL DUP1 PUSH2 0x1C13 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH1 0x0 MLOAD SWAP2 POP POP PUSH1 0x0 DUP3 EQ PUSH2 0x1C2E JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1C4A JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C8C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C83 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1C9A PUSH2 0x1D72 JUMP JUMPDEST PUSH2 0x1CD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1CDA PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D4C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D43 SWAP2 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D55 DUP2 PUSH2 0x1AF1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1D60 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7C PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE1 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1DF9 JUMPI PUSH2 0x1DF8 PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E08 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x537765657473706F743A20757365206465706F73697428290000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E70 PUSH1 0x18 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7B DUP3 PUSH2 0x1E3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E9F DUP2 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE5 DUP3 PUSH2 0x1EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF5 DUP2 PUSH2 0x1EDA JUMP JUMPDEST DUP2 EQ PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F12 DUP2 PUSH2 0x1EEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F2E JUMPI PUSH2 0x1F2D PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F3C DUP5 DUP3 DUP6 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F4E DUP2 PUSH2 0x1EDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F78 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F95 DUP2 PUSH2 0x1F6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FC0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FD1 DUP6 DUP3 DUP7 ADD PUSH2 0x1F86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FF2 JUMPI PUSH2 0x1FF1 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP6 DUP3 DUP7 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2011 DUP6 DUP3 DUP7 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2040 PUSH2 0x203B PUSH2 0x2036 DUP5 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x1EBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2052 DUP3 PUSH2 0x2025 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2064 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2074 DUP2 PUSH2 0x2059 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x208F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B2 DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20C6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2109 DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH2 0x2113 DUP2 DUP6 PUSH2 0x1E29 JUMP JUMPDEST SWAP4 POP PUSH2 0x2123 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x212C DUP2 PUSH2 0x20ED JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x214C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x2159 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x20A9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x216B DUP2 DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x2095 JUMP JUMPDEST DUP2 EQ PUSH2 0x2189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x219B DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x21E3 DUP3 PUSH2 0x20ED JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2202 JUMPI PUSH2 0x2201 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2215 PUSH2 0x1EA6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2221 DUP3 DUP3 PUSH2 0x21DA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2241 JUMPI PUSH2 0x2240 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST PUSH2 0x224A DUP3 PUSH2 0x20ED JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2279 PUSH2 0x2274 DUP5 PUSH2 0x2226 JUMP JUMPDEST PUSH2 0x220B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2295 JUMPI PUSH2 0x2294 PUSH2 0x21A6 JUMP JUMPDEST JUMPDEST PUSH2 0x22A0 DUP5 DUP3 DUP6 PUSH2 0x2257 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22BD JUMPI PUSH2 0x22BC PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22CD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22EF JUMPI PUSH2 0x22EE PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22FD DUP7 DUP3 DUP8 ADD PUSH2 0x218C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x230E DUP7 DUP3 DUP8 ADD PUSH2 0x218C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x232F JUMPI PUSH2 0x232E PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x233B DUP7 DUP3 DUP8 ADD PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x235E JUMPI PUSH2 0x235D PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x236C DUP7 DUP3 DUP8 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x237D DUP7 DUP3 DUP8 ADD PUSH2 0x1F03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x238E DUP7 DUP3 DUP8 ADD PUSH2 0x1F86 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x23B8 JUMPI PUSH2 0x23B7 PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23D5 JUMPI PUSH2 0x23D4 PUSH2 0x2398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x23F1 JUMPI PUSH2 0x23F0 PUSH2 0x239D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x240E JUMPI PUSH2 0x240D PUSH2 0x21A1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242B JUMPI PUSH2 0x242A PUSH2 0x2398 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2447 JUMPI PUSH2 0x2446 PUSH2 0x239D JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x246B JUMPI PUSH2 0x246A PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2489 JUMPI PUSH2 0x2488 PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x2495 DUP10 DUP3 DUP11 ADD PUSH2 0x23A2 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24B8 JUMPI PUSH2 0x24B7 PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x24C4 DUP10 DUP3 DUP11 ADD PUSH2 0x23A2 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24E7 JUMPI PUSH2 0x24E6 PUSH2 0x1EB5 JUMP JUMPDEST JUMPDEST PUSH2 0x24F3 DUP10 DUP3 DUP11 ADD PUSH2 0x23F8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x251D PUSH2 0x2518 PUSH2 0x2513 DUP5 PUSH2 0x2095 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x252D DUP2 PUSH2 0x2502 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2548 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1DFF JUMP JUMPDEST PUSH2 0x2555 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2524 JUMP JUMPDEST PUSH2 0x2562 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2524 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A0 PUSH1 0x13 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x25AB DUP3 PUSH2 0x256A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25CF DUP2 PUSH2 0x2593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x260C PUSH1 0x19 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2617 DUP3 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x263B DUP2 PUSH2 0x25FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264D DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x2658 DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2670 JUMPI PUSH2 0x266F PUSH2 0x1D9C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2691 PUSH1 0x0 DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP PUSH2 0x269C DUP3 PUSH2 0x2681 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26B2 DUP3 PUSH2 0x2684 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 PUSH1 0x15 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x26FD DUP3 PUSH2 0x26BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2721 DUP2 PUSH2 0x26E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x275E PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2769 DUP3 PUSH2 0x2728 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x278D DUP2 PUSH2 0x2751 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F0 PUSH1 0x28 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x27FB DUP3 PUSH2 0x2794 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x281F DUP2 PUSH2 0x27E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284B PUSH2 0x2846 PUSH2 0x2841 DUP5 PUSH2 0x2826 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285B DUP2 PUSH2 0x2830 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2876 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x28C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x28D6 JUMPI PUSH2 0x28D5 PUSH2 0x287C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F1 DUP2 PUSH2 0x28DC JUMP JUMPDEST DUP2 EQ PUSH2 0x28FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x290E DUP2 PUSH2 0x28E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292A JUMPI PUSH2 0x2929 PUSH2 0x1EB0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2938 DUP5 DUP3 DUP6 ADD PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2977 PUSH1 0x16 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2982 DUP3 PUSH2 0x2941 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29A6 DUP2 PUSH2 0x296A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A09 PUSH1 0x22 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A14 DUP3 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A38 DUP2 PUSH2 0x29FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AA1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A64 JUMP JUMPDEST PUSH2 0x2AAB DUP7 DUP4 PUSH2 0x2A64 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ADE PUSH2 0x2AD9 PUSH2 0x2AD4 DUP5 PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x201B JUMP JUMPDEST PUSH2 0x1D92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF8 DUP4 PUSH2 0x2AC3 JUMP JUMPDEST PUSH2 0x2B0C PUSH2 0x2B04 DUP3 PUSH2 0x2AE5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A71 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2B21 PUSH2 0x2B14 JUMP JUMPDEST PUSH2 0x2B2C DUP2 DUP5 DUP5 PUSH2 0x2AEF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B50 JUMPI PUSH2 0x2B45 PUSH1 0x0 DUP3 PUSH2 0x2B19 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2B95 JUMPI PUSH2 0x2B66 DUP2 PUSH2 0x2A3F JUMP JUMPDEST PUSH2 0x2B6F DUP5 PUSH2 0x2A54 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B7E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2B92 PUSH2 0x2B8A DUP6 PUSH2 0x2A54 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B31 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB8 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2B9A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD1 DUP4 DUP4 PUSH2 0x2BA7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BEA DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C03 JUMPI PUSH2 0x2C02 PUSH2 0x21AB JUMP JUMPDEST JUMPDEST PUSH2 0x2C0D DUP3 SLOAD PUSH2 0x28AB JUMP JUMPDEST PUSH2 0x2C18 DUP3 DUP3 DUP6 PUSH2 0x2B54 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C4B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C39 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C43 DUP6 DUP3 PUSH2 0x2BC5 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CAB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C59 DUP7 PUSH2 0x2A3F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C81 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C5C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2C9E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2C9A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BA7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CC8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2524 JUMP JUMPDEST PUSH2 0x2CD5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2524 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2CE7 DUP2 DUP5 PUSH2 0x20FE JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F20616464726573732075736572000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D27 PUSH1 0x11 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D32 DUP3 PUSH2 0x2CF1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D56 DUP2 PUSH2 0x2D1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D69736D617463686564206172726179206C656E677468730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D93 PUSH1 0x18 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9E DUP3 PUSH2 0x2D5D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DC2 DUP2 PUSH2 0x2D86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E54 PUSH1 0x2B DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5F DUP3 PUSH2 0x2DF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E83 DUP2 PUSH2 0x2E47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC0 PUSH1 0x12 DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ECB DUP3 PUSH2 0x2E8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2EEF DUP2 PUSH2 0x2EB3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F2C PUSH1 0x1F DUP4 PUSH2 0x1E29 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F37 DUP3 PUSH2 0x2EF6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F5B DUP2 PUSH2 0x2F1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2F77 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x2F84 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DFF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FA0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x2FAD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F45 JUMP JUMPDEST PUSH2 0x2FBA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DFF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xBCC156C65DFA0AF393912351E7F6495699685159B20667 DUP3 SWAP5 DUP14 MULMOD 0xFC SWAP8 DUP3 0xBA PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "454:6349:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6569:9;6538:13;:27;613:1;6538:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;613:1;6594:44;;6602:10;6594:44;;;6628:9;6594:44;;;;;;:::i;:::-;;;;;;;;454:6349;;6758:34;;;;;;;;;;:::i;:::-;;;;;;;;2971:932;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;566:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2412:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1977:217;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;622:21:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;883:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5360:278:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1097:69;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;999:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4135:261;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4495:616;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5843:578:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2971:932;2526:21:2;:19;:21::i;:::-;3066:12:13::1;:18;;;;;;;;;;;;3048:36;;:15;:36;:74;;;;3106:12;:16;;;;;;;;;;;;3088:34;;:15;:34;3048:74;3044:183;;;3161:15;3178:12;:18;;;;;;;;;;;;3198:12;:16;;;;;;;;;;;;3146:69;;;;;;;;;;;;;:::i;:::-;;;;;;;;3044:183;3239:25;3267:14;:26;3282:10;3267:26;;;;;;;;;;;;;;;:33;3294:5;3267:33;;;;;;;;;;;;;;;;3239:61;;3339:1;3319:17;:21;3311:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;3407:17;3383:13;:20;3397:5;3383:20;;;;;;;;;;;;;;;;:41;;3375:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3503:1;3467:14;:26;3482:10;3467:26;;;;;;;;;;;;;;;:33;3494:5;3467:33;;;;;;;;;;;;;;;:37;;;;3539:17;3515:13;:20;3529:5;3515:20;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;613:1;3573:21;;:5;:21;;::::0;3569:264:::1;;3612:12;3630:10;:15;;3653:17;3630:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:64;;;3698:7;3690:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3596:147;3569:264;;;3764:57;3791:10;3803:17;3771:5;3764:26;;;;:57;;;;;:::i;:::-;3569:264;3870:5;3850:45;;3858:10;3850:45;;;3877:17;3850:45;;;;;;:::i;:::-;;;;;;;;3023:880;2568:20:2::0;:18;:20::i;:::-;2971:932:13;:::o;566:49::-;613:1;566:49;:::o;2412:474::-;2526:21:2;:19;:21::i;:::-;613:1:13::1;2506:21;;:5;:21;;::::0;2502:284:::1;;2565:6;2552:9;:19;2544:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2502:284;;;2648:1;2639:6;:10;2631:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2709:65;2740:10;2760:4;2767:6;2716:5;2709:30;;;;:65;;;;;;:::i;:::-;2502:284;2822:6;2798:13;:20;2812:5;2798:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2864:5;2844:34;;2852:10;2844:34;;;2871:6;2844:34;;;;;;:::i;:::-;;;;;;;;2568:20:2::0;:18;:20::i;:::-;2412:474:13;;:::o;1977:217::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2061:21:13::1;2076:5;2061:14;:21::i;:::-;2126:24;:22;:24::i;:::-;2178:7;2161:6;;:25;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1977:217:13;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;622:21:13:-;;;;;;;;;;;;;:::o;883:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;5360:278:13:-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5479:3:::1;5471:11;;:5;:11;;;5463:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;5547:30;;;;;;;;5553:5;5547:30;;;;;;5560:3;5547:30;;;;;;5565:11;5547:30;;::::0;5532:12:::1;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;5593:37;5606:5;5613:3;5618:11;5593:37;;;;;;;;:::i;:::-;;;;;;;;5360:278:::0;;;:::o;1097:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;999:48::-;;;;;;;;;;;;;;;;;:::o;4135:261::-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4260:1:::1;4244:18;;:4;:18;;::::0;4236:48:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4325:6;4295:14;:20;4310:4;4295:20;;;;;;;;;;;;;;;:27;4316:5;4295:27;;;;;;;;;;;;;;;:36;;;;4374:5;4347:41;;4368:4;4347:41;;;4381:6;4347:41;;;;;;:::i;:::-;;;;;;;;4135:261:::0;;;:::o;4495:616::-;1725:6;;;;;;;;;;;:14;;;1740:10;1725:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1717:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4694:7:::1;;:14;;4678:5;;:12;;:30;4670:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4773:7;;:14;;4756:6;;:13;;:31;4748:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4832:9;4827:277;4851:5;;:12;;4847:1;:16;4827:277;;;5009:7;;5017:1;5009:10;;;;;;;:::i;:::-;;;;;;;;4971:14;:24;4986:5;;4992:1;4986:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4971:24;;;;;;;;;;;;;;;:35;4996:6;;5003:1;4996:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;4971:35;;;;;;;;;;;;;;;:48;;;;5070:6;;5077:1;5070:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5039:53;;5060:5;;5066:1;5060:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;5039:53;;;5081:7;;5089:1;5081:10;;;;;;;:::i;:::-;;;;;;;;5039:53;;;;;;:::i;:::-;;;;;;;;4865:3;;;;;;;4827:277;;;;4495:616:::0;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;5843:578:13:-;2334:13:0;:11;:13::i;:::-;2526:21:2::1;:19;:21::i;:::-;5953:1:13::2;5944:6;:10;5936:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6045:6;6021:13;:20;6035:5;6021:20;;;;;;;;;;;;;;;;:30;;6013:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;6111:6;6087:13;:20;6101:5;6087:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;613:1;6134:21;;:5;:21;;::::0;6130:236:::2;;6173:12;6191:7;:5;:7::i;:::-;:12;;6211:6;6191:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6172:50;;;6245:7;6237:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6157:133;6130:236;;;6311:43;6338:7;:5;:7::i;:::-;6347:6;6318:5;6311:26;;;;:43;;;;;:::i;:::-;6130:236;6399:5;6381:32;;6390:7;:5;:7::i;:::-;6381:32;;;6406:6;6381:32;;;;;;:::i;:::-;;;;;;;;2568:20:2::1;:18;:20::i;:::-;5843:578:13::0;;:::o;2601:287:2:-;1851:1;2733:7;;:19;2725:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1851:1;2863:7;:18;;;;2601:287::o;1271:160:8:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;2894:209:2:-;1808:1;3074:7;:22;;;;2894:209::o;1670:188:8:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1889:111:2:-;6931:20:1;:18;:20::i;:::-;1959:34:2::1;:32;:34::i;:::-;1889:111::o:0;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7738:720:8:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2006:109:2:-;6931:20:1;:18;:20::i;:::-;1808:1:2::1;2086:7;:22;;;;2006:109::o:0;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:14:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;825:169::-;909:11;943:6;938:3;931:19;983:4;978:3;974:14;959:29;;825:169;;;;:::o;1000:174::-;1140:26;1136:1;1128:6;1124:14;1117:50;1000:174;:::o;1180:366::-;1322:3;1343:67;1407:2;1402:3;1343:67;:::i;:::-;1336:74;;1419:93;1508:3;1419:93;:::i;:::-;1537:2;1532:3;1528:12;1521:19;;1180:366;;;:::o;1552:419::-;1718:4;1756:2;1745:9;1741:18;1733:26;;1805:9;1799:4;1795:20;1791:1;1780:9;1776:17;1769:47;1833:131;1959:4;1833:131;:::i;:::-;1825:139;;1552:419;;;:::o;1977:75::-;2010:6;2043:2;2037:9;2027:19;;1977:75;:::o;2058:117::-;2167:1;2164;2157:12;2181:117;2290:1;2287;2280:12;2304:126;2341:7;2381:42;2374:5;2370:54;2359:65;;2304:126;;;:::o;2436:96::-;2473:7;2502:24;2520:5;2502:24;:::i;:::-;2491:35;;2436:96;;;:::o;2538:122::-;2611:24;2629:5;2611:24;:::i;:::-;2604:5;2601:35;2591:63;;2650:1;2647;2640:12;2591:63;2538:122;:::o;2666:139::-;2712:5;2750:6;2737:20;2728:29;;2766:33;2793:5;2766:33;:::i;:::-;2666:139;;;;:::o;2811:329::-;2870:6;2919:2;2907:9;2898:7;2894:23;2890:32;2887:119;;;2925:79;;:::i;:::-;2887:119;3045:1;3070:53;3115:7;3106:6;3095:9;3091:22;3070:53;:::i;:::-;3060:63;;3016:117;2811:329;;;;:::o;3146:118::-;3233:24;3251:5;3233:24;:::i;:::-;3228:3;3221:37;3146:118;;:::o;3270:222::-;3363:4;3401:2;3390:9;3386:18;3378:26;;3414:71;3482:1;3471:9;3467:17;3458:6;3414:71;:::i;:::-;3270:222;;;;:::o;3498:122::-;3571:24;3589:5;3571:24;:::i;:::-;3564:5;3561:35;3551:63;;3610:1;3607;3600:12;3551:63;3498:122;:::o;3626:139::-;3672:5;3710:6;3697:20;3688:29;;3726:33;3753:5;3726:33;:::i;:::-;3626:139;;;;:::o;3771:474::-;3839:6;3847;3896:2;3884:9;3875:7;3871:23;3867:32;3864:119;;;3902:79;;:::i;:::-;3864:119;4022:1;4047:53;4092:7;4083:6;4072:9;4068:22;4047:53;:::i;:::-;4037:63;;3993:117;4149:2;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4120:118;3771:474;;;;;:::o;4251:::-;4319:6;4327;4376:2;4364:9;4355:7;4351:23;4347:32;4344:119;;;4382:79;;:::i;:::-;4344:119;4502:1;4527:53;4572:7;4563:6;4552:9;4548:22;4527:53;:::i;:::-;4517:63;;4473:117;4629:2;4655:53;4700:7;4691:6;4680:9;4676:22;4655:53;:::i;:::-;4645:63;;4600:118;4251:474;;;;;:::o;4731:60::-;4759:3;4780:5;4773:12;;4731:60;;;:::o;4797:142::-;4847:9;4880:53;4898:34;4907:24;4925:5;4907:24;:::i;:::-;4898:34;:::i;:::-;4880:53;:::i;:::-;4867:66;;4797:142;;;:::o;4945:126::-;4995:9;5028:37;5059:5;5028:37;:::i;:::-;5015:50;;4945:126;;;:::o;5077:142::-;5143:9;5176:37;5207:5;5176:37;:::i;:::-;5163:50;;5077:142;;;:::o;5225:163::-;5328:53;5375:5;5328:53;:::i;:::-;5323:3;5316:66;5225:163;;:::o;5394:254::-;5503:4;5541:2;5530:9;5526:18;5518:26;;5554:87;5638:1;5627:9;5623:17;5614:6;5554:87;:::i;:::-;5394:254;;;;:::o;5654:101::-;5690:7;5730:18;5723:5;5719:30;5708:41;;5654:101;;;:::o;5761:115::-;5846:23;5863:5;5846:23;:::i;:::-;5841:3;5834:36;5761:115;;:::o;5882:99::-;5934:6;5968:5;5962:12;5952:22;;5882:99;;;:::o;5987:248::-;6069:1;6079:113;6093:6;6090:1;6087:13;6079:113;;;6178:1;6173:3;6169:11;6163:18;6159:1;6154:3;6150:11;6143:39;6115:2;6112:1;6108:10;6103:15;;6079:113;;;6226:1;6217:6;6212:3;6208:16;6201:27;6049:186;5987:248;;;:::o;6241:102::-;6282:6;6333:2;6329:7;6324:2;6317:5;6313:14;6309:28;6299:38;;6241:102;;;:::o;6349:377::-;6437:3;6465:39;6498:5;6465:39;:::i;:::-;6520:71;6584:6;6579:3;6520:71;:::i;:::-;6513:78;;6600:65;6658:6;6653:3;6646:4;6639:5;6635:16;6600:65;:::i;:::-;6690:29;6712:6;6690:29;:::i;:::-;6685:3;6681:39;6674:46;;6441:285;6349:377;;;;:::o;6732:525::-;6897:4;6935:2;6924:9;6920:18;6912:26;;6948:69;7014:1;7003:9;6999:17;6990:6;6948:69;:::i;:::-;7027:70;7093:2;7082:9;7078:18;7069:6;7027:70;:::i;:::-;7144:9;7138:4;7134:20;7129:2;7118:9;7114:18;7107:48;7172:78;7245:4;7236:6;7172:78;:::i;:::-;7164:86;;6732:525;;;;;;:::o;7263:120::-;7335:23;7352:5;7335:23;:::i;:::-;7328:5;7325:34;7315:62;;7373:1;7370;7363:12;7315:62;7263:120;:::o;7389:137::-;7434:5;7472:6;7459:20;7450:29;;7488:32;7514:5;7488:32;:::i;:::-;7389:137;;;;:::o;7532:117::-;7641:1;7638;7631:12;7655:117;7764:1;7761;7754:12;7778:180;7826:77;7823:1;7816:88;7923:4;7920:1;7913:15;7947:4;7944:1;7937:15;7964:281;8047:27;8069:4;8047:27;:::i;:::-;8039:6;8035:40;8177:6;8165:10;8162:22;8141:18;8129:10;8126:34;8123:62;8120:88;;;8188:18;;:::i;:::-;8120:88;8228:10;8224:2;8217:22;8007:238;7964:281;;:::o;8251:129::-;8285:6;8312:20;;:::i;:::-;8302:30;;8341:33;8369:4;8361:6;8341:33;:::i;:::-;8251:129;;;:::o;8386:308::-;8448:4;8538:18;8530:6;8527:30;8524:56;;;8560:18;;:::i;:::-;8524:56;8598:29;8620:6;8598:29;:::i;:::-;8590:37;;8682:4;8676;8672:15;8664:23;;8386:308;;;:::o;8700:148::-;8798:6;8793:3;8788;8775:30;8839:1;8830:6;8825:3;8821:16;8814:27;8700:148;;;:::o;8854:425::-;8932:5;8957:66;8973:49;9015:6;8973:49;:::i;:::-;8957:66;:::i;:::-;8948:75;;9046:6;9039:5;9032:21;9084:4;9077:5;9073:16;9122:3;9113:6;9108:3;9104:16;9101:25;9098:112;;;9129:79;;:::i;:::-;9098:112;9219:54;9266:6;9261:3;9256;9219:54;:::i;:::-;8938:341;8854:425;;;;;:::o;9299:340::-;9355:5;9404:3;9397:4;9389:6;9385:17;9381:27;9371:122;;9412:79;;:::i;:::-;9371:122;9529:6;9516:20;9554:79;9629:3;9621:6;9614:4;9606:6;9602:17;9554:79;:::i;:::-;9545:88;;9361:278;9299:340;;;;:::o;9645:795::-;9730:6;9738;9746;9795:2;9783:9;9774:7;9770:23;9766:32;9763:119;;;9801:79;;:::i;:::-;9763:119;9921:1;9946:52;9990:7;9981:6;9970:9;9966:22;9946:52;:::i;:::-;9936:62;;9892:116;10047:2;10073:52;10117:7;10108:6;10097:9;10093:22;10073:52;:::i;:::-;10063:62;;10018:117;10202:2;10191:9;10187:18;10174:32;10233:18;10225:6;10222:30;10219:117;;;10255:79;;:::i;:::-;10219:117;10360:63;10415:7;10406:6;10395:9;10391:22;10360:63;:::i;:::-;10350:73;;10145:288;9645:795;;;;;:::o;10446:619::-;10523:6;10531;10539;10588:2;10576:9;10567:7;10563:23;10559:32;10556:119;;;10594:79;;:::i;:::-;10556:119;10714:1;10739:53;10784:7;10775:6;10764:9;10760:22;10739:53;:::i;:::-;10729:63;;10685:117;10841:2;10867:53;10912:7;10903:6;10892:9;10888:22;10867:53;:::i;:::-;10857:63;;10812:118;10969:2;10995:53;11040:7;11031:6;11020:9;11016:22;10995:53;:::i;:::-;10985:63;;10940:118;10446:619;;;;;:::o;11071:117::-;11180:1;11177;11170:12;11194:117;11303:1;11300;11293:12;11334:568;11407:8;11417:6;11467:3;11460:4;11452:6;11448:17;11444:27;11434:122;;11475:79;;:::i;:::-;11434:122;11588:6;11575:20;11565:30;;11618:18;11610:6;11607:30;11604:117;;;11640:79;;:::i;:::-;11604:117;11754:4;11746:6;11742:17;11730:29;;11808:3;11800:4;11792:6;11788:17;11778:8;11774:32;11771:41;11768:128;;;11815:79;;:::i;:::-;11768:128;11334:568;;;;;:::o;11925:::-;11998:8;12008:6;12058:3;12051:4;12043:6;12039:17;12035:27;12025:122;;12066:79;;:::i;:::-;12025:122;12179:6;12166:20;12156:30;;12209:18;12201:6;12198:30;12195:117;;;12231:79;;:::i;:::-;12195:117;12345:4;12337:6;12333:17;12321:29;;12399:3;12391:4;12383:6;12379:17;12369:8;12365:32;12362:41;12359:128;;;12406:79;;:::i;:::-;12359:128;11925:568;;;;;:::o;12499:1309::-;12657:6;12665;12673;12681;12689;12697;12746:2;12734:9;12725:7;12721:23;12717:32;12714:119;;;12752:79;;:::i;:::-;12714:119;12900:1;12889:9;12885:17;12872:31;12930:18;12922:6;12919:30;12916:117;;;12952:79;;:::i;:::-;12916:117;13065:80;13137:7;13128:6;13117:9;13113:22;13065:80;:::i;:::-;13047:98;;;;12843:312;13222:2;13211:9;13207:18;13194:32;13253:18;13245:6;13242:30;13239:117;;;13275:79;;:::i;:::-;13239:117;13388:80;13460:7;13451:6;13440:9;13436:22;13388:80;:::i;:::-;13370:98;;;;13165:313;13545:2;13534:9;13530:18;13517:32;13576:18;13568:6;13565:30;13562:117;;;13598:79;;:::i;:::-;13562:117;13711:80;13783:7;13774:6;13763:9;13759:22;13711:80;:::i;:::-;13693:98;;;;13488:313;12499:1309;;;;;;;;:::o;13814:140::-;13863:9;13896:52;13914:33;13923:23;13940:5;13923:23;:::i;:::-;13914:33;:::i;:::-;13896:52;:::i;:::-;13883:65;;13814:140;;;:::o;13960:129::-;14046:36;14076:5;14046:36;:::i;:::-;14041:3;14034:49;13960:129;;:::o;14095:438::-;14242:4;14280:2;14269:9;14265:18;14257:26;;14293:71;14361:1;14350:9;14346:17;14337:6;14293:71;:::i;:::-;14374;14441:2;14430:9;14426:18;14417:6;14374:71;:::i;:::-;14455;14522:2;14511:9;14507:18;14498:6;14455:71;:::i;:::-;14095:438;;;;;;:::o;14539:169::-;14679:21;14675:1;14667:6;14663:14;14656:45;14539:169;:::o;14714:366::-;14856:3;14877:67;14941:2;14936:3;14877:67;:::i;:::-;14870:74;;14953:93;15042:3;14953:93;:::i;:::-;15071:2;15066:3;15062:12;15055:19;;14714:366;;;:::o;15086:419::-;15252:4;15290:2;15279:9;15275:18;15267:26;;15339:9;15333:4;15329:20;15325:1;15314:9;15310:17;15303:47;15367:131;15493:4;15367:131;:::i;:::-;15359:139;;15086:419;;;:::o;15511:175::-;15651:27;15647:1;15639:6;15635:14;15628:51;15511:175;:::o;15692:366::-;15834:3;15855:67;15919:2;15914:3;15855:67;:::i;:::-;15848:74;;15931:93;16020:3;15931:93;:::i;:::-;16049:2;16044:3;16040:12;16033:19;;15692:366;;;:::o;16064:419::-;16230:4;16268:2;16257:9;16253:18;16245:26;;16317:9;16311:4;16307:20;16303:1;16292:9;16288:17;16281:47;16345:131;16471:4;16345:131;:::i;:::-;16337:139;;16064:419;;;:::o;16489:194::-;16529:4;16549:20;16567:1;16549:20;:::i;:::-;16544:25;;16583:20;16601:1;16583:20;:::i;:::-;16578:25;;16627:1;16624;16620:9;16612:17;;16651:1;16645:4;16642:11;16639:37;;;16656:18;;:::i;:::-;16639:37;16489:194;;;;:::o;16689:147::-;16790:11;16827:3;16812:18;;16689:147;;;;:::o;16842:114::-;;:::o;16962:398::-;17121:3;17142:83;17223:1;17218:3;17142:83;:::i;:::-;17135:90;;17234:93;17323:3;17234:93;:::i;:::-;17352:1;17347:3;17343:11;17336:18;;16962:398;;;:::o;17366:379::-;17550:3;17572:147;17715:3;17572:147;:::i;:::-;17565:154;;17736:3;17729:10;;17366:379;;;:::o;17751:171::-;17891:23;17887:1;17879:6;17875:14;17868:47;17751:171;:::o;17928:366::-;18070:3;18091:67;18155:2;18150:3;18091:67;:::i;:::-;18084:74;;18167:93;18256:3;18167:93;:::i;:::-;18285:2;18280:3;18276:12;18269:19;;17928:366;;;:::o;18300:419::-;18466:4;18504:2;18493:9;18489:18;18481:26;;18553:9;18547:4;18543:20;18539:1;18528:9;18524:17;18517:47;18581:131;18707:4;18581:131;:::i;:::-;18573:139;;18300:419;;;:::o;18725:172::-;18865:24;18861:1;18853:6;18849:14;18842:48;18725:172;:::o;18903:366::-;19045:3;19066:67;19130:2;19125:3;19066:67;:::i;:::-;19059:74;;19142:93;19231:3;19142:93;:::i;:::-;19260:2;19255:3;19251:12;19244:19;;18903:366;;;:::o;19275:419::-;19441:4;19479:2;19468:9;19464:18;19456:26;;19528:9;19522:4;19518:20;19514:1;19503:9;19499:17;19492:47;19556:131;19682:4;19556:131;:::i;:::-;19548:139;;19275:419;;;:::o;19700:227::-;19840:34;19836:1;19828:6;19824:14;19817:58;19909:10;19904:2;19896:6;19892:15;19885:35;19700:227;:::o;19933:366::-;20075:3;20096:67;20160:2;20155:3;20096:67;:::i;:::-;20089:74;;20172:93;20261:3;20172:93;:::i;:::-;20290:2;20285:3;20281:12;20274:19;;19933:366;;;:::o;20305:419::-;20471:4;20509:2;20498:9;20494:18;20486:26;;20558:9;20552:4;20548:20;20544:1;20533:9;20529:17;20522:47;20586:131;20712:4;20586:131;:::i;:::-;20578:139;;20305:419;;;:::o;20730:85::-;20775:7;20804:5;20793:16;;20730:85;;;:::o;20821:156::-;20878:9;20911:60;20928:42;20937:32;20963:5;20937:32;:::i;:::-;20928:42;:::i;:::-;20911:60;:::i;:::-;20898:73;;20821:156;;;:::o;20983:145::-;21077:44;21115:5;21077:44;:::i;:::-;21072:3;21065:57;20983:145;;:::o;21134:236::-;21234:4;21272:2;21261:9;21257:18;21249:26;;21285:78;21360:1;21349:9;21345:17;21336:6;21285:78;:::i;:::-;21134:236;;;;:::o;21376:180::-;21424:77;21421:1;21414:88;21521:4;21518:1;21511:15;21545:4;21542:1;21535:15;21562:320;21606:6;21643:1;21637:4;21633:12;21623:22;;21690:1;21684:4;21680:12;21711:18;21701:81;;21767:4;21759:6;21755:17;21745:27;;21701:81;21829:2;21821:6;21818:14;21798:18;21795:38;21792:84;;21848:18;;:::i;:::-;21792:84;21613:269;21562:320;;;:::o;21888:90::-;21922:7;21965:5;21958:13;21951:21;21940:32;;21888:90;;;:::o;21984:116::-;22054:21;22069:5;22054:21;:::i;:::-;22047:5;22044:32;22034:60;;22090:1;22087;22080:12;22034:60;21984:116;:::o;22106:137::-;22160:5;22191:6;22185:13;22176:22;;22207:30;22231:5;22207:30;:::i;:::-;22106:137;;;;:::o;22249:345::-;22316:6;22365:2;22353:9;22344:7;22340:23;22336:32;22333:119;;;22371:79;;:::i;:::-;22333:119;22491:1;22516:61;22569:7;22560:6;22549:9;22545:22;22516:61;:::i;:::-;22506:71;;22462:125;22249:345;;;;:::o;22600:172::-;22740:24;22736:1;22728:6;22724:14;22717:48;22600:172;:::o;22778:366::-;22920:3;22941:67;23005:2;23000:3;22941:67;:::i;:::-;22934:74;;23017:93;23106:3;23017:93;:::i;:::-;23135:2;23130:3;23126:12;23119:19;;22778:366;;;:::o;23150:419::-;23316:4;23354:2;23343:9;23339:18;23331:26;;23403:9;23397:4;23393:20;23389:1;23378:9;23374:17;23367:47;23431:131;23557:4;23431:131;:::i;:::-;23423:139;;23150:419;;;:::o;23575:221::-;23715:34;23711:1;23703:6;23699:14;23692:58;23784:4;23779:2;23771:6;23767:15;23760:29;23575:221;:::o;23802:366::-;23944:3;23965:67;24029:2;24024:3;23965:67;:::i;:::-;23958:74;;24041:93;24130:3;24041:93;:::i;:::-;24159:2;24154:3;24150:12;24143:19;;23802:366;;;:::o;24174:419::-;24340:4;24378:2;24367:9;24363:18;24355:26;;24427:9;24421:4;24417:20;24413:1;24402:9;24398:17;24391:47;24455:131;24581:4;24455:131;:::i;:::-;24447:139;;24174:419;;;:::o;24599:141::-;24648:4;24671:3;24663:11;;24694:3;24691:1;24684:14;24728:4;24725:1;24715:18;24707:26;;24599:141;;;:::o;24746:93::-;24783:6;24830:2;24825;24818:5;24814:14;24810:23;24800:33;;24746:93;;;:::o;24845:107::-;24889:8;24939:5;24933:4;24929:16;24908:37;;24845:107;;;;:::o;24958:393::-;25027:6;25077:1;25065:10;25061:18;25100:97;25130:66;25119:9;25100:97;:::i;:::-;25218:39;25248:8;25237:9;25218:39;:::i;:::-;25206:51;;25290:4;25286:9;25279:5;25275:21;25266:30;;25339:4;25329:8;25325:19;25318:5;25315:30;25305:40;;25034:317;;24958:393;;;;;:::o;25357:142::-;25407:9;25440:53;25458:34;25467:24;25485:5;25467:24;:::i;:::-;25458:34;:::i;:::-;25440:53;:::i;:::-;25427:66;;25357:142;;;:::o;25505:75::-;25548:3;25569:5;25562:12;;25505:75;;;:::o;25586:269::-;25696:39;25727:7;25696:39;:::i;:::-;25757:91;25806:41;25830:16;25806:41;:::i;:::-;25798:6;25791:4;25785:11;25757:91;:::i;:::-;25751:4;25744:105;25662:193;25586:269;;;:::o;25861:73::-;25906:3;25861:73;:::o;25940:189::-;26017:32;;:::i;:::-;26058:65;26116:6;26108;26102:4;26058:65;:::i;:::-;25993:136;25940:189;;:::o;26135:186::-;26195:120;26212:3;26205:5;26202:14;26195:120;;;26266:39;26303:1;26296:5;26266:39;:::i;:::-;26239:1;26232:5;26228:13;26219:22;;26195:120;;;26135:186;;:::o;26327:543::-;26428:2;26423:3;26420:11;26417:446;;;26462:38;26494:5;26462:38;:::i;:::-;26546:29;26564:10;26546:29;:::i;:::-;26536:8;26532:44;26729:2;26717:10;26714:18;26711:49;;;26750:8;26735:23;;26711:49;26773:80;26829:22;26847:3;26829:22;:::i;:::-;26819:8;26815:37;26802:11;26773:80;:::i;:::-;26432:431;;26417:446;26327:543;;;:::o;26876:117::-;26930:8;26980:5;26974:4;26970:16;26949:37;;26876:117;;;;:::o;26999:169::-;27043:6;27076:51;27124:1;27120:6;27112:5;27109:1;27105:13;27076:51;:::i;:::-;27072:56;27157:4;27151;27147:15;27137:25;;27050:118;26999:169;;;;:::o;27173:295::-;27249:4;27395:29;27420:3;27414:4;27395:29;:::i;:::-;27387:37;;27457:3;27454:1;27450:11;27444:4;27441:21;27433:29;;27173:295;;;;:::o;27473:1395::-;27590:37;27623:3;27590:37;:::i;:::-;27692:18;27684:6;27681:30;27678:56;;;27714:18;;:::i;:::-;27678:56;27758:38;27790:4;27784:11;27758:38;:::i;:::-;27843:67;27903:6;27895;27889:4;27843:67;:::i;:::-;27937:1;27961:4;27948:17;;27993:2;27985:6;27982:14;28010:1;28005:618;;;;28667:1;28684:6;28681:77;;;28733:9;28728:3;28724:19;28718:26;28709:35;;28681:77;28784:67;28844:6;28837:5;28784:67;:::i;:::-;28778:4;28771:81;28640:222;27975:887;;28005:618;28057:4;28053:9;28045:6;28041:22;28091:37;28123:4;28091:37;:::i;:::-;28150:1;28164:208;28178:7;28175:1;28172:14;28164:208;;;28257:9;28252:3;28248:19;28242:26;28234:6;28227:42;28308:1;28300:6;28296:14;28286:24;;28355:2;28344:9;28340:18;28327:31;;28201:4;28198:1;28194:12;28189:17;;28164:208;;;28400:6;28391:7;28388:19;28385:179;;;28458:9;28453:3;28449:19;28443:26;28501:48;28543:4;28535:6;28531:17;28520:9;28501:48;:::i;:::-;28493:6;28486:64;28408:156;28385:179;28610:1;28606;28598:6;28594:14;28590:22;28584:4;28577:36;28012:611;;;27975:887;;27565:1303;;;27473:1395;;:::o;28874:529::-;29041:4;29079:2;29068:9;29064:18;29056:26;;29092:70;29159:1;29148:9;29144:17;29135:6;29092:70;:::i;:::-;29172:71;29239:2;29228:9;29224:18;29215:6;29172:71;:::i;:::-;29290:9;29284:4;29280:20;29275:2;29264:9;29260:18;29253:48;29318:78;29391:4;29382:6;29318:78;:::i;:::-;29310:86;;28874:529;;;;;;:::o;29409:167::-;29549:19;29545:1;29537:6;29533:14;29526:43;29409:167;:::o;29582:366::-;29724:3;29745:67;29809:2;29804:3;29745:67;:::i;:::-;29738:74;;29821:93;29910:3;29821:93;:::i;:::-;29939:2;29934:3;29930:12;29923:19;;29582:366;;;:::o;29954:419::-;30120:4;30158:2;30147:9;30143:18;30135:26;;30207:9;30201:4;30197:20;30193:1;30182:9;30178:17;30171:47;30235:131;30361:4;30235:131;:::i;:::-;30227:139;;29954:419;;;:::o;30379:174::-;30519:26;30515:1;30507:6;30503:14;30496:50;30379:174;:::o;30559:366::-;30701:3;30722:67;30786:2;30781:3;30722:67;:::i;:::-;30715:74;;30798:93;30887:3;30798:93;:::i;:::-;30916:2;30911:3;30907:12;30900:19;;30559:366;;;:::o;30931:419::-;31097:4;31135:2;31124:9;31120:18;31112:26;;31184:9;31178:4;31174:20;31170:1;31159:9;31155:17;31148:47;31212:131;31338:4;31212:131;:::i;:::-;31204:139;;30931:419;;;:::o;31356:180::-;31404:77;31401:1;31394:88;31501:4;31498:1;31491:15;31525:4;31522:1;31515:15;31542:230;31682:34;31678:1;31670:6;31666:14;31659:58;31751:13;31746:2;31738:6;31734:15;31727:38;31542:230;:::o;31778:366::-;31920:3;31941:67;32005:2;32000:3;31941:67;:::i;:::-;31934:74;;32017:93;32106:3;32017:93;:::i;:::-;32135:2;32130:3;32126:12;32119:19;;31778:366;;;:::o;32150:419::-;32316:4;32354:2;32343:9;32339:18;32331:26;;32403:9;32397:4;32393:20;32389:1;32378:9;32374:17;32367:47;32431:131;32557:4;32431:131;:::i;:::-;32423:139;;32150:419;;;:::o;32575:168::-;32715:20;32711:1;32703:6;32699:14;32692:44;32575:168;:::o;32749:366::-;32891:3;32912:67;32976:2;32971:3;32912:67;:::i;:::-;32905:74;;32988:93;33077:3;32988:93;:::i;:::-;33106:2;33101:3;33097:12;33090:19;;32749:366;;;:::o;33121:419::-;33287:4;33325:2;33314:9;33310:18;33302:26;;33374:9;33368:4;33364:20;33360:1;33349:9;33345:17;33338:47;33402:131;33528:4;33402:131;:::i;:::-;33394:139;;33121:419;;;:::o;33546:181::-;33686:33;33682:1;33674:6;33670:14;33663:57;33546:181;:::o;33733:366::-;33875:3;33896:67;33960:2;33955:3;33896:67;:::i;:::-;33889:74;;33972:93;34061:3;33972:93;:::i;:::-;34090:2;34085:3;34081:12;34074:19;;33733:366;;;:::o;34105:419::-;34271:4;34309:2;34298:9;34294:18;34286:26;;34358:9;34352:4;34348:20;34344:1;34333:9;34329:17;34322:47;34386:131;34512:4;34386:131;:::i;:::-;34378:139;;34105:419;;;:::o;34530:332::-;34651:4;34689:2;34678:9;34674:18;34666:26;;34702:71;34770:1;34759:9;34755:17;34746:6;34702:71;:::i;:::-;34783:72;34851:2;34840:9;34836:18;34827:6;34783:72;:::i;:::-;34530:332;;;;;:::o;34868:442::-;35017:4;35055:2;35044:9;35040:18;35032:26;;35068:71;35136:1;35125:9;35121:17;35112:6;35068:71;:::i;:::-;35149:72;35217:2;35206:9;35202:18;35193:6;35149:72;:::i;:::-;35231;35299:2;35288:9;35284:18;35275:6;35231:72;:::i;:::-;34868:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2456000",
								"executionCost": "2643",
								"totalCost": "2458643"
							},
							"external": {
								"": "474",
								"NATIVE_TOKEN()": "424",
								"allowedAmounts(address,address)": "infinite",
								"bulkSetAllowedAmount(address[],address[],uint256[])": "infinite",
								"claim(address)": "infinite",
								"currentRound()": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"owner()": "2599",
								"renounceOwnership()": "infinite",
								"scorer()": "infinite",
								"setAllowedAmount(address,address,uint256)": "infinite",
								"setRound(uint64,uint64,string)": "infinite",
								"totalBalances(address)": "2903",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 6803,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076bcc156c65dfa0af393912351e7f6495699685159b2066782948d09fc9782ba64736f6c634300081d0033",
									".code": [
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "B807A3C4"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "C5D60B51"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "F3FEF3A3"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "A9012C89"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "A9590E8A"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "AEE9C872"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "485CC955"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "85C758F7"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "8A19C8BC"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "1E83409A"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "31F7D964"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "47E7EF24"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6578,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6551,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 613,
											"end": 614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6538,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 6628,
											"end": 6637,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6594,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6638,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 6758,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6792,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 5360,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5360,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 4495,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4495,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 5843,
											"end": 6421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5843,
											"end": 6421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3078,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3063,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3084,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3103,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3122,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3048,
											"end": 3122,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3176,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3178,
											"end": 3196,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3198,
											"end": 3214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FA7410D400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3146,
											"end": 3215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3215,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3044,
											"end": 3227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3292,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3293,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3267,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3339,
											"end": 3340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3336,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3319,
											"end": 3340,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3311,
											"end": 3364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3311,
											"end": 3364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3407,
											"end": 3424,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3424,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3383,
											"end": 3424,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 3375,
											"end": 3454,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 3375,
											"end": 3454,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3504,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3492,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3493,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3499,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3500,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3504,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3534,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 3515,
											"end": 3556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3556,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3578,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3573,
											"end": 3594,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3573,
											"end": 3594,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3640,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3630,
											"end": 3645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3670,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 3630,
											"end": 3675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3698,
											"end": 3705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3690,
											"end": 3731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 3690,
											"end": 3731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3791,
											"end": 3801,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3820,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3776,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3764,
											"end": 3790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3764,
											"end": 3821,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3569,
											"end": 3833,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3858,
											"end": 3868,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3877,
											"end": 3894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3850,
											"end": 3895,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3895,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2971,
											"end": 3903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 566,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2526,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2526,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2506,
											"end": 2527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2527,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2561,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2571,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2544,
											"end": 2598,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2544,
											"end": 2598,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2639,
											"end": 2649,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 2631,
											"end": 2694,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2631,
											"end": 2694,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2740,
											"end": 2750,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2760,
											"end": 2764,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 2773,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 2721,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 2709,
											"end": 2739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 2709,
											"end": 2774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2502,
											"end": 2786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2822,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2817,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2798,
											"end": 2828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2798,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2862,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 2871,
											"end": 2877,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 2844,
											"end": 2878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2844,
											"end": 2878,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2568,
											"end": 2588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2076,
											"end": 2081,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2075,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 2061,
											"end": 2082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 2061,
											"end": 2082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2126,
											"end": 2148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 2126,
											"end": 2150,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2126,
											"end": 2150,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2185,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 622,
											"end": 643,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 622,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 883,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 883,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5479,
											"end": 5482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5471,
											"end": 5482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5471,
											"end": 5482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5471,
											"end": 5476,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5471,
											"end": 5482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5471,
											"end": 5482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5471,
											"end": 5482,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5463,
											"end": 5521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 5463,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5553,
											"end": 5558,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5563,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5547,
											"end": 5577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 5532,
											"end": 5577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5577,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13"
										},
										{
											"begin": 5606,
											"end": 5611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5616,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5629,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 5593,
											"end": 5630,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5630,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1097,
											"end": 1166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4260,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4236,
											"end": 4284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4236,
											"end": 4284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4325,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4314,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4315,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4322,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4295,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4379,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4381,
											"end": 4387,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 4347,
											"end": 4388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4347,
											"end": 4388,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4135,
											"end": 4396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "24D7806C"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1725,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 1717,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 1717,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4701,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4694,
											"end": 4708,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4678,
											"end": 4683,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4678,
											"end": 4683,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4678,
											"end": 4690,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4678,
											"end": 4690,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4678,
											"end": 4708,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4670,
											"end": 4737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 4670,
											"end": 4737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4773,
											"end": 4787,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4762,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4762,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4769,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4769,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4787,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 4748,
											"end": 4816,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4748,
											"end": 4816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4832,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4856,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4856,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4851,
											"end": 4863,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4863,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5016,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5017,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5009,
											"end": 5019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5019,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4991,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4991,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4992,
											"end": 4993,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4986,
											"end": 4994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4986,
											"end": 4994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 4986,
											"end": 4994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 4995,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5002,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5002,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 5003,
											"end": 5004,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 4996,
											"end": 5005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4996,
											"end": 5005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 4996,
											"end": 5005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4971,
											"end": 5006,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5019,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 5019,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5076,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5077,
											"end": 5078,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5070,
											"end": 5079,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 5070,
											"end": 5079,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 5070,
											"end": 5079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5065,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5065,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5067,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5060,
											"end": 5068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 5060,
											"end": 5068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 5081,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5088,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5090,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 5081,
											"end": 5091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 5039,
											"end": 5092,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5092,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4865,
											"end": 4868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4827,
											"end": 5104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 5111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2526,
											"end": 2545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2526,
											"end": 2547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2526,
											"end": 2547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5953,
											"end": 5954,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5944,
											"end": 5950,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5954,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 5936,
											"end": 6002,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 5936,
											"end": 6002,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6051,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6034,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6040,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6041,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6051,
											"modifierDepth": 2,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6051,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 6013,
											"end": 6074,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 6013,
											"end": 6074,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6117,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6100,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6106,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 6087,
											"end": 6117,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6087,
											"end": 6117,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 613,
											"end": 614,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6134,
											"end": 6155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6134,
											"end": 6155,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6139,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6134,
											"end": 6155,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6155,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6173,
											"end": 6185,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6191,
											"end": 6196,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6191,
											"end": 6198,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6198,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6191,
											"end": 6198,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6203,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6191,
											"end": 6203,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6217,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 6191,
											"end": 6222,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6191,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6222,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6222,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6245,
											"end": 6252,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 6237,
											"end": 6278,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6237,
											"end": 6278,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6157,
											"end": 6290,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6338,
											"end": 6345,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6338,
											"end": 6343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6338,
											"end": 6345,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6338,
											"end": 6345,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 6338,
											"end": 6345,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6353,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6318,
											"end": 6323,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6311,
											"end": 6337,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 6311,
											"end": 6337,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 6311,
											"end": 6354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 6130,
											"end": 6366,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6399,
											"end": 6404,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6397,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6390,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 6390,
											"end": 6397,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6397,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 6390,
											"end": 6397,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 6406,
											"end": 6412,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 6381,
											"end": 6413,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6381,
											"end": 6413,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2568,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2568,
											"end": 2588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2568,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 6421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2601,
											"end": 2888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2740,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2725,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2725,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1852,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2863,
											"end": 2870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2863,
											"end": 2881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2601,
											"end": 2888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2894,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3074,
											"end": 3096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 825,
											"end": 994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 909,
											"end": 920,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 938,
											"end": 941,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 931,
											"end": 950,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 983,
											"end": 987,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 974,
											"end": 988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 959,
											"end": 988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 825,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1140,
											"end": 1166,
											"name": "PUSH",
											"source": 14,
											"value": "537765657473706F743A20757365206465706F73697428290000000000000000"
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1124,
											"end": 1138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1117,
											"end": 1167,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1000,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 1402,
											"end": 1405,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 1343,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 1343,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1336,
											"end": 1410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1419,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 1419,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1535,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1521,
											"end": 1540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1180,
											"end": 1546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1758,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1754,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1741,
											"end": 1759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1799,
											"end": 1803,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1795,
											"end": 1815,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1776,
											"end": 1793,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1769,
											"end": 1816,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 1959,
											"end": 1963,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1833,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 1833,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1964,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1825,
											"end": 1964,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1552,
											"end": 1971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2046,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2058,
											"end": 2175,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 2058,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2164,
											"end": 2165,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2169,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2290,
											"end": 2291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2288,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2292,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2341,
											"end": 2348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2423,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2370,
											"end": 2424,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2424,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2304,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2473,
											"end": 2480,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 2502,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 2502,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2491,
											"end": 2526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2611,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2604,
											"end": 2609,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2601,
											"end": 2636,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 2591,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2712,
											"end": 2717,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2756,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2728,
											"end": 2757,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2766,
											"end": 2799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 2766,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2666,
											"end": 2805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2916,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2898,
											"end": 2905,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2894,
											"end": 2917,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2890,
											"end": 2922,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 2925,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 2925,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 2887,
											"end": 3006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3045,
											"end": 3046,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3091,
											"end": 3113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 3070,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 3070,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3060,
											"end": 3123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 3140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 3233,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 3233,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3228,
											"end": 3231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3221,
											"end": 3258,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3146,
											"end": 3264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3367,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3403,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3386,
											"end": 3404,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3404,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3378,
											"end": 3404,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3482,
											"end": 3483,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3467,
											"end": 3484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 3414,
											"end": 3485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 3414,
											"end": 3485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3270,
											"end": 3492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 3589,
											"end": 3594,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 3571,
											"end": 3595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 3571,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3569,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3561,
											"end": 3596,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "tag",
											"source": 14,
											"value": "463"
										},
										{
											"begin": 3551,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3498,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3672,
											"end": 3677,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3697,
											"end": 3717,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3688,
											"end": 3717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 3753,
											"end": 3758,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3726,
											"end": 3759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 3726,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3839,
											"end": 3845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3853,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3884,
											"end": 3893,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3871,
											"end": 3894,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3867,
											"end": 3899,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3902,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "tag",
											"source": 14,
											"value": "468"
										},
										{
											"begin": 3902,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 3864,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 4092,
											"end": 4099,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4083,
											"end": 4089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4072,
											"end": 4081,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4068,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4047,
											"end": 4100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 4047,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4037,
											"end": 4100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3993,
											"end": 4110,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4120,
											"end": 4238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4333,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4355,
											"end": 4362,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4351,
											"end": 4374,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4347,
											"end": 4379,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 4382,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 4572,
											"end": 4579,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4563,
											"end": 4569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4552,
											"end": 4561,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4548,
											"end": 4570,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4527,
											"end": 4580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 4527,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4580,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 4700,
											"end": 4707,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4691,
											"end": 4697,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4680,
											"end": 4689,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4676,
											"end": 4698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4655,
											"end": 4708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 4655,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4645,
											"end": 4708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4251,
											"end": 4725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4785,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4785,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4731,
											"end": 4791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4847,
											"end": 4856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4907,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 4907,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4898,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "tag",
											"source": 14,
											"value": "479"
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4880,
											"end": 4933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 4880,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4933,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4933,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4797,
											"end": 4939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5004,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 5059,
											"end": 5064,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 5028,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 5028,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5015,
											"end": 5065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 5071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 5207,
											"end": 5212,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5176,
											"end": 5213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 5176,
											"end": 5213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5213,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5213,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5077,
											"end": 5219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 5328,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 5328,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5323,
											"end": 5326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5382,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5225,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5507,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5543,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 5638,
											"end": 5639,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5614,
											"end": 5620,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5554,
											"end": 5641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 5554,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5394,
											"end": 5648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5748,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 5749,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5749,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5708,
											"end": 5749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5654,
											"end": 5755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 5863,
											"end": 5868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5846,
											"end": 5869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 5846,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5841,
											"end": 5844,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5834,
											"end": 5870,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5761,
											"end": 5876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5934,
											"end": 5940,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5973,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5962,
											"end": 5974,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6069,
											"end": 6070,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6093,
											"end": 6099,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6087,
											"end": 6100,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6178,
											"end": 6179,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6173,
											"end": 6176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6169,
											"end": 6180,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6154,
											"end": 6157,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6143,
											"end": 6182,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6115,
											"end": 6117,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6108,
											"end": 6118,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6118,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6103,
											"end": 6118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 6079,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6212,
											"end": 6215,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6208,
											"end": 6224,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6201,
											"end": 6228,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6049,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5987,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6335,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6329,
											"end": 6336,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6324,
											"end": 6326,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6317,
											"end": 6322,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6313,
											"end": 6327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6309,
											"end": 6337,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6299,
											"end": 6337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6437,
											"end": 6440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 6498,
											"end": 6503,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 6465,
											"end": 6504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 6465,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6579,
											"end": 6582,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 6520,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6591,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6591,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 6658,
											"end": 6664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6653,
											"end": 6656,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6639,
											"end": 6644,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6635,
											"end": 6651,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 6600,
											"end": 6665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 6600,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6690,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 6690,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6685,
											"end": 6688,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6681,
											"end": 6720,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6720,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6720,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6441,
											"end": 6726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6349,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6897,
											"end": 6901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6937,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6924,
											"end": 6933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6920,
											"end": 6938,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6938,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6938,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7012,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6999,
											"end": 7016,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 6948,
											"end": 7017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 6948,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 7093,
											"end": 7095,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7027,
											"end": 7097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 7027,
											"end": 7097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7144,
											"end": 7153,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7138,
											"end": 7142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7134,
											"end": 7154,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7129,
											"end": 7131,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7118,
											"end": 7127,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7114,
											"end": 7132,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7107,
											"end": 7155,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7236,
											"end": 7242,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 7172,
											"end": 7250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 7172,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7164,
											"end": 7250,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7164,
											"end": 7250,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6732,
											"end": 7257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7383,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 7263,
											"end": 7383,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 7352,
											"end": 7357,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 7335,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 7335,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7325,
											"end": 7359,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7370,
											"end": 7371,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7363,
											"end": 7375,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 7315,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7263,
											"end": 7383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7434,
											"end": 7439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7478,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7459,
											"end": 7479,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7479,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 7514,
											"end": 7519,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 7488,
											"end": 7520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 7488,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7389,
											"end": 7526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7532,
											"end": 7649,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 7532,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7631,
											"end": 7643,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 7772,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 7655,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7764,
											"end": 7765,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7754,
											"end": 7766,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7778,
											"end": 7958,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 7778,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7826,
											"end": 7903,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7816,
											"end": 7904,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7923,
											"end": 7927,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 7920,
											"end": 7921,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 7913,
											"end": 7928,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7947,
											"end": 7951,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7944,
											"end": 7945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7952,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8047,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 8047,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8039,
											"end": 8045,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8035,
											"end": 8075,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8165,
											"end": 8175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8162,
											"end": 8184,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8141,
											"end": 8159,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8129,
											"end": 8139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8185,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 8188,
											"end": 8206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 8120,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8228,
											"end": 8238,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8217,
											"end": 8239,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8007,
											"end": 8245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7964,
											"end": 8245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8285,
											"end": 8291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 8312,
											"end": 8332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 8312,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8332,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 8369,
											"end": 8373,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8361,
											"end": 8367,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 8341,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 8341,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8251,
											"end": 8380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8448,
											"end": 8452,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8536,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8527,
											"end": 8557,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 8560,
											"end": 8578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 8560,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 8524,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 8620,
											"end": 8626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 8598,
											"end": 8627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 8598,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8590,
											"end": 8627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8590,
											"end": 8627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8682,
											"end": 8686,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8676,
											"end": 8680,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8672,
											"end": 8687,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8664,
											"end": 8687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8664,
											"end": 8687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8386,
											"end": 8694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8798,
											"end": 8804,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8793,
											"end": 8796,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8788,
											"end": 8791,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8805,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8821,
											"end": 8837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8814,
											"end": 8841,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8700,
											"end": 8848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8932,
											"end": 8937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 9015,
											"end": 9021,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 8973,
											"end": 9022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 8973,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 8957,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 8957,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8948,
											"end": 9023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8948,
											"end": 9023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9039,
											"end": 9044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9032,
											"end": 9053,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9084,
											"end": 9088,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9073,
											"end": 9089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9122,
											"end": 9125,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9108,
											"end": 9111,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9104,
											"end": 9120,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9101,
											"end": 9126,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 9129,
											"end": 9208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 9129,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 9098,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 9266,
											"end": 9272,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9261,
											"end": 9264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9256,
											"end": 9259,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 9219,
											"end": 9273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 9219,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8938,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8854,
											"end": 9279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9355,
											"end": 9360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9404,
											"end": 9407,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9389,
											"end": 9395,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9385,
											"end": 9402,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9381,
											"end": 9408,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 9412,
											"end": 9491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "tag",
											"source": 14,
											"value": "535"
										},
										{
											"begin": 9412,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9529,
											"end": 9535,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9516,
											"end": 9536,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 9629,
											"end": 9632,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9621,
											"end": 9627,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9614,
											"end": 9618,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9612,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9602,
											"end": 9619,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 9554,
											"end": 9633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "tag",
											"source": 14,
											"value": "536"
										},
										{
											"begin": 9554,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9545,
											"end": 9633,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9545,
											"end": 9633,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9361,
											"end": 9639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9299,
											"end": 9639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9744,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9746,
											"end": 9752,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9797,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9783,
											"end": 9792,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9774,
											"end": 9781,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9770,
											"end": 9793,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9766,
											"end": 9798,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "tag",
											"source": 14,
											"value": "538"
										},
										{
											"begin": 9763,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9921,
											"end": 9922,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 9987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9970,
											"end": 9979,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9966,
											"end": 9988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 9946,
											"end": 9998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "tag",
											"source": 14,
											"value": "540"
										},
										{
											"begin": 9946,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9936,
											"end": 9998,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9936,
											"end": 9998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9892,
											"end": 10008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 10117,
											"end": 10124,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10097,
											"end": 10106,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10093,
											"end": 10115,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 10073,
											"end": 10125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 10073,
											"end": 10125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10063,
											"end": 10125,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10063,
											"end": 10125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10018,
											"end": 10135,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10202,
											"end": 10204,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10191,
											"end": 10200,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10174,
											"end": 10206,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10233,
											"end": 10251,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10222,
											"end": 10252,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 10255,
											"end": 10334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "tag",
											"source": 14,
											"value": "543"
										},
										{
											"begin": 10255,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "tag",
											"source": 14,
											"value": "542"
										},
										{
											"begin": 10219,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 10415,
											"end": 10422,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10406,
											"end": 10412,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10395,
											"end": 10404,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10391,
											"end": 10413,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10360,
											"end": 10423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10350,
											"end": 10423,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10350,
											"end": 10423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10145,
											"end": 10433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9645,
											"end": 10440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10523,
											"end": 10529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10537,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10539,
											"end": 10545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10567,
											"end": 10574,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10586,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10559,
											"end": 10591,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 10594,
											"end": 10673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 10594,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 10556,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10714,
											"end": 10715,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 10784,
											"end": 10791,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10775,
											"end": 10781,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10764,
											"end": 10773,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10760,
											"end": 10782,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 10739,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "tag",
											"source": 14,
											"value": "548"
										},
										{
											"begin": 10739,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10792,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10729,
											"end": 10792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10685,
											"end": 10802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10841,
											"end": 10843,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 10912,
											"end": 10919,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10903,
											"end": 10909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10892,
											"end": 10901,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10888,
											"end": 10910,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 10867,
											"end": 10920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 10867,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10857,
											"end": 10920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10812,
											"end": 10930,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10969,
											"end": 10971,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 11040,
											"end": 11047,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11020,
											"end": 11029,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11016,
											"end": 11038,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 10995,
											"end": 11048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 10995,
											"end": 11048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10985,
											"end": 11048,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10985,
											"end": 11048,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10940,
											"end": 11058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10446,
											"end": 11065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11180,
											"end": 11181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11178,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11170,
											"end": 11182,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11194,
											"end": 11311,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 11194,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11303,
											"end": 11304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11301,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11293,
											"end": 11305,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11460,
											"end": 11464,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11452,
											"end": 11458,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11444,
											"end": 11471,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 11475,
											"end": 11554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 11475,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "tag",
											"source": 14,
											"value": "554"
										},
										{
											"begin": 11434,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11588,
											"end": 11594,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11575,
											"end": 11595,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11595,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11565,
											"end": 11595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11618,
											"end": 11636,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11610,
											"end": 11616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11607,
											"end": 11637,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 11640,
											"end": 11719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 11640,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 11604,
											"end": 11721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11754,
											"end": 11758,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11752,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11742,
											"end": 11759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11730,
											"end": 11759,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11730,
											"end": 11759,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11808,
											"end": 11811,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11800,
											"end": 11804,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11792,
											"end": 11798,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11788,
											"end": 11805,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11778,
											"end": 11786,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11774,
											"end": 11806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11771,
											"end": 11812,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 11815,
											"end": 11894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 11815,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 11768,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12006,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12014,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12058,
											"end": 12061,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12051,
											"end": 12055,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12043,
											"end": 12049,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12039,
											"end": 12056,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12035,
											"end": 12062,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 12066,
											"end": 12145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 12066,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 12025,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12166,
											"end": 12186,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12156,
											"end": 12186,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12156,
											"end": 12186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12209,
											"end": 12227,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12201,
											"end": 12207,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12198,
											"end": 12228,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 12231,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "tag",
											"source": 14,
											"value": "564"
										},
										{
											"begin": 12231,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12195,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12345,
											"end": 12349,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12333,
											"end": 12350,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12399,
											"end": 12402,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12391,
											"end": 12395,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12383,
											"end": 12389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12369,
											"end": 12377,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12365,
											"end": 12397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12362,
											"end": 12403,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 12406,
											"end": 12485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 12406,
											"end": 12485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 12359,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11925,
											"end": 12493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12657,
											"end": 12663,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12665,
											"end": 12671,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12673,
											"end": 12679,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12681,
											"end": 12687,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12689,
											"end": 12695,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12697,
											"end": 12703,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12746,
											"end": 12748,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 12734,
											"end": 12743,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12725,
											"end": 12732,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 12744,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12717,
											"end": 12749,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12714,
											"end": 12833,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12714,
											"end": 12833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 12714,
											"end": 12833,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12752,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 12752,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 12752,
											"end": 12831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12752,
											"end": 12831,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 12752,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12714,
											"end": 12833,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 12714,
											"end": 12833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12900,
											"end": 12901,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 12898,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 12885,
											"end": 12902,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 12903,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12930,
											"end": 12948,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12922,
											"end": 12928,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12919,
											"end": 12949,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 13033,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 12916,
											"end": 13033,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 12952,
											"end": 13031,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 12952,
											"end": 13031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12952,
											"end": 13031,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 12952,
											"end": 13031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12916,
											"end": 13033,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 12916,
											"end": 13033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13137,
											"end": 13144,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13128,
											"end": 13134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13117,
											"end": 13126,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 13113,
											"end": 13135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 13065,
											"end": 13145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13065,
											"end": 13145,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 13065,
											"end": 13145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13145,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13145,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 13047,
											"end": 13145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12843,
											"end": 13155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13211,
											"end": 13220,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 13207,
											"end": 13225,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13194,
											"end": 13226,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13253,
											"end": 13271,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13245,
											"end": 13251,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13242,
											"end": 13272,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13239,
											"end": 13356,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13239,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 13239,
											"end": 13356,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13275,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 13275,
											"end": 13354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 13275,
											"end": 13354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13275,
											"end": 13354,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 13275,
											"end": 13354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13239,
											"end": 13356,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 13239,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13388,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 13460,
											"end": 13467,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13451,
											"end": 13457,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13440,
											"end": 13449,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 13436,
											"end": 13458,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13388,
											"end": 13468,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 13388,
											"end": 13468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13388,
											"end": 13468,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 13388,
											"end": 13468,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13370,
											"end": 13468,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13370,
											"end": 13468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13370,
											"end": 13468,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13370,
											"end": 13468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13165,
											"end": 13478,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13545,
											"end": 13547,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13534,
											"end": 13543,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 13530,
											"end": 13548,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13517,
											"end": 13549,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13576,
											"end": 13594,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13568,
											"end": 13574,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13565,
											"end": 13595,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13562,
											"end": 13679,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13562,
											"end": 13679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 13562,
											"end": 13679,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13598,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 13598,
											"end": 13677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 13598,
											"end": 13677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13598,
											"end": 13677,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 13598,
											"end": 13677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13562,
											"end": 13679,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 13562,
											"end": 13679,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13711,
											"end": 13791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 13783,
											"end": 13790,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 13774,
											"end": 13780,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13763,
											"end": 13772,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 13759,
											"end": 13781,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13711,
											"end": 13791,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 13711,
											"end": 13791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13711,
											"end": 13791,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 13711,
											"end": 13791,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13791,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13791,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13791,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13488,
											"end": 13801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 13808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13814,
											"end": 13954,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 13814,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13863,
											"end": 13872,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13896,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 13914,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 13923,
											"end": 13946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 13940,
											"end": 13945,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13923,
											"end": 13946,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 13923,
											"end": 13946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13923,
											"end": 13946,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 13923,
											"end": 13946,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13914,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 13914,
											"end": 13947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13914,
											"end": 13947,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 13914,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13896,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 13896,
											"end": 13948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13896,
											"end": 13948,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 13896,
											"end": 13948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13814,
											"end": 13954,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13814,
											"end": 13954,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13814,
											"end": 13954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13814,
											"end": 13954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13960,
											"end": 14089,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 13960,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14046,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 14076,
											"end": 14081,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14046,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 14046,
											"end": 14082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14046,
											"end": 14082,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 14046,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14041,
											"end": 14044,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14034,
											"end": 14083,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 13960,
											"end": 14089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13960,
											"end": 14089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13960,
											"end": 14089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14242,
											"end": 14246,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14280,
											"end": 14282,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 14269,
											"end": 14278,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14265,
											"end": 14283,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14257,
											"end": 14283,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14257,
											"end": 14283,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14293,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 14361,
											"end": 14362,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14350,
											"end": 14359,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14346,
											"end": 14363,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14337,
											"end": 14343,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 14293,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 14293,
											"end": 14364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14293,
											"end": 14364,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 14293,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14374,
											"end": 14445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 14441,
											"end": 14443,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14430,
											"end": 14439,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14426,
											"end": 14444,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14417,
											"end": 14423,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14374,
											"end": 14445,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 14374,
											"end": 14445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14374,
											"end": 14445,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 14374,
											"end": 14445,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 14522,
											"end": 14524,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14511,
											"end": 14520,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14507,
											"end": 14525,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14498,
											"end": 14504,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 14455,
											"end": 14526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "tag",
											"source": 14,
											"value": "588"
										},
										{
											"begin": 14455,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14095,
											"end": 14533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14679,
											"end": 14700,
											"name": "PUSH",
											"source": 14,
											"value": "4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 14675,
											"end": 14676,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14667,
											"end": 14673,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14663,
											"end": 14677,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14656,
											"end": 14701,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14708,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14539,
											"end": 14708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14714,
											"end": 15080,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 14714,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14856,
											"end": 14859,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 14941,
											"end": 14943,
											"name": "PUSH",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 14936,
											"end": 14939,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14877,
											"end": 14944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 14877,
											"end": 14944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14877,
											"end": 14944,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 14877,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14870,
											"end": 14944,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14870,
											"end": 14944,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 15046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 15042,
											"end": 15045,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 15046,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 14953,
											"end": 15046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14953,
											"end": 15046,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 14953,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15071,
											"end": 15073,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15066,
											"end": 15069,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15062,
											"end": 15074,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15055,
											"end": 15074,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15055,
											"end": 15074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14714,
											"end": 15080,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14714,
											"end": 15080,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14714,
											"end": 15080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14714,
											"end": 15080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15086,
											"end": 15505,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 15086,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15252,
											"end": 15256,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15290,
											"end": 15292,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15279,
											"end": 15288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15275,
											"end": 15293,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15267,
											"end": 15293,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15267,
											"end": 15293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15339,
											"end": 15348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15333,
											"end": 15337,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15329,
											"end": 15349,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15325,
											"end": 15326,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15314,
											"end": 15323,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15310,
											"end": 15327,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15303,
											"end": 15350,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15367,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 15493,
											"end": 15497,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15367,
											"end": 15498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 15367,
											"end": 15498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15367,
											"end": 15498,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 15367,
											"end": 15498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15359,
											"end": 15498,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15359,
											"end": 15498,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15086,
											"end": 15505,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15086,
											"end": 15505,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15086,
											"end": 15505,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15086,
											"end": 15505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15511,
											"end": 15686,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 15511,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15651,
											"end": 15678,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 15647,
											"end": 15648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15639,
											"end": 15645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15635,
											"end": 15649,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15628,
											"end": 15679,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15511,
											"end": 15686,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15511,
											"end": 15686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15834,
											"end": 15837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 15919,
											"end": 15921,
											"name": "PUSH",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 15914,
											"end": 15917,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 15855,
											"end": 15922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 15855,
											"end": 15922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15848,
											"end": 15922,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15848,
											"end": 15922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 16020,
											"end": 16023,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 15931,
											"end": 16024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "tag",
											"source": 14,
											"value": "598"
										},
										{
											"begin": 15931,
											"end": 16024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16049,
											"end": 16051,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16044,
											"end": 16047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16040,
											"end": 16052,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16033,
											"end": 16052,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 16058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15692,
											"end": 16058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16230,
											"end": 16234,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16268,
											"end": 16270,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16257,
											"end": 16266,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16253,
											"end": 16271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16245,
											"end": 16271,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16245,
											"end": 16271,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16317,
											"end": 16326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16311,
											"end": 16315,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16307,
											"end": 16327,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16303,
											"end": 16304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16292,
											"end": 16301,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16288,
											"end": 16305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16281,
											"end": 16328,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 16471,
											"end": 16475,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 16345,
											"end": 16476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 16345,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16337,
											"end": 16476,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16337,
											"end": 16476,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16064,
											"end": 16483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16683,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 16489,
											"end": 16683,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16529,
											"end": 16533,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 16567,
											"end": 16568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 16549,
											"end": 16569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 16549,
											"end": 16569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16544,
											"end": 16569,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16544,
											"end": 16569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16583,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 16601,
											"end": 16602,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16583,
											"end": 16603,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 16583,
											"end": 16603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16583,
											"end": 16603,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 16583,
											"end": 16603,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16578,
											"end": 16603,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16578,
											"end": 16603,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16627,
											"end": 16628,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16624,
											"end": 16625,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16620,
											"end": 16629,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16629,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16612,
											"end": 16629,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16651,
											"end": 16652,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16645,
											"end": 16649,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16642,
											"end": 16653,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16639,
											"end": 16676,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16639,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 16639,
											"end": 16676,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16656,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 16656,
											"end": 16674,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 16656,
											"end": 16674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16656,
											"end": 16674,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 16656,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16639,
											"end": 16676,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 16639,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16683,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16683,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16683,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16489,
											"end": 16683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16689,
											"end": 16836,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 16689,
											"end": 16836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16790,
											"end": 16801,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16827,
											"end": 16830,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16812,
											"end": 16830,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16812,
											"end": 16830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16689,
											"end": 16836,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16689,
											"end": 16836,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16689,
											"end": 16836,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16689,
											"end": 16836,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16689,
											"end": 16836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16842,
											"end": 16956,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 16842,
											"end": 16956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16842,
											"end": 16956,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16842,
											"end": 16956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16962,
											"end": 17360,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 16962,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17121,
											"end": 17124,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17142,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 17223,
											"end": 17224,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17218,
											"end": 17221,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17142,
											"end": 17225,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 17142,
											"end": 17225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17142,
											"end": 17225,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 17142,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17135,
											"end": 17225,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17135,
											"end": 17225,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17234,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 17323,
											"end": 17326,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17234,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 17234,
											"end": 17327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17234,
											"end": 17327,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 17234,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17352,
											"end": 17353,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17347,
											"end": 17350,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17343,
											"end": 17354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17336,
											"end": 17354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16962,
											"end": 17360,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16962,
											"end": 17360,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16962,
											"end": 17360,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16962,
											"end": 17360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17745,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 17366,
											"end": 17745,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17550,
											"end": 17553,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17572,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 17715,
											"end": 17718,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17572,
											"end": 17719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 17572,
											"end": 17719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17572,
											"end": 17719,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 17572,
											"end": 17719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17565,
											"end": 17719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17565,
											"end": 17719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17736,
											"end": 17739,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17729,
											"end": 17739,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17729,
											"end": 17739,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17745,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17745,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17745,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17366,
											"end": 17745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17751,
											"end": 17922,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 17751,
											"end": 17922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17914,
											"name": "PUSH",
											"source": 14,
											"value": "4574686572207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 17887,
											"end": 17888,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17879,
											"end": 17885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17875,
											"end": 17889,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17868,
											"end": 17915,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17751,
											"end": 17922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17751,
											"end": 17922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17928,
											"end": 18294,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 17928,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18070,
											"end": 18073,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 18155,
											"end": 18157,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 18150,
											"end": 18153,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18091,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 18091,
											"end": 18158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18091,
											"end": 18158,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 18091,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18084,
											"end": 18158,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18084,
											"end": 18158,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18167,
											"end": 18260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 18256,
											"end": 18259,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18167,
											"end": 18260,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 18167,
											"end": 18260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18167,
											"end": 18260,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 18167,
											"end": 18260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18285,
											"end": 18287,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18280,
											"end": 18283,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18276,
											"end": 18288,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18288,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18269,
											"end": 18288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17928,
											"end": 18294,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17928,
											"end": 18294,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17928,
											"end": 18294,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17928,
											"end": 18294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18300,
											"end": 18719,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 18300,
											"end": 18719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18466,
											"end": 18470,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18504,
											"end": 18506,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18493,
											"end": 18502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18489,
											"end": 18507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18481,
											"end": 18507,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18481,
											"end": 18507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18553,
											"end": 18562,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18547,
											"end": 18551,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18543,
											"end": 18563,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18539,
											"end": 18540,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18528,
											"end": 18537,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18524,
											"end": 18541,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18517,
											"end": 18564,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18581,
											"end": 18712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 18707,
											"end": 18711,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18581,
											"end": 18712,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 18581,
											"end": 18712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18581,
											"end": 18712,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 18581,
											"end": 18712,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18573,
											"end": 18712,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18573,
											"end": 18712,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18300,
											"end": 18719,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18300,
											"end": 18719,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18300,
											"end": 18719,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18300,
											"end": 18719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18725,
											"end": 18897,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 18725,
											"end": 18897,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18865,
											"end": 18889,
											"name": "PUSH",
											"source": 14,
											"value": "496E636F727265637420457468657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 18861,
											"end": 18862,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18853,
											"end": 18859,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18849,
											"end": 18863,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18842,
											"end": 18890,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18725,
											"end": 18897,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18725,
											"end": 18897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18903,
											"end": 19269,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 18903,
											"end": 19269,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19045,
											"end": 19048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19066,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 19130,
											"end": 19132,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 19125,
											"end": 19128,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19066,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 19066,
											"end": 19133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19066,
											"end": 19133,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 19066,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19059,
											"end": 19133,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19059,
											"end": 19133,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19142,
											"end": 19235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 19231,
											"end": 19234,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19142,
											"end": 19235,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 19142,
											"end": 19235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19142,
											"end": 19235,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 19142,
											"end": 19235,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19260,
											"end": 19262,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19255,
											"end": 19258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19251,
											"end": 19263,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19244,
											"end": 19263,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19244,
											"end": 19263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18903,
											"end": 19269,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18903,
											"end": 19269,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18903,
											"end": 19269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18903,
											"end": 19269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19275,
											"end": 19694,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 19275,
											"end": 19694,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19441,
											"end": 19445,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19479,
											"end": 19481,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19468,
											"end": 19477,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19464,
											"end": 19482,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19456,
											"end": 19482,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19456,
											"end": 19482,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19528,
											"end": 19537,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19522,
											"end": 19526,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19518,
											"end": 19538,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19514,
											"end": 19515,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19503,
											"end": 19512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 19499,
											"end": 19516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19492,
											"end": 19539,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19556,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 19682,
											"end": 19686,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19556,
											"end": 19687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 19556,
											"end": 19687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19556,
											"end": 19687,
											"name": "tag",
											"source": 14,
											"value": "624"
										},
										{
											"begin": 19556,
											"end": 19687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19548,
											"end": 19687,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19275,
											"end": 19694,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19275,
											"end": 19694,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19275,
											"end": 19694,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19275,
											"end": 19694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19700,
											"end": 19927,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 19700,
											"end": 19927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19840,
											"end": 19874,
											"name": "PUSH",
											"source": 14,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 19836,
											"end": 19837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19828,
											"end": 19834,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19824,
											"end": 19838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19817,
											"end": 19875,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19909,
											"end": 19919,
											"name": "PUSH",
											"source": 14,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19904,
											"end": 19906,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19896,
											"end": 19902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19892,
											"end": 19907,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19885,
											"end": 19920,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 19700,
											"end": 19927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19700,
											"end": 19927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19933,
											"end": 20299,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 19933,
											"end": 20299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20075,
											"end": 20078,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20096,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 20160,
											"end": 20162,
											"name": "PUSH",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 20155,
											"end": 20158,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20096,
											"end": 20163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 20096,
											"end": 20163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20096,
											"end": 20163,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 20096,
											"end": 20163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20089,
											"end": 20163,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20089,
											"end": 20163,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20172,
											"end": 20265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 20261,
											"end": 20264,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20172,
											"end": 20265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 20172,
											"end": 20265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20172,
											"end": 20265,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 20172,
											"end": 20265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20290,
											"end": 20292,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20285,
											"end": 20288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20281,
											"end": 20293,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20274,
											"end": 20293,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20274,
											"end": 20293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19933,
											"end": 20299,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 19933,
											"end": 20299,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19933,
											"end": 20299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19933,
											"end": 20299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20305,
											"end": 20724,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 20305,
											"end": 20724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20471,
											"end": 20475,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20509,
											"end": 20511,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20498,
											"end": 20507,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20494,
											"end": 20512,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20486,
											"end": 20512,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20486,
											"end": 20512,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20558,
											"end": 20567,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20552,
											"end": 20556,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20548,
											"end": 20568,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20544,
											"end": 20545,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20533,
											"end": 20542,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 20529,
											"end": 20546,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20522,
											"end": 20569,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20586,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 20712,
											"end": 20716,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20586,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 20586,
											"end": 20717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20586,
											"end": 20717,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 20586,
											"end": 20717,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20578,
											"end": 20717,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20578,
											"end": 20717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20305,
											"end": 20724,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20305,
											"end": 20724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20305,
											"end": 20724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20305,
											"end": 20724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20815,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 20730,
											"end": 20815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20775,
											"end": 20782,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20804,
											"end": 20809,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20793,
											"end": 20809,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20815,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20815,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20821,
											"end": 20977,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 20821,
											"end": 20977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20878,
											"end": 20887,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20911,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 20928,
											"end": 20970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 20937,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 20963,
											"end": 20968,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20937,
											"end": 20969,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 20937,
											"end": 20969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20937,
											"end": 20969,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 20937,
											"end": 20969,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20928,
											"end": 20970,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 20928,
											"end": 20970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20928,
											"end": 20970,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 20928,
											"end": 20970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20911,
											"end": 20971,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 20911,
											"end": 20971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20911,
											"end": 20971,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 20911,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20898,
											"end": 20971,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20898,
											"end": 20971,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20821,
											"end": 20977,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20821,
											"end": 20977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20821,
											"end": 20977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20821,
											"end": 20977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20983,
											"end": 21128,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 20983,
											"end": 21128,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21077,
											"end": 21121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 21115,
											"end": 21120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21077,
											"end": 21121,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 21077,
											"end": 21121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21077,
											"end": 21121,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 21077,
											"end": 21121,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21072,
											"end": 21075,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21065,
											"end": 21122,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20983,
											"end": 21128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20983,
											"end": 21128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20983,
											"end": 21128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21370,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 21134,
											"end": 21370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21234,
											"end": 21238,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21272,
											"end": 21274,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21261,
											"end": 21270,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21257,
											"end": 21275,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21249,
											"end": 21275,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21249,
											"end": 21275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21285,
											"end": 21363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 21360,
											"end": 21361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21349,
											"end": 21358,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21345,
											"end": 21362,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21336,
											"end": 21342,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 21285,
											"end": 21363,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 21285,
											"end": 21363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21285,
											"end": 21363,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 21285,
											"end": 21363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21370,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21370,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21134,
											"end": 21370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21376,
											"end": 21556,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 21376,
											"end": 21556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21424,
											"end": 21501,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21421,
											"end": 21422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21414,
											"end": 21502,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21521,
											"end": 21525,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 21518,
											"end": 21519,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 21511,
											"end": 21526,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21545,
											"end": 21549,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 21542,
											"end": 21543,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21535,
											"end": 21550,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21882,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 21562,
											"end": 21882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21606,
											"end": 21612,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21643,
											"end": 21644,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 21637,
											"end": 21641,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21633,
											"end": 21645,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 21623,
											"end": 21645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21623,
											"end": 21645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21690,
											"end": 21691,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21684,
											"end": 21688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21680,
											"end": 21692,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21711,
											"end": 21729,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21701,
											"end": 21782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 21701,
											"end": 21782,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21771,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 21759,
											"end": 21765,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21755,
											"end": 21772,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21745,
											"end": 21772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21745,
											"end": 21772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21701,
											"end": 21782,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 21701,
											"end": 21782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21829,
											"end": 21831,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21821,
											"end": 21827,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21818,
											"end": 21832,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 21798,
											"end": 21816,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21795,
											"end": 21833,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21792,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 21792,
											"end": 21876,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21848,
											"end": 21866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 21848,
											"end": 21866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 21848,
											"end": 21866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21848,
											"end": 21866,
											"name": "tag",
											"source": 14,
											"value": "644"
										},
										{
											"begin": 21848,
											"end": 21866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21792,
											"end": 21876,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 21792,
											"end": 21876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21613,
											"end": 21882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21882,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21882,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21562,
											"end": 21882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21978,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 21888,
											"end": 21978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21922,
											"end": 21929,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21965,
											"end": 21970,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21958,
											"end": 21971,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21951,
											"end": 21972,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 21940,
											"end": 21972,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21940,
											"end": 21972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21978,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21978,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21888,
											"end": 21978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21984,
											"end": 22100,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 21984,
											"end": 22100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22054,
											"end": 22075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 22069,
											"end": 22074,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22054,
											"end": 22075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 22054,
											"end": 22075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22054,
											"end": 22075,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 22054,
											"end": 22075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22047,
											"end": 22052,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22044,
											"end": 22076,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 22034,
											"end": 22094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 22034,
											"end": 22094,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22090,
											"end": 22091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22087,
											"end": 22088,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 22080,
											"end": 22092,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 22034,
											"end": 22094,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 22034,
											"end": 22094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21984,
											"end": 22100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21984,
											"end": 22100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22243,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 22106,
											"end": 22243,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22160,
											"end": 22165,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22191,
											"end": 22197,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22185,
											"end": 22198,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 22176,
											"end": 22198,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22176,
											"end": 22198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22207,
											"end": 22237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 22231,
											"end": 22236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22207,
											"end": 22237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 22207,
											"end": 22237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22207,
											"end": 22237,
											"name": "tag",
											"source": 14,
											"value": "650"
										},
										{
											"begin": 22207,
											"end": 22237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22243,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22243,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22243,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22243,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22106,
											"end": 22243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22249,
											"end": 22594,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 22249,
											"end": 22594,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22316,
											"end": 22322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22365,
											"end": 22367,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22353,
											"end": 22362,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22344,
											"end": 22351,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22340,
											"end": 22363,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22336,
											"end": 22368,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 22333,
											"end": 22452,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 22333,
											"end": 22452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 22333,
											"end": 22452,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 22371,
											"end": 22450,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 22371,
											"end": 22450,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 22371,
											"end": 22450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22371,
											"end": 22450,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 22371,
											"end": 22450,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22333,
											"end": 22452,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 22333,
											"end": 22452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22491,
											"end": 22492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22516,
											"end": 22577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 22569,
											"end": 22576,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22560,
											"end": 22566,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22549,
											"end": 22558,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22516,
											"end": 22577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 22516,
											"end": 22577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22516,
											"end": 22577,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 22516,
											"end": 22577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22506,
											"end": 22577,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22506,
											"end": 22577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22462,
											"end": 22587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22249,
											"end": 22594,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22249,
											"end": 22594,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22249,
											"end": 22594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22249,
											"end": 22594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22249,
											"end": 22594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22600,
											"end": 22772,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 22600,
											"end": 22772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22740,
											"end": 22764,
											"name": "PUSH",
											"source": 14,
											"value": "43616C6C6572206973206E6F7420616E2061646D696E00000000000000000000"
										},
										{
											"begin": 22736,
											"end": 22737,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22728,
											"end": 22734,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22724,
											"end": 22738,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22717,
											"end": 22765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22600,
											"end": 22772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22600,
											"end": 22772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22778,
											"end": 23144,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 22778,
											"end": 23144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22920,
											"end": 22923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22941,
											"end": 23008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 23005,
											"end": 23007,
											"name": "PUSH",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 23000,
											"end": 23003,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22941,
											"end": 23008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 22941,
											"end": 23008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22941,
											"end": 23008,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 22941,
											"end": 23008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22934,
											"end": 23008,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22934,
											"end": 23008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23017,
											"end": 23110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 23106,
											"end": 23109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23017,
											"end": 23110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 23017,
											"end": 23110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23017,
											"end": 23110,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 23017,
											"end": 23110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23135,
											"end": 23137,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23130,
											"end": 23133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23126,
											"end": 23138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23119,
											"end": 23138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23119,
											"end": 23138,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22778,
											"end": 23144,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 22778,
											"end": 23144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22778,
											"end": 23144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22778,
											"end": 23144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23150,
											"end": 23569,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 23150,
											"end": 23569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23316,
											"end": 23320,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23354,
											"end": 23356,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23343,
											"end": 23352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23339,
											"end": 23357,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23331,
											"end": 23357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23331,
											"end": 23357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23403,
											"end": 23412,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23397,
											"end": 23401,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23393,
											"end": 23413,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23389,
											"end": 23390,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23378,
											"end": 23387,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23374,
											"end": 23391,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23367,
											"end": 23414,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23431,
											"end": 23562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 23557,
											"end": 23561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23431,
											"end": 23562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 23431,
											"end": 23562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23431,
											"end": 23562,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 23431,
											"end": 23562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23423,
											"end": 23562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23423,
											"end": 23562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23150,
											"end": 23569,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23150,
											"end": 23569,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23150,
											"end": 23569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23150,
											"end": 23569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23575,
											"end": 23796,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 23575,
											"end": 23796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23715,
											"end": 23749,
											"name": "PUSH",
											"source": 14,
											"value": "53746172742074696D65206D757374206265206265666F726520656E64207469"
										},
										{
											"begin": 23711,
											"end": 23712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23703,
											"end": 23709,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23699,
											"end": 23713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23692,
											"end": 23750,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23784,
											"end": 23788,
											"name": "PUSH",
											"source": 14,
											"value": "6D65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23779,
											"end": 23781,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23771,
											"end": 23777,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23767,
											"end": 23782,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23760,
											"end": 23789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23575,
											"end": 23796,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23575,
											"end": 23796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23802,
											"end": 24168,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 23802,
											"end": 24168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23944,
											"end": 23947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23965,
											"end": 24032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 24029,
											"end": 24031,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 24024,
											"end": 24027,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23965,
											"end": 24032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 23965,
											"end": 24032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23965,
											"end": 24032,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 23965,
											"end": 24032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23958,
											"end": 24032,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23958,
											"end": 24032,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24041,
											"end": 24134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 24130,
											"end": 24133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24041,
											"end": 24134,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 24041,
											"end": 24134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24041,
											"end": 24134,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 24041,
											"end": 24134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24159,
											"end": 24161,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 24154,
											"end": 24157,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24150,
											"end": 24162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24143,
											"end": 24162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24143,
											"end": 24162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23802,
											"end": 24168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23802,
											"end": 24168,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23802,
											"end": 24168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23802,
											"end": 24168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24174,
											"end": 24593,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 24174,
											"end": 24593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24340,
											"end": 24344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24378,
											"end": 24380,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24367,
											"end": 24376,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24363,
											"end": 24381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24355,
											"end": 24381,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24355,
											"end": 24381,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24427,
											"end": 24436,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24421,
											"end": 24425,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24417,
											"end": 24437,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 24413,
											"end": 24414,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24402,
											"end": 24411,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24398,
											"end": 24415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24391,
											"end": 24438,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24455,
											"end": 24586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 24581,
											"end": 24585,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24455,
											"end": 24586,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 24455,
											"end": 24586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24455,
											"end": 24586,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 24455,
											"end": 24586,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24447,
											"end": 24586,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24447,
											"end": 24586,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24174,
											"end": 24593,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24174,
											"end": 24593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24174,
											"end": 24593,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24174,
											"end": 24593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24599,
											"end": 24740,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 24599,
											"end": 24740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24648,
											"end": 24652,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24671,
											"end": 24674,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24663,
											"end": 24674,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24663,
											"end": 24674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24694,
											"end": 24697,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24691,
											"end": 24692,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24684,
											"end": 24698,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24728,
											"end": 24732,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24725,
											"end": 24726,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24715,
											"end": 24733,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 24707,
											"end": 24733,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24707,
											"end": 24733,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24599,
											"end": 24740,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24599,
											"end": 24740,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24599,
											"end": 24740,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24599,
											"end": 24740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24746,
											"end": 24839,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 24746,
											"end": 24839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24783,
											"end": 24789,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24830,
											"end": 24832,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24825,
											"end": 24827,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 24818,
											"end": 24823,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24814,
											"end": 24828,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24810,
											"end": 24833,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 24800,
											"end": 24833,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24800,
											"end": 24833,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24746,
											"end": 24839,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24746,
											"end": 24839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24746,
											"end": 24839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24746,
											"end": 24839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24845,
											"end": 24952,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 24845,
											"end": 24952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24889,
											"end": 24897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24939,
											"end": 24944,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24933,
											"end": 24937,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24929,
											"end": 24945,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 24908,
											"end": 24945,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24908,
											"end": 24945,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24845,
											"end": 24952,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24845,
											"end": 24952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24845,
											"end": 24952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24845,
											"end": 24952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24845,
											"end": 24952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25027,
											"end": 25033,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25077,
											"end": 25078,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 25065,
											"end": 25075,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25061,
											"end": 25079,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 25100,
											"end": 25197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 25130,
											"end": 25196,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25119,
											"end": 25128,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25100,
											"end": 25197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 25100,
											"end": 25197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25100,
											"end": 25197,
											"name": "tag",
											"source": 14,
											"value": "671"
										},
										{
											"begin": 25100,
											"end": 25197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25218,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 25248,
											"end": 25256,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 25237,
											"end": 25246,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25218,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 25218,
											"end": 25257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25218,
											"end": 25257,
											"name": "tag",
											"source": 14,
											"value": "672"
										},
										{
											"begin": 25218,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25206,
											"end": 25257,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 25206,
											"end": 25257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25290,
											"end": 25294,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 25286,
											"end": 25295,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 25279,
											"end": 25284,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25275,
											"end": 25296,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 25266,
											"end": 25296,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 25266,
											"end": 25296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25339,
											"end": 25343,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 25329,
											"end": 25337,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 25325,
											"end": 25344,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 25318,
											"end": 25323,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25315,
											"end": 25345,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 25305,
											"end": 25345,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25305,
											"end": 25345,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25034,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25034,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24958,
											"end": 25351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25499,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 25357,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25407,
											"end": 25416,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25440,
											"end": 25493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 25458,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 25467,
											"end": 25491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 25485,
											"end": 25490,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25467,
											"end": 25491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 25467,
											"end": 25491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25467,
											"end": 25491,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 25467,
											"end": 25491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25458,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 25458,
											"end": 25492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25458,
											"end": 25492,
											"name": "tag",
											"source": 14,
											"value": "675"
										},
										{
											"begin": 25458,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25493,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 25440,
											"end": 25493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25440,
											"end": 25493,
											"name": "tag",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 25440,
											"end": 25493,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25427,
											"end": 25493,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25427,
											"end": 25493,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25499,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25499,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25499,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25580,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 25505,
											"end": 25580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25548,
											"end": 25551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25569,
											"end": 25574,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25562,
											"end": 25574,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25562,
											"end": 25574,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25580,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25580,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25505,
											"end": 25580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25586,
											"end": 25855,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 25586,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25696,
											"end": 25735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 25727,
											"end": 25734,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25696,
											"end": 25735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 25696,
											"end": 25735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25696,
											"end": 25735,
											"name": "tag",
											"source": 14,
											"value": "679"
										},
										{
											"begin": 25696,
											"end": 25735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25757,
											"end": 25848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 25806,
											"end": 25847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 25830,
											"end": 25846,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25806,
											"end": 25847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 25806,
											"end": 25847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25806,
											"end": 25847,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 25806,
											"end": 25847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25798,
											"end": 25804,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25791,
											"end": 25795,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25785,
											"end": 25796,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 25757,
											"end": 25848,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 25757,
											"end": 25848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25757,
											"end": 25848,
											"name": "tag",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 25757,
											"end": 25848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25751,
											"end": 25755,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25744,
											"end": 25849,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 25662,
											"end": 25855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25586,
											"end": 25855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25586,
											"end": 25855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25586,
											"end": 25855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25586,
											"end": 25855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25861,
											"end": 25934,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 25861,
											"end": 25934,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25906,
											"end": 25909,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25861,
											"end": 25934,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25861,
											"end": 25934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25940,
											"end": 26129,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 25940,
											"end": 26129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26017,
											"end": 26049,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 26017,
											"end": 26049,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 26017,
											"end": 26049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26017,
											"end": 26049,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 26017,
											"end": 26049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26058,
											"end": 26123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 26116,
											"end": 26122,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26108,
											"end": 26114,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26102,
											"end": 26106,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26058,
											"end": 26123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 26058,
											"end": 26123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26058,
											"end": 26123,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 26058,
											"end": 26123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25993,
											"end": 26129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25940,
											"end": 26129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25940,
											"end": 26129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25940,
											"end": 26129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26135,
											"end": 26321,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 26135,
											"end": 26321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "tag",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26212,
											"end": 26215,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26205,
											"end": 26210,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26202,
											"end": 26216,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26266,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 26303,
											"end": 26304,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26296,
											"end": 26301,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26266,
											"end": 26305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 26266,
											"end": 26305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26266,
											"end": 26305,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 26266,
											"end": 26305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26239,
											"end": 26240,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 26232,
											"end": 26237,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26228,
											"end": 26241,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26219,
											"end": 26241,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26219,
											"end": 26241,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "687"
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "tag",
											"source": 14,
											"value": "689"
										},
										{
											"begin": 26195,
											"end": 26315,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26135,
											"end": 26321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26135,
											"end": 26321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26135,
											"end": 26321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26327,
											"end": 26870,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 26327,
											"end": 26870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26428,
											"end": 26430,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 26423,
											"end": 26426,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26420,
											"end": 26431,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 26417,
											"end": 26863,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26417,
											"end": 26863,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 26417,
											"end": 26863,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26462,
											"end": 26500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 26494,
											"end": 26499,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26462,
											"end": 26500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 26462,
											"end": 26500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26462,
											"end": 26500,
											"name": "tag",
											"source": 14,
											"value": "693"
										},
										{
											"begin": 26462,
											"end": 26500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26546,
											"end": 26575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 26564,
											"end": 26574,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26546,
											"end": 26575,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 26546,
											"end": 26575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26546,
											"end": 26575,
											"name": "tag",
											"source": 14,
											"value": "694"
										},
										{
											"begin": 26546,
											"end": 26575,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26536,
											"end": 26544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26532,
											"end": 26576,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26729,
											"end": 26731,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26717,
											"end": 26727,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26714,
											"end": 26732,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 26711,
											"end": 26760,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26711,
											"end": 26760,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 26711,
											"end": 26760,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 26750,
											"end": 26758,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26735,
											"end": 26758,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26735,
											"end": 26758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26711,
											"end": 26760,
											"name": "tag",
											"source": 14,
											"value": "695"
										},
										{
											"begin": 26711,
											"end": 26760,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26773,
											"end": 26853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 26829,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 26847,
											"end": 26850,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26829,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 26829,
											"end": 26851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26829,
											"end": 26851,
											"name": "tag",
											"source": 14,
											"value": "697"
										},
										{
											"begin": 26829,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26819,
											"end": 26827,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26815,
											"end": 26852,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26802,
											"end": 26813,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26773,
											"end": 26853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 26773,
											"end": 26853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26773,
											"end": 26853,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 26773,
											"end": 26853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26432,
											"end": 26863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26432,
											"end": 26863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26417,
											"end": 26863,
											"name": "tag",
											"source": 14,
											"value": "692"
										},
										{
											"begin": 26417,
											"end": 26863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26327,
											"end": 26870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26327,
											"end": 26870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26327,
											"end": 26870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26327,
											"end": 26870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26876,
											"end": 26993,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 26876,
											"end": 26993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26930,
											"end": 26938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26980,
											"end": 26985,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26974,
											"end": 26978,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26970,
											"end": 26986,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 26949,
											"end": 26986,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26949,
											"end": 26986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26876,
											"end": 26993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26876,
											"end": 26993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26876,
											"end": 26993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26876,
											"end": 26993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26876,
											"end": 26993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26999,
											"end": 27168,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 26999,
											"end": 27168,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27043,
											"end": 27049,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27076,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27124,
											"end": 27125,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27120,
											"end": 27126,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 27112,
											"end": 27117,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27109,
											"end": 27110,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 27105,
											"end": 27118,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 27076,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 27076,
											"end": 27127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27076,
											"end": 27127,
											"name": "tag",
											"source": 14,
											"value": "700"
										},
										{
											"begin": 27076,
											"end": 27127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27072,
											"end": 27128,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 27157,
											"end": 27161,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 27151,
											"end": 27155,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27147,
											"end": 27162,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 27137,
											"end": 27162,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27137,
											"end": 27162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27050,
											"end": 27168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26999,
											"end": 27168,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26999,
											"end": 27168,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26999,
											"end": 27168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26999,
											"end": 27168,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26999,
											"end": 27168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27173,
											"end": 27468,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 27173,
											"end": 27468,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27249,
											"end": 27253,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27395,
											"end": 27424,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 27420,
											"end": 27423,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27414,
											"end": 27418,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27395,
											"end": 27424,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 27395,
											"end": 27424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27395,
											"end": 27424,
											"name": "tag",
											"source": 14,
											"value": "702"
										},
										{
											"begin": 27395,
											"end": 27424,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27387,
											"end": 27424,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27387,
											"end": 27424,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27457,
											"end": 27460,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27454,
											"end": 27455,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 27450,
											"end": 27461,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 27444,
											"end": 27448,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27441,
											"end": 27462,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 27433,
											"end": 27462,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27433,
											"end": 27462,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27173,
											"end": 27468,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27173,
											"end": 27468,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 27173,
											"end": 27468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27173,
											"end": 27468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27173,
											"end": 27468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27473,
											"end": 28868,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 27473,
											"end": 28868,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27590,
											"end": 27627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 27623,
											"end": 27626,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27590,
											"end": 27627,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 27590,
											"end": 27627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27590,
											"end": 27627,
											"name": "tag",
											"source": 14,
											"value": "704"
										},
										{
											"begin": 27590,
											"end": 27627,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27692,
											"end": 27710,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27684,
											"end": 27690,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27681,
											"end": 27711,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 27678,
											"end": 27734,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 27678,
											"end": 27734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 27678,
											"end": 27734,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27714,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 27714,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 27714,
											"end": 27732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27714,
											"end": 27732,
											"name": "tag",
											"source": 14,
											"value": "706"
										},
										{
											"begin": 27714,
											"end": 27732,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27678,
											"end": 27734,
											"name": "tag",
											"source": 14,
											"value": "705"
										},
										{
											"begin": 27678,
											"end": 27734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27758,
											"end": 27796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 27790,
											"end": 27794,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27784,
											"end": 27795,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 27758,
											"end": 27796,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 27758,
											"end": 27796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27758,
											"end": 27796,
											"name": "tag",
											"source": 14,
											"value": "707"
										},
										{
											"begin": 27758,
											"end": 27796,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27843,
											"end": 27910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 27903,
											"end": 27909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27895,
											"end": 27901,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27889,
											"end": 27893,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27843,
											"end": 27910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 27843,
											"end": 27910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27843,
											"end": 27910,
											"name": "tag",
											"source": 14,
											"value": "708"
										},
										{
											"begin": 27843,
											"end": 27910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27937,
											"end": 27938,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27961,
											"end": 27965,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27948,
											"end": 27965,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27948,
											"end": 27965,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27993,
											"end": 27995,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 27985,
											"end": 27991,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27982,
											"end": 27996,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 28010,
											"end": 28011,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28005,
											"end": 28623,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28005,
											"end": 28623,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 28005,
											"end": 28623,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 28005,
											"end": 28623,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28667,
											"end": 28668,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28684,
											"end": 28690,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28681,
											"end": 28758,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28681,
											"end": 28758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 28681,
											"end": 28758,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28733,
											"end": 28742,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28728,
											"end": 28731,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 28724,
											"end": 28743,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28718,
											"end": 28744,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28709,
											"end": 28744,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28709,
											"end": 28744,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28681,
											"end": 28758,
											"name": "tag",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 28681,
											"end": 28758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28784,
											"end": 28851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 28844,
											"end": 28850,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28837,
											"end": 28842,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28784,
											"end": 28851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 28784,
											"end": 28851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28784,
											"end": 28851,
											"name": "tag",
											"source": 14,
											"value": "712"
										},
										{
											"begin": 28784,
											"end": 28851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28778,
											"end": 28782,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28771,
											"end": 28852,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28640,
											"end": 28862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27975,
											"end": 28862,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 27975,
											"end": 28862,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28005,
											"end": 28623,
											"name": "tag",
											"source": 14,
											"value": "710"
										},
										{
											"begin": 28005,
											"end": 28623,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28057,
											"end": 28061,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 28053,
											"end": 28062,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 28045,
											"end": 28051,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28041,
											"end": 28063,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 28091,
											"end": 28128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 28123,
											"end": 28127,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28091,
											"end": 28128,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 28091,
											"end": 28128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28091,
											"end": 28128,
											"name": "tag",
											"source": 14,
											"value": "713"
										},
										{
											"begin": 28091,
											"end": 28128,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28150,
											"end": 28151,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "tag",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28178,
											"end": 28185,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28175,
											"end": 28176,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28172,
											"end": 28186,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28257,
											"end": 28266,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28252,
											"end": 28255,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28248,
											"end": 28267,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28242,
											"end": 28268,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28234,
											"end": 28240,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28227,
											"end": 28269,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28308,
											"end": 28309,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28300,
											"end": 28306,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28296,
											"end": 28310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28286,
											"end": 28310,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 28286,
											"end": 28310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28355,
											"end": 28357,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28344,
											"end": 28353,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 28340,
											"end": 28358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28327,
											"end": 28358,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28327,
											"end": 28358,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28201,
											"end": 28205,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28198,
											"end": 28199,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28194,
											"end": 28206,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28189,
											"end": 28206,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28189,
											"end": 28206,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "714"
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "tag",
											"source": 14,
											"value": "716"
										},
										{
											"begin": 28164,
											"end": 28372,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28400,
											"end": 28406,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 28391,
											"end": 28398,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28388,
											"end": 28407,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 28385,
											"end": 28564,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 28385,
											"end": 28564,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 28385,
											"end": 28564,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 28458,
											"end": 28467,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28453,
											"end": 28456,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28449,
											"end": 28468,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28443,
											"end": 28469,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 28501,
											"end": 28549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 28543,
											"end": 28547,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 28535,
											"end": 28541,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 28531,
											"end": 28548,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 28520,
											"end": 28529,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 28501,
											"end": 28549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 28501,
											"end": 28549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28501,
											"end": 28549,
											"name": "tag",
											"source": 14,
											"value": "718"
										},
										{
											"begin": 28501,
											"end": 28549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28493,
											"end": 28499,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28486,
											"end": 28550,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28408,
											"end": 28564,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28385,
											"end": 28564,
											"name": "tag",
											"source": 14,
											"value": "717"
										},
										{
											"begin": 28385,
											"end": 28564,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28610,
											"end": 28611,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 28606,
											"end": 28607,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 28598,
											"end": 28604,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28594,
											"end": 28608,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 28590,
											"end": 28612,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28584,
											"end": 28588,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 28577,
											"end": 28613,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 28012,
											"end": 28623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28012,
											"end": 28623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28012,
											"end": 28623,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27975,
											"end": 28862,
											"name": "tag",
											"source": 14,
											"value": "709"
										},
										{
											"begin": 27975,
											"end": 28862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27975,
											"end": 28862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27565,
											"end": 28868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27565,
											"end": 28868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27565,
											"end": 28868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27473,
											"end": 28868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27473,
											"end": 28868,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27473,
											"end": 28868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29041,
											"end": 29045,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29079,
											"end": 29081,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 29068,
											"end": 29077,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29064,
											"end": 29082,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29056,
											"end": 29082,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29056,
											"end": 29082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29092,
											"end": 29162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 29159,
											"end": 29160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29148,
											"end": 29157,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29144,
											"end": 29161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29135,
											"end": 29141,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 29092,
											"end": 29162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 29092,
											"end": 29162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29092,
											"end": 29162,
											"name": "tag",
											"source": 14,
											"value": "720"
										},
										{
											"begin": 29092,
											"end": 29162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29172,
											"end": 29243,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 29239,
											"end": 29241,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29228,
											"end": 29237,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29224,
											"end": 29242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29215,
											"end": 29221,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 29172,
											"end": 29243,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 29172,
											"end": 29243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29172,
											"end": 29243,
											"name": "tag",
											"source": 14,
											"value": "721"
										},
										{
											"begin": 29172,
											"end": 29243,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29290,
											"end": 29299,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29284,
											"end": 29288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29280,
											"end": 29300,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 29275,
											"end": 29277,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 29264,
											"end": 29273,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29260,
											"end": 29278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29253,
											"end": 29301,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29318,
											"end": 29396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 29391,
											"end": 29395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 29382,
											"end": 29388,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 29318,
											"end": 29396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 29318,
											"end": 29396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29318,
											"end": 29396,
											"name": "tag",
											"source": 14,
											"value": "722"
										},
										{
											"begin": 29318,
											"end": 29396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29310,
											"end": 29396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29310,
											"end": 29396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28874,
											"end": 29403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29409,
											"end": 29576,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 29409,
											"end": 29576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29549,
											"end": 29568,
											"name": "PUSH",
											"source": 14,
											"value": "5A65726F20616464726573732075736572000000000000000000000000000000"
										},
										{
											"begin": 29545,
											"end": 29546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29537,
											"end": 29543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29533,
											"end": 29547,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29526,
											"end": 29569,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 29409,
											"end": 29576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29409,
											"end": 29576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29582,
											"end": 29948,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 29582,
											"end": 29948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29724,
											"end": 29727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 29745,
											"end": 29812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 29809,
											"end": 29811,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 29804,
											"end": 29807,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 29745,
											"end": 29812,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 29745,
											"end": 29812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29745,
											"end": 29812,
											"name": "tag",
											"source": 14,
											"value": "725"
										},
										{
											"begin": 29745,
											"end": 29812,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29738,
											"end": 29812,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29738,
											"end": 29812,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29821,
											"end": 29914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 29910,
											"end": 29913,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29821,
											"end": 29914,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 29821,
											"end": 29914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29821,
											"end": 29914,
											"name": "tag",
											"source": 14,
											"value": "726"
										},
										{
											"begin": 29821,
											"end": 29914,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 29939,
											"end": 29941,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 29934,
											"end": 29937,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 29930,
											"end": 29942,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 29923,
											"end": 29942,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29923,
											"end": 29942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29582,
											"end": 29948,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29582,
											"end": 29948,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29582,
											"end": 29948,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29582,
											"end": 29948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 29954,
											"end": 30373,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 29954,
											"end": 30373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30120,
											"end": 30124,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30158,
											"end": 30160,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30147,
											"end": 30156,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30143,
											"end": 30161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30135,
											"end": 30161,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30135,
											"end": 30161,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30207,
											"end": 30216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30201,
											"end": 30205,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30197,
											"end": 30217,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 30193,
											"end": 30194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30182,
											"end": 30191,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30178,
											"end": 30195,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30171,
											"end": 30218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30235,
											"end": 30366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 30361,
											"end": 30365,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 30235,
											"end": 30366,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 30235,
											"end": 30366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30235,
											"end": 30366,
											"name": "tag",
											"source": 14,
											"value": "728"
										},
										{
											"begin": 30235,
											"end": 30366,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30366,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30227,
											"end": 30366,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29954,
											"end": 30373,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 29954,
											"end": 30373,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 29954,
											"end": 30373,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 29954,
											"end": 30373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30379,
											"end": 30553,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 30379,
											"end": 30553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30519,
											"end": 30545,
											"name": "PUSH",
											"source": 14,
											"value": "4D69736D617463686564206172726179206C656E677468730000000000000000"
										},
										{
											"begin": 30515,
											"end": 30516,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30507,
											"end": 30513,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30503,
											"end": 30517,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30496,
											"end": 30546,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 30379,
											"end": 30553,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30379,
											"end": 30553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30559,
											"end": 30925,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 30559,
											"end": 30925,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30701,
											"end": 30704,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 30722,
											"end": 30789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 30786,
											"end": 30788,
											"name": "PUSH",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 30781,
											"end": 30784,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 30722,
											"end": 30789,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 30722,
											"end": 30789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30722,
											"end": 30789,
											"name": "tag",
											"source": 14,
											"value": "731"
										},
										{
											"begin": 30722,
											"end": 30789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30715,
											"end": 30789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30715,
											"end": 30789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30798,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 30887,
											"end": 30890,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30798,
											"end": 30891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 30798,
											"end": 30891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30798,
											"end": 30891,
											"name": "tag",
											"source": 14,
											"value": "732"
										},
										{
											"begin": 30798,
											"end": 30891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 30916,
											"end": 30918,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 30911,
											"end": 30914,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 30907,
											"end": 30919,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 30900,
											"end": 30919,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30900,
											"end": 30919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30559,
											"end": 30925,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30559,
											"end": 30925,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30559,
											"end": 30925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30559,
											"end": 30925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 30931,
											"end": 31350,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 30931,
											"end": 31350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31097,
											"end": 31101,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31135,
											"end": 31137,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31124,
											"end": 31133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31120,
											"end": 31138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31112,
											"end": 31138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31112,
											"end": 31138,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31184,
											"end": 31193,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31178,
											"end": 31182,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31174,
											"end": 31194,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 31170,
											"end": 31171,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31159,
											"end": 31168,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31155,
											"end": 31172,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31148,
											"end": 31195,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31212,
											"end": 31343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 31338,
											"end": 31342,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 31212,
											"end": 31343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 31212,
											"end": 31343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31212,
											"end": 31343,
											"name": "tag",
											"source": 14,
											"value": "734"
										},
										{
											"begin": 31212,
											"end": 31343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31204,
											"end": 31343,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31204,
											"end": 31343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30931,
											"end": 31350,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 30931,
											"end": 31350,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 30931,
											"end": 31350,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 30931,
											"end": 31350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31356,
											"end": 31536,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 31356,
											"end": 31536,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31404,
											"end": 31481,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31401,
											"end": 31402,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31394,
											"end": 31482,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31501,
											"end": 31505,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 31498,
											"end": 31499,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 31491,
											"end": 31506,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31525,
											"end": 31529,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 31522,
											"end": 31523,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31515,
											"end": 31530,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 31542,
											"end": 31772,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 31542,
											"end": 31772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31682,
											"end": 31716,
											"name": "PUSH",
											"source": 14,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 31678,
											"end": 31679,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31670,
											"end": 31676,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31666,
											"end": 31680,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31659,
											"end": 31717,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31751,
											"end": 31764,
											"name": "PUSH",
											"source": 14,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 31746,
											"end": 31748,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 31738,
											"end": 31744,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 31734,
											"end": 31749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 31727,
											"end": 31765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 31542,
											"end": 31772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31542,
											"end": 31772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31778,
											"end": 32144,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 31778,
											"end": 32144,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31920,
											"end": 31923,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 31941,
											"end": 32008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 32005,
											"end": 32007,
											"name": "PUSH",
											"source": 14,
											"value": "2B"
										},
										{
											"begin": 32000,
											"end": 32003,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 31941,
											"end": 32008,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 31941,
											"end": 32008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 31941,
											"end": 32008,
											"name": "tag",
											"source": 14,
											"value": "738"
										},
										{
											"begin": 31941,
											"end": 32008,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 31934,
											"end": 32008,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31934,
											"end": 32008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32017,
											"end": 32110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 32106,
											"end": 32109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32017,
											"end": 32110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 32017,
											"end": 32110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32017,
											"end": 32110,
											"name": "tag",
											"source": 14,
											"value": "739"
										},
										{
											"begin": 32017,
											"end": 32110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32135,
											"end": 32137,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 32130,
											"end": 32133,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32126,
											"end": 32138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32119,
											"end": 32138,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32119,
											"end": 32138,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31778,
											"end": 32144,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 31778,
											"end": 32144,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 31778,
											"end": 32144,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 31778,
											"end": 32144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32150,
											"end": 32569,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 32150,
											"end": 32569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32316,
											"end": 32320,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32354,
											"end": 32356,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 32343,
											"end": 32352,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32339,
											"end": 32357,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32331,
											"end": 32357,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32331,
											"end": 32357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32403,
											"end": 32412,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32397,
											"end": 32401,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32393,
											"end": 32413,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 32389,
											"end": 32390,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32378,
											"end": 32387,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32374,
											"end": 32391,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32367,
											"end": 32414,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32431,
											"end": 32562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 32557,
											"end": 32561,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 32431,
											"end": 32562,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 32431,
											"end": 32562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32431,
											"end": 32562,
											"name": "tag",
											"source": 14,
											"value": "741"
										},
										{
											"begin": 32431,
											"end": 32562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32423,
											"end": 32562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32423,
											"end": 32562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32150,
											"end": 32569,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32150,
											"end": 32569,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32150,
											"end": 32569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32150,
											"end": 32569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32575,
											"end": 32743,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 32575,
											"end": 32743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32715,
											"end": 32735,
											"name": "PUSH",
											"source": 14,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 32711,
											"end": 32712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32703,
											"end": 32709,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32699,
											"end": 32713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 32692,
											"end": 32736,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 32575,
											"end": 32743,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32575,
											"end": 32743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32749,
											"end": 33115,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 32749,
											"end": 33115,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32891,
											"end": 32894,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 32912,
											"end": 32979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 32976,
											"end": 32978,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 32971,
											"end": 32974,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 32912,
											"end": 32979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 32912,
											"end": 32979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32912,
											"end": 32979,
											"name": "tag",
											"source": 14,
											"value": "744"
										},
										{
											"begin": 32912,
											"end": 32979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 32905,
											"end": 32979,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32905,
											"end": 32979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32988,
											"end": 33081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 33077,
											"end": 33080,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 32988,
											"end": 33081,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 32988,
											"end": 33081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 32988,
											"end": 33081,
											"name": "tag",
											"source": 14,
											"value": "745"
										},
										{
											"begin": 32988,
											"end": 33081,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33106,
											"end": 33108,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33101,
											"end": 33104,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33097,
											"end": 33109,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33090,
											"end": 33109,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33090,
											"end": 33109,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32749,
											"end": 33115,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 32749,
											"end": 33115,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 32749,
											"end": 33115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 32749,
											"end": 33115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33121,
											"end": 33540,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 33121,
											"end": 33540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33287,
											"end": 33291,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33325,
											"end": 33327,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 33314,
											"end": 33323,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33310,
											"end": 33328,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33302,
											"end": 33328,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33302,
											"end": 33328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33374,
											"end": 33383,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33368,
											"end": 33372,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33364,
											"end": 33384,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 33360,
											"end": 33361,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33349,
											"end": 33358,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33345,
											"end": 33362,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33338,
											"end": 33385,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 33402,
											"end": 33533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 33528,
											"end": 33532,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 33402,
											"end": 33533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 33402,
											"end": 33533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33402,
											"end": 33533,
											"name": "tag",
											"source": 14,
											"value": "747"
										},
										{
											"begin": 33402,
											"end": 33533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33533,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33394,
											"end": 33533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33121,
											"end": 33540,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33121,
											"end": 33540,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33121,
											"end": 33540,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33121,
											"end": 33540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33546,
											"end": 33727,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 33546,
											"end": 33727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33686,
											"end": 33719,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 33682,
											"end": 33683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33674,
											"end": 33680,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33670,
											"end": 33684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 33663,
											"end": 33720,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 33546,
											"end": 33727,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33546,
											"end": 33727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33733,
											"end": 34099,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 33733,
											"end": 34099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33875,
											"end": 33878,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 33896,
											"end": 33963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 33960,
											"end": 33962,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 33955,
											"end": 33958,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 33896,
											"end": 33963,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 33896,
											"end": 33963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33896,
											"end": 33963,
											"name": "tag",
											"source": 14,
											"value": "750"
										},
										{
											"begin": 33896,
											"end": 33963,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 33889,
											"end": 33963,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33889,
											"end": 33963,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33972,
											"end": 34065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "751"
										},
										{
											"begin": 34061,
											"end": 34064,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 33972,
											"end": 34065,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 33972,
											"end": 34065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 33972,
											"end": 34065,
											"name": "tag",
											"source": 14,
											"value": "751"
										},
										{
											"begin": 33972,
											"end": 34065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34090,
											"end": 34092,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34085,
											"end": 34088,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34081,
											"end": 34093,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34074,
											"end": 34093,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34074,
											"end": 34093,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33733,
											"end": 34099,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 33733,
											"end": 34099,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 33733,
											"end": 34099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 33733,
											"end": 34099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34105,
											"end": 34524,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 34105,
											"end": 34524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34271,
											"end": 34275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34309,
											"end": 34311,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34298,
											"end": 34307,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34294,
											"end": 34312,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34286,
											"end": 34312,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34286,
											"end": 34312,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34358,
											"end": 34367,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34352,
											"end": 34356,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34348,
											"end": 34368,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 34344,
											"end": 34345,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34333,
											"end": 34342,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34329,
											"end": 34346,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34322,
											"end": 34369,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 34386,
											"end": 34517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "753"
										},
										{
											"begin": 34512,
											"end": 34516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 34386,
											"end": 34517,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 34386,
											"end": 34517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34386,
											"end": 34517,
											"name": "tag",
											"source": 14,
											"value": "753"
										},
										{
											"begin": 34386,
											"end": 34517,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34378,
											"end": 34517,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34378,
											"end": 34517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34105,
											"end": 34524,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 34105,
											"end": 34524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34105,
											"end": 34524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34105,
											"end": 34524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34651,
											"end": 34655,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34689,
											"end": 34691,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 34678,
											"end": 34687,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 34674,
											"end": 34692,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34666,
											"end": 34692,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 34666,
											"end": 34692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34702,
											"end": 34773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "755"
										},
										{
											"begin": 34770,
											"end": 34771,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 34759,
											"end": 34768,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34755,
											"end": 34772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34746,
											"end": 34752,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 34702,
											"end": 34773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 34702,
											"end": 34773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34702,
											"end": 34773,
											"name": "tag",
											"source": 14,
											"value": "755"
										},
										{
											"begin": 34702,
											"end": 34773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34783,
											"end": 34855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 34851,
											"end": 34853,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 34840,
											"end": 34849,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 34836,
											"end": 34854,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 34827,
											"end": 34833,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 34783,
											"end": 34855,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 34783,
											"end": 34855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34783,
											"end": 34855,
											"name": "tag",
											"source": 14,
											"value": "756"
										},
										{
											"begin": 34783,
											"end": 34855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34530,
											"end": 34862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 35017,
											"end": 35021,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 35055,
											"end": 35057,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 35044,
											"end": 35053,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 35040,
											"end": 35058,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 35032,
											"end": 35058,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 35032,
											"end": 35058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 35068,
											"end": 35139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 35136,
											"end": 35137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 35125,
											"end": 35134,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 35121,
											"end": 35138,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 35112,
											"end": 35118,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 35068,
											"end": 35139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 35068,
											"end": 35139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 35068,
											"end": 35139,
											"name": "tag",
											"source": 14,
											"value": "758"
										},
										{
											"begin": 35068,
											"end": 35139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 35149,
											"end": 35221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "759"
										},
										{
											"begin": 35217,
											"end": 35219,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 35206,
											"end": 35215,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 35202,
											"end": 35220,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 35193,
											"end": 35199,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 35149,
											"end": 35221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 35149,
											"end": 35221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 35149,
											"end": 35221,
											"name": "tag",
											"source": 14,
											"value": "759"
										},
										{
											"begin": 35149,
											"end": 35221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 35231,
											"end": 35303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 35299,
											"end": 35301,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 35288,
											"end": 35297,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 35284,
											"end": 35302,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 35275,
											"end": 35281,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 35231,
											"end": 35303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 35231,
											"end": 35303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 35231,
											"end": 35303,
											"name": "tag",
											"source": 14,
											"value": "760"
										},
										{
											"begin": 35231,
											"end": 35303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 34868,
											"end": 35310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/interface/IScorer.sol",
								"contracts/sweetspot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"NATIVE_TOKEN()": "31f7d964",
							"allowedAmounts(address,address)": "a9590e8a",
							"bulkSetAllowedAmount(address[],address[],uint256[])": "c5d60b51",
							"claim(address)": "1e83409a",
							"currentRound()": "8a19c8bc",
							"deposit(address,uint256)": "47e7ef24",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scorer()": "85c758f7",
							"setAllowedAmount(address,address,uint256)": "b807a3c4",
							"setRound(uint64,uint64,string)": "a9012c89",
							"totalBalances(address)": "aee9c872",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"NotWithinRound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowedAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"RoundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"bulkSetAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The value to add (in wei for Ether).\",\"token\":\"The token address (address(0) for Ether).\"}},\"initialize(address,address)\":{\"params\":{\"_scorer\":\"The scoring contract address.\",\"owner\":\"The owner address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowedAmount(address,address,uint256)\":{\"params\":{\"amount\":\"The allowed amount for the user.\",\"token\":\"The token address.\",\"user\":\"The address of the user.\"}},\"setRound(uint64,uint64,string)\":{\"params\":{\"end\":\"The end timestamp of the round.\",\"metadataURI\":\"The IPFS URI for the round metadata.\",\"start\":\"The start timestamp of the round.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\",\"token\":\"The token address (address(0) for Ether).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bulkSetAllowedAmount(address[],address[],uint256[])\":{\"notice\":\"Sets the allowed amount for multiple users for a given token in one call.\"},\"claim(address)\":{\"notice\":\"Claims the full allowed amount for a user during the round.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits funds into this jar for a specific token or Ether.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this contract with its initial state.\"},\"setAllowedAmount(address,address,uint256)\":{\"notice\":\"Sets the allowed amount for a specific user and token.\"},\"setRound(uint64,uint64,string)\":{\"notice\":\"Sets the round duration and metadata URI.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws funds from the jar for a specific token or Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sweetspot.sol\":\"sweetspot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x5bf83793e4290e7e68813647ee12b8abc4c538289be58958e32b7333b5b04e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f2ae1e6cfcef833b0424c313a99b39e98c418ba4fc037c081644ef42e598776\",\"dweb:/ipfs/QmSyyx1J5C2o3KCaWxDf3Gd9szsZGdzJCbe4u4SvdNXPjV\"]},\"contracts/sweetspot.sol\":{\"keccak256\":\"0xb7b4f275b00a47fe2837fa18f45a77014066b124848f1e1ab1e6c866db394b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f54329d1cc27d78a1aba8ddac70a9c8ca2844f089cf0914e8878926ebbd1eb9\",\"dweb:/ipfs/QmYCLEuDgfqoFf9uScUbCfhr2yEwFdv4G5prTZQmAKoYMV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 463,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1498,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "scorer",
								"offset": 0,
								"slot": "50",
								"type": "t_contract(IScorer)1472"
							},
							{
								"astId": 1508,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "currentRound",
								"offset": 0,
								"slot": "51",
								"type": "t_struct(Round)1505_storage"
							},
							{
								"astId": 1512,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "totalBalances",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1518,
								"contract": "contracts/sweetspot.sol:sweetspot",
								"label": "allowedAmounts",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_contract(IScorer)1472": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Round)1505_storage": {
								"encoding": "inplace",
								"label": "struct sweetspot.Round",
								"members": [
									{
										"astId": 1500,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "start",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1502,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "end",
										"offset": 8,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 1504,
										"contract": "contracts/sweetspot.sol:sweetspot",
										"label": "metadataURI",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bulkSetAllowedAmount(address[],address[],uint256[])": {
								"notice": "Sets the allowed amount for multiple users for a given token in one call."
							},
							"claim(address)": {
								"notice": "Claims the full allowed amount for a user during the round."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits funds into this jar for a specific token or Ether."
							},
							"initialize(address,address)": {
								"notice": "Initializes this contract with its initial state."
							},
							"setAllowedAmount(address,address,uint256)": {
								"notice": "Sets the allowed amount for a specific user and token."
							},
							"setRound(uint64,uint64,string)": {
								"notice": "Sets the round duration and metadata URI."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws funds from the jar for a specific token or Ether."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 580,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								579,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 561,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							533
						]
					},
					"id": 534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 534,
							"sourceUnit": 449,
							"src": "136:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "144:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1000:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:2"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 533,
							"linearizedBaseContracts": [
								533,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 458,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1768:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 457,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1815:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 463,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "1859:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "1949:51:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 468,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1959:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:2"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 465,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1932:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:2"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:2"
									},
									"scope": 533,
									"src": "1889:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "2076:39:2",
										"statements": [
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 477,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2096:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:2"
											}
										]
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 475,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 474,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2059:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:2"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:2"
									},
									"scope": 533,
									"src": "2006:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2516:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 485,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2526:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:2"
											},
											{
												"id": 488,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 489,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2568:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 493,
									"name": "nonReentrant",
									"nameLocation": "2501:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:2"
									},
									"src": "2492:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2640:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 463,
																"src": "2733:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 498,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2744:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:2"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2863:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2873:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:2"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:2"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:2"
									},
									"scope": 533,
									"src": "2601:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2932:171:2",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3074:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "3084:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:2"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:2"
									},
									"scope": 533,
									"src": "2894:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "3346:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 522,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "3363:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 523,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "3374:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 521,
												"id": 525,
												"nodeType": "Return",
												"src": "3356:26:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "3340:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 519,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:2"
									},
									"scope": 533,
									"src": "3282:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 532,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 533,
									"src": "3654:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 529,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 531,
										"length": {
											"hexValue": "3439",
											"id": 530,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 534,
							"src": "952:2730:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "112:3571:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"Initializable": [
							448
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 537,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 580,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 536,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 539,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 540,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 538,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 579,
							"linearizedBaseContracts": [
								579,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 543,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 542,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 579,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 579,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 557,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 556,
												"id": 559,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 579,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 565,
												"id": 568,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 579,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 579,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 580,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							661
						],
						"IERC165": [
							1451
						],
						"IERC20": [
							747
						]
					},
					"id": 662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 670,
							"src": "133:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 582,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "141:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 585,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 662,
							"sourceUnit": 666,
							"src": "170:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 584,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "178:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 587,
										"name": "IERC20",
										"nameLocations": [
											"590:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "590:6:4"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:4"
								},
								{
									"baseName": {
										"id": 589,
										"name": "IERC165",
										"nameLocations": [
											"598:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1451,
										"src": "598:7:4"
									},
									"id": 590,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:4"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 586,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:4",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 661,
							"linearizedBaseContracts": [
								661,
								1451,
								747
							],
							"name": "IERC1363",
							"nameLocation": "578:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1560:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "1593:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:4"
									},
									"scope": 661,
									"src": "1523:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2088:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2100:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2115:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2154:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:4"
									},
									"scope": 661,
									"src": "2063:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 624,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2653:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2667:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2679:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "2712:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 621,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:4"
									},
									"scope": 661,
									"src": "2624:94:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3294:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3308:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3320:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3335:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:4"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "3374:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:4"
									},
									"scope": 661,
									"src": "3265:115:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3805:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3822:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:4"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3855:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:4"
									},
									"scope": 661,
									"src": "3781:80:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4374:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4391:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4406:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 654,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:4"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "4445:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:4"
									},
									"scope": 661,
									"src": "4350:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 662,
							"src": "568:3885:4",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "107:4347:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 1452,
							"src": "132:59:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 664,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1451,
										"src": "140:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 670,
							"sourceUnit": 748,
							"src": "131:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							747
						]
					},
					"id": 748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 671,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 681,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 690,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 747,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 747,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 711,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 747,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 747,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 731,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 747,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 746,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 743,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 747,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 748,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								681,
								690
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"IERC1363": [
							661
						],
						"IERC20": [
							747
						],
						"SafeERC20": [
							1158
						]
					},
					"id": 1159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 751,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 748,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 750,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 753,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 662,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 752,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 661,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 1418,
							"src": "238:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 754,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1417,
										"src": "246:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 756,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1158,
							"linearizedBaseContracts": [
								1158
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 761,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "875:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:8"
									},
									"src": "844:46:8"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 770,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1011:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1028:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1054:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:8"
									},
									"src": "972:109:8"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1343:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "1373:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 785,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "1395:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 714,
																	"src": "1395:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 787,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "1412:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "1416:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 789,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 783,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 781,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1353:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:8"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1293:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 773,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 772,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1293:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1293:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1307:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1319:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:8"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:8"
									},
									"scope": 1158,
									"src": "1271:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1760:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "1790:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 811,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "1812:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 746,
																	"src": "1812:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 813,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 800,
																			"src": "1833:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 814,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "1839:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 804,
																			"src": "1843:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 816,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 807,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1770:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:8"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1696:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "1696:6:8"
													},
													"referencedDeclaration": 747,
													"src": "1696:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1710:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1724:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1736:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:8"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:8"
									},
									"scope": 1158,
									"src": "1670:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "2600:139:8",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "2610:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 838,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1158",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 836,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2664:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 834,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2633:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2633:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "2695:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 845,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "2702:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 846,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "2711:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 847,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "2726:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$747",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2682:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:8"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2545:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 823,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "2545:6:8"
													},
													"referencedDeclaration": 747,
													"src": "2545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2559:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "2576:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:8"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:8"
									},
									"scope": 1158,
									"src": "2514:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3505:370:8",
										"statements": [
											{
												"id": 893,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:8",
												"statements": [
													{
														"assignments": [
															864
														],
														"declarations": [
															{
																"constant": false,
																"id": 864,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 893,
																"src": "3539:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 863,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 873,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 869,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1158",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 867,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3597:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3566:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 724,
																"src": "3566:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 874,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "3623:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 875,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3642:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 884,
														"nodeType": "IfStatement",
														"src": "3619:160:8",
														"trueBody": {
															"id": 883,
															"nodeType": "Block",
															"src": "3661:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 878,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "3719:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 879,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "3728:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 880,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "3746:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 877,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "3686:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 882,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 886,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3805:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 887,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3812:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 888,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "3821:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 889,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "3840:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$747",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 885,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "3792:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 892,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3438:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 855,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 854,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "3438:6:8"
													},
													"referencedDeclaration": 747,
													"src": "3438:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3452:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3469:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:8"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:8"
									},
									"scope": 1158,
									"src": "3407:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4529:303:8",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "4539:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 906,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 916,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 910,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4582:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 734,
															"src": "4582:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 912,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4598:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 913,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "4607:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 908,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:8"
											},
											{
												"condition": {
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 918,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "4654:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 919,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "4661:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$747",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 917,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4630:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4625:201:8",
												"trueBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4676:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 923,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4710:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 926,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "4732:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$747",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 734,
																				"src": "4732:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 928,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 901,
																						"src": "4748:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 929,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 930,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 924,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 922,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4690:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 933,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 899,
																		"src": "4795:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 936,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "4802:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 934,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "4775:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 938,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4474:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "4474:6:8"
													},
													"referencedDeclaration": 747,
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4488:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4505:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:8"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:8"
									},
									"scope": 1158,
									"src": "4452:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "5279:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 955,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5293:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 969,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "5402:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 970,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "5406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 971,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "5413:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 967,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5380:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 612,
																"src": "5380:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 982,
													"nodeType": "IfStatement",
													"src": "5375:117:8",
													"trueBody": {
														"id": 981,
														"nodeType": "Block",
														"src": "5420:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 977,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "5474:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 974,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "5441:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 980,
																"nodeType": "RevertStatement",
																"src": "5434:47:8"
															}
														]
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "5289:203:8",
												"trueBody": {
													"id": 966,
													"nodeType": "Block",
													"src": "5314:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 961,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "5341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 962,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "5348:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 963,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "5352:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 960,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "5328:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 965,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5208:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5208:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5208:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5224:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5236:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5251:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:8"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:8"
									},
									"scope": 1158,
									"src": "5176:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "6017:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1000,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "6031:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1015,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "6154:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1016,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "6160:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "6164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1018,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "6171:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1013,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "6128:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 638,
																"src": "6128:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1029,
													"nodeType": "IfStatement",
													"src": "6123:127:8",
													"trueBody": {
														"id": 1028,
														"nodeType": "Block",
														"src": "6178:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1024,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 989,
																					"src": "6232:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1022,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1021,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "6199:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1027,
																"nodeType": "RevertStatement",
																"src": "6192:47:8"
															}
														]
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "6027:223:8",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "6052:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 989,
																		"src": "6083:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "6090:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1008,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "6096:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "6100:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1005,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "6066:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5895:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 988,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 987,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "5895:8:8"
													},
													"referencedDeclaration": 661,
													"src": "5895:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5919:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5941:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5961:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "5984:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:8"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:8"
									},
									"scope": 1158,
									"src": "5850:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "7023:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1045,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "7037:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1059,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "7145:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1060,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "7149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1061,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7156:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1057,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1036,
																	"src": "7124:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$661",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 660,
																"src": "7124:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1072,
													"nodeType": "IfStatement",
													"src": "7119:116:8",
													"trueBody": {
														"id": 1071,
														"nodeType": "Block",
														"src": "7163:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1067,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1036,
																					"src": "7217:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$661",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1065,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1064,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "7184:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1070,
																"nodeType": "RevertStatement",
																"src": "7177:47:8"
															}
														]
													}
												},
												"id": 1073,
												"nodeType": "IfStatement",
												"src": "7033:202:8",
												"trueBody": {
													"id": 1056,
													"nodeType": "Block",
													"src": "7058:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1051,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1036,
																		"src": "7085:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1052,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1038,
																		"src": "7092:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1053,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "7096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$661",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1050,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "7072:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6952:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$661",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1034,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 661,
														"src": "6952:8:8"
													},
													"referencedDeclaration": 661,
													"src": "6952:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$661",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6968:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6980:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "6995:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:8"
									},
									"scope": 1158,
									"src": "6921:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "7808:650:8",
										"statements": [
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7818:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1084,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:8"
											},
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "7846:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1087,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1089,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:8",
													"nodeType": "YulBlock",
													"src": "7900:396:8",
													"statements": [
														{
															"nativeSrc": "7914:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:8"
																		},
																		"nativeSrc": "7934:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:8"
																		},
																		"nativeSrc": "7951:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:8"
																		},
																		"nativeSrc": "7968:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:8"
																},
																"nativeSrc": "7929:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:8",
																"nodeType": "YulBlock",
																"src": "8050:157:8",
																"statements": [
																	{
																		"nativeSrc": "8068:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:8"
																			},
																			"nativeSrc": "8079:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:8"
																					},
																					"nativeSrc": "8130:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:8"
																			},
																			"nativeSrc": "8107:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:8"
																		},
																		"nativeSrc": "8107:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:8"
																					},
																					"nativeSrc": "8176:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:8"
																			},
																			"nativeSrc": "8164:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:8"
																		},
																		"nativeSrc": "8164:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:8"
																},
																"nativeSrc": "8034:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:8"
															},
															"nativeSrc": "8031:176:8",
															"nodeType": "YulIf",
															"src": "8031:176:8"
														},
														{
															"nativeSrc": "8220:30:8",
															"nodeType": "YulAssignment",
															"src": "8220:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:8"
																},
																"nativeSrc": "8234:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:8"
																}
															]
														},
														{
															"nativeSrc": "8263:23:8",
															"nodeType": "YulAssignment",
															"src": "8263:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:8"
																},
																"nativeSrc": "8278:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1081,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1085,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1088,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "7875:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1091,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "8310:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1102,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "8362:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1096,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "8336:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$747",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1094,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "8306:146:8",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "8380:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1109,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1079,
																				"src": "8434:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$747",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1107,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1106,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "8401:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1112,
															"nodeType": "RevertStatement",
															"src": "8394:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7767:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1078,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1077,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "7767:6:8"
													},
													"referencedDeclaration": 747,
													"src": "7767:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "7781:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:8"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:8"
									},
									"scope": 1158,
									"src": "7738:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "9049:391:8",
										"statements": [
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9059:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1127,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:8"
											},
											{
												"assignments": [
													1131
												],
												"declarations": [
													{
														"constant": false,
														"id": 1131,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9081:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1130,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1132,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:8"
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "9109:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1133,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:8",
													"nodeType": "YulBlock",
													"src": "9163:174:8",
													"statements": [
														{
															"nativeSrc": "9177:71:8",
															"nodeType": "YulAssignment",
															"src": "9177:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:8"
																		},
																		"nativeSrc": "9193:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:8"
																		},
																		"nativeSrc": "9227:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:8"
																},
																"nativeSrc": "9188:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:8"
																}
															]
														},
														{
															"nativeSrc": "9261:30:8",
															"nodeType": "YulAssignment",
															"src": "9261:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:8"
																},
																"nativeSrc": "9275:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:8"
																}
															]
														},
														{
															"nativeSrc": "9304:23:8",
															"nodeType": "YulAssignment",
															"src": "9304:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:8"
																},
																"nativeSrc": "9319:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1122,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1134,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1128,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1136,
												"nodeType": "InlineAssembly",
												"src": "9138:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1137,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "9353:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1138,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1131,
																		"src": "9365:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1149,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "9416:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1143,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1120,
																						"src": "9391:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$747",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1142,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1141,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1153,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1155,
												"nodeType": "Return",
												"src": "9346:87:8"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "8993:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$747",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 747,
														"src": "8993:6:8"
													},
													"referencedDeclaration": 747,
													"src": "8993:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$747",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9007:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:8"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "9043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:8"
									},
									"scope": 1158,
									"src": "8960:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1159,
							"src": "750:8692:8",
							"usedErrors": [
								761,
								770
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1417
						],
						"Errors": [
							1439
						]
					},
					"id": 1418,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1160,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1162,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1418,
							"sourceUnit": 1440,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1161,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1439,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1417,
							"linearizedBaseContracts": [
								1417
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1168,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "1361:278:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1178,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1176,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1188,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1186,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1183,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1193,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1197,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1214,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1198,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "1525:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "1547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:9"
											},
											{
												"condition": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:9",
													"subExpression": {
														"id": 1205,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "1573:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1213,
												"nodeType": "IfStatement",
												"src": "1568:65:9",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "1582:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1207,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "1603:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "1603:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1211,
															"nodeType": "RevertStatement",
															"src": "1596:26:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1417,
									"src": "1290:349:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2573:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2612:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2620:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1225,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "2590:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1230,
												"nodeType": "Return",
												"src": "2583:45:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2506:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2522:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2559:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:9"
									},
									"scope": 1417,
									"src": "2484:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "3072:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1417",
																		"typeString": "library Address"
																	}
																],
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1244,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1249,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3110:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1263,
												"nodeType": "IfStatement",
												"src": "3082:123:9",
												"trueBody": {
													"id": 1262,
													"nodeType": "Block",
													"src": "3117:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1417",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1254,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1259,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "3188:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1251,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "3138:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "3138:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1261,
															"nodeType": "RevertStatement",
															"src": "3131:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1265,
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3215:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1281,
														"src": "3229:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"id": 1272,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "3282:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1268,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "3256:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1270,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3275:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1276,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "3331:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1277,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "3339:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1278,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3348:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1275,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3304:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1243,
												"id": 1280,
												"nodeType": "Return",
												"src": "3297:62:9"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2990:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3006:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3025:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:9"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "3058:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:9"
									},
									"scope": 1417,
									"src": "2959:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "3605:154:9",
										"statements": [
											{
												"assignments": [
													1293,
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3616:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1292,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "3630:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1294,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"id": 1298,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3675:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1296,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3657:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1302,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3724:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "3732:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1304,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3741:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1301,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "3697:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1306,
												"nodeType": "Return",
												"src": "3690:62:9"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3533:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3549:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3591:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:9"
									},
									"scope": 1417,
									"src": "3505:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "3997:156:9",
										"statements": [
											{
												"assignments": [
													1319,
													1321
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4008:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1318,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1321,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1333,
														"src": "4022:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1320,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1326,
												"initialValue": {
													"arguments": [
														{
															"id": 1324,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "4069:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1322,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4049:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1328,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "4118:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4126:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "4135:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1327,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "4091:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1317,
												"id": 1332,
												"nodeType": "Return",
												"src": "4084:62:9"
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3930:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3946:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:9"
									},
									"returnParameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "3983:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1315,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:9"
									},
									"scope": 1417,
									"src": "3900:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "4579:424:9",
										"statements": [
											{
												"condition": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:9",
													"subExpression": {
														"id": 1346,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "4594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "4653:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1353,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "4841:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1357,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1337,
																				"src": "4867:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "4837:119:9",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "4892:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1364,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "4934:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1363,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1168,
																				"src": "4917:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1366,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1369,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "4976:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1345,
															"id": 1370,
															"nodeType": "Return",
															"src": "4969:17:9"
														}
													]
												},
												"id": 1372,
												"nodeType": "IfStatement",
												"src": "4589:408:9",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "4603:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "4625:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1348,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "4617:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1335,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4466:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4490:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4512:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:9"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "4565:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:9"
									},
									"scope": 1417,
									"src": "4421:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "5307:122:9",
										"statements": [
											{
												"condition": {
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:9",
													"subExpression": {
														"id": 1384,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "5322:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1393,
													"nodeType": "Block",
													"src": "5381:42:9",
													"statements": [
														{
															"expression": {
																"id": 1391,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "5402:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1383,
															"id": 1392,
															"nodeType": "Return",
															"src": "5395:17:9"
														}
													]
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "5317:106:9",
												"trueBody": {
													"id": 1390,
													"nodeType": "Block",
													"src": "5331:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1387,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1379,
																		"src": "5353:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1386,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5345:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1389,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5231:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5245:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:9"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "5293:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:9"
									},
									"scope": 1417,
									"src": "5205:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "5598:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1402,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "5674:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1413,
													"nodeType": "Block",
													"src": "5973:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1408,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "5994:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1439_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1430,
																	"src": "5994:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1412,
															"nodeType": "RevertStatement",
															"src": "5987:26:9"
														}
													]
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "5670:354:9",
												"trueBody": {
													"id": 1407,
													"nodeType": "Block",
													"src": "5697:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:9",
																"nodeType": "YulBlock",
																"src": "5824:133:9",
																"statements": [
																	{
																		"nativeSrc": "5842:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:9"
																			},
																			"nativeSrc": "5865:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:9"
																					},
																					"nativeSrc": "5906:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:9"
																			},
																			"nativeSrc": "5899:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:9"
																		},
																		"nativeSrc": "5899:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:9"
																	}
																]
															},
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1399,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1406,
															"nodeType": "InlineAssembly",
															"src": "5799:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5560:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:9"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:9"
									},
									"scope": 1417,
									"src": "5543:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1418,
							"src": "233:5799:9",
							"usedErrors": [
								1168
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1439
						]
					},
					"id": 1440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1420,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1439,
							"linearizedBaseContracts": [
								1439
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1427,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1430,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1433,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1438,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1440,
							"src": "411:484:10",
							"usedErrors": [
								1427,
								1430,
								1433,
								1438
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1451
						]
					},
					"id": 1452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1451,
							"linearizedBaseContracts": [
								1451
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1451,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1452,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1472
						]
					},
					"id": 1473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1472,
							"linearizedBaseContracts": [
								1472
							],
							"name": "IScorer",
							"nameLocation": "71:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "86:741:12",
										"text": " @dev Returns the score of a specific user for a given score type.\n      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @param scoreType The type of score to query, represented as a `bytes32` hash.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "db4f1024",
									"id": 1463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "842:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "856:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "848:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "scoreType",
												"nameLocation": "876:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "862:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1457,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "862:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:39:12"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "910:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:9:12"
									},
									"scope": 1472,
									"src": "833:86:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "927:302:12",
										"text": " @dev Checks if the provided address is an admin.\n @param admin The address to check for admin status.\n @return True if the address is an admin, false otherwise.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "24d7806c",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1244:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1260:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1252:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:15:12"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1290:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1289:6:12"
									},
									"scope": 1472,
									"src": "1235:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1473,
							"src": "61:1238:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1268:12"
				},
				"id": 12
			},
			"contracts/sweetspot.sol": {
				"ast": {
					"absolutePath": "contracts/sweetspot.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							579
						],
						"IERC20": [
							747
						],
						"IScorer": [
							1472
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"ReentrancyGuardUpgradeable": [
							533
						],
						"SafeERC20": [
							1158
						],
						"sweetspot": [
							2014
						]
					},
					"id": 2015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 195,
							"src": "61:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1477,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 748,
							"src": "138:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1476,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 747,
										"src": "147:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 1159,
							"src": "212:84:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1478,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1158,
										"src": "221:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 1480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 534,
							"src": "298:85:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2015,
							"sourceUnit": 1473,
							"src": "385:33:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1482,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"476:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "476:18:13"
									},
									"id": 1483,
									"nodeType": "InheritanceSpecifier",
									"src": "476:18:13"
								},
								{
									"baseName": {
										"id": 1484,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"496:26:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 533,
										"src": "496:26:13"
									},
									"id": 1485,
									"nodeType": "InheritanceSpecifier",
									"src": "496:26:13"
								}
							],
							"canonicalName": "sweetspot",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2014,
							"linearizedBaseContracts": [
								2014,
								533,
								194,
								579,
								448
							],
							"name": "sweetspot",
							"nameLocation": "463:9:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1489,
									"libraryName": {
										"id": 1486,
										"name": "SafeERC20",
										"nameLocations": [
											"537:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1158,
										"src": "537:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "531:27:13",
									"typeName": {
										"id": 1488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1487,
											"name": "IERC20",
											"nameLocations": [
												"551:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 747,
											"src": "551:6:13"
										},
										"referencedDeclaration": 747,
										"src": "551:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$747",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "31f7d964",
									"id": 1495,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "590:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2014,
									"src": "566:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1490,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1493,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "613:1:13",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1492,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "605:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1491,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"typeDescriptions": {}
											}
										},
										"id": 1494,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "605:10:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1498,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "637:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2014,
									"src": "622:21:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1472",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1497,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1496,
											"name": "IScorer",
											"nameLocations": [
												"622:7:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1472,
											"src": "622:7:13"
										},
										"referencedDeclaration": 1472,
										"src": "622:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1472",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "sweetspot.Round",
									"id": 1505,
									"members": [
										{
											"constant": false,
											"id": 1500,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "719:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "712:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1499,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "712:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1502,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "774:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "767:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1501,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "767:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1504,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "825:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1505,
											"src": "818:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1503,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "818:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "695:5:13",
									"nodeType": "StructDefinition",
									"scope": 2014,
									"src": "688:187:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 1508,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "896:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2014,
									"src": "883:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Round_$1505_storage",
										"typeString": "struct sweetspot.Round"
									},
									"typeName": {
										"id": 1507,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1506,
											"name": "Round",
											"nameLocations": [
												"883:5:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1505,
											"src": "883:5:13"
										},
										"referencedDeclaration": 1505,
										"src": "883:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Round_$1505_storage_ptr",
											"typeString": "struct sweetspot.Round"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aee9c872",
									"id": 1512,
									"mutability": "mutable",
									"name": "totalBalances",
									"nameLocation": "1034:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2014,
									"src": "999:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1511,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1509,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1007:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "999:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1510,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1018:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9590e8a",
									"id": 1518,
									"mutability": "mutable",
									"name": "allowedAmounts",
									"nameLocation": "1152:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2014,
									"src": "1097:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1517,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1513,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1105:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1097:47:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1516,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1514,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1116:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1515,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1135:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
									"id": 1526,
									"name": "Deposit",
									"nameLocation": "1182:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1206:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1190:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1233:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1217:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1248:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1240:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1189:66:13"
									},
									"src": "1176:80:13"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1534,
									"name": "Withdraw",
									"nameLocation": "1268:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1293:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1277:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1277:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1321:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1305:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1336:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1328:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1276:67:13"
									},
									"src": "1262:82:13"
								},
								{
									"anonymous": false,
									"eventSelector": "f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683",
									"id": 1542,
									"name": "Claimed",
									"nameLocation": "1356:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1380:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1364:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1406:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1390:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1421:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "1413:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:65:13"
									},
									"src": "1350:79:13"
								},
								{
									"anonymous": false,
									"eventSelector": "3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2",
									"id": 1550,
									"name": "AllowedAmountUpdated",
									"nameLocation": "1441:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1478:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1462:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1500:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1484:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "1515:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "1507:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:64:13"
									},
									"src": "1435:91:13"
								},
								{
									"anonymous": false,
									"eventSelector": "09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13",
									"id": 1558,
									"name": "RoundUpdated",
									"nameLocation": "1538:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": false,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1559:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1551:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": false,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1574:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1566:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "1586:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "1579:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1555,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1579:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:48:13"
									},
									"src": "1532:67:13"
								},
								{
									"errorSelector": "fa7410d4",
									"id": 1566,
									"name": "NotWithinRound",
									"nameLocation": "1613:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "currentTime",
												"nameLocation": "1636:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1628:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1628:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1657:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1649:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1672:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1664:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1627:49:13"
									},
									"src": "1607:70:13"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "1706:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1571,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1740:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1744:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1740:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1569,
																	"name": "scorer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1725:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IScorer_$1472",
																		"typeString": "contract IScorer"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1732:7:13",
																"memberName": "isAdmin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1471,
																"src": "1725:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view external returns (bool)"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1725:26:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6572206973206e6f7420616e2061646d696e",
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1753:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															},
															"value": "Caller is not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c42e6f213cb252dbb58053bcbc469c8ef3e91890f0261efae8e5d5a1aecda226",
																"typeString": "literal_string \"Caller is not an admin\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1717:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "1717:61:13"
											},
											{
												"id": 1577,
												"nodeType": "PlaceholderStatement",
												"src": "1789:1:13"
											}
										]
									},
									"id": 1579,
									"name": "onlyAdmin",
									"nameLocation": "1694:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1703:2:13"
									},
									"src": "1685:113:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "2050:144:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "2076:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1589,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2061:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2061:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1593,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "2126:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2126:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "ExpressionStatement",
												"src": "2126:24:13"
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1596,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "2161:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1598,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1582,
																"src": "2178:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1597,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "2170:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1472_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2170:16:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1472",
															"typeString": "contract IScorer"
														}
													},
													"src": "2161:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1472",
														"typeString": "contract IScorer"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "2161:25:13"
											}
										]
									},
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "1806:165:13",
										"text": "@notice Initializes this contract with its initial state.\n @param _scorer The scoring contract address.\n @param owner The owner address."
									},
									"functionSelector": "485cc955",
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1587,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1586,
												"name": "initializer",
												"nameLocations": [
													"2038:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2038:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2038:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "1986:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "2005:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1997:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2022:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2014:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:32:13"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2050:0:13"
									},
									"scope": 2014,
									"src": "1977:217:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "2491:395:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "2506:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1614,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "2515:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2506:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1645,
													"nodeType": "Block",
													"src": "2616:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1626,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2639:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2648:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2639:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2651:42:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		},
																		"value": "Deposit amount must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		}
																	],
																	"id": 1625,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2631:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2631:63:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1631,
															"nodeType": "ExpressionStatement",
															"src": "2631:63:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1636,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2740:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2744:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2740:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1640,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2760:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_sweetspot_$2014",
																					"typeString": "contract sweetspot"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_sweetspot_$2014",
																					"typeString": "contract sweetspot"
																				}
																			],
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2752:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1638,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2752:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2752:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1642,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "2767:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1633,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "2716:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1632,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "2709:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2709:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2723:16:13",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 821,
																	"src": "2709:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2709:65:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "2709:65:13"
														}
													]
												},
												"id": 1646,
												"nodeType": "IfStatement",
												"src": "2502:284:13",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "2529:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1617,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2552:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2556:5:13",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2552:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1619,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "2565:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2552:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2573:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		},
																		"value": "Incorrect Ether amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		}
																	],
																	"id": 1616,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2544:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2544:54:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1623,
															"nodeType": "ExpressionStatement",
															"src": "2544:54:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "2798:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1649,
														"indexExpression": {
															"id": 1648,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2812:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2798:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1650,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "2822:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2798:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2798:30:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1654,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2852:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2856:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2852:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1656,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2864:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1657,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "2871:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1653,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "2844:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "EmitStatement",
												"src": "2839:39:13"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2202:204:13",
										"text": "@notice Deposits funds into this jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The value to add (in wei for Ether)."
									},
									"functionSelector": "47e7ef24",
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1611,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1610,
												"name": "nonReentrant",
												"nameLocations": [
													"2477:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "2477:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2477:12:13"
										}
									],
									"name": "deposit",
									"nameLocation": "2421:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2437:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2429:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2452:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "2444:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:31:13"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:13"
									},
									"scope": 2014,
									"src": "2412:474:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "3023:880:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1669,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3048:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3054:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3048:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1671,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3066:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3079:5:13",
															"memberName": "start",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1500,
															"src": "3066:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3048:36:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1674,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3088:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3094:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3088:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1676,
																"name": "currentRound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "3106:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Round_$1505_storage",
																	"typeString": "struct sweetspot.Round storage ref"
																}
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3119:3:13",
															"memberName": "end",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1502,
															"src": "3106:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "3088:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3048:74:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "3044:183:13",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "3124:103:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1681,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3161:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3167:9:13",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "3161:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1683,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3178:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3191:5:13",
																		"memberName": "start",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1500,
																		"src": "3178:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"expression": {
																			"id": 1685,
																			"name": "currentRound",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "3198:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Round_$1505_storage",
																				"typeString": "struct sweetspot.Round storage ref"
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3211:3:13",
																		"memberName": "end",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1502,
																		"src": "3198:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 1680,
																	"name": "NotWithinRound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "3146:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3146:69:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "3139:76:13"
														}
													]
												}
											},
											{
												"assignments": [
													1692
												],
												"declarations": [
													{
														"constant": false,
														"id": 1692,
														"mutability": "mutable",
														"name": "userAllowedAmount",
														"nameLocation": "3247:17:13",
														"nodeType": "VariableDeclaration",
														"scope": 1768,
														"src": "3239:25:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3239:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1693,
															"name": "allowedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "3267:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1696,
														"indexExpression": {
															"expression": {
																"id": 1694,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3282:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3286:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3282:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3267:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1698,
													"indexExpression": {
														"id": 1697,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3294:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3267:33:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3239:61:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1701,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3319:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3339:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3319:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3342:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															},
															"value": "No claimable amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															}
														],
														"id": 1700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3311:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "ExpressionStatement",
												"src": "3311:53:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1708,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "3383:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1710,
																"indexExpression": {
																	"id": 1709,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "3397:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3383:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1711,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1692,
																"src": "3407:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3383:41:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3426:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3375:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3375:79:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3375:79:13"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1716,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "3467:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1720,
															"indexExpression": {
																"expression": {
																	"id": 1717,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3482:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3486:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3482:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3467:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1721,
														"indexExpression": {
															"id": 1719,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3494:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3467:33:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3503:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3467:37:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3467:37:13"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1725,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "3515:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1727,
														"indexExpression": {
															"id": 1726,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3529:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3515:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1728,
														"name": "userAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1692,
														"src": "3539:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3515:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "3515:41:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1731,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "3573:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1732,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3582:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3573:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1759,
													"nodeType": "Block",
													"src": "3749:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1754,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3791:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3795:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3791:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1756,
																		"name": "userAllowedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1692,
																		"src": "3803:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1751,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1664,
																				"src": "3771:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1750,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "3764:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3764:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3778:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "3764:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3764:57:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1758,
															"nodeType": "ExpressionStatement",
															"src": "3764:57:13"
														}
													]
												},
												"id": 1760,
												"nodeType": "IfStatement",
												"src": "3569:264:13",
												"trueBody": {
													"id": 1749,
													"nodeType": "Block",
													"src": "3596:147:13",
													"statements": [
														{
															"assignments": [
																1735,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1735,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3617:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1749,
																	"src": "3612:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1734,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3612:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1743,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3672:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1736,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3630:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3634:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3630:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3641:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3630:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1739,
																			"name": "userAllowedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "3653:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3630:41:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3630:45:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3611:64:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1745,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "3698:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3707:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1744,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3690:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3690:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1748,
															"nodeType": "ExpressionStatement",
															"src": "3690:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1762,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3858:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3862:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3858:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1764,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3870:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "userAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1692,
															"src": "3877:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "3850:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3850:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1767,
												"nodeType": "EmitStatement",
												"src": "3845:50:13"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "2894:71:13",
										"text": "@notice Claims the full allowed amount for a user during the round."
									},
									"functionSelector": "1e83409a",
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1666,
												"name": "nonReentrant",
												"nameLocations": [
													"3010:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "3010:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3010:12:13"
										}
									],
									"name": "claim",
									"nameLocation": "2980:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2994:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "2986:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:15:13"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3023:0:13"
									},
									"scope": 2014,
									"src": "2971:932:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "4225:171:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "4244:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4260:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4252:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4252:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4252:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4244:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616464726573732075736572",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4264:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															},
															"value": "Zero address user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0ef5f4579c9a30e93cc7a7a4d759860b0b29749f1e02a82d79b1807b2b8cb7d",
																"typeString": "literal_string \"Zero address user\""
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4236:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1790,
												"nodeType": "ExpressionStatement",
												"src": "4236:48:13"
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1791,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "4295:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1794,
															"indexExpression": {
																"id": 1792,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "4310:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4295:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1795,
														"indexExpression": {
															"id": 1793,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4316:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4295:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1796,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "4325:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4295:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "4295:36:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1800,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "4368:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "4374:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1802,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "4381:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1799,
														"name": "AllowedAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "4347:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4347:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "EmitStatement",
												"src": "4342:46:13"
											}
										]
									},
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "3911:218:13",
										"text": "@notice Sets the allowed amount for a specific user and token.\n @param user The address of the user.\n @param token The token address.\n @param amount The allowed amount for the user."
									},
									"functionSelector": "b807a3c4",
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1778,
												"name": "onlyAdmin",
												"nameLocations": [
													"4215:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4215:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4215:9:13"
										}
									],
									"name": "setAllowedAmount",
									"nameLocation": "4144:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4169:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4161:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4183:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4175:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4175:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4198:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "4190:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:45:13"
									},
									"returnParameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4225:0:13"
									},
									"scope": 2014,
									"src": "4135:261:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "4659:452:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1822,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "4678:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4684:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4678:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1824,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "4694:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4702:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4694:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4678:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d617463686564206172726179206c656e67746873",
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4710:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															},
															"value": "Mismatched array lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															}
														],
														"id": 1821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4670:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4670:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1829,
												"nodeType": "ExpressionStatement",
												"src": "4670:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1831,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "4756:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4763:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4756:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1833,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "4773:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4781:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4773:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4756:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d617463686564206172726179206c656e67746873",
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4789:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															},
															"value": "Mismatched array lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bca8fcbfb75a5d97a4afbb748360d406765059ed24956ac8dc1959fbf07f7085",
																"typeString": "literal_string \"Mismatched array lengths\""
															}
														],
														"id": 1830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4748:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4748:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "4748:68:13"
											},
											{
												"body": {
													"id": 1876,
													"nodeType": "Block",
													"src": "4870:234:13",
													"statements": [
														{
															"expression": {
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1850,
																			"name": "allowedAmounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "4971:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1857,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1851,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "4986:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1853,
																			"indexExpression": {
																				"id": 1852,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1840,
																				"src": "4992:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4986:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4971:24:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1858,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1854,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "4996:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1856,
																		"indexExpression": {
																			"id": 1855,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "5003:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4996:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4971:35:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1859,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "5009:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1861,
																	"indexExpression": {
																		"id": 1860,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "5017:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5009:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4971:48:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1863,
															"nodeType": "ExpressionStatement",
															"src": "4971:48:13"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1865,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "5060:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1867,
																		"indexExpression": {
																			"id": 1866,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "5066:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5060:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1868,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1810,
																			"src": "5070:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1870,
																		"indexExpression": {
																			"id": 1869,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "5077:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5070:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1871,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "5081:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1873,
																		"indexExpression": {
																			"id": 1872,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1840,
																			"src": "5089:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5081:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1864,
																	"name": "AllowedAmountUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "5039:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5039:53:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1875,
															"nodeType": "EmitStatement",
															"src": "5034:58:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1843,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "4847:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1844,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "4851:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4857:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4851:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4847:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"initializationExpression": {
													"assignments": [
														1840
													],
													"declarations": [
														{
															"constant": false,
															"id": 1840,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4840:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1877,
															"src": "4832:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4832:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1842,
													"initialValue": {
														"hexValue": "30",
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4844:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4832:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4865:3:13",
														"subExpression": {
															"id": 1847,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "4865:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1849,
													"nodeType": "ExpressionStatement",
													"src": "4865:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4827:277:13"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "4404:85:13",
										"text": "@notice Sets the allowed amount for multiple users for a given token in one call."
									},
									"functionSelector": "c5d60b51",
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1819,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1818,
												"name": "onlyAdmin",
												"nameLocations": [
													"4649:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "4649:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4649:9:13"
										}
									],
									"name": "bulkSetAllowedAmount",
									"nameLocation": "4504:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "4554:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4535:25:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1808,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4535:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1809,
													"nodeType": "ArrayTypeName",
													"src": "4535:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "4590:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4571:24:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1811,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4571:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1812,
													"nodeType": "ArrayTypeName",
													"src": "4571:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4625:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "4606:26:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1814,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4606:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1815,
													"nodeType": "ArrayTypeName",
													"src": "4606:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4524:115:13"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4659:0:13"
									},
									"scope": 2014,
									"src": "4495:616:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1912,
										"nodeType": "Block",
										"src": "5452:186:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1892,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5471:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1893,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "5479:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "5471:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5484:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															},
															"value": "Start time must be before end time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															}
														],
														"id": 1891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5463:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5463:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "5463:58:13"
											},
											{
												"expression": {
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1898,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "5532:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_storage",
															"typeString": "struct sweetspot.Round storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1900,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "5553:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1901,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "5560:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															{
																"id": 1902,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "5565:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1899,
															"name": "Round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "5547:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Round_$1505_storage_ptr_$",
																"typeString": "type(struct sweetspot.Round storage pointer)"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5547:30:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1505_memory_ptr",
															"typeString": "struct sweetspot.Round memory"
														}
													},
													"src": "5532:45:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$1505_storage",
														"typeString": "struct sweetspot.Round storage ref"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "5532:45:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1907,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "5606:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1908,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "5613:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 1909,
															"name": "metadataURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "5618:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1906,
														"name": "RoundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "5593:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5593:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "EmitStatement",
												"src": "5588:42:13"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "5119:235:13",
										"text": "@notice Sets the round duration and metadata URI.\n @param start The start timestamp of the round.\n @param end The end timestamp of the round.\n @param metadataURI The IPFS URI for the round metadata."
									},
									"functionSelector": "a9012c89",
									"id": 1913,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1889,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1888,
												"name": "onlyAdmin",
												"nameLocations": [
													"5442:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1579,
												"src": "5442:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5442:9:13"
										}
									],
									"name": "setRound",
									"nameLocation": "5369:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "5386:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5378:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1881,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5378:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "5401:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5393:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1883,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5393:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "5420:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "5406:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1885,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5406:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5377:55:13"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5452:0:13"
									},
									"scope": 2014,
									"src": "5360:278:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "5925:496:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "5944:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5953:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5944:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5956:45:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															},
															"value": "Withdrawal amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															}
														],
														"id": 1925,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5936:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5936:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "ExpressionStatement",
												"src": "5936:66:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1933,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "6021:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1935,
																"indexExpression": {
																	"id": 1934,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1916,
																	"src": "6035:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6021:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1936,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "6045:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6053:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1932,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6013:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:61:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "6013:61:13"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "6087:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1943,
														"indexExpression": {
															"id": 1942,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "6101:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6087:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1944,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "6111:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6087:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "6087:30:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1947,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "6134:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1948,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "6143:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6134:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1975,
													"nodeType": "Block",
													"src": "6296:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1970,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "6338:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6338:7:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1972,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1918,
																		"src": "6347:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1967,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1916,
																				"src": "6318:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1966,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "6311:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$747_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1968,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6311:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$747",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6325:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "6311:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$747_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$747_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6311:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "6311:43:13"
														}
													]
												},
												"id": 1976,
												"nodeType": "IfStatement",
												"src": "6130:236:13",
												"trueBody": {
													"id": 1965,
													"nodeType": "Block",
													"src": "6157:133:13",
													"statements": [
														{
															"assignments": [
																1951,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1951,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "6178:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 1965,
																	"src": "6173:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1950,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6173:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1959,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6219:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1952,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "6191:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6191:7:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6199:4:13",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "6191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1955,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1918,
																			"src": "6211:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "6191:27:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6191:31:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6172:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1961,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "6245:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6254:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1960,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6237:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6237:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1964,
															"nodeType": "ExpressionStatement",
															"src": "6237:41:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1978,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "6390:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6390:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1980,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "6399:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1981,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "6406:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1977,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "6381:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6381:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1983,
												"nodeType": "EmitStatement",
												"src": "6376:37:13"
											}
										]
									},
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "5646:191:13",
										"text": "@notice Withdraws funds from the jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The amount to withdraw."
									},
									"functionSelector": "f3fef3a3",
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1921,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1920,
												"name": "onlyOwner",
												"nameLocations": [
													"5901:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5901:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5901:9:13"
										},
										{
											"id": 1923,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1922,
												"name": "nonReentrant",
												"nameLocations": [
													"5911:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 493,
												"src": "5911:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5911:12:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "5852:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5869:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "5861:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5861:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5884:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "5876:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5860:31:13"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5925:0:13"
									},
									"scope": 2014,
									"src": "5843:578:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "6527:119:13",
										"statements": [
											{
												"expression": {
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1989,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "6538:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1991,
														"indexExpression": {
															"id": 1990,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "6552:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6538:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1992,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6569:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6573:5:13",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6569:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6538:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "6538:40:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6602:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6606:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6602:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "6614:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2000,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6628:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6632:5:13",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6628:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1996,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "6594:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6594:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2003,
												"nodeType": "EmitStatement",
												"src": "6589:49:13"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "6429:65:13",
										"text": "@notice Allows Ether deposits directly via fallback function."
									},
									"id": 2005,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6507:2:13"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6527:0:13"
									},
									"scope": 2014,
									"src": "6500:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "6682:118:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "537765657473706f743a20757365206465706f7369742829",
															"id": 2009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6765:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																"typeString": "literal_string \"Sweetspot: use deposit()\""
															},
															"value": "Sweetspot: use deposit()"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_27d7ea81cbaf0a0b02eea7b1644019cc31271c4da24dc2abdb33127b3a05742f",
																"typeString": "literal_string \"Sweetspot: use deposit()\""
															}
														],
														"id": 2008,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6758:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6758:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "6758:34:13"
											}
										]
									},
									"id": 2013,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6662:2:13"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6682:0:13"
									},
									"scope": 2014,
									"src": "6654:146:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2015,
							"src": "454:6349:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								761,
								1566
							],
							"usedEvents": [
								41,
								219,
								1526,
								1534,
								1542,
								1550,
								1558
							]
						}
					],
					"src": "33:6772:13"
				},
				"id": 13
			}
		}
	}
}