{
	"id": "8b78261a1f276b4c87cfead310872c07",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/cookie-jar.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract nCookieJar is OwnableUpgradeable {\r\n    using SafeERC20 for IERC20;\r\n    address public token; // Address of USDGLO or address(0) for ETH\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n    uint256 public dailyLimit; // Limit per user per day\r\n    uint256 public totalBalance; // Total balance in the jar\r\n    uint256 public scoreRequired; // Minimum score required to claim\r\n    mapping(address => uint256) public lastClaimed; // Tracks last claim time for users\r\n\r\n    event Deposit(address indexed depositor, uint256 amount);\r\n    event Claimed(address indexed claimant, uint256 amount);\r\n    event UpdatedDailyLimit(uint256 newLimit);\r\n    event UpdatedScoreRequired(uint256 newScoreRequired);\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @dev This is a special initialization phase where external calls are not allowed,\r\n    /// and it can be called only once at instance creation time.\r\n    function initialize(\r\n        address _token,\r\n        address _scorer,\r\n        uint256 _dailyLimit,\r\n        address owner,\r\n        uint256 _scoreRequired\r\n    ) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n\r\n        token = _token;\r\n        scorer = IScorer(_scorer);\r\n        dailyLimit = _dailyLimit;\r\n        scoreRequired = _scoreRequired;\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar.\r\n    ///\r\n    /// @dev This can be either ETH or a specific token, depending on what's set in token.\r\n    ///\r\n    /// @param amount The value to add (in wei for ETH).\r\n    function deposit(uint256 amount) external payable {\r\n        if (token == address(0)) {\r\n            // ETH deposit\r\n            require(msg.value == amount, \"Incorrect ETH amount\");\r\n        } else {\r\n            // Token deposit\r\n            IERC20(token).transferFrom(msg.sender, address(this), amount);\r\n        }\r\n        totalBalance += amount;\r\n        emit Deposit(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows users to claim a specified amount of funds from the contract.\r\n     *      The claim is subject to the following conditions:\r\n     *      - The amount claimed cannot exceed the daily limit (`dailyLimit`).\r\n     *      - The user can only claim once every 24 hours, enforced by `lastClaimed`.\r\n     *      - The user must have a score that meets or exceeds the required score (`scoreRequired`).\r\n     *      - The contract must have enough funds to fulfill the claim.\r\n     *\r\n     * @param amount The amount of funds the user wishes to claim.\r\n     * @notice Emits a `Claimed` event when the claim is successful.\r\n     * @notice The function supports both ETH and ERC20 token claims. The behavior is based on whether `token` is set to `address(0)` (ETH).\r\n     */\r\n    function claim(uint256 amount) external {\r\n        require(amount <= dailyLimit, \"Exceeds daily limit\");\r\n        require(block.timestamp - lastClaimed[msg.sender] >= 1 days, \"Daily claim limit reached\");\r\n        require(scorer.score(msg.sender) >= scoreRequired, \"Score too low\");\r\n        require(amount <= totalBalance, \"Insufficient funds in jar\");\r\n\r\n        lastClaimed[msg.sender] = block.timestamp;\r\n        totalBalance -= amount;\r\n\r\n        if (token == address(0)) {\r\n            // Send ETH\r\n            (bool success, ) = msg.sender.call{value: amount}(\"\");\r\n            require(success, \"ETH transfer failed\");\r\n        } else {\r\n            // Send token\r\n            IERC20(token).transfer(msg.sender, amount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, amount);\r\n    }\r\n\r\n    function updateDailyLimit(uint256 newLimit) external onlyOwner {\r\n        dailyLimit = newLimit;\r\n        emit UpdatedDailyLimit(newLimit);\r\n    }\r\n\r\n    function setScoreRequired(uint256 newScoreRequired) external onlyOwner {\r\n        scoreRequired = newScoreRequired;\r\n        emit UpdatedScoreRequired(newScoreRequired);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external onlyOwner {\r\n        require(amount <= totalBalance, \"Insufficient funds\");\r\n\r\n        totalBalance -= amount;\r\n        if (token == address(0)) {\r\n            // Withdraw ETH\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"ETH transfer failed\");\r\n        } else {\r\n            // Withdraw token\r\n            IERC20(token).transfer(owner(), amount);\r\n        }\r\n    }\r\n\r\n    function setScorer(address _scorer) external onlyOwner {\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    receive() external payable {\r\n        totalBalance += msg.value;\r\n        emit Deposit(msg.sender, msg.value);\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n        /**\r\n     * @dev Returns the score of a specific user.\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user) external view returns (uint256);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/cookie-jar.sol": {
				"nCookieJar": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "UpdatedDailyLimit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newScoreRequired",
									"type": "uint256"
								}
							],
							"name": "UpdatedScoreRequired",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dailyLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_dailyLimit",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_scoreRequired",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastClaimed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scoreRequired",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newScoreRequired",
									"type": "uint256"
								}
							],
							"name": "setScoreRequired",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								}
							],
							"name": "setScorer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newLimit",
									"type": "uint256"
								}
							],
							"name": "updateDailyLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"claim(uint256)": {
								"details": "Allows users to claim a specified amount of funds from the contract.      The claim is subject to the following conditions:      - The amount claimed cannot exceed the daily limit (`dailyLimit`).      - The user can only claim once every 24 hours, enforced by `lastClaimed`.      - The user must have a score that meets or exceeds the required score (`scoreRequired`).      - The contract must have enough funds to fulfill the claim.",
								"params": {
									"amount": "The amount of funds the user wishes to claim."
								}
							},
							"deposit(uint256)": {
								"details": "This can be either ETH or a specific token, depending on what's set in token.",
								"params": {
									"amount": "The value to add (in wei for ETH)."
								}
							},
							"initialize(address,address,uint256,address,uint256)": {
								"details": "This is a special initialization phase where external calls are not allowed, and it can be called only once at instance creation time."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cookie-jar.sol\":367:4983  contract nCookieJar is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cookie-jar.sol\":367:4983  contract nCookieJar is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xabbeb55b\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf7c00e63\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf8175d78\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xabbeb55b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xad7a672f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xde9d2a77\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x67eeba0c\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x67eeba0c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x013eba92\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x03191ffc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/cookie-jar.sol\":4917:4926  msg.value */\n      callvalue\n        /* \"contracts/cookie-jar.sol\":4901:4913  totalBalance */\n      0x03\n      0x00\n        /* \"contracts/cookie-jar.sol\":4901:4926  totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4950:4960  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":4942:4972  Deposit(msg.sender, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"contracts/cookie-jar.sol\":4962:4971  msg.value */\n      callvalue\n        /* \"contracts/cookie-jar.sol\":4942:4972  Deposit(msg.sender, msg.value) */\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/cookie-jar.sol\":367:4983  contract nCookieJar is OwnableUpgradeable {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/cookie-jar.sol\":773:819  mapping(address => uint256) public lastClaimed */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":4756:4855  function setScorer(address _scorer) external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"contracts/cookie-jar.sol\":4290:4748  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/cookie-jar.sol\":3154:3944  function claim(uint256 amount) external {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/cookie-jar.sol\":583:608  uint256 public dailyLimit */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/cookie-jar.sol\":519:540  IScorer public scorer */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":4106:4282  function setScoreRequired(uint256 newScoreRequired) external onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/cookie-jar.sol\":641:668  uint256 public totalBalance */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":1953:2353  function deposit(uint256 amount) external payable {... */\n    tag_13:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"contracts/cookie-jar.sol\":703:731  uint256 public scoreRequired */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/cookie-jar.sol\":1332:1730  function initialize(... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/cookie-jar.sol\":3952:4098  function updateDailyLimit(uint256 newLimit) external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/cookie-jar.sol\":449:469  address public token */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":773:819  mapping(address => uint256) public lastClaimed */\n    tag_32:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":4756:4855  function setScorer(address _scorer) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/cookie-jar.sol\":4839:4846  _scorer */\n      dup1\n        /* \"contracts/cookie-jar.sol\":4822:4828  scorer */\n      0x01\n      0x00\n        /* \"contracts/cookie-jar.sol\":4822:4847  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4756:4855  function setScorer(address _scorer) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":4290:4748  function withdraw(uint256 amount) external onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/cookie-jar.sol\":4372:4384  totalBalance */\n      sload(0x03)\n        /* \"contracts/cookie-jar.sol\":4362:4368  amount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":4362:4384  amount <= totalBalance */\n      gt\n      iszero\n        /* \"contracts/cookie-jar.sol\":4354:4407  require(amount <= totalBalance, \"Insufficient funds\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/cookie-jar.sol\":4436:4442  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":4420:4432  totalBalance */\n      0x03\n      0x00\n        /* \"contracts/cookie-jar.sol\":4420:4442  totalBalance -= amount */\n      dup3\n      dup3\n      sload\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4474:4475  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":4457:4476  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":4457:4462  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":4457:4476  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/cookie-jar.sol\":4453:4741  if (token == address(0)) {... */\n      tag_108\n      jumpi\n        /* \"contracts/cookie-jar.sol\":4523:4535  bool success */\n      0x00\n        /* \"contracts/cookie-jar.sol\":4541:4548  owner() */\n      tag_109\n        /* \"contracts/cookie-jar.sol\":4541:4546  owner */\n      tag_61\n        /* \"contracts/cookie-jar.sol\":4541:4548  owner() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/cookie-jar.sol\":4541:4553  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":4561:4567  amount */\n      dup3\n        /* \"contracts/cookie-jar.sol\":4541:4572  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_114\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_113)\n    tag_114:\n      0x60\n      swap2\n      pop\n    tag_113:\n      pop\n        /* \"contracts/cookie-jar.sol\":4522:4572  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cookie-jar.sol\":4595:4602  success */\n      dup1\n        /* \"contracts/cookie-jar.sol\":4587:4626  require(success, \"ETH transfer failed\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/cookie-jar.sol\":4478:4638  {... */\n      pop\n        /* \"contracts/cookie-jar.sol\":4453:4741  if (token == address(0)) {... */\n      jump(tag_118)\n    tag_108:\n        /* \"contracts/cookie-jar.sol\":4697:4702  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":4690:4712  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/cookie-jar.sol\":4713:4720  owner() */\n      tag_119\n        /* \"contracts/cookie-jar.sol\":4713:4718  owner */\n      tag_61\n        /* \"contracts/cookie-jar.sol\":4713:4720  owner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/cookie-jar.sol\":4722:4728  amount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4690:4729  IERC20(token).transfer(owner(), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      pop\n        /* \"contracts/cookie-jar.sol\":4453:4741  if (token == address(0)) {... */\n    tag_118:\n        /* \"contracts/cookie-jar.sol\":4290:4748  function withdraw(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":3154:3944  function claim(uint256 amount) external {... */\n    tag_46:\n        /* \"contracts/cookie-jar.sol\":3223:3233  dailyLimit */\n      sload(0x02)\n        /* \"contracts/cookie-jar.sol\":3213:3219  amount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":3213:3233  amount <= dailyLimit */\n      gt\n      iszero\n        /* \"contracts/cookie-jar.sol\":3205:3257  require(amount <= dailyLimit, \"Exceeds daily limit\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/cookie-jar.sol\":3321:3327  1 days */\n      0x015180\n        /* \"contracts/cookie-jar.sol\":3294:3305  lastClaimed */\n      0x05\n        /* \"contracts/cookie-jar.sol\":3294:3317  lastClaimed[msg.sender] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3306:3316  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3294:3317  lastClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/cookie-jar.sol\":3276:3291  block.timestamp */\n      timestamp\n        /* \"contracts/cookie-jar.sol\":3276:3317  block.timestamp - lastClaimed[msg.sender] */\n      tag_130\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_130:\n        /* \"contracts/cookie-jar.sol\":3276:3327  block.timestamp - lastClaimed[msg.sender] >= 1 days */\n      lt\n      iszero\n        /* \"contracts/cookie-jar.sol\":3268:3357  require(block.timestamp - lastClaimed[msg.sender] >= 1 days, \"Daily claim limit reached\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/cookie-jar.sol\":3404:3417  scoreRequired */\n      sload(0x04)\n        /* \"contracts/cookie-jar.sol\":3376:3382  scorer */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3376:3388  scorer.score */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x776f3843\n        /* \"contracts/cookie-jar.sol\":3389:3399  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3376:3400  scorer.score(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/cookie-jar.sol\":3376:3417  scorer.score(msg.sender) >= scoreRequired */\n      lt\n      iszero\n        /* \"contracts/cookie-jar.sol\":3368:3435  require(scorer.score(msg.sender) >= scoreRequired, \"Score too low\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/cookie-jar.sol\":3464:3476  totalBalance */\n      sload(0x03)\n        /* \"contracts/cookie-jar.sol\":3454:3460  amount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":3454:3476  amount <= totalBalance */\n      gt\n      iszero\n        /* \"contracts/cookie-jar.sol\":3446:3506  require(amount <= totalBalance, \"Insufficient funds in jar\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/cookie-jar.sol\":3545:3560  block.timestamp */\n      timestamp\n        /* \"contracts/cookie-jar.sol\":3519:3530  lastClaimed */\n      0x05\n        /* \"contracts/cookie-jar.sol\":3519:3542  lastClaimed[msg.sender] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3531:3541  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3519:3542  lastClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cookie-jar.sol\":3519:3560  lastClaimed[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":3587:3593  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":3571:3583  totalBalance */\n      0x03\n      0x00\n        /* \"contracts/cookie-jar.sol\":3571:3593  totalBalance -= amount */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":3627:3628  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3610:3629  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3610:3615  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3610:3629  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/cookie-jar.sol\":3606:3892  if (token == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"contracts/cookie-jar.sol\":3672:3684  bool success */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3690:3700  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3690:3705  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3713:3719  amount */\n      dup3\n        /* \"contracts/cookie-jar.sol\":3690:3724  msg.sender.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_147\n      swap1\n      tag_111\n      jump\t// in\n    tag_147:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_150\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_149)\n    tag_150:\n      0x60\n      swap2\n      pop\n    tag_149:\n      pop\n        /* \"contracts/cookie-jar.sol\":3671:3724  (bool success, ) = msg.sender.call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cookie-jar.sol\":3747:3754  success */\n      dup1\n        /* \"contracts/cookie-jar.sol\":3739:3778  require(success, \"ETH transfer failed\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_117\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/cookie-jar.sol\":3631:3790  {... */\n      pop\n        /* \"contracts/cookie-jar.sol\":3606:3892  if (token == address(0)) {... */\n      jump(tag_153)\n    tag_146:\n        /* \"contracts/cookie-jar.sol\":3845:3850  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3838:3860  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/cookie-jar.sol\":3861:3871  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3873:3879  amount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":3838:3880  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_157:\n      pop\n        /* \"contracts/cookie-jar.sol\":3606:3892  if (token == address(0)) {... */\n    tag_153:\n        /* \"contracts/cookie-jar.sol\":3917:3927  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3909:3936  Claimed(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n        /* \"contracts/cookie-jar.sol\":3929:3935  amount */\n      dup3\n        /* \"contracts/cookie-jar.sol\":3909:3936  Claimed(msg.sender, amount) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/cookie-jar.sol\":3154:3944  function claim(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":583:608  uint256 public dailyLimit */\n    tag_49:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":519:540  IScorer public scorer */\n    tag_56:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":4106:4282  function setScoreRequired(uint256 newScoreRequired) external onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/cookie-jar.sol\":4204:4220  newScoreRequired */\n      dup1\n        /* \"contracts/cookie-jar.sol\":4188:4201  scoreRequired */\n      0x04\n        /* \"contracts/cookie-jar.sol\":4188:4220  scoreRequired = newScoreRequired */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4236:4274  UpdatedScoreRequired(newScoreRequired) */\n      0xd98c5078430f16c83b85da9a630c27aac195dd3e768e25b102dfffa99f64b4d2\n        /* \"contracts/cookie-jar.sol\":4257:4273  newScoreRequired */\n      dup2\n        /* \"contracts/cookie-jar.sol\":4236:4274  UpdatedScoreRequired(newScoreRequired) */\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/cookie-jar.sol\":4106:4282  function setScoreRequired(uint256 newScoreRequired) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":641:668  uint256 public totalBalance */\n    tag_70:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":1953:2353  function deposit(uint256 amount) external payable {... */\n    tag_74:\n        /* \"contracts/cookie-jar.sol\":2035:2036  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2018:2037  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":2018:2023  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":2018:2037  token == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/cookie-jar.sol\":2014:2270  if (token == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"contracts/cookie-jar.sol\":2103:2109  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":2090:2099  msg.value */\n      callvalue\n        /* \"contracts/cookie-jar.sol\":2090:2109  msg.value == amount */\n      eq\n        /* \"contracts/cookie-jar.sol\":2082:2134  require(msg.value == amount, \"Incorrect ETH amount\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"contracts/cookie-jar.sol\":2014:2270  if (token == address(0)) {... */\n      jump(tag_176)\n    tag_172:\n        /* \"contracts/cookie-jar.sol\":2204:2209  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":2197:2223  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/cookie-jar.sol\":2224:2234  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":2244:2248  this */\n      address\n        /* \"contracts/cookie-jar.sol\":2251:2257  amount */\n      dup5\n        /* \"contracts/cookie-jar.sol\":2197:2258  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_181:\n      pop\n        /* \"contracts/cookie-jar.sol\":2014:2270  if (token == address(0)) {... */\n    tag_176:\n        /* \"contracts/cookie-jar.sol\":2296:2302  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":2280:2292  totalBalance */\n      0x03\n      0x00\n        /* \"contracts/cookie-jar.sol\":2280:2302  totalBalance += amount */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":2326:2336  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":2318:2345  Deposit(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n        /* \"contracts/cookie-jar.sol\":2338:2344  amount */\n      dup3\n        /* \"contracts/cookie-jar.sol\":2318:2345  Deposit(msg.sender, amount) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/cookie-jar.sol\":1953:2353  function deposit(uint256 amount) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":703:731  uint256 public scoreRequired */\n    tag_77:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":1332:1730  function initialize(... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_193:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_194\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_195\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_197:\n        /* \"contracts/cookie-jar.sol\":1529:1550  __Ownable_init(owner) */\n      tag_199\n        /* \"contracts/cookie-jar.sol\":1544:1549  owner */\n      dup8\n        /* \"contracts/cookie-jar.sol\":1529:1543  __Ownable_init */\n      tag_200\n        /* \"contracts/cookie-jar.sol\":1529:1550  __Ownable_init(owner) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/cookie-jar.sol\":1604:1610  _token */\n      dup10\n        /* \"contracts/cookie-jar.sol\":1596:1601  token */\n      0x00\n      dup1\n        /* \"contracts/cookie-jar.sol\":1596:1610  token = _token */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":1638:1645  _scorer */\n      dup9\n        /* \"contracts/cookie-jar.sol\":1621:1627  scorer */\n      0x01\n      0x00\n        /* \"contracts/cookie-jar.sol\":1621:1646  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":1670:1681  _dailyLimit */\n      dup8\n        /* \"contracts/cookie-jar.sol\":1657:1667  dailyLimit */\n      0x02\n        /* \"contracts/cookie-jar.sol\":1657:1681  dailyLimit = _dailyLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":1708:1722  _scoreRequired */\n      dup6\n        /* \"contracts/cookie-jar.sol\":1692:1705  scoreRequired */\n      0x04\n        /* \"contracts/cookie-jar.sol\":1692:1722  scoreRequired = _scoreRequired */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/cookie-jar.sol\":1332:1730  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":3952:4098  function updateDailyLimit(uint256 newLimit) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"contracts/cookie-jar.sol\":4039:4047  newLimit */\n      dup1\n        /* \"contracts/cookie-jar.sol\":4026:4036  dailyLimit */\n      0x02\n        /* \"contracts/cookie-jar.sol\":4026:4047  dailyLimit = newLimit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4063:4090  UpdatedDailyLimit(newLimit) */\n      0x69e4f4585a710debc30f07c33dcded264dd61e9dd02a9dfad6584a9189f185e4\n        /* \"contracts/cookie-jar.sol\":4081:4089  newLimit */\n      dup2\n        /* \"contracts/cookie-jar.sol\":4063:4090  UpdatedDailyLimit(newLimit) */\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/cookie-jar.sol\":3952:4098  function updateDailyLimit(uint256 newLimit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":449:469  address public token */\n    tag_94:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_238:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_239:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_25:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_286\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_238\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_287\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_238\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_289\n      tag_239\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":424:460   */\n    tag_288:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_240:\n        /* \"#utility.yul\":560:584   */\n      tag_291\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_238\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_27:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_293\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_240\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":906:1023   */\n    tag_242:\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      dup1\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":1152:1278   */\n    tag_244:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1229:1271   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1222:1227   */\n      dup3\n        /* \"#utility.yul\":1218:1272   */\n      and\n        /* \"#utility.yul\":1207:1272   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1380   */\n    tag_245:\n        /* \"#utility.yul\":1321:1328   */\n      0x00\n        /* \"#utility.yul\":1350:1374   */\n      tag_299\n        /* \"#utility.yul\":1368:1373   */\n      dup3\n        /* \"#utility.yul\":1350:1374   */\n      tag_244\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1339:1374   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1386:1508   */\n    tag_246:\n        /* \"#utility.yul\":1459:1483   */\n      tag_301\n        /* \"#utility.yul\":1477:1482   */\n      dup2\n        /* \"#utility.yul\":1459:1483   */\n      tag_245\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1452:1457   */\n      dup2\n        /* \"#utility.yul\":1449:1484   */\n      eq\n        /* \"#utility.yul\":1439:1502   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1439:1502   */\n    tag_302:\n        /* \"#utility.yul\":1386:1508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1653   */\n    tag_247:\n        /* \"#utility.yul\":1560:1565   */\n      0x00\n        /* \"#utility.yul\":1598:1604   */\n      dup2\n        /* \"#utility.yul\":1585:1605   */\n      calldataload\n        /* \"#utility.yul\":1576:1605   */\n      swap1\n      pop\n        /* \"#utility.yul\":1614:1647   */\n      tag_304\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1614:1647   */\n      tag_246\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1514:1653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:1988   */\n    tag_31:\n        /* \"#utility.yul\":1718:1724   */\n      0x00\n        /* \"#utility.yul\":1767:1769   */\n      0x20\n        /* \"#utility.yul\":1755:1764   */\n      dup3\n        /* \"#utility.yul\":1746:1753   */\n      dup5\n        /* \"#utility.yul\":1742:1765   */\n      sub\n        /* \"#utility.yul\":1738:1770   */\n      slt\n        /* \"#utility.yul\":1735:1854   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1773:1852   */\n      tag_307\n      tag_242\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1735:1854   */\n    tag_306:\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1918:1971   */\n      tag_308\n        /* \"#utility.yul\":1963:1970   */\n      dup5\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1943:1952   */\n      dup6\n        /* \"#utility.yul\":1939:1961   */\n      add\n        /* \"#utility.yul\":1918:1971   */\n      tag_247\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1908:1971   */\n      swap2\n      pop\n        /* \"#utility.yul\":1864:1981   */\n      pop\n        /* \"#utility.yul\":1659:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2116   */\n    tag_248:\n        /* \"#utility.yul\":2067:2091   */\n      tag_310\n        /* \"#utility.yul\":2085:2090   */\n      dup2\n        /* \"#utility.yul\":2067:2091   */\n      tag_238\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2057:2092   */\n      eq\n        /* \"#utility.yul\":2047:2110   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":2106:2107   */\n      0x00\n        /* \"#utility.yul\":2103:2104   */\n      dup1\n        /* \"#utility.yul\":2096:2108   */\n      revert\n        /* \"#utility.yul\":2047:2110   */\n    tag_311:\n        /* \"#utility.yul\":1994:2116   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2261   */\n    tag_249:\n        /* \"#utility.yul\":2168:2173   */\n      0x00\n        /* \"#utility.yul\":2206:2212   */\n      dup2\n        /* \"#utility.yul\":2193:2213   */\n      calldataload\n        /* \"#utility.yul\":2184:2213   */\n      swap1\n      pop\n        /* \"#utility.yul\":2222:2255   */\n      tag_313\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2222:2255   */\n      tag_248\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2122:2261   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2267:2596   */\n    tag_41:\n        /* \"#utility.yul\":2326:2332   */\n      0x00\n        /* \"#utility.yul\":2375:2377   */\n      0x20\n        /* \"#utility.yul\":2363:2372   */\n      dup3\n        /* \"#utility.yul\":2354:2361   */\n      dup5\n        /* \"#utility.yul\":2350:2373   */\n      sub\n        /* \"#utility.yul\":2346:2378   */\n      slt\n        /* \"#utility.yul\":2343:2462   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":2381:2460   */\n      tag_316\n      tag_242\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2343:2462   */\n    tag_315:\n        /* \"#utility.yul\":2501:2502   */\n      0x00\n        /* \"#utility.yul\":2526:2579   */\n      tag_317\n        /* \"#utility.yul\":2571:2578   */\n      dup5\n        /* \"#utility.yul\":2562:2568   */\n      dup3\n        /* \"#utility.yul\":2551:2560   */\n      dup6\n        /* \"#utility.yul\":2547:2569   */\n      add\n        /* \"#utility.yul\":2526:2579   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2516:2579   */\n      swap2\n      pop\n        /* \"#utility.yul\":2472:2589   */\n      pop\n        /* \"#utility.yul\":2267:2596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2602:2662   */\n    tag_250:\n        /* \"#utility.yul\":2630:2633   */\n      0x00\n        /* \"#utility.yul\":2651:2656   */\n      dup2\n        /* \"#utility.yul\":2644:2656   */\n      swap1\n      pop\n        /* \"#utility.yul\":2602:2662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2668:2810   */\n    tag_251:\n        /* \"#utility.yul\":2718:2727   */\n      0x00\n        /* \"#utility.yul\":2751:2804   */\n      tag_320\n        /* \"#utility.yul\":2769:2803   */\n      tag_321\n        /* \"#utility.yul\":2778:2802   */\n      tag_322\n        /* \"#utility.yul\":2796:2801   */\n      dup5\n        /* \"#utility.yul\":2778:2802   */\n      tag_244\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2769:2803   */\n      tag_250\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2751:2804   */\n      tag_244\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2738:2804   */\n      swap1\n      pop\n        /* \"#utility.yul\":2668:2810   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2816:2942   */\n    tag_252:\n        /* \"#utility.yul\":2866:2875   */\n      0x00\n        /* \"#utility.yul\":2899:2936   */\n      tag_324\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2899:2936   */\n      tag_251\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2886:2936   */\n      swap1\n      pop\n        /* \"#utility.yul\":2816:2942   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2948:3090   */\n    tag_253:\n        /* \"#utility.yul\":3014:3023   */\n      0x00\n        /* \"#utility.yul\":3047:3084   */\n      tag_326\n        /* \"#utility.yul\":3078:3083   */\n      dup3\n        /* \"#utility.yul\":3047:3084   */\n      tag_252\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3034:3084   */\n      swap1\n      pop\n        /* \"#utility.yul\":2948:3090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3096:3259   */\n    tag_254:\n        /* \"#utility.yul\":3199:3252   */\n      tag_328\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3199:3252   */\n      tag_253\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3194:3197   */\n      dup3\n        /* \"#utility.yul\":3187:3253   */\n      mstore\n        /* \"#utility.yul\":3096:3259   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3265:3519   */\n    tag_58:\n        /* \"#utility.yul\":3374:3378   */\n      0x00\n        /* \"#utility.yul\":3412:3414   */\n      0x20\n        /* \"#utility.yul\":3401:3410   */\n      dup3\n        /* \"#utility.yul\":3397:3415   */\n      add\n        /* \"#utility.yul\":3389:3415   */\n      swap1\n      pop\n        /* \"#utility.yul\":3425:3512   */\n      tag_330\n        /* \"#utility.yul\":3509:3510   */\n      0x00\n        /* \"#utility.yul\":3498:3507   */\n      dup4\n        /* \"#utility.yul\":3494:3511   */\n      add\n        /* \"#utility.yul\":3485:3491   */\n      dup5\n        /* \"#utility.yul\":3425:3512   */\n      tag_254\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3265:3519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3643   */\n    tag_255:\n        /* \"#utility.yul\":3612:3636   */\n      tag_332\n        /* \"#utility.yul\":3630:3635   */\n      dup2\n        /* \"#utility.yul\":3612:3636   */\n      tag_245\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3607:3610   */\n      dup3\n        /* \"#utility.yul\":3600:3637   */\n      mstore\n        /* \"#utility.yul\":3525:3643   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3649:3871   */\n    tag_63:\n        /* \"#utility.yul\":3742:3746   */\n      0x00\n        /* \"#utility.yul\":3780:3782   */\n      0x20\n        /* \"#utility.yul\":3769:3778   */\n      dup3\n        /* \"#utility.yul\":3765:3783   */\n      add\n        /* \"#utility.yul\":3757:3783   */\n      swap1\n      pop\n        /* \"#utility.yul\":3793:3864   */\n      tag_334\n        /* \"#utility.yul\":3861:3862   */\n      0x00\n        /* \"#utility.yul\":3850:3859   */\n      dup4\n        /* \"#utility.yul\":3846:3863   */\n      add\n        /* \"#utility.yul\":3837:3843   */\n      dup5\n        /* \"#utility.yul\":3793:3864   */\n      tag_255\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3649:3871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3877:4788   */\n    tag_86:\n        /* \"#utility.yul\":3972:3978   */\n      0x00\n        /* \"#utility.yul\":3980:3986   */\n      dup1\n        /* \"#utility.yul\":3988:3994   */\n      0x00\n        /* \"#utility.yul\":3996:4002   */\n      dup1\n        /* \"#utility.yul\":4004:4010   */\n      0x00\n        /* \"#utility.yul\":4053:4056   */\n      0xa0\n        /* \"#utility.yul\":4041:4050   */\n      dup7\n        /* \"#utility.yul\":4032:4039   */\n      dup9\n        /* \"#utility.yul\":4028:4051   */\n      sub\n        /* \"#utility.yul\":4024:4057   */\n      slt\n        /* \"#utility.yul\":4021:4141   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":4060:4139   */\n      tag_337\n      tag_242\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4021:4141   */\n    tag_336:\n        /* \"#utility.yul\":4180:4181   */\n      0x00\n        /* \"#utility.yul\":4205:4258   */\n      tag_338\n        /* \"#utility.yul\":4250:4257   */\n      dup9\n        /* \"#utility.yul\":4241:4247   */\n      dup3\n        /* \"#utility.yul\":4230:4239   */\n      dup10\n        /* \"#utility.yul\":4226:4248   */\n      add\n        /* \"#utility.yul\":4205:4258   */\n      tag_247\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4195:4258   */\n      swap6\n      pop\n        /* \"#utility.yul\":4151:4268   */\n      pop\n        /* \"#utility.yul\":4307:4309   */\n      0x20\n        /* \"#utility.yul\":4333:4386   */\n      tag_339\n        /* \"#utility.yul\":4378:4385   */\n      dup9\n        /* \"#utility.yul\":4369:4375   */\n      dup3\n        /* \"#utility.yul\":4358:4367   */\n      dup10\n        /* \"#utility.yul\":4354:4376   */\n      add\n        /* \"#utility.yul\":4333:4386   */\n      tag_247\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4323:4386   */\n      swap5\n      pop\n        /* \"#utility.yul\":4278:4396   */\n      pop\n        /* \"#utility.yul\":4435:4437   */\n      0x40\n        /* \"#utility.yul\":4461:4514   */\n      tag_340\n        /* \"#utility.yul\":4506:4513   */\n      dup9\n        /* \"#utility.yul\":4497:4503   */\n      dup3\n        /* \"#utility.yul\":4486:4495   */\n      dup10\n        /* \"#utility.yul\":4482:4504   */\n      add\n        /* \"#utility.yul\":4461:4514   */\n      tag_249\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4451:4514   */\n      swap4\n      pop\n        /* \"#utility.yul\":4406:4524   */\n      pop\n        /* \"#utility.yul\":4563:4565   */\n      0x60\n        /* \"#utility.yul\":4589:4642   */\n      tag_341\n        /* \"#utility.yul\":4634:4641   */\n      dup9\n        /* \"#utility.yul\":4625:4631   */\n      dup3\n        /* \"#utility.yul\":4614:4623   */\n      dup10\n        /* \"#utility.yul\":4610:4632   */\n      add\n        /* \"#utility.yul\":4589:4642   */\n      tag_247\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4579:4642   */\n      swap3\n      pop\n        /* \"#utility.yul\":4534:4652   */\n      pop\n        /* \"#utility.yul\":4691:4694   */\n      0x80\n        /* \"#utility.yul\":4718:4771   */\n      tag_342\n        /* \"#utility.yul\":4763:4770   */\n      dup9\n        /* \"#utility.yul\":4754:4760   */\n      dup3\n        /* \"#utility.yul\":4743:4752   */\n      dup10\n        /* \"#utility.yul\":4739:4761   */\n      add\n        /* \"#utility.yul\":4718:4771   */\n      tag_249\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4708:4771   */\n      swap2\n      pop\n        /* \"#utility.yul\":4662:4781   */\n      pop\n        /* \"#utility.yul\":3877:4788   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4794:4963   */\n    tag_256:\n        /* \"#utility.yul\":4878:4889   */\n      0x00\n        /* \"#utility.yul\":4912:4918   */\n      dup3\n        /* \"#utility.yul\":4907:4910   */\n      dup3\n        /* \"#utility.yul\":4900:4919   */\n      mstore\n        /* \"#utility.yul\":4952:4956   */\n      0x20\n        /* \"#utility.yul\":4947:4950   */\n      dup3\n        /* \"#utility.yul\":4943:4957   */\n      add\n        /* \"#utility.yul\":4928:4957   */\n      swap1\n      pop\n        /* \"#utility.yul\":4794:4963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5137   */\n    tag_257:\n        /* \"#utility.yul\":5109:5129   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":5105:5106   */\n      0x00\n        /* \"#utility.yul\":5097:5103   */\n      dup3\n        /* \"#utility.yul\":5093:5107   */\n      add\n        /* \"#utility.yul\":5086:5130   */\n      mstore\n        /* \"#utility.yul\":4969:5137   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5509   */\n    tag_258:\n        /* \"#utility.yul\":5285:5288   */\n      0x00\n        /* \"#utility.yul\":5306:5373   */\n      tag_346\n        /* \"#utility.yul\":5370:5372   */\n      0x12\n        /* \"#utility.yul\":5365:5368   */\n      dup4\n        /* \"#utility.yul\":5306:5373   */\n      tag_256\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5299:5373   */\n      swap2\n      pop\n        /* \"#utility.yul\":5382:5475   */\n      tag_347\n        /* \"#utility.yul\":5471:5474   */\n      dup3\n        /* \"#utility.yul\":5382:5475   */\n      tag_257\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5500:5502   */\n      0x20\n        /* \"#utility.yul\":5495:5498   */\n      dup3\n        /* \"#utility.yul\":5491:5503   */\n      add\n        /* \"#utility.yul\":5484:5503   */\n      swap1\n      pop\n        /* \"#utility.yul\":5143:5509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5515:5934   */\n    tag_105:\n        /* \"#utility.yul\":5681:5685   */\n      0x00\n        /* \"#utility.yul\":5719:5721   */\n      0x20\n        /* \"#utility.yul\":5708:5717   */\n      dup3\n        /* \"#utility.yul\":5704:5722   */\n      add\n        /* \"#utility.yul\":5696:5722   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5777   */\n      dup2\n        /* \"#utility.yul\":5762:5766   */\n      dup2\n        /* \"#utility.yul\":5758:5778   */\n      sub\n        /* \"#utility.yul\":5754:5755   */\n      0x00\n        /* \"#utility.yul\":5743:5752   */\n      dup4\n        /* \"#utility.yul\":5739:5756   */\n      add\n        /* \"#utility.yul\":5732:5779   */\n      mstore\n        /* \"#utility.yul\":5796:5927   */\n      tag_349\n        /* \"#utility.yul\":5922:5926   */\n      dup2\n        /* \"#utility.yul\":5796:5927   */\n      tag_258\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5788:5927   */\n      swap1\n      pop\n        /* \"#utility.yul\":5515:5934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5940:6134   */\n    tag_107:\n        /* \"#utility.yul\":5980:5984   */\n      0x00\n        /* \"#utility.yul\":6000:6020   */\n      tag_351\n        /* \"#utility.yul\":6018:6019   */\n      dup3\n        /* \"#utility.yul\":6000:6020   */\n      tag_238\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5995:6020   */\n      swap2\n      pop\n        /* \"#utility.yul\":6034:6054   */\n      tag_352\n        /* \"#utility.yul\":6052:6053   */\n      dup4\n        /* \"#utility.yul\":6034:6054   */\n      tag_238\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6029:6054   */\n      swap3\n      pop\n        /* \"#utility.yul\":6078:6079   */\n      dup3\n        /* \"#utility.yul\":6075:6076   */\n      dup3\n        /* \"#utility.yul\":6071:6080   */\n      sub\n        /* \"#utility.yul\":6063:6080   */\n      swap1\n      pop\n        /* \"#utility.yul\":6102:6103   */\n      dup2\n        /* \"#utility.yul\":6096:6100   */\n      dup2\n        /* \"#utility.yul\":6093:6104   */\n      gt\n        /* \"#utility.yul\":6090:6127   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":6107:6125   */\n      tag_354\n      tag_239\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6090:6127   */\n    tag_353:\n        /* \"#utility.yul\":5940:6134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6140:6287   */\n    tag_259:\n        /* \"#utility.yul\":6241:6252   */\n      0x00\n        /* \"#utility.yul\":6278:6281   */\n      dup2\n        /* \"#utility.yul\":6263:6281   */\n      swap1\n      pop\n        /* \"#utility.yul\":6140:6287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6293:6407   */\n    tag_260:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6413:6811   */\n    tag_261:\n        /* \"#utility.yul\":6572:6575   */\n      0x00\n        /* \"#utility.yul\":6593:6676   */\n      tag_358\n        /* \"#utility.yul\":6674:6675   */\n      0x00\n        /* \"#utility.yul\":6669:6672   */\n      dup4\n        /* \"#utility.yul\":6593:6676   */\n      tag_259\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6586:6676   */\n      swap2\n      pop\n        /* \"#utility.yul\":6685:6778   */\n      tag_359\n        /* \"#utility.yul\":6774:6777   */\n      dup3\n        /* \"#utility.yul\":6685:6778   */\n      tag_260\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6803:6804   */\n      0x00\n        /* \"#utility.yul\":6798:6801   */\n      dup3\n        /* \"#utility.yul\":6794:6805   */\n      add\n        /* \"#utility.yul\":6787:6805   */\n      swap1\n      pop\n        /* \"#utility.yul\":6413:6811   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6817:7196   */\n    tag_111:\n        /* \"#utility.yul\":7001:7004   */\n      0x00\n        /* \"#utility.yul\":7023:7170   */\n      tag_361\n        /* \"#utility.yul\":7166:7169   */\n      dup3\n        /* \"#utility.yul\":7023:7170   */\n      tag_261\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7016:7170   */\n      swap2\n      pop\n        /* \"#utility.yul\":7187:7190   */\n      dup2\n        /* \"#utility.yul\":7180:7190   */\n      swap1\n      pop\n        /* \"#utility.yul\":6817:7196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7202:7371   */\n    tag_262:\n        /* \"#utility.yul\":7342:7363   */\n      0x455448207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":7338:7339   */\n      0x00\n        /* \"#utility.yul\":7330:7336   */\n      dup3\n        /* \"#utility.yul\":7326:7340   */\n      add\n        /* \"#utility.yul\":7319:7364   */\n      mstore\n        /* \"#utility.yul\":7202:7371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7377:7743   */\n    tag_263:\n        /* \"#utility.yul\":7519:7522   */\n      0x00\n        /* \"#utility.yul\":7540:7607   */\n      tag_364\n        /* \"#utility.yul\":7604:7606   */\n      0x13\n        /* \"#utility.yul\":7599:7602   */\n      dup4\n        /* \"#utility.yul\":7540:7607   */\n      tag_256\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":7533:7607   */\n      swap2\n      pop\n        /* \"#utility.yul\":7616:7709   */\n      tag_365\n        /* \"#utility.yul\":7705:7708   */\n      dup3\n        /* \"#utility.yul\":7616:7709   */\n      tag_262\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7734:7736   */\n      0x20\n        /* \"#utility.yul\":7729:7732   */\n      dup3\n        /* \"#utility.yul\":7725:7737   */\n      add\n        /* \"#utility.yul\":7718:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7377:7743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7749:8168   */\n    tag_117:\n        /* \"#utility.yul\":7915:7919   */\n      0x00\n        /* \"#utility.yul\":7953:7955   */\n      0x20\n        /* \"#utility.yul\":7942:7951   */\n      dup3\n        /* \"#utility.yul\":7938:7956   */\n      add\n        /* \"#utility.yul\":7930:7956   */\n      swap1\n      pop\n        /* \"#utility.yul\":8002:8011   */\n      dup2\n        /* \"#utility.yul\":7996:8000   */\n      dup2\n        /* \"#utility.yul\":7992:8012   */\n      sub\n        /* \"#utility.yul\":7988:7989   */\n      0x00\n        /* \"#utility.yul\":7977:7986   */\n      dup4\n        /* \"#utility.yul\":7973:7990   */\n      add\n        /* \"#utility.yul\":7966:8013   */\n      mstore\n        /* \"#utility.yul\":8030:8161   */\n      tag_367\n        /* \"#utility.yul\":8156:8160   */\n      dup2\n        /* \"#utility.yul\":8030:8161   */\n      tag_263\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8022:8161   */\n      swap1\n      pop\n        /* \"#utility.yul\":7749:8168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8174:8506   */\n    tag_121:\n        /* \"#utility.yul\":8295:8299   */\n      0x00\n        /* \"#utility.yul\":8333:8335   */\n      0x40\n        /* \"#utility.yul\":8322:8331   */\n      dup3\n        /* \"#utility.yul\":8318:8336   */\n      add\n        /* \"#utility.yul\":8310:8336   */\n      swap1\n      pop\n        /* \"#utility.yul\":8346:8417   */\n      tag_369\n        /* \"#utility.yul\":8414:8415   */\n      0x00\n        /* \"#utility.yul\":8403:8412   */\n      dup4\n        /* \"#utility.yul\":8399:8416   */\n      add\n        /* \"#utility.yul\":8390:8396   */\n      dup6\n        /* \"#utility.yul\":8346:8417   */\n      tag_255\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8427:8499   */\n      tag_370\n        /* \"#utility.yul\":8495:8497   */\n      0x20\n        /* \"#utility.yul\":8484:8493   */\n      dup4\n        /* \"#utility.yul\":8480:8498   */\n      add\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8427:8499   */\n      tag_240\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8174:8506   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8512:8602   */\n    tag_264:\n        /* \"#utility.yul\":8546:8553   */\n      0x00\n        /* \"#utility.yul\":8589:8594   */\n      dup2\n        /* \"#utility.yul\":8582:8595   */\n      iszero\n        /* \"#utility.yul\":8575:8596   */\n      iszero\n        /* \"#utility.yul\":8564:8596   */\n      swap1\n      pop\n        /* \"#utility.yul\":8512:8602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8608:8724   */\n    tag_265:\n        /* \"#utility.yul\":8678:8699   */\n      tag_373\n        /* \"#utility.yul\":8693:8698   */\n      dup2\n        /* \"#utility.yul\":8678:8699   */\n      tag_264\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8671:8676   */\n      dup2\n        /* \"#utility.yul\":8668:8700   */\n      eq\n        /* \"#utility.yul\":8658:8718   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":8714:8715   */\n      0x00\n        /* \"#utility.yul\":8711:8712   */\n      dup1\n        /* \"#utility.yul\":8704:8716   */\n      revert\n        /* \"#utility.yul\":8658:8718   */\n    tag_374:\n        /* \"#utility.yul\":8608:8724   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8730:8867   */\n    tag_266:\n        /* \"#utility.yul\":8784:8789   */\n      0x00\n        /* \"#utility.yul\":8815:8821   */\n      dup2\n        /* \"#utility.yul\":8809:8822   */\n      mload\n        /* \"#utility.yul\":8800:8822   */\n      swap1\n      pop\n        /* \"#utility.yul\":8831:8861   */\n      tag_376\n        /* \"#utility.yul\":8855:8860   */\n      dup2\n        /* \"#utility.yul\":8831:8861   */\n      tag_265\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8730:8867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8873:9218   */\n    tag_125:\n        /* \"#utility.yul\":8940:8946   */\n      0x00\n        /* \"#utility.yul\":8989:8991   */\n      0x20\n        /* \"#utility.yul\":8977:8986   */\n      dup3\n        /* \"#utility.yul\":8968:8975   */\n      dup5\n        /* \"#utility.yul\":8964:8987   */\n      sub\n        /* \"#utility.yul\":8960:8992   */\n      slt\n        /* \"#utility.yul\":8957:9076   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":8995:9074   */\n      tag_379\n      tag_242\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8957:9076   */\n    tag_378:\n        /* \"#utility.yul\":9115:9116   */\n      0x00\n        /* \"#utility.yul\":9140:9201   */\n      tag_380\n        /* \"#utility.yul\":9193:9200   */\n      dup5\n        /* \"#utility.yul\":9184:9190   */\n      dup3\n        /* \"#utility.yul\":9173:9182   */\n      dup6\n        /* \"#utility.yul\":9169:9191   */\n      add\n        /* \"#utility.yul\":9140:9201   */\n      tag_266\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9130:9201   */\n      swap2\n      pop\n        /* \"#utility.yul\":9086:9211   */\n      pop\n        /* \"#utility.yul\":8873:9218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9224:9393   */\n    tag_267:\n        /* \"#utility.yul\":9364:9385   */\n      0x45786365656473206461696c79206c696d697400000000000000000000000000\n        /* \"#utility.yul\":9360:9361   */\n      0x00\n        /* \"#utility.yul\":9352:9358   */\n      dup3\n        /* \"#utility.yul\":9348:9362   */\n      add\n        /* \"#utility.yul\":9341:9386   */\n      mstore\n        /* \"#utility.yul\":9224:9393   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9399:9765   */\n    tag_268:\n        /* \"#utility.yul\":9541:9544   */\n      0x00\n        /* \"#utility.yul\":9562:9629   */\n      tag_383\n        /* \"#utility.yul\":9626:9628   */\n      0x13\n        /* \"#utility.yul\":9621:9624   */\n      dup4\n        /* \"#utility.yul\":9562:9629   */\n      tag_256\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9555:9629   */\n      swap2\n      pop\n        /* \"#utility.yul\":9638:9731   */\n      tag_384\n        /* \"#utility.yul\":9727:9730   */\n      dup3\n        /* \"#utility.yul\":9638:9731   */\n      tag_267\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":9756:9758   */\n      0x20\n        /* \"#utility.yul\":9751:9754   */\n      dup3\n        /* \"#utility.yul\":9747:9759   */\n      add\n        /* \"#utility.yul\":9740:9759   */\n      swap1\n      pop\n        /* \"#utility.yul\":9399:9765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9771:10190   */\n    tag_129:\n        /* \"#utility.yul\":9937:9941   */\n      0x00\n        /* \"#utility.yul\":9975:9977   */\n      0x20\n        /* \"#utility.yul\":9964:9973   */\n      dup3\n        /* \"#utility.yul\":9960:9978   */\n      add\n        /* \"#utility.yul\":9952:9978   */\n      swap1\n      pop\n        /* \"#utility.yul\":10024:10033   */\n      dup2\n        /* \"#utility.yul\":10018:10022   */\n      dup2\n        /* \"#utility.yul\":10014:10034   */\n      sub\n        /* \"#utility.yul\":10010:10011   */\n      0x00\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9995:10012   */\n      add\n        /* \"#utility.yul\":9988:10035   */\n      mstore\n        /* \"#utility.yul\":10052:10183   */\n      tag_386\n        /* \"#utility.yul\":10178:10182   */\n      dup2\n        /* \"#utility.yul\":10052:10183   */\n      tag_268\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":10044:10183   */\n      swap1\n      pop\n        /* \"#utility.yul\":9771:10190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10196:10371   */\n    tag_269:\n        /* \"#utility.yul\":10336:10363   */\n      0x4461696c7920636c61696d206c696d6974207265616368656400000000000000\n        /* \"#utility.yul\":10332:10333   */\n      0x00\n        /* \"#utility.yul\":10324:10330   */\n      dup3\n        /* \"#utility.yul\":10320:10334   */\n      add\n        /* \"#utility.yul\":10313:10364   */\n      mstore\n        /* \"#utility.yul\":10196:10371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10377:10743   */\n    tag_270:\n        /* \"#utility.yul\":10519:10522   */\n      0x00\n        /* \"#utility.yul\":10540:10607   */\n      tag_389\n        /* \"#utility.yul\":10604:10606   */\n      0x19\n        /* \"#utility.yul\":10599:10602   */\n      dup4\n        /* \"#utility.yul\":10540:10607   */\n      tag_256\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10533:10607   */\n      swap2\n      pop\n        /* \"#utility.yul\":10616:10709   */\n      tag_390\n        /* \"#utility.yul\":10705:10708   */\n      dup3\n        /* \"#utility.yul\":10616:10709   */\n      tag_269\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10734:10736   */\n      0x20\n        /* \"#utility.yul\":10729:10732   */\n      dup3\n        /* \"#utility.yul\":10725:10737   */\n      add\n        /* \"#utility.yul\":10718:10737   */\n      swap1\n      pop\n        /* \"#utility.yul\":10377:10743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10749:11168   */\n    tag_133:\n        /* \"#utility.yul\":10915:10919   */\n      0x00\n        /* \"#utility.yul\":10953:10955   */\n      0x20\n        /* \"#utility.yul\":10942:10951   */\n      dup3\n        /* \"#utility.yul\":10938:10956   */\n      add\n        /* \"#utility.yul\":10930:10956   */\n      swap1\n      pop\n        /* \"#utility.yul\":11002:11011   */\n      dup2\n        /* \"#utility.yul\":10996:11000   */\n      dup2\n        /* \"#utility.yul\":10992:11012   */\n      sub\n        /* \"#utility.yul\":10988:10989   */\n      0x00\n        /* \"#utility.yul\":10977:10986   */\n      dup4\n        /* \"#utility.yul\":10973:10990   */\n      add\n        /* \"#utility.yul\":10966:11013   */\n      mstore\n        /* \"#utility.yul\":11030:11161   */\n      tag_392\n        /* \"#utility.yul\":11156:11160   */\n      dup2\n        /* \"#utility.yul\":11030:11161   */\n      tag_270\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":11022:11161   */\n      swap1\n      pop\n        /* \"#utility.yul\":10749:11168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11174:11317   */\n    tag_271:\n        /* \"#utility.yul\":11231:11236   */\n      0x00\n        /* \"#utility.yul\":11262:11268   */\n      dup2\n        /* \"#utility.yul\":11256:11269   */\n      mload\n        /* \"#utility.yul\":11247:11269   */\n      swap1\n      pop\n        /* \"#utility.yul\":11278:11311   */\n      tag_394\n        /* \"#utility.yul\":11305:11310   */\n      dup2\n        /* \"#utility.yul\":11278:11311   */\n      tag_248\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11174:11317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11323:11674   */\n    tag_138:\n        /* \"#utility.yul\":11393:11399   */\n      0x00\n        /* \"#utility.yul\":11442:11444   */\n      0x20\n        /* \"#utility.yul\":11430:11439   */\n      dup3\n        /* \"#utility.yul\":11421:11428   */\n      dup5\n        /* \"#utility.yul\":11417:11440   */\n      sub\n        /* \"#utility.yul\":11413:11445   */\n      slt\n        /* \"#utility.yul\":11410:11529   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":11448:11527   */\n      tag_397\n      tag_242\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11410:11529   */\n    tag_396:\n        /* \"#utility.yul\":11568:11569   */\n      0x00\n        /* \"#utility.yul\":11593:11657   */\n      tag_398\n        /* \"#utility.yul\":11649:11656   */\n      dup5\n        /* \"#utility.yul\":11640:11646   */\n      dup3\n        /* \"#utility.yul\":11629:11638   */\n      dup6\n        /* \"#utility.yul\":11625:11647   */\n      add\n        /* \"#utility.yul\":11593:11657   */\n      tag_271\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":11583:11657   */\n      swap2\n      pop\n        /* \"#utility.yul\":11539:11667   */\n      pop\n        /* \"#utility.yul\":11323:11674   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11680:11843   */\n    tag_272:\n        /* \"#utility.yul\":11820:11835   */\n      0x53636f726520746f6f206c6f7700000000000000000000000000000000000000\n        /* \"#utility.yul\":11816:11817   */\n      0x00\n        /* \"#utility.yul\":11808:11814   */\n      dup3\n        /* \"#utility.yul\":11804:11818   */\n      add\n        /* \"#utility.yul\":11797:11836   */\n      mstore\n        /* \"#utility.yul\":11680:11843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11849:12215   */\n    tag_273:\n        /* \"#utility.yul\":11991:11994   */\n      0x00\n        /* \"#utility.yul\":12012:12079   */\n      tag_401\n        /* \"#utility.yul\":12076:12078   */\n      0x0d\n        /* \"#utility.yul\":12071:12074   */\n      dup4\n        /* \"#utility.yul\":12012:12079   */\n      tag_256\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12005:12079   */\n      swap2\n      pop\n        /* \"#utility.yul\":12088:12181   */\n      tag_402\n        /* \"#utility.yul\":12177:12180   */\n      dup3\n        /* \"#utility.yul\":12088:12181   */\n      tag_272\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12206:12208   */\n      0x20\n        /* \"#utility.yul\":12201:12204   */\n      dup3\n        /* \"#utility.yul\":12197:12209   */\n      add\n        /* \"#utility.yul\":12190:12209   */\n      swap1\n      pop\n        /* \"#utility.yul\":11849:12215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12221:12640   */\n    tag_141:\n        /* \"#utility.yul\":12387:12391   */\n      0x00\n        /* \"#utility.yul\":12425:12427   */\n      0x20\n        /* \"#utility.yul\":12414:12423   */\n      dup3\n        /* \"#utility.yul\":12410:12428   */\n      add\n        /* \"#utility.yul\":12402:12428   */\n      swap1\n      pop\n        /* \"#utility.yul\":12474:12483   */\n      dup2\n        /* \"#utility.yul\":12468:12472   */\n      dup2\n        /* \"#utility.yul\":12464:12484   */\n      sub\n        /* \"#utility.yul\":12460:12461   */\n      0x00\n        /* \"#utility.yul\":12449:12458   */\n      dup4\n        /* \"#utility.yul\":12445:12462   */\n      add\n        /* \"#utility.yul\":12438:12485   */\n      mstore\n        /* \"#utility.yul\":12502:12633   */\n      tag_404\n        /* \"#utility.yul\":12628:12632   */\n      dup2\n        /* \"#utility.yul\":12502:12633   */\n      tag_273\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12494:12633   */\n      swap1\n      pop\n        /* \"#utility.yul\":12221:12640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12646:12821   */\n    tag_274:\n        /* \"#utility.yul\":12786:12813   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":12782:12783   */\n      0x00\n        /* \"#utility.yul\":12774:12780   */\n      dup3\n        /* \"#utility.yul\":12770:12784   */\n      add\n        /* \"#utility.yul\":12763:12814   */\n      mstore\n        /* \"#utility.yul\":12646:12821   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:13193   */\n    tag_275:\n        /* \"#utility.yul\":12969:12972   */\n      0x00\n        /* \"#utility.yul\":12990:13057   */\n      tag_407\n        /* \"#utility.yul\":13054:13056   */\n      0x19\n        /* \"#utility.yul\":13049:13052   */\n      dup4\n        /* \"#utility.yul\":12990:13057   */\n      tag_256\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12983:13057   */\n      swap2\n      pop\n        /* \"#utility.yul\":13066:13159   */\n      tag_408\n        /* \"#utility.yul\":13155:13158   */\n      dup3\n        /* \"#utility.yul\":13066:13159   */\n      tag_274\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":13184:13186   */\n      0x20\n        /* \"#utility.yul\":13179:13182   */\n      dup3\n        /* \"#utility.yul\":13175:13187   */\n      add\n        /* \"#utility.yul\":13168:13187   */\n      swap1\n      pop\n        /* \"#utility.yul\":12827:13193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13199:13618   */\n    tag_144:\n        /* \"#utility.yul\":13365:13369   */\n      0x00\n        /* \"#utility.yul\":13403:13405   */\n      0x20\n        /* \"#utility.yul\":13392:13401   */\n      dup3\n        /* \"#utility.yul\":13388:13406   */\n      add\n        /* \"#utility.yul\":13380:13406   */\n      swap1\n      pop\n        /* \"#utility.yul\":13452:13461   */\n      dup2\n        /* \"#utility.yul\":13446:13450   */\n      dup2\n        /* \"#utility.yul\":13442:13462   */\n      sub\n        /* \"#utility.yul\":13438:13439   */\n      0x00\n        /* \"#utility.yul\":13427:13436   */\n      dup4\n        /* \"#utility.yul\":13423:13440   */\n      add\n        /* \"#utility.yul\":13416:13463   */\n      mstore\n        /* \"#utility.yul\":13480:13611   */\n      tag_410\n        /* \"#utility.yul\":13606:13610   */\n      dup2\n        /* \"#utility.yul\":13480:13611   */\n      tag_275\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":13472:13611   */\n      swap1\n      pop\n        /* \"#utility.yul\":13199:13618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13624:13794   */\n    tag_276:\n        /* \"#utility.yul\":13764:13786   */\n      0x496e636f72726563742045544820616d6f756e74000000000000000000000000\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13752:13758   */\n      dup3\n        /* \"#utility.yul\":13748:13762   */\n      add\n        /* \"#utility.yul\":13741:13787   */\n      mstore\n        /* \"#utility.yul\":13624:13794   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13800:14166   */\n    tag_277:\n        /* \"#utility.yul\":13942:13945   */\n      0x00\n        /* \"#utility.yul\":13963:14030   */\n      tag_413\n        /* \"#utility.yul\":14027:14029   */\n      0x14\n        /* \"#utility.yul\":14022:14025   */\n      dup4\n        /* \"#utility.yul\":13963:14030   */\n      tag_256\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":13956:14030   */\n      swap2\n      pop\n        /* \"#utility.yul\":14039:14132   */\n      tag_414\n        /* \"#utility.yul\":14128:14131   */\n      dup3\n        /* \"#utility.yul\":14039:14132   */\n      tag_276\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":14157:14159   */\n      0x20\n        /* \"#utility.yul\":14152:14155   */\n      dup3\n        /* \"#utility.yul\":14148:14160   */\n      add\n        /* \"#utility.yul\":14141:14160   */\n      swap1\n      pop\n        /* \"#utility.yul\":13800:14166   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14172:14591   */\n    tag_175:\n        /* \"#utility.yul\":14338:14342   */\n      0x00\n        /* \"#utility.yul\":14376:14378   */\n      0x20\n        /* \"#utility.yul\":14365:14374   */\n      dup3\n        /* \"#utility.yul\":14361:14379   */\n      add\n        /* \"#utility.yul\":14353:14379   */\n      swap1\n      pop\n        /* \"#utility.yul\":14425:14434   */\n      dup2\n        /* \"#utility.yul\":14419:14423   */\n      dup2\n        /* \"#utility.yul\":14415:14435   */\n      sub\n        /* \"#utility.yul\":14411:14412   */\n      0x00\n        /* \"#utility.yul\":14400:14409   */\n      dup4\n        /* \"#utility.yul\":14396:14413   */\n      add\n        /* \"#utility.yul\":14389:14436   */\n      mstore\n        /* \"#utility.yul\":14453:14584   */\n      tag_416\n        /* \"#utility.yul\":14579:14583   */\n      dup2\n        /* \"#utility.yul\":14453:14584   */\n      tag_277\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14445:14584   */\n      swap1\n      pop\n        /* \"#utility.yul\":14172:14591   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14597:15039   */\n    tag_178:\n        /* \"#utility.yul\":14746:14750   */\n      0x00\n        /* \"#utility.yul\":14784:14786   */\n      0x60\n        /* \"#utility.yul\":14773:14782   */\n      dup3\n        /* \"#utility.yul\":14769:14787   */\n      add\n        /* \"#utility.yul\":14761:14787   */\n      swap1\n      pop\n        /* \"#utility.yul\":14797:14868   */\n      tag_418\n        /* \"#utility.yul\":14865:14866   */\n      0x00\n        /* \"#utility.yul\":14854:14863   */\n      dup4\n        /* \"#utility.yul\":14850:14867   */\n      add\n        /* \"#utility.yul\":14841:14847   */\n      dup7\n        /* \"#utility.yul\":14797:14868   */\n      tag_255\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":14878:14950   */\n      tag_419\n        /* \"#utility.yul\":14946:14948   */\n      0x20\n        /* \"#utility.yul\":14935:14944   */\n      dup4\n        /* \"#utility.yul\":14931:14949   */\n      add\n        /* \"#utility.yul\":14922:14928   */\n      dup6\n        /* \"#utility.yul\":14878:14950   */\n      tag_255\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14960:15032   */\n      tag_420\n        /* \"#utility.yul\":15028:15030   */\n      0x40\n        /* \"#utility.yul\":15017:15026   */\n      dup4\n        /* \"#utility.yul\":15013:15031   */\n      add\n        /* \"#utility.yul\":15004:15010   */\n      dup5\n        /* \"#utility.yul\":14960:15032   */\n      tag_240\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":14597:15039   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15045:15130   */\n    tag_278:\n        /* \"#utility.yul\":15090:15097   */\n      0x00\n        /* \"#utility.yul\":15119:15124   */\n      dup2\n        /* \"#utility.yul\":15108:15124   */\n      swap1\n      pop\n        /* \"#utility.yul\":15045:15130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15136:15237   */\n    tag_279:\n        /* \"#utility.yul\":15172:15179   */\n      0x00\n        /* \"#utility.yul\":15212:15230   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15205:15210   */\n      dup3\n        /* \"#utility.yul\":15201:15231   */\n      and\n        /* \"#utility.yul\":15190:15231   */\n      swap1\n      pop\n        /* \"#utility.yul\":15136:15237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15243:15399   */\n    tag_280:\n        /* \"#utility.yul\":15300:15309   */\n      0x00\n        /* \"#utility.yul\":15333:15393   */\n      tag_424\n        /* \"#utility.yul\":15350:15392   */\n      tag_425\n        /* \"#utility.yul\":15359:15391   */\n      tag_426\n        /* \"#utility.yul\":15385:15390   */\n      dup5\n        /* \"#utility.yul\":15359:15391   */\n      tag_278\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15350:15392   */\n      tag_250\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15333:15393   */\n      tag_279\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":15320:15393   */\n      swap1\n      pop\n        /* \"#utility.yul\":15243:15399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15405:15550   */\n    tag_281:\n        /* \"#utility.yul\":15499:15543   */\n      tag_428\n        /* \"#utility.yul\":15537:15542   */\n      dup2\n        /* \"#utility.yul\":15499:15543   */\n      tag_280\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":15494:15497   */\n      dup3\n        /* \"#utility.yul\":15487:15544   */\n      mstore\n        /* \"#utility.yul\":15405:15550   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15556:15792   */\n    tag_203:\n        /* \"#utility.yul\":15656:15660   */\n      0x00\n        /* \"#utility.yul\":15694:15696   */\n      0x20\n        /* \"#utility.yul\":15683:15692   */\n      dup3\n        /* \"#utility.yul\":15679:15697   */\n      add\n        /* \"#utility.yul\":15671:15697   */\n      swap1\n      pop\n        /* \"#utility.yul\":15707:15785   */\n      tag_430\n        /* \"#utility.yul\":15782:15783   */\n      0x00\n        /* \"#utility.yul\":15771:15780   */\n      dup4\n        /* \"#utility.yul\":15767:15784   */\n      add\n        /* \"#utility.yul\":15758:15764   */\n      dup5\n        /* \"#utility.yul\":15707:15785   */\n      tag_281\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15556:15792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122040f2d7f931d5c3a5bd9a9d700e4e195e6d7fbcafa3736924637b6df356220df364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50611a188061001c5f395ff3fe6080604052600436106100f6575f3560e01c8063abbeb55b11610089578063f2fde38b11610058578063f2fde38b14610347578063f7c00e631461036f578063f8175d7814610397578063fc0c546a146103bf57610163565b8063abbeb55b146102af578063ad7a672f146102d7578063b6b55f2514610301578063de9d2a771461031d57610163565b806367eeba0c116100c557806367eeba0c1461021b578063715018a61461024557806385c758f71461025b5780638da5cb5b1461028557610163565b8063013eba921461016757806303191ffc146101a35780632e1a7d4d146101cb578063379607f5146101f357610163565b36610163573460035f82825461010c91906112da565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c34604051610159919061131c565b60405180910390a2005b5f80fd5b348015610172575f80fd5b5061018d60048036038101906101889190611393565b6103e9565b60405161019a919061131c565b60405180910390f35b3480156101ae575f80fd5b506101c960048036038101906101c49190611393565b6103fe565b005b3480156101d6575f80fd5b506101f160048036038101906101ec91906113e8565b610449565b005b3480156101fe575f80fd5b50610219600480360381019061021491906113e8565b61065b565b005b348015610226575f80fd5b5061022f610a97565b60405161023c919061131c565b60405180910390f35b348015610250575f80fd5b50610259610a9d565b005b348015610266575f80fd5b5061026f610ab0565b60405161027c919061146e565b60405180910390f35b348015610290575f80fd5b50610299610ad5565b6040516102a69190611496565b60405180910390f35b3480156102ba575f80fd5b506102d560048036038101906102d091906113e8565b610b0a565b005b3480156102e2575f80fd5b506102eb610b53565b6040516102f8919061131c565b60405180910390f35b61031b600480360381019061031691906113e8565b610b59565b005b348015610328575f80fd5b50610331610cf9565b60405161033e919061131c565b60405180910390f35b348015610352575f80fd5b5061036d60048036038101906103689190611393565b610cff565b005b34801561037a575f80fd5b50610395600480360381019061039091906114af565b610d83565b005b3480156103a2575f80fd5b506103bd60048036038101906103b891906113e8565b610f95565b005b3480156103ca575f80fd5b506103d3610fde565b6040516103e09190611496565b60405180910390f35b6005602052805f5260405f205f915090505481565b610406611001565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610451611001565b600354811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611580565b60405180910390fd5b8060035f8282546104a7919061159e565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105b5575f610509610ad5565b73ffffffffffffffffffffffffffffffffffffffff168260405161052c906115fe565b5f6040518083038185875af1925050503d805f8114610566576040519150601f19603f3d011682016040523d82523d5f602084013e61056b565b606091505b50509050806105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a69061165c565b60405180910390fd5b50610658565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6105f8610ad5565b836040518363ffffffff1660e01b815260040161061692919061167a565b6020604051808303815f875af1158015610632573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065691906116d6565b505b50565b6002548111156106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106979061174b565b60405180910390fd5b6201518060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426106ed919061159e565b101561072e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610725906117b3565b60405180910390fd5b60045460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663776f3843336040518263ffffffff1660e01b815260040161078b9190611496565b602060405180830381865afa1580156107a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ca91906117e5565b101561080b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108029061185a565b60405180910390fd5b600354811115610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610847906118c2565b60405180910390fd5b4260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060035f8282546108a3919061159e565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109aa575f3373ffffffffffffffffffffffffffffffffffffffff1682604051610921906115fe565b5f6040518083038185875af1925050503d805f811461095b576040519150601f19603f3d011682016040523d82523d5f602084013e610960565b606091505b50509050806109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b9061165c565b60405180910390fd5b50610a46565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a0492919061167a565b6020604051808303815f875af1158015610a20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4491906116d6565b505b3373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a82604051610a8c919061131c565b60405180910390a250565b60025481565b610aa5611001565b610aae5f611088565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610adf611159565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610b12611001565b806004819055507fd98c5078430f16c83b85da9a630c27aac195dd3e768e25b102dfffa99f64b4d281604051610b48919061131c565b60405180910390a150565b60035481565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bf257803414610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be49061192a565b60405180910390fd5b610c90565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c4e93929190611948565b6020604051808303815f875af1158015610c6a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8e91906116d6565b505b8060035f828254610ca191906112da565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610cee919061131c565b60405180910390a250565b60045481565b610d07611001565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d77575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d6e9190611496565b60405180910390fd5b610d8081611088565b50565b5f610d8c611180565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610dd45750825b90505f60018367ffffffffffffffff16148015610e0757505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e15575080155b15610e4c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e99576001855f0160086101000a81548160ff0219169083151502179055505b610ea2876111a7565b895f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600281905550856004819055508315610f89575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610f8091906119c9565b60405180910390a15b50505050505050505050565b610f9d611001565b806002819055507f69e4f4585a710debc30f07c33dcded264dd61e9dd02a9dfad6584a9189f185e481604051610fd3919061131c565b60405180910390a150565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110096111bb565b73ffffffffffffffffffffffffffffffffffffffff16611027610ad5565b73ffffffffffffffffffffffffffffffffffffffff16146110865761104a6111bb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161107d9190611496565b60405180910390fd5b565b5f611091611159565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6111af6111c2565b6111b881611202565b50565b5f33905090565b6111ca611286565b611200576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61120a6111c2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361127a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112719190611496565b60405180910390fd5b61128381611088565b50565b5f61128f611180565b5f0160089054906101000a900460ff16905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112e4826112a4565b91506112ef836112a4565b9250828201905080821115611307576113066112ad565b5b92915050565b611316816112a4565b82525050565b5f60208201905061132f5f83018461130d565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61136282611339565b9050919050565b61137281611358565b811461137c575f80fd5b50565b5f8135905061138d81611369565b92915050565b5f602082840312156113a8576113a7611335565b5b5f6113b58482850161137f565b91505092915050565b6113c7816112a4565b81146113d1575f80fd5b50565b5f813590506113e2816113be565b92915050565b5f602082840312156113fd576113fc611335565b5b5f61140a848285016113d4565b91505092915050565b5f819050919050565b5f61143661143161142c84611339565b611413565b611339565b9050919050565b5f6114478261141c565b9050919050565b5f6114588261143d565b9050919050565b6114688161144e565b82525050565b5f6020820190506114815f83018461145f565b92915050565b61149081611358565b82525050565b5f6020820190506114a95f830184611487565b92915050565b5f805f805f60a086880312156114c8576114c7611335565b5b5f6114d58882890161137f565b95505060206114e68882890161137f565b94505060406114f7888289016113d4565b93505060606115088882890161137f565b9250506080611519888289016113d4565b9150509295509295909350565b5f82825260208201905092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f61156a601283611526565b915061157582611536565b602082019050919050565b5f6020820190508181035f8301526115978161155e565b9050919050565b5f6115a8826112a4565b91506115b3836112a4565b92508282039050818111156115cb576115ca6112ad565b5b92915050565b5f81905092915050565b50565b5f6115e95f836115d1565b91506115f4826115db565b5f82019050919050565b5f611608826115de565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f611646601383611526565b915061165182611612565b602082019050919050565b5f6020820190508181035f8301526116738161163a565b9050919050565b5f60408201905061168d5f830185611487565b61169a602083018461130d565b9392505050565b5f8115159050919050565b6116b5816116a1565b81146116bf575f80fd5b50565b5f815190506116d0816116ac565b92915050565b5f602082840312156116eb576116ea611335565b5b5f6116f8848285016116c2565b91505092915050565b7f45786365656473206461696c79206c696d6974000000000000000000000000005f82015250565b5f611735601383611526565b915061174082611701565b602082019050919050565b5f6020820190508181035f83015261176281611729565b9050919050565b7f4461696c7920636c61696d206c696d69742072656163686564000000000000005f82015250565b5f61179d601983611526565b91506117a882611769565b602082019050919050565b5f6020820190508181035f8301526117ca81611791565b9050919050565b5f815190506117df816113be565b92915050565b5f602082840312156117fa576117f9611335565b5b5f611807848285016117d1565b91505092915050565b7f53636f726520746f6f206c6f77000000000000000000000000000000000000005f82015250565b5f611844600d83611526565b915061184f82611810565b602082019050919050565b5f6020820190508181035f83015261187181611838565b9050919050565b7f496e73756666696369656e742066756e647320696e206a6172000000000000005f82015250565b5f6118ac601983611526565b91506118b782611878565b602082019050919050565b5f6020820190508181035f8301526118d9816118a0565b9050919050565b7f496e636f72726563742045544820616d6f756e740000000000000000000000005f82015250565b5f611914601483611526565b915061191f826118e0565b602082019050919050565b5f6020820190508181035f83015261194181611908565b9050919050565b5f60608201905061195b5f830186611487565b6119686020830185611487565b611975604083018461130d565b949350505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6119b36119ae6119a98461197d565b611413565b611986565b9050919050565b6119c381611999565b82525050565b5f6020820190506119dc5f8301846119ba565b9291505056fea264697066735822122040f2d7f931d5c3a5bd9a9d700e4e195e6d7fbcafa3736924637b6df356220df364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A18 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABBEB55B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF7C00E63 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF8175D78 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3BF JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0xABBEB55B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xDE9D2A77 EQ PUSH2 0x31D JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x67EEBA0C GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x67EEBA0C EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x13EBA92 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x3191FFC EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1F3 JUMPI PUSH2 0x163 JUMP JUMPDEST CALLDATASIZE PUSH2 0x163 JUMPI CALLVALUE PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0xA9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x406 PUSH2 0x1001 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x451 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x159E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B5 JUMPI PUSH0 PUSH2 0x509 PUSH2 0xAD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x52C SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x56B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x658 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x5F8 PUSH2 0xAD5 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x616 SWAP3 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x159E JUMP JUMPDEST LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x776F3843 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x17E5 JUMP JUMPDEST LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x847 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x159E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AA JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x921 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x960 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xA46 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP3 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA20 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA44 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP3 PUSH1 0x40 MLOAD PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA5 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0xAAE PUSH0 PUSH2 0x1088 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xADF PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB12 PUSH2 0x1001 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xD98C5078430F16C83B85DA9A630C27AAC195DD3E768E25B102DFFFA99F64B4D2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF2 JUMPI DUP1 CALLVALUE EQ PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x192A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP3 PUSH1 0x40 MLOAD PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD07 PUSH2 0x1001 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0x1088 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xD8C PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDD4 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE07 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE15 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xEA2 DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP10 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xF89 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF9D PUSH2 0x1001 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x69E4F4585A710DEBC30F07C33DCDED264DD61E9DD02A9DFAD6584A9189F185E4 DUP2 PUSH1 0x40 MLOAD PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1009 PUSH2 0x11BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1027 PUSH2 0xAD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1086 JUMPI PUSH2 0x104A PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1091 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11AF PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x11B8 DUP2 PUSH2 0x1202 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11CA PUSH2 0x1286 JUMP JUMPDEST PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x120A PUSH2 0x11C2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1271 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x1088 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x128F PUSH2 0x1180 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12E4 DUP3 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12EF DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1316 DUP2 PUSH2 0x12A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132F PUSH0 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1362 DUP3 PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1372 DUP2 PUSH2 0x1358 JUMP JUMPDEST DUP2 EQ PUSH2 0x137C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138D DUP2 PUSH2 0x1369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B5 DUP5 DUP3 DUP6 ADD PUSH2 0x137F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x12A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13E2 DUP2 PUSH2 0x13BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x140A DUP5 DUP3 DUP6 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1436 PUSH2 0x1431 PUSH2 0x142C DUP5 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1447 DUP3 PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1458 DUP3 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x144E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1481 PUSH0 DUP4 ADD DUP5 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1490 DUP2 PUSH2 0x1358 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1487 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14D5 DUP9 DUP3 DUP10 ADD PUSH2 0x137F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x14E6 DUP9 DUP3 DUP10 ADD PUSH2 0x137F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x14F7 DUP9 DUP3 DUP10 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1508 DUP9 DUP3 DUP10 ADD PUSH2 0x137F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1519 DUP9 DUP3 DUP10 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156A PUSH1 0x12 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1575 DUP3 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1597 DUP2 PUSH2 0x155E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A8 DUP3 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B3 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x12AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15E9 PUSH0 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F4 DUP3 PUSH2 0x15DB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1608 DUP3 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1646 PUSH1 0x13 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1651 DUP3 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1673 DUP2 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x168D PUSH0 DUP4 ADD DUP6 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x169A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x16BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x16D0 DUP2 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F8 DUP5 DUP3 DUP6 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206461696C79206C696D697400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1735 PUSH1 0x13 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1740 DUP3 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 PUSH2 0x1729 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4461696C7920636C61696D206C696D6974207265616368656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179D PUSH1 0x19 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A8 DUP3 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17CA DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17DF DUP2 PUSH2 0x13BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1807 DUP5 DUP3 DUP6 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53636F726520746F6F206C6F7700000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1844 PUSH1 0xD DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x184F DUP3 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1871 DUP2 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18AC PUSH1 0x19 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B7 DUP3 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D9 DUP2 PUSH2 0x18A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1914 PUSH1 0x14 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x191F DUP3 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1941 DUP2 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x195B PUSH0 DUP4 ADD DUP7 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1968 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1975 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19B3 PUSH2 0x19AE PUSH2 0x19A9 DUP5 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x1986 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C3 DUP2 PUSH2 0x1999 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19DC PUSH0 DUP4 ADD DUP5 PUSH2 0x19BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH CALLCODE 0xD7 0xF9 BALANCE 0xD5 0xC3 0xA5 0xBD SWAP11 SWAP14 PUSH17 0xE4E195E6D7FBCAFA3736924637B6DF356 0x22 0xD RETURN PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "367:4616:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1711": {
									"entryPoint": null,
									"id": 1711,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 4519,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 4610,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 4546,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 4097,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 4480,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 4441,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 4742,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": 4539,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 4232,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claim_1597": {
									"entryPoint": 1627,
									"id": 1597,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@dailyLimit_1387": {
									"entryPoint": 2711,
									"id": 1387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1501": {
									"entryPoint": 2905,
									"id": 1501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1454": {
									"entryPoint": 3459,
									"id": 1454,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@lastClaimed_1395": {
									"entryPoint": 1001,
									"id": 1395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 2773,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 2717,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@scoreRequired_1391": {
									"entryPoint": 3321,
									"id": 1391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@scorer_1385": {
									"entryPoint": 2736,
									"id": 1385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setScoreRequired_1629": {
									"entryPoint": 2826,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setScorer_1695": {
									"entryPoint": 1022,
									"id": 1695,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token_1382": {
									"entryPoint": 4062,
									"id": 1382,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalBalance_1389": {
									"entryPoint": 2899,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 3327,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDailyLimit_1613": {
									"entryPoint": 3989,
									"id": 1613,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1681": {
									"entryPoint": 1097,
									"id": 1681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint256": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1723_to_t_address_fromStack": {
									"entryPoint": 5215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1723__to_t_address__fromStack_reversed": {
									"entryPoint": 5230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IScorer_$1723_to_t_address": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 6553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 5430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 5595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15795:13",
										"nodeType": "YulBlock",
										"src": "0:15795:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:13",
													"nodeType": "YulBlock",
													"src": "52:32:13",
													"statements": [
														{
															"nativeSrc": "62:16:13",
															"nodeType": "YulAssignment",
															"src": "62:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:13",
																"nodeType": "YulIdentifier",
																"src": "73:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:77:13"
											},
											{
												"body": {
													"nativeSrc": "118:152:13",
													"nodeType": "YulBlock",
													"src": "118:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:13",
																		"nodeType": "YulLiteral",
																		"src": "138:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:13"
																},
																"nativeSrc": "128:88:13",
																"nodeType": "YulFunctionCall",
																"src": "128:88:13"
															},
															"nativeSrc": "128:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:13",
																		"nodeType": "YulLiteral",
																		"src": "232:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:13",
																		"nodeType": "YulLiteral",
																		"src": "235:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:13"
																},
																"nativeSrc": "225:15:13",
																"nodeType": "YulFunctionCall",
																"src": "225:15:13"
															},
															"nativeSrc": "225:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:13",
																		"nodeType": "YulLiteral",
																		"src": "256:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:13",
																		"nodeType": "YulLiteral",
																		"src": "259:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:13"
																},
																"nativeSrc": "249:15:13",
																"nodeType": "YulFunctionCall",
																"src": "249:15:13"
															},
															"nativeSrc": "249:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:13"
											},
											{
												"body": {
													"nativeSrc": "320:147:13",
													"nodeType": "YulBlock",
													"src": "320:147:13",
													"statements": [
														{
															"nativeSrc": "330:25:13",
															"nodeType": "YulAssignment",
															"src": "330:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:13"
																},
																"nativeSrc": "335:20:13",
																"nodeType": "YulFunctionCall",
																"src": "335:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:13"
																}
															]
														},
														{
															"nativeSrc": "364:25:13",
															"nodeType": "YulAssignment",
															"src": "364:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:13"
																},
																"nativeSrc": "369:20:13",
																"nodeType": "YulFunctionCall",
																"src": "369:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:13"
																}
															]
														},
														{
															"nativeSrc": "398:16:13",
															"nodeType": "YulAssignment",
															"src": "398:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:13"
																},
																"nativeSrc": "405:9:13",
																"nodeType": "YulFunctionCall",
																"src": "405:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:13",
																"nodeType": "YulBlock",
																"src": "438:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:13"
																			},
																			"nativeSrc": "440:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:13"
																		},
																		"nativeSrc": "440:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:13"
																},
																"nativeSrc": "427:10:13",
																"nodeType": "YulFunctionCall",
																"src": "427:10:13"
															},
															"nativeSrc": "424:36:13",
															"nodeType": "YulIf",
															"src": "424:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:13",
														"nodeType": "YulTypedName",
														"src": "307:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:13",
														"nodeType": "YulTypedName",
														"src": "310:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:13",
														"nodeType": "YulTypedName",
														"src": "316:3:13",
														"type": ""
													}
												],
												"src": "276:191:13"
											},
											{
												"body": {
													"nativeSrc": "538:53:13",
													"nodeType": "YulBlock",
													"src": "538:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:13"
																		},
																		"nativeSrc": "560:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:13"
																},
																"nativeSrc": "548:37:13",
																"nodeType": "YulFunctionCall",
																"src": "548:37:13"
															},
															"nativeSrc": "548:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:13",
														"nodeType": "YulTypedName",
														"src": "526:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:13",
														"nodeType": "YulTypedName",
														"src": "533:3:13",
														"type": ""
													}
												],
												"src": "473:118:13"
											},
											{
												"body": {
													"nativeSrc": "695:124:13",
													"nodeType": "YulBlock",
													"src": "695:124:13",
													"statements": [
														{
															"nativeSrc": "705:26:13",
															"nodeType": "YulAssignment",
															"src": "705:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:13",
																		"nodeType": "YulLiteral",
																		"src": "728:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:13"
																},
																"nativeSrc": "713:18:13",
																"nodeType": "YulFunctionCall",
																"src": "713:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:13",
																				"nodeType": "YulLiteral",
																				"src": "809:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:13"
																		},
																		"nativeSrc": "794:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:13"
																},
																"nativeSrc": "741:71:13",
																"nodeType": "YulFunctionCall",
																"src": "741:71:13"
															},
															"nativeSrc": "741:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:13",
														"nodeType": "YulTypedName",
														"src": "667:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:13",
														"nodeType": "YulTypedName",
														"src": "679:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:13",
														"nodeType": "YulTypedName",
														"src": "690:4:13",
														"type": ""
													}
												],
												"src": "597:222:13"
											},
											{
												"body": {
													"nativeSrc": "865:35:13",
													"nodeType": "YulBlock",
													"src": "865:35:13",
													"statements": [
														{
															"nativeSrc": "875:19:13",
															"nodeType": "YulAssignment",
															"src": "875:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "891:2:13",
																		"nodeType": "YulLiteral",
																		"src": "891:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "885:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:13"
																},
																"nativeSrc": "885:9:13",
																"nodeType": "YulFunctionCall",
																"src": "885:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "825:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "858:6:13",
														"nodeType": "YulTypedName",
														"src": "858:6:13",
														"type": ""
													}
												],
												"src": "825:75:13"
											},
											{
												"body": {
													"nativeSrc": "995:28:13",
													"nodeType": "YulBlock",
													"src": "995:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1012:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1005:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1005:6:13"
																},
																"nativeSrc": "1005:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:13"
															},
															"nativeSrc": "1005:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1005:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "906:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "906:117:13"
											},
											{
												"body": {
													"nativeSrc": "1118:28:13",
													"nodeType": "YulBlock",
													"src": "1118:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1138:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:13"
																},
																"nativeSrc": "1128:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1128:12:13"
															},
															"nativeSrc": "1128:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1128:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1029:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1029:117:13"
											},
											{
												"body": {
													"nativeSrc": "1197:81:13",
													"nodeType": "YulBlock",
													"src": "1197:81:13",
													"statements": [
														{
															"nativeSrc": "1207:65:13",
															"nodeType": "YulAssignment",
															"src": "1207:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1222:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1222:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1229:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1229:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:13"
																},
																"nativeSrc": "1218:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1218:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1207:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1207:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1152:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:13",
														"nodeType": "YulTypedName",
														"src": "1179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1189:7:13",
														"nodeType": "YulTypedName",
														"src": "1189:7:13",
														"type": ""
													}
												],
												"src": "1152:126:13"
											},
											{
												"body": {
													"nativeSrc": "1329:51:13",
													"nodeType": "YulBlock",
													"src": "1329:51:13",
													"statements": [
														{
															"nativeSrc": "1339:35:13",
															"nodeType": "YulAssignment",
															"src": "1339:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1368:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1350:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1350:17:13"
																},
																"nativeSrc": "1350:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1350:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1339:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1339:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1284:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1311:5:13",
														"nodeType": "YulTypedName",
														"src": "1311:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1321:7:13",
														"nodeType": "YulTypedName",
														"src": "1321:7:13",
														"type": ""
													}
												],
												"src": "1284:96:13"
											},
											{
												"body": {
													"nativeSrc": "1429:79:13",
													"nodeType": "YulBlock",
													"src": "1429:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1486:16:13",
																"nodeType": "YulBlock",
																"src": "1486:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1495:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1488:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:13"
																			},
																			"nativeSrc": "1488:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:13"
																		},
																		"nativeSrc": "1488:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1452:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1477:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1459:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:13"
																				},
																				"nativeSrc": "1459:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1449:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:13"
																		},
																		"nativeSrc": "1449:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:43:13"
															},
															"nativeSrc": "1439:63:13",
															"nodeType": "YulIf",
															"src": "1439:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1386:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1422:5:13",
														"nodeType": "YulTypedName",
														"src": "1422:5:13",
														"type": ""
													}
												],
												"src": "1386:122:13"
											},
											{
												"body": {
													"nativeSrc": "1566:87:13",
													"nodeType": "YulBlock",
													"src": "1566:87:13",
													"statements": [
														{
															"nativeSrc": "1576:29:13",
															"nodeType": "YulAssignment",
															"src": "1576:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1598:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1598:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1585:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:13"
																},
																"nativeSrc": "1585:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1585:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1576:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1576:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1641:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1641:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1614:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1614:26:13"
																},
																"nativeSrc": "1614:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1614:33:13"
															},
															"nativeSrc": "1614:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1614:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1514:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1544:6:13",
														"nodeType": "YulTypedName",
														"src": "1544:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1552:3:13",
														"nodeType": "YulTypedName",
														"src": "1552:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"src": "1514:139:13"
											},
											{
												"body": {
													"nativeSrc": "1725:263:13",
													"nodeType": "YulBlock",
													"src": "1725:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1771:83:13",
																"nodeType": "YulBlock",
																"src": "1771:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1773:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1773:77:13"
																			},
																			"nativeSrc": "1773:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1773:79:13"
																		},
																		"nativeSrc": "1773:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1773:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1746:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1746:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1755:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1755:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:13"
																		},
																		"nativeSrc": "1742:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1742:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1767:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1738:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1738:3:13"
																},
																"nativeSrc": "1738:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1738:32:13"
															},
															"nativeSrc": "1735:119:13",
															"nodeType": "YulIf",
															"src": "1735:119:13"
														},
														{
															"nativeSrc": "1864:117:13",
															"nodeType": "YulBlock",
															"src": "1864:117:13",
															"statements": [
																{
																	"nativeSrc": "1879:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1893:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1893:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1883:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1883:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1908:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1908:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1943:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1943:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1954:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1954:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1939:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1939:3:13"
																				},
																				"nativeSrc": "1939:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1939:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1963:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1963:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1918:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1918:20:13"
																		},
																		"nativeSrc": "1918:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1918:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1908:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1908:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1659:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1695:9:13",
														"nodeType": "YulTypedName",
														"src": "1695:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1706:7:13",
														"nodeType": "YulTypedName",
														"src": "1706:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1718:6:13",
														"nodeType": "YulTypedName",
														"src": "1718:6:13",
														"type": ""
													}
												],
												"src": "1659:329:13"
											},
											{
												"body": {
													"nativeSrc": "2037:79:13",
													"nodeType": "YulBlock",
													"src": "2037:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2094:16:13",
																"nodeType": "YulBlock",
																"src": "2094:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2103:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2106:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2106:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2096:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2096:6:13"
																			},
																			"nativeSrc": "2096:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2096:12:13"
																		},
																		"nativeSrc": "2096:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2060:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2060:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2085:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2085:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2067:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2067:17:13"
																				},
																				"nativeSrc": "2067:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2067:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2057:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2057:2:13"
																		},
																		"nativeSrc": "2057:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2057:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2050:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:13"
																},
																"nativeSrc": "2050:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2050:43:13"
															},
															"nativeSrc": "2047:63:13",
															"nodeType": "YulIf",
															"src": "2047:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1994:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2030:5:13",
														"nodeType": "YulTypedName",
														"src": "2030:5:13",
														"type": ""
													}
												],
												"src": "1994:122:13"
											},
											{
												"body": {
													"nativeSrc": "2174:87:13",
													"nodeType": "YulBlock",
													"src": "2174:87:13",
													"statements": [
														{
															"nativeSrc": "2184:29:13",
															"nodeType": "YulAssignment",
															"src": "2184:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2206:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2206:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2193:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2193:12:13"
																},
																"nativeSrc": "2193:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2193:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2184:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2184:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2249:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2249:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2222:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:26:13"
																},
																"nativeSrc": "2222:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:33:13"
															},
															"nativeSrc": "2222:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2222:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2122:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2152:6:13",
														"nodeType": "YulTypedName",
														"src": "2152:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2160:3:13",
														"nodeType": "YulTypedName",
														"src": "2160:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2168:5:13",
														"nodeType": "YulTypedName",
														"src": "2168:5:13",
														"type": ""
													}
												],
												"src": "2122:139:13"
											},
											{
												"body": {
													"nativeSrc": "2333:263:13",
													"nodeType": "YulBlock",
													"src": "2333:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2379:83:13",
																"nodeType": "YulBlock",
																"src": "2379:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2381:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2381:77:13"
																			},
																			"nativeSrc": "2381:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2381:79:13"
																		},
																		"nativeSrc": "2381:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2381:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2354:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2354:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2363:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2350:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2350:3:13"
																		},
																		"nativeSrc": "2350:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2375:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2375:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2346:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2346:3:13"
																},
																"nativeSrc": "2346:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2346:32:13"
															},
															"nativeSrc": "2343:119:13",
															"nodeType": "YulIf",
															"src": "2343:119:13"
														},
														{
															"nativeSrc": "2472:117:13",
															"nodeType": "YulBlock",
															"src": "2472:117:13",
															"statements": [
																{
																	"nativeSrc": "2487:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2487:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2501:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2501:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2491:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2491:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2516:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2516:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2551:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2551:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2562:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2562:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2547:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2547:3:13"
																				},
																				"nativeSrc": "2547:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2547:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2571:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2571:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2526:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2526:20:13"
																		},
																		"nativeSrc": "2526:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2516:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2516:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2267:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2303:9:13",
														"nodeType": "YulTypedName",
														"src": "2303:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2314:7:13",
														"nodeType": "YulTypedName",
														"src": "2314:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2326:6:13",
														"nodeType": "YulTypedName",
														"src": "2326:6:13",
														"type": ""
													}
												],
												"src": "2267:329:13"
											},
											{
												"body": {
													"nativeSrc": "2634:28:13",
													"nodeType": "YulBlock",
													"src": "2634:28:13",
													"statements": [
														{
															"nativeSrc": "2644:12:13",
															"nodeType": "YulAssignment",
															"src": "2644:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2651:5:13",
																"nodeType": "YulIdentifier",
																"src": "2651:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2644:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2602:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2620:5:13",
														"nodeType": "YulTypedName",
														"src": "2620:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2630:3:13",
														"nodeType": "YulTypedName",
														"src": "2630:3:13",
														"type": ""
													}
												],
												"src": "2602:60:13"
											},
											{
												"body": {
													"nativeSrc": "2728:82:13",
													"nodeType": "YulBlock",
													"src": "2728:82:13",
													"statements": [
														{
															"nativeSrc": "2738:66:13",
															"nodeType": "YulAssignment",
															"src": "2738:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2796:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2796:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2778:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2778:17:13"
																				},
																				"nativeSrc": "2778:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2778:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2769:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "2769:8:13"
																		},
																		"nativeSrc": "2769:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2769:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2751:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2751:17:13"
																},
																"nativeSrc": "2751:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2751:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2738:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2738:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2668:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2708:5:13",
														"nodeType": "YulTypedName",
														"src": "2708:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2718:9:13",
														"nodeType": "YulTypedName",
														"src": "2718:9:13",
														"type": ""
													}
												],
												"src": "2668:142:13"
											},
											{
												"body": {
													"nativeSrc": "2876:66:13",
													"nodeType": "YulBlock",
													"src": "2876:66:13",
													"statements": [
														{
															"nativeSrc": "2886:50:13",
															"nodeType": "YulAssignment",
															"src": "2886:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2899:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2899:30:13"
																},
																"nativeSrc": "2899:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2899:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2886:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2886:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2816:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2856:5:13",
														"nodeType": "YulTypedName",
														"src": "2856:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2866:9:13",
														"nodeType": "YulTypedName",
														"src": "2866:9:13",
														"type": ""
													}
												],
												"src": "2816:126:13"
											},
											{
												"body": {
													"nativeSrc": "3024:66:13",
													"nodeType": "YulBlock",
													"src": "3024:66:13",
													"statements": [
														{
															"nativeSrc": "3034:50:13",
															"nodeType": "YulAssignment",
															"src": "3034:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3078:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3078:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3047:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3047:30:13"
																},
																"nativeSrc": "3047:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3047:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3034:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3034:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1723_to_t_address",
												"nativeSrc": "2948:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3004:5:13",
														"nodeType": "YulTypedName",
														"src": "3004:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3014:9:13",
														"nodeType": "YulTypedName",
														"src": "3014:9:13",
														"type": ""
													}
												],
												"src": "2948:142:13"
											},
											{
												"body": {
													"nativeSrc": "3177:82:13",
													"nodeType": "YulBlock",
													"src": "3177:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3194:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3194:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3246:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3246:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1723_to_t_address",
																			"nativeSrc": "3199:46:13",
																			"nodeType": "YulIdentifier",
																			"src": "3199:46:13"
																		},
																		"nativeSrc": "3199:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3187:6:13"
																},
																"nativeSrc": "3187:66:13",
																"nodeType": "YulFunctionCall",
																"src": "3187:66:13"
															},
															"nativeSrc": "3187:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "3187:66:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1723_to_t_address_fromStack",
												"nativeSrc": "3096:163:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3165:5:13",
														"nodeType": "YulTypedName",
														"src": "3165:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3172:3:13",
														"nodeType": "YulTypedName",
														"src": "3172:3:13",
														"type": ""
													}
												],
												"src": "3096:163:13"
											},
											{
												"body": {
													"nativeSrc": "3379:140:13",
													"nodeType": "YulBlock",
													"src": "3379:140:13",
													"statements": [
														{
															"nativeSrc": "3389:26:13",
															"nodeType": "YulAssignment",
															"src": "3389:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3401:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3401:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3412:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3412:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3397:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:13"
																},
																"nativeSrc": "3397:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3397:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3389:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3389:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3485:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3485:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3498:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3498:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3509:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3509:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3494:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:13"
																		},
																		"nativeSrc": "3494:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3494:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1723_to_t_address_fromStack",
																	"nativeSrc": "3425:59:13",
																	"nodeType": "YulIdentifier",
																	"src": "3425:59:13"
																},
																"nativeSrc": "3425:87:13",
																"nodeType": "YulFunctionCall",
																"src": "3425:87:13"
															},
															"nativeSrc": "3425:87:13",
															"nodeType": "YulExpressionStatement",
															"src": "3425:87:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1723__to_t_address__fromStack_reversed",
												"nativeSrc": "3265:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3351:9:13",
														"nodeType": "YulTypedName",
														"src": "3351:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3363:6:13",
														"nodeType": "YulTypedName",
														"src": "3363:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3374:4:13",
														"nodeType": "YulTypedName",
														"src": "3374:4:13",
														"type": ""
													}
												],
												"src": "3265:254:13"
											},
											{
												"body": {
													"nativeSrc": "3590:53:13",
													"nodeType": "YulBlock",
													"src": "3590:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3607:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3607:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3630:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3630:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3612:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3612:17:13"
																		},
																		"nativeSrc": "3612:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3612:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3600:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:13"
																},
																"nativeSrc": "3600:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3600:37:13"
															},
															"nativeSrc": "3600:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3600:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3525:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:13",
														"nodeType": "YulTypedName",
														"src": "3578:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3585:3:13",
														"nodeType": "YulTypedName",
														"src": "3585:3:13",
														"type": ""
													}
												],
												"src": "3525:118:13"
											},
											{
												"body": {
													"nativeSrc": "3747:124:13",
													"nodeType": "YulBlock",
													"src": "3747:124:13",
													"statements": [
														{
															"nativeSrc": "3757:26:13",
															"nodeType": "YulAssignment",
															"src": "3757:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3769:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3769:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3780:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3780:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3765:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3765:3:13"
																},
																"nativeSrc": "3765:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3765:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3757:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3757:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3837:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3837:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3850:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3850:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3861:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3861:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3846:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3846:3:13"
																		},
																		"nativeSrc": "3846:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3846:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3793:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3793:43:13"
																},
																"nativeSrc": "3793:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3793:71:13"
															},
															"nativeSrc": "3793:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3793:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3649:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3719:9:13",
														"nodeType": "YulTypedName",
														"src": "3719:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3731:6:13",
														"nodeType": "YulTypedName",
														"src": "3731:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3742:4:13",
														"nodeType": "YulTypedName",
														"src": "3742:4:13",
														"type": ""
													}
												],
												"src": "3649:222:13"
											},
											{
												"body": {
													"nativeSrc": "4011:777:13",
													"nodeType": "YulBlock",
													"src": "4011:777:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4058:83:13",
																"nodeType": "YulBlock",
																"src": "4058:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4060:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4060:77:13"
																			},
																			"nativeSrc": "4060:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4060:79:13"
																		},
																		"nativeSrc": "4060:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4060:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4032:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4032:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4041:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4028:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4028:3:13"
																		},
																		"nativeSrc": "4028:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4028:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4053:3:13",
																		"nodeType": "YulLiteral",
																		"src": "4053:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4024:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4024:3:13"
																},
																"nativeSrc": "4024:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4024:33:13"
															},
															"nativeSrc": "4021:120:13",
															"nodeType": "YulIf",
															"src": "4021:120:13"
														},
														{
															"nativeSrc": "4151:117:13",
															"nodeType": "YulBlock",
															"src": "4151:117:13",
															"statements": [
																{
																	"nativeSrc": "4166:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4166:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4180:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4180:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4170:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4170:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4195:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4195:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4230:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4230:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4241:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4241:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:13"
																				},
																				"nativeSrc": "4226:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4250:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4250:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4205:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4205:20:13"
																		},
																		"nativeSrc": "4205:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4205:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4195:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4195:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4278:118:13",
															"nodeType": "YulBlock",
															"src": "4278:118:13",
															"statements": [
																{
																	"nativeSrc": "4293:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4293:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4307:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4307:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4297:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4297:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4323:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4323:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4358:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4358:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4369:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4369:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4354:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4354:3:13"
																				},
																				"nativeSrc": "4354:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4354:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4378:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4378:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4333:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4333:20:13"
																		},
																		"nativeSrc": "4333:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4333:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4323:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4323:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4406:118:13",
															"nodeType": "YulBlock",
															"src": "4406:118:13",
															"statements": [
																{
																	"nativeSrc": "4421:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4421:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4435:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4435:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4425:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4425:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4451:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4451:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4486:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4486:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4497:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4497:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4482:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4482:3:13"
																				},
																				"nativeSrc": "4482:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4482:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4506:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4506:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4461:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4461:20:13"
																		},
																		"nativeSrc": "4461:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4461:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4451:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4451:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4534:118:13",
															"nodeType": "YulBlock",
															"src": "4534:118:13",
															"statements": [
																{
																	"nativeSrc": "4549:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4549:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4563:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4563:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4553:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4553:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4579:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4579:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4614:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4614:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4625:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4625:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4610:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4610:3:13"
																				},
																				"nativeSrc": "4610:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4610:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4634:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4634:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4589:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4589:20:13"
																		},
																		"nativeSrc": "4589:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4589:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4579:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4579:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4662:119:13",
															"nodeType": "YulBlock",
															"src": "4662:119:13",
															"statements": [
																{
																	"nativeSrc": "4677:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4677:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4691:3:13",
																		"nodeType": "YulLiteral",
																		"src": "4691:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4681:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4681:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4708:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4708:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4743:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4743:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4754:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4754:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4739:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4739:3:13"
																				},
																				"nativeSrc": "4739:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4739:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4763:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4763:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4718:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4718:20:13"
																		},
																		"nativeSrc": "4718:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4718:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "4708:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4708:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint256",
												"nativeSrc": "3877:911:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3949:9:13",
														"nodeType": "YulTypedName",
														"src": "3949:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3960:7:13",
														"nodeType": "YulTypedName",
														"src": "3960:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3972:6:13",
														"nodeType": "YulTypedName",
														"src": "3972:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3980:6:13",
														"nodeType": "YulTypedName",
														"src": "3980:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3988:6:13",
														"nodeType": "YulTypedName",
														"src": "3988:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3996:6:13",
														"nodeType": "YulTypedName",
														"src": "3996:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4004:6:13",
														"nodeType": "YulTypedName",
														"src": "4004:6:13",
														"type": ""
													}
												],
												"src": "3877:911:13"
											},
											{
												"body": {
													"nativeSrc": "4890:73:13",
													"nodeType": "YulBlock",
													"src": "4890:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4907:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4907:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4912:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4912:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4900:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:13"
																},
																"nativeSrc": "4900:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4900:19:13"
															},
															"nativeSrc": "4900:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "4900:19:13"
														},
														{
															"nativeSrc": "4928:29:13",
															"nodeType": "YulAssignment",
															"src": "4928:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4947:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4947:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4952:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4952:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4943:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4943:3:13"
																},
																"nativeSrc": "4943:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4943:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4928:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "4928:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4794:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4862:3:13",
														"nodeType": "YulTypedName",
														"src": "4862:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4867:6:13",
														"nodeType": "YulTypedName",
														"src": "4867:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4878:11:13",
														"nodeType": "YulTypedName",
														"src": "4878:11:13",
														"type": ""
													}
												],
												"src": "4794:169:13"
											},
											{
												"body": {
													"nativeSrc": "5075:62:13",
													"nodeType": "YulBlock",
													"src": "5075:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5097:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5097:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5105:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5105:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5093:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5093:3:13"
																		},
																		"nativeSrc": "5093:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5093:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "5109:20:13",
																		"nodeType": "YulLiteral",
																		"src": "5109:20:13",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5086:6:13"
																},
																"nativeSrc": "5086:44:13",
																"nodeType": "YulFunctionCall",
																"src": "5086:44:13"
															},
															"nativeSrc": "5086:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "5086:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "4969:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5067:6:13",
														"nodeType": "YulTypedName",
														"src": "5067:6:13",
														"type": ""
													}
												],
												"src": "4969:168:13"
											},
											{
												"body": {
													"nativeSrc": "5289:220:13",
													"nodeType": "YulBlock",
													"src": "5289:220:13",
													"statements": [
														{
															"nativeSrc": "5299:74:13",
															"nodeType": "YulAssignment",
															"src": "5299:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5365:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5365:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5370:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5370:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5306:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5306:58:13"
																},
																"nativeSrc": "5306:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5306:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5299:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5299:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5471:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5471:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "5382:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "5382:88:13"
																},
																"nativeSrc": "5382:93:13",
																"nodeType": "YulFunctionCall",
																"src": "5382:93:13"
															},
															"nativeSrc": "5382:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "5382:93:13"
														},
														{
															"nativeSrc": "5484:19:13",
															"nodeType": "YulAssignment",
															"src": "5484:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5495:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5495:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5500:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5500:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5491:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5491:3:13"
																},
																"nativeSrc": "5491:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5491:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5484:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5484:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5143:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5277:3:13",
														"nodeType": "YulTypedName",
														"src": "5277:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5285:3:13",
														"nodeType": "YulTypedName",
														"src": "5285:3:13",
														"type": ""
													}
												],
												"src": "5143:366:13"
											},
											{
												"body": {
													"nativeSrc": "5686:248:13",
													"nodeType": "YulBlock",
													"src": "5686:248:13",
													"statements": [
														{
															"nativeSrc": "5696:26:13",
															"nodeType": "YulAssignment",
															"src": "5696:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5708:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5708:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5719:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5719:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5704:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5704:3:13"
																},
																"nativeSrc": "5704:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5704:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5696:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5696:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5743:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5743:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5754:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5754:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5739:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:13"
																		},
																		"nativeSrc": "5739:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5739:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5762:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5762:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5768:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5768:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5758:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5758:3:13"
																		},
																		"nativeSrc": "5758:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5758:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5732:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5732:6:13"
																},
																"nativeSrc": "5732:47:13",
																"nodeType": "YulFunctionCall",
																"src": "5732:47:13"
															},
															"nativeSrc": "5732:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "5732:47:13"
														},
														{
															"nativeSrc": "5788:139:13",
															"nodeType": "YulAssignment",
															"src": "5788:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5922:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5922:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5796:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "5796:124:13"
																},
																"nativeSrc": "5796:131:13",
																"nodeType": "YulFunctionCall",
																"src": "5796:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5788:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5788:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5515:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5666:9:13",
														"nodeType": "YulTypedName",
														"src": "5666:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5681:4:13",
														"nodeType": "YulTypedName",
														"src": "5681:4:13",
														"type": ""
													}
												],
												"src": "5515:419:13"
											},
											{
												"body": {
													"nativeSrc": "5985:149:13",
													"nodeType": "YulBlock",
													"src": "5985:149:13",
													"statements": [
														{
															"nativeSrc": "5995:25:13",
															"nodeType": "YulAssignment",
															"src": "5995:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6018:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6018:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6000:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6000:17:13"
																},
																"nativeSrc": "6000:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6000:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5995:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5995:1:13"
																}
															]
														},
														{
															"nativeSrc": "6029:25:13",
															"nodeType": "YulAssignment",
															"src": "6029:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6052:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6052:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6034:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6034:17:13"
																},
																"nativeSrc": "6034:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6034:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6029:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6029:1:13"
																}
															]
														},
														{
															"nativeSrc": "6063:17:13",
															"nodeType": "YulAssignment",
															"src": "6063:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6075:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6075:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6078:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6078:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6071:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:13"
																},
																"nativeSrc": "6071:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6071:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6063:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6063:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6105:22:13",
																"nodeType": "YulBlock",
																"src": "6105:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6107:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6107:16:13"
																			},
																			"nativeSrc": "6107:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6107:18:13"
																		},
																		"nativeSrc": "6107:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6107:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6096:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6096:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6102:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6102:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6093:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6093:2:13"
																},
																"nativeSrc": "6093:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6093:11:13"
															},
															"nativeSrc": "6090:37:13",
															"nodeType": "YulIf",
															"src": "6090:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5940:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5971:1:13",
														"nodeType": "YulTypedName",
														"src": "5971:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5974:1:13",
														"nodeType": "YulTypedName",
														"src": "5974:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5980:4:13",
														"nodeType": "YulTypedName",
														"src": "5980:4:13",
														"type": ""
													}
												],
												"src": "5940:194:13"
											},
											{
												"body": {
													"nativeSrc": "6253:34:13",
													"nodeType": "YulBlock",
													"src": "6253:34:13",
													"statements": [
														{
															"nativeSrc": "6263:18:13",
															"nodeType": "YulAssignment",
															"src": "6263:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "6278:3:13",
																"nodeType": "YulIdentifier",
																"src": "6278:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6263:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "6263:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6140:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6225:3:13",
														"nodeType": "YulTypedName",
														"src": "6225:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6230:6:13",
														"nodeType": "YulTypedName",
														"src": "6230:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6241:11:13",
														"nodeType": "YulTypedName",
														"src": "6241:11:13",
														"type": ""
													}
												],
												"src": "6140:147:13"
											},
											{
												"body": {
													"nativeSrc": "6399:8:13",
													"nodeType": "YulBlock",
													"src": "6399:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "6293:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6391:6:13",
														"nodeType": "YulTypedName",
														"src": "6391:6:13",
														"type": ""
													}
												],
												"src": "6293:114:13"
											},
											{
												"body": {
													"nativeSrc": "6576:235:13",
													"nodeType": "YulBlock",
													"src": "6576:235:13",
													"statements": [
														{
															"nativeSrc": "6586:90:13",
															"nodeType": "YulAssignment",
															"src": "6586:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6669:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6669:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6674:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6674:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "6593:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "6593:75:13"
																},
																"nativeSrc": "6593:83:13",
																"nodeType": "YulFunctionCall",
																"src": "6593:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6586:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6586:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6774:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6774:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "6685:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "6685:88:13"
																},
																"nativeSrc": "6685:93:13",
																"nodeType": "YulFunctionCall",
																"src": "6685:93:13"
															},
															"nativeSrc": "6685:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "6685:93:13"
														},
														{
															"nativeSrc": "6787:18:13",
															"nodeType": "YulAssignment",
															"src": "6787:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6798:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6798:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6803:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6803:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6794:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:13"
																},
																"nativeSrc": "6794:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6794:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6787:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6787:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6413:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6564:3:13",
														"nodeType": "YulTypedName",
														"src": "6564:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6572:3:13",
														"nodeType": "YulTypedName",
														"src": "6572:3:13",
														"type": ""
													}
												],
												"src": "6413:398:13"
											},
											{
												"body": {
													"nativeSrc": "7005:191:13",
													"nodeType": "YulBlock",
													"src": "7005:191:13",
													"statements": [
														{
															"nativeSrc": "7016:154:13",
															"nodeType": "YulAssignment",
															"src": "7016:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7166:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7166:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7023:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "7023:141:13"
																},
																"nativeSrc": "7023:147:13",
																"nodeType": "YulFunctionCall",
																"src": "7023:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7016:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7016:3:13"
																}
															]
														},
														{
															"nativeSrc": "7180:10:13",
															"nodeType": "YulAssignment",
															"src": "7180:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "7187:3:13",
																"nodeType": "YulIdentifier",
																"src": "7187:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7180:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6817:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6992:3:13",
														"nodeType": "YulTypedName",
														"src": "6992:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7001:3:13",
														"nodeType": "YulTypedName",
														"src": "7001:3:13",
														"type": ""
													}
												],
												"src": "6817:379:13"
											},
											{
												"body": {
													"nativeSrc": "7308:63:13",
													"nodeType": "YulBlock",
													"src": "7308:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7330:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7330:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7338:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7338:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7326:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7326:3:13"
																		},
																		"nativeSrc": "7326:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7326:14:13"
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7342:21:13",
																		"nodeType": "YulLiteral",
																		"src": "7342:21:13",
																		"type": "",
																		"value": "ETH transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7319:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7319:6:13"
																},
																"nativeSrc": "7319:45:13",
																"nodeType": "YulFunctionCall",
																"src": "7319:45:13"
															},
															"nativeSrc": "7319:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "7319:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
												"nativeSrc": "7202:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7300:6:13",
														"nodeType": "YulTypedName",
														"src": "7300:6:13",
														"type": ""
													}
												],
												"src": "7202:169:13"
											},
											{
												"body": {
													"nativeSrc": "7523:220:13",
													"nodeType": "YulBlock",
													"src": "7523:220:13",
													"statements": [
														{
															"nativeSrc": "7533:74:13",
															"nodeType": "YulAssignment",
															"src": "7533:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7599:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7599:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7604:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7604:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7540:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7540:58:13"
																},
																"nativeSrc": "7540:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7540:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7533:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7533:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7705:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7705:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																	"nativeSrc": "7616:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "7616:88:13"
																},
																"nativeSrc": "7616:93:13",
																"nodeType": "YulFunctionCall",
																"src": "7616:93:13"
															},
															"nativeSrc": "7616:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "7616:93:13"
														},
														{
															"nativeSrc": "7718:19:13",
															"nodeType": "YulAssignment",
															"src": "7718:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7729:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7729:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7734:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7734:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7725:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7725:3:13"
																},
																"nativeSrc": "7725:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7725:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7718:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7718:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7377:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7511:3:13",
														"nodeType": "YulTypedName",
														"src": "7511:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7519:3:13",
														"nodeType": "YulTypedName",
														"src": "7519:3:13",
														"type": ""
													}
												],
												"src": "7377:366:13"
											},
											{
												"body": {
													"nativeSrc": "7920:248:13",
													"nodeType": "YulBlock",
													"src": "7920:248:13",
													"statements": [
														{
															"nativeSrc": "7930:26:13",
															"nodeType": "YulAssignment",
															"src": "7930:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7942:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7942:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7953:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7953:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7938:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7938:3:13"
																},
																"nativeSrc": "7938:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7938:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7930:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7930:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7977:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7977:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7988:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7988:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7973:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:13"
																		},
																		"nativeSrc": "7973:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7973:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7996:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7996:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8002:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8002:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7992:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7992:3:13"
																		},
																		"nativeSrc": "7992:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7992:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7966:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7966:6:13"
																},
																"nativeSrc": "7966:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7966:47:13"
															},
															"nativeSrc": "7966:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7966:47:13"
														},
														{
															"nativeSrc": "8022:139:13",
															"nodeType": "YulAssignment",
															"src": "8022:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8156:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8156:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8030:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8030:124:13"
																},
																"nativeSrc": "8030:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8030:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8022:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8022:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7749:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7900:9:13",
														"nodeType": "YulTypedName",
														"src": "7900:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7915:4:13",
														"nodeType": "YulTypedName",
														"src": "7915:4:13",
														"type": ""
													}
												],
												"src": "7749:419:13"
											},
											{
												"body": {
													"nativeSrc": "8300:206:13",
													"nodeType": "YulBlock",
													"src": "8300:206:13",
													"statements": [
														{
															"nativeSrc": "8310:26:13",
															"nodeType": "YulAssignment",
															"src": "8310:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8322:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8322:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8333:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8333:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8318:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8318:3:13"
																},
																"nativeSrc": "8318:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8318:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8310:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8310:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8390:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8390:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8403:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8414:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8414:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:13"
																		},
																		"nativeSrc": "8399:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8346:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8346:43:13"
																},
																"nativeSrc": "8346:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8346:71:13"
															},
															"nativeSrc": "8346:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8346:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8471:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8471:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8484:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8484:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8495:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8495:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8480:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8480:3:13"
																		},
																		"nativeSrc": "8480:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8480:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8427:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8427:43:13"
																},
																"nativeSrc": "8427:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8427:72:13"
															},
															"nativeSrc": "8427:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8427:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8174:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8264:9:13",
														"nodeType": "YulTypedName",
														"src": "8264:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8276:6:13",
														"nodeType": "YulTypedName",
														"src": "8276:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8284:6:13",
														"nodeType": "YulTypedName",
														"src": "8284:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8295:4:13",
														"nodeType": "YulTypedName",
														"src": "8295:4:13",
														"type": ""
													}
												],
												"src": "8174:332:13"
											},
											{
												"body": {
													"nativeSrc": "8554:48:13",
													"nodeType": "YulBlock",
													"src": "8554:48:13",
													"statements": [
														{
															"nativeSrc": "8564:32:13",
															"nodeType": "YulAssignment",
															"src": "8564:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8589:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8589:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8582:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8582:6:13"
																		},
																		"nativeSrc": "8582:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8575:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8575:6:13"
																},
																"nativeSrc": "8575:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8575:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8564:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8564:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8512:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8536:5:13",
														"nodeType": "YulTypedName",
														"src": "8536:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8546:7:13",
														"nodeType": "YulTypedName",
														"src": "8546:7:13",
														"type": ""
													}
												],
												"src": "8512:90:13"
											},
											{
												"body": {
													"nativeSrc": "8648:76:13",
													"nodeType": "YulBlock",
													"src": "8648:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8702:16:13",
																"nodeType": "YulBlock",
																"src": "8702:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8711:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8711:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8714:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8714:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8704:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8704:6:13"
																			},
																			"nativeSrc": "8704:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8704:12:13"
																		},
																		"nativeSrc": "8704:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8704:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8671:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8671:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8693:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8693:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8678:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "8678:14:13"
																				},
																				"nativeSrc": "8678:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8668:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8668:2:13"
																		},
																		"nativeSrc": "8668:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8668:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8661:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:13"
																},
																"nativeSrc": "8661:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8661:40:13"
															},
															"nativeSrc": "8658:60:13",
															"nodeType": "YulIf",
															"src": "8658:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8608:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8641:5:13",
														"nodeType": "YulTypedName",
														"src": "8641:5:13",
														"type": ""
													}
												],
												"src": "8608:116:13"
											},
											{
												"body": {
													"nativeSrc": "8790:77:13",
													"nodeType": "YulBlock",
													"src": "8790:77:13",
													"statements": [
														{
															"nativeSrc": "8800:22:13",
															"nodeType": "YulAssignment",
															"src": "8800:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8815:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8815:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8809:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8809:5:13"
																},
																"nativeSrc": "8809:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8809:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8800:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8800:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8855:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8855:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8831:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "8831:23:13"
																},
																"nativeSrc": "8831:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8831:30:13"
															},
															"nativeSrc": "8831:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8831:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8730:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8768:6:13",
														"nodeType": "YulTypedName",
														"src": "8768:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8776:3:13",
														"nodeType": "YulTypedName",
														"src": "8776:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8784:5:13",
														"nodeType": "YulTypedName",
														"src": "8784:5:13",
														"type": ""
													}
												],
												"src": "8730:137:13"
											},
											{
												"body": {
													"nativeSrc": "8947:271:13",
													"nodeType": "YulBlock",
													"src": "8947:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8993:83:13",
																"nodeType": "YulBlock",
																"src": "8993:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8995:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8995:77:13"
																			},
																			"nativeSrc": "8995:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8995:79:13"
																		},
																		"nativeSrc": "8995:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8995:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8968:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8968:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8964:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8964:3:13"
																		},
																		"nativeSrc": "8964:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8964:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8989:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8989:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8960:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8960:3:13"
																},
																"nativeSrc": "8960:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8960:32:13"
															},
															"nativeSrc": "8957:119:13",
															"nodeType": "YulIf",
															"src": "8957:119:13"
														},
														{
															"nativeSrc": "9086:125:13",
															"nodeType": "YulBlock",
															"src": "9086:125:13",
															"statements": [
																{
																	"nativeSrc": "9101:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9101:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9115:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9115:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9105:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9105:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9130:71:13",
																	"nodeType": "YulAssignment",
																	"src": "9130:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9173:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9173:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9184:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9184:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9169:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9169:3:13"
																				},
																				"nativeSrc": "9169:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9169:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9193:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9193:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9140:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "9140:28:13"
																		},
																		"nativeSrc": "9140:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9140:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9130:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9130:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8873:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8917:9:13",
														"nodeType": "YulTypedName",
														"src": "8917:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8928:7:13",
														"nodeType": "YulTypedName",
														"src": "8928:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8940:6:13",
														"nodeType": "YulTypedName",
														"src": "8940:6:13",
														"type": ""
													}
												],
												"src": "8873:345:13"
											},
											{
												"body": {
													"nativeSrc": "9330:63:13",
													"nodeType": "YulBlock",
													"src": "9330:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9352:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9352:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9360:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9360:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9348:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9348:3:13"
																		},
																		"nativeSrc": "9348:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9348:14:13"
																	},
																	{
																		"hexValue": "45786365656473206461696c79206c696d6974",
																		"kind": "string",
																		"nativeSrc": "9364:21:13",
																		"nodeType": "YulLiteral",
																		"src": "9364:21:13",
																		"type": "",
																		"value": "Exceeds daily limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9341:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9341:6:13"
																},
																"nativeSrc": "9341:45:13",
																"nodeType": "YulFunctionCall",
																"src": "9341:45:13"
															},
															"nativeSrc": "9341:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "9341:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927",
												"nativeSrc": "9224:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9322:6:13",
														"nodeType": "YulTypedName",
														"src": "9322:6:13",
														"type": ""
													}
												],
												"src": "9224:169:13"
											},
											{
												"body": {
													"nativeSrc": "9545:220:13",
													"nodeType": "YulBlock",
													"src": "9545:220:13",
													"statements": [
														{
															"nativeSrc": "9555:74:13",
															"nodeType": "YulAssignment",
															"src": "9555:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9621:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9621:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9626:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9626:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9562:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9562:58:13"
																},
																"nativeSrc": "9562:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9562:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9555:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9727:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9727:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927",
																	"nativeSrc": "9638:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9638:88:13"
																},
																"nativeSrc": "9638:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9638:93:13"
															},
															"nativeSrc": "9638:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9638:93:13"
														},
														{
															"nativeSrc": "9740:19:13",
															"nodeType": "YulAssignment",
															"src": "9740:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9751:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9751:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9756:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9756:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9747:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:13"
																},
																"nativeSrc": "9747:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9747:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9740:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9740:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9399:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9533:3:13",
														"nodeType": "YulTypedName",
														"src": "9533:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9541:3:13",
														"nodeType": "YulTypedName",
														"src": "9541:3:13",
														"type": ""
													}
												],
												"src": "9399:366:13"
											},
											{
												"body": {
													"nativeSrc": "9942:248:13",
													"nodeType": "YulBlock",
													"src": "9942:248:13",
													"statements": [
														{
															"nativeSrc": "9952:26:13",
															"nodeType": "YulAssignment",
															"src": "9952:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9964:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9964:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9975:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9975:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9960:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9960:3:13"
																},
																"nativeSrc": "9960:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9960:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9952:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9952:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10010:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10010:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9995:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:13"
																		},
																		"nativeSrc": "9995:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9995:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10018:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10018:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10024:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10024:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10014:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10014:3:13"
																		},
																		"nativeSrc": "10014:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10014:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9988:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:13"
																},
																"nativeSrc": "9988:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9988:47:13"
															},
															"nativeSrc": "9988:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9988:47:13"
														},
														{
															"nativeSrc": "10044:139:13",
															"nodeType": "YulAssignment",
															"src": "10044:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10178:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10178:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10052:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10052:124:13"
																},
																"nativeSrc": "10052:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10052:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10044:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10044:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9771:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9922:9:13",
														"nodeType": "YulTypedName",
														"src": "9922:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9937:4:13",
														"nodeType": "YulTypedName",
														"src": "9937:4:13",
														"type": ""
													}
												],
												"src": "9771:419:13"
											},
											{
												"body": {
													"nativeSrc": "10302:69:13",
													"nodeType": "YulBlock",
													"src": "10302:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10324:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10324:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10332:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10332:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10320:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10320:3:13"
																		},
																		"nativeSrc": "10320:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10320:14:13"
																	},
																	{
																		"hexValue": "4461696c7920636c61696d206c696d69742072656163686564",
																		"kind": "string",
																		"nativeSrc": "10336:27:13",
																		"nodeType": "YulLiteral",
																		"src": "10336:27:13",
																		"type": "",
																		"value": "Daily claim limit reached"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10313:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10313:6:13"
																},
																"nativeSrc": "10313:51:13",
																"nodeType": "YulFunctionCall",
																"src": "10313:51:13"
															},
															"nativeSrc": "10313:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "10313:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874",
												"nativeSrc": "10196:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10294:6:13",
														"nodeType": "YulTypedName",
														"src": "10294:6:13",
														"type": ""
													}
												],
												"src": "10196:175:13"
											},
											{
												"body": {
													"nativeSrc": "10523:220:13",
													"nodeType": "YulBlock",
													"src": "10523:220:13",
													"statements": [
														{
															"nativeSrc": "10533:74:13",
															"nodeType": "YulAssignment",
															"src": "10533:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10599:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10599:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10604:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10604:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10540:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10540:58:13"
																},
																"nativeSrc": "10540:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10540:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10533:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10533:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10705:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10705:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874",
																	"nativeSrc": "10616:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10616:88:13"
																},
																"nativeSrc": "10616:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10616:93:13"
															},
															"nativeSrc": "10616:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10616:93:13"
														},
														{
															"nativeSrc": "10718:19:13",
															"nodeType": "YulAssignment",
															"src": "10718:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10729:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10729:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10734:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10734:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10725:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10725:3:13"
																},
																"nativeSrc": "10725:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10725:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10718:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10718:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10377:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10511:3:13",
														"nodeType": "YulTypedName",
														"src": "10511:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10519:3:13",
														"nodeType": "YulTypedName",
														"src": "10519:3:13",
														"type": ""
													}
												],
												"src": "10377:366:13"
											},
											{
												"body": {
													"nativeSrc": "10920:248:13",
													"nodeType": "YulBlock",
													"src": "10920:248:13",
													"statements": [
														{
															"nativeSrc": "10930:26:13",
															"nodeType": "YulAssignment",
															"src": "10930:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10942:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10942:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10953:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10953:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10938:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10938:3:13"
																},
																"nativeSrc": "10938:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10938:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10930:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10930:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10977:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10977:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10988:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10988:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10973:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10973:3:13"
																		},
																		"nativeSrc": "10973:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10973:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10996:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10996:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11002:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11002:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10992:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10992:3:13"
																		},
																		"nativeSrc": "10992:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10992:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10966:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:13"
																},
																"nativeSrc": "10966:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10966:47:13"
															},
															"nativeSrc": "10966:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10966:47:13"
														},
														{
															"nativeSrc": "11022:139:13",
															"nodeType": "YulAssignment",
															"src": "11022:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11156:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11156:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11030:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11030:124:13"
																},
																"nativeSrc": "11030:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11030:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11022:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11022:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10749:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10900:9:13",
														"nodeType": "YulTypedName",
														"src": "10900:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10915:4:13",
														"nodeType": "YulTypedName",
														"src": "10915:4:13",
														"type": ""
													}
												],
												"src": "10749:419:13"
											},
											{
												"body": {
													"nativeSrc": "11237:80:13",
													"nodeType": "YulBlock",
													"src": "11237:80:13",
													"statements": [
														{
															"nativeSrc": "11247:22:13",
															"nodeType": "YulAssignment",
															"src": "11247:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11262:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11262:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11256:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11256:5:13"
																},
																"nativeSrc": "11256:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11256:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11247:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11247:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11305:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11305:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11278:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "11278:26:13"
																},
																"nativeSrc": "11278:33:13",
																"nodeType": "YulFunctionCall",
																"src": "11278:33:13"
															},
															"nativeSrc": "11278:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "11278:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11174:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11215:6:13",
														"nodeType": "YulTypedName",
														"src": "11215:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11223:3:13",
														"nodeType": "YulTypedName",
														"src": "11223:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11231:5:13",
														"nodeType": "YulTypedName",
														"src": "11231:5:13",
														"type": ""
													}
												],
												"src": "11174:143:13"
											},
											{
												"body": {
													"nativeSrc": "11400:274:13",
													"nodeType": "YulBlock",
													"src": "11400:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "11446:83:13",
																"nodeType": "YulBlock",
																"src": "11446:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11448:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "11448:77:13"
																			},
																			"nativeSrc": "11448:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11448:79:13"
																		},
																		"nativeSrc": "11448:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11448:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11421:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11421:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11430:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11430:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11417:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11417:3:13"
																		},
																		"nativeSrc": "11417:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11417:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11442:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11442:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11413:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11413:3:13"
																},
																"nativeSrc": "11413:32:13",
																"nodeType": "YulFunctionCall",
																"src": "11413:32:13"
															},
															"nativeSrc": "11410:119:13",
															"nodeType": "YulIf",
															"src": "11410:119:13"
														},
														{
															"nativeSrc": "11539:128:13",
															"nodeType": "YulBlock",
															"src": "11539:128:13",
															"statements": [
																{
																	"nativeSrc": "11554:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11554:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11568:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11568:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11558:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11558:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11583:74:13",
																	"nodeType": "YulAssignment",
																	"src": "11583:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11629:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11629:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11640:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11640:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11625:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11625:3:13"
																				},
																				"nativeSrc": "11625:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11625:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11649:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11649:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11593:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "11593:31:13"
																		},
																		"nativeSrc": "11593:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11593:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11583:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11583:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11323:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11370:9:13",
														"nodeType": "YulTypedName",
														"src": "11370:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11381:7:13",
														"nodeType": "YulTypedName",
														"src": "11381:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11393:6:13",
														"nodeType": "YulTypedName",
														"src": "11393:6:13",
														"type": ""
													}
												],
												"src": "11323:351:13"
											},
											{
												"body": {
													"nativeSrc": "11786:57:13",
													"nodeType": "YulBlock",
													"src": "11786:57:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11808:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11808:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11816:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11816:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11804:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:13"
																		},
																		"nativeSrc": "11804:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11804:14:13"
																	},
																	{
																		"hexValue": "53636f726520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "11820:15:13",
																		"nodeType": "YulLiteral",
																		"src": "11820:15:13",
																		"type": "",
																		"value": "Score too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11797:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11797:6:13"
																},
																"nativeSrc": "11797:39:13",
																"nodeType": "YulFunctionCall",
																"src": "11797:39:13"
															},
															"nativeSrc": "11797:39:13",
															"nodeType": "YulExpressionStatement",
															"src": "11797:39:13"
														}
													]
												},
												"name": "store_literal_in_memory_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad",
												"nativeSrc": "11680:163:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11778:6:13",
														"nodeType": "YulTypedName",
														"src": "11778:6:13",
														"type": ""
													}
												],
												"src": "11680:163:13"
											},
											{
												"body": {
													"nativeSrc": "11995:220:13",
													"nodeType": "YulBlock",
													"src": "11995:220:13",
													"statements": [
														{
															"nativeSrc": "12005:74:13",
															"nodeType": "YulAssignment",
															"src": "12005:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12071:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12071:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12076:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12076:2:13",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12012:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12012:58:13"
																},
																"nativeSrc": "12012:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12012:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12005:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12005:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12177:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12177:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad",
																	"nativeSrc": "12088:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "12088:88:13"
																},
																"nativeSrc": "12088:93:13",
																"nodeType": "YulFunctionCall",
																"src": "12088:93:13"
															},
															"nativeSrc": "12088:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "12088:93:13"
														},
														{
															"nativeSrc": "12190:19:13",
															"nodeType": "YulAssignment",
															"src": "12190:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12201:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12201:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12206:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12206:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12197:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12197:3:13"
																},
																"nativeSrc": "12197:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12197:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12190:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12190:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11849:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11983:3:13",
														"nodeType": "YulTypedName",
														"src": "11983:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11991:3:13",
														"nodeType": "YulTypedName",
														"src": "11991:3:13",
														"type": ""
													}
												],
												"src": "11849:366:13"
											},
											{
												"body": {
													"nativeSrc": "12392:248:13",
													"nodeType": "YulBlock",
													"src": "12392:248:13",
													"statements": [
														{
															"nativeSrc": "12402:26:13",
															"nodeType": "YulAssignment",
															"src": "12402:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12414:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12414:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12425:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12425:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12410:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12410:3:13"
																},
																"nativeSrc": "12410:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12410:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12402:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12402:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12449:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12449:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12460:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12460:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12445:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12445:3:13"
																		},
																		"nativeSrc": "12445:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12445:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12468:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12468:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12474:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12474:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12464:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12464:3:13"
																		},
																		"nativeSrc": "12464:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12464:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12438:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12438:6:13"
																},
																"nativeSrc": "12438:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12438:47:13"
															},
															"nativeSrc": "12438:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12438:47:13"
														},
														{
															"nativeSrc": "12494:139:13",
															"nodeType": "YulAssignment",
															"src": "12494:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12628:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12628:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12502:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12502:124:13"
																},
																"nativeSrc": "12502:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12502:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12494:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12494:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12221:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12372:9:13",
														"nodeType": "YulTypedName",
														"src": "12372:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12387:4:13",
														"nodeType": "YulTypedName",
														"src": "12387:4:13",
														"type": ""
													}
												],
												"src": "12221:419:13"
											},
											{
												"body": {
													"nativeSrc": "12752:69:13",
													"nodeType": "YulBlock",
													"src": "12752:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12774:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12774:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12782:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12782:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12770:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12770:3:13"
																		},
																		"nativeSrc": "12770:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12770:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "12786:27:13",
																		"nodeType": "YulLiteral",
																		"src": "12786:27:13",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12763:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12763:6:13"
																},
																"nativeSrc": "12763:51:13",
																"nodeType": "YulFunctionCall",
																"src": "12763:51:13"
															},
															"nativeSrc": "12763:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "12763:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "12646:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12744:6:13",
														"nodeType": "YulTypedName",
														"src": "12744:6:13",
														"type": ""
													}
												],
												"src": "12646:175:13"
											},
											{
												"body": {
													"nativeSrc": "12973:220:13",
													"nodeType": "YulBlock",
													"src": "12973:220:13",
													"statements": [
														{
															"nativeSrc": "12983:74:13",
															"nodeType": "YulAssignment",
															"src": "12983:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13049:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13049:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13054:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13054:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12990:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12990:58:13"
																},
																"nativeSrc": "12990:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12990:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12983:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12983:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13155:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13155:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "13066:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13066:88:13"
																},
																"nativeSrc": "13066:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13066:93:13"
															},
															"nativeSrc": "13066:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13066:93:13"
														},
														{
															"nativeSrc": "13168:19:13",
															"nodeType": "YulAssignment",
															"src": "13168:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13179:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13179:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13184:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13184:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13175:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13175:3:13"
																},
																"nativeSrc": "13175:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13175:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13168:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13168:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12827:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12961:3:13",
														"nodeType": "YulTypedName",
														"src": "12961:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12969:3:13",
														"nodeType": "YulTypedName",
														"src": "12969:3:13",
														"type": ""
													}
												],
												"src": "12827:366:13"
											},
											{
												"body": {
													"nativeSrc": "13370:248:13",
													"nodeType": "YulBlock",
													"src": "13370:248:13",
													"statements": [
														{
															"nativeSrc": "13380:26:13",
															"nodeType": "YulAssignment",
															"src": "13380:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13392:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13392:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13403:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13403:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13388:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13388:3:13"
																},
																"nativeSrc": "13388:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13388:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13380:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13380:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13427:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13427:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13438:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13438:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13423:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13423:3:13"
																		},
																		"nativeSrc": "13423:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13423:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13446:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13446:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13452:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13452:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13442:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13442:3:13"
																		},
																		"nativeSrc": "13442:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13442:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13416:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13416:6:13"
																},
																"nativeSrc": "13416:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13416:47:13"
															},
															"nativeSrc": "13416:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13416:47:13"
														},
														{
															"nativeSrc": "13472:139:13",
															"nodeType": "YulAssignment",
															"src": "13472:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13606:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13606:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13480:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13480:124:13"
																},
																"nativeSrc": "13480:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13480:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13472:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13472:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13199:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13350:9:13",
														"nodeType": "YulTypedName",
														"src": "13350:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13365:4:13",
														"nodeType": "YulTypedName",
														"src": "13365:4:13",
														"type": ""
													}
												],
												"src": "13199:419:13"
											},
											{
												"body": {
													"nativeSrc": "13730:64:13",
													"nodeType": "YulBlock",
													"src": "13730:64:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13752:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13752:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13760:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13760:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13748:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13748:3:13"
																		},
																		"nativeSrc": "13748:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13748:14:13"
																	},
																	{
																		"hexValue": "496e636f72726563742045544820616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "13764:22:13",
																		"nodeType": "YulLiteral",
																		"src": "13764:22:13",
																		"type": "",
																		"value": "Incorrect ETH amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13741:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13741:6:13"
																},
																"nativeSrc": "13741:46:13",
																"nodeType": "YulFunctionCall",
																"src": "13741:46:13"
															},
															"nativeSrc": "13741:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "13741:46:13"
														}
													]
												},
												"name": "store_literal_in_memory_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
												"nativeSrc": "13624:170:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13722:6:13",
														"nodeType": "YulTypedName",
														"src": "13722:6:13",
														"type": ""
													}
												],
												"src": "13624:170:13"
											},
											{
												"body": {
													"nativeSrc": "13946:220:13",
													"nodeType": "YulBlock",
													"src": "13946:220:13",
													"statements": [
														{
															"nativeSrc": "13956:74:13",
															"nodeType": "YulAssignment",
															"src": "13956:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14022:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14022:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14027:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14027:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13963:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13963:58:13"
																},
																"nativeSrc": "13963:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13963:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13956:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13956:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14128:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14128:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
																	"nativeSrc": "14039:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14039:88:13"
																},
																"nativeSrc": "14039:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14039:93:13"
															},
															"nativeSrc": "14039:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14039:93:13"
														},
														{
															"nativeSrc": "14141:19:13",
															"nodeType": "YulAssignment",
															"src": "14141:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14152:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14152:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14157:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14157:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14148:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14148:3:13"
																},
																"nativeSrc": "14148:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14148:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14141:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14141:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13800:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13934:3:13",
														"nodeType": "YulTypedName",
														"src": "13934:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13942:3:13",
														"nodeType": "YulTypedName",
														"src": "13942:3:13",
														"type": ""
													}
												],
												"src": "13800:366:13"
											},
											{
												"body": {
													"nativeSrc": "14343:248:13",
													"nodeType": "YulBlock",
													"src": "14343:248:13",
													"statements": [
														{
															"nativeSrc": "14353:26:13",
															"nodeType": "YulAssignment",
															"src": "14353:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14365:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14365:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14376:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14376:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14361:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14361:3:13"
																},
																"nativeSrc": "14361:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14361:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14353:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14353:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14400:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14400:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14411:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14411:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14396:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14396:3:13"
																		},
																		"nativeSrc": "14396:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14396:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14419:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14419:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14425:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14425:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14415:3:13"
																		},
																		"nativeSrc": "14415:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14415:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14389:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14389:6:13"
																},
																"nativeSrc": "14389:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14389:47:13"
															},
															"nativeSrc": "14389:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14389:47:13"
														},
														{
															"nativeSrc": "14445:139:13",
															"nodeType": "YulAssignment",
															"src": "14445:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14579:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14579:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14453:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14453:124:13"
																},
																"nativeSrc": "14453:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14453:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14445:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14445:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14172:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14323:9:13",
														"nodeType": "YulTypedName",
														"src": "14323:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14338:4:13",
														"nodeType": "YulTypedName",
														"src": "14338:4:13",
														"type": ""
													}
												],
												"src": "14172:419:13"
											},
											{
												"body": {
													"nativeSrc": "14751:288:13",
													"nodeType": "YulBlock",
													"src": "14751:288:13",
													"statements": [
														{
															"nativeSrc": "14761:26:13",
															"nodeType": "YulAssignment",
															"src": "14761:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14773:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14773:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14784:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14784:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14769:3:13"
																},
																"nativeSrc": "14769:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14769:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14761:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14841:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14841:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14854:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14854:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14865:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14865:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14850:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14850:3:13"
																		},
																		"nativeSrc": "14850:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14850:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14797:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14797:43:13"
																},
																"nativeSrc": "14797:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14797:71:13"
															},
															"nativeSrc": "14797:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14797:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14922:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14922:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14935:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14935:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14946:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14946:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14931:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14931:3:13"
																		},
																		"nativeSrc": "14931:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14931:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14878:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14878:43:13"
																},
																"nativeSrc": "14878:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14878:72:13"
															},
															"nativeSrc": "14878:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14878:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15004:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15004:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15017:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15017:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15028:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15028:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15013:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15013:3:13"
																		},
																		"nativeSrc": "15013:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15013:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14960:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14960:43:13"
																},
																"nativeSrc": "14960:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14960:72:13"
															},
															"nativeSrc": "14960:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14960:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14597:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14707:9:13",
														"nodeType": "YulTypedName",
														"src": "14707:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14719:6:13",
														"nodeType": "YulTypedName",
														"src": "14719:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14727:6:13",
														"nodeType": "YulTypedName",
														"src": "14727:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14735:6:13",
														"nodeType": "YulTypedName",
														"src": "14735:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14746:4:13",
														"nodeType": "YulTypedName",
														"src": "14746:4:13",
														"type": ""
													}
												],
												"src": "14597:442:13"
											},
											{
												"body": {
													"nativeSrc": "15098:32:13",
													"nodeType": "YulBlock",
													"src": "15098:32:13",
													"statements": [
														{
															"nativeSrc": "15108:16:13",
															"nodeType": "YulAssignment",
															"src": "15108:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "15119:5:13",
																"nodeType": "YulIdentifier",
																"src": "15119:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15108:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "15108:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "15045:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15080:5:13",
														"nodeType": "YulTypedName",
														"src": "15080:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15090:7:13",
														"nodeType": "YulTypedName",
														"src": "15090:7:13",
														"type": ""
													}
												],
												"src": "15045:85:13"
											},
											{
												"body": {
													"nativeSrc": "15180:57:13",
													"nodeType": "YulBlock",
													"src": "15180:57:13",
													"statements": [
														{
															"nativeSrc": "15190:41:13",
															"nodeType": "YulAssignment",
															"src": "15190:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15205:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "15205:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15212:18:13",
																		"nodeType": "YulLiteral",
																		"src": "15212:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15201:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15201:3:13"
																},
																"nativeSrc": "15201:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15201:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15190:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "15190:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "15136:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15162:5:13",
														"nodeType": "YulTypedName",
														"src": "15162:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15172:7:13",
														"nodeType": "YulTypedName",
														"src": "15172:7:13",
														"type": ""
													}
												],
												"src": "15136:101:13"
											},
											{
												"body": {
													"nativeSrc": "15310:89:13",
													"nodeType": "YulBlock",
													"src": "15310:89:13",
													"statements": [
														{
															"nativeSrc": "15320:73:13",
															"nodeType": "YulAssignment",
															"src": "15320:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15385:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "15385:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "15359:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "15359:25:13"
																				},
																				"nativeSrc": "15359:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "15359:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15350:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "15350:8:13"
																		},
																		"nativeSrc": "15350:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15350:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "15333:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "15333:16:13"
																},
																"nativeSrc": "15333:60:13",
																"nodeType": "YulFunctionCall",
																"src": "15333:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15320:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "15320:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "15243:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15290:5:13",
														"nodeType": "YulTypedName",
														"src": "15290:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15300:9:13",
														"nodeType": "YulTypedName",
														"src": "15300:9:13",
														"type": ""
													}
												],
												"src": "15243:156:13"
											},
											{
												"body": {
													"nativeSrc": "15477:73:13",
													"nodeType": "YulBlock",
													"src": "15477:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15494:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15537:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "15537:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "15499:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "15499:37:13"
																		},
																		"nativeSrc": "15499:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15499:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15487:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15487:6:13"
																},
																"nativeSrc": "15487:57:13",
																"nodeType": "YulFunctionCall",
																"src": "15487:57:13"
															},
															"nativeSrc": "15487:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "15487:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "15405:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15465:5:13",
														"nodeType": "YulTypedName",
														"src": "15465:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15472:3:13",
														"nodeType": "YulTypedName",
														"src": "15472:3:13",
														"type": ""
													}
												],
												"src": "15405:145:13"
											},
											{
												"body": {
													"nativeSrc": "15661:131:13",
													"nodeType": "YulBlock",
													"src": "15661:131:13",
													"statements": [
														{
															"nativeSrc": "15671:26:13",
															"nodeType": "YulAssignment",
															"src": "15671:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15683:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15683:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15694:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15694:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15679:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15679:3:13"
																},
																"nativeSrc": "15679:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15679:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15671:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15671:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15758:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15758:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15771:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15771:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15782:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15782:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15767:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15767:3:13"
																		},
																		"nativeSrc": "15767:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15767:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "15707:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "15707:50:13"
																},
																"nativeSrc": "15707:78:13",
																"nodeType": "YulFunctionCall",
																"src": "15707:78:13"
															},
															"nativeSrc": "15707:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "15707:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "15556:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15633:9:13",
														"nodeType": "YulTypedName",
														"src": "15633:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15645:6:13",
														"nodeType": "YulTypedName",
														"src": "15645:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15656:4:13",
														"nodeType": "YulTypedName",
														"src": "15656:4:13",
														"type": ""
													}
												],
												"src": "15556:236:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1723_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1723_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1723_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1723__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1723_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds daily limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874(memPtr) {\n\n        mstore(add(memPtr, 0), \"Daily claim limit reached\")\n\n    }\n\n    function abi_encode_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Score too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect ETH amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f6575f3560e01c8063abbeb55b11610089578063f2fde38b11610058578063f2fde38b14610347578063f7c00e631461036f578063f8175d7814610397578063fc0c546a146103bf57610163565b8063abbeb55b146102af578063ad7a672f146102d7578063b6b55f2514610301578063de9d2a771461031d57610163565b806367eeba0c116100c557806367eeba0c1461021b578063715018a61461024557806385c758f71461025b5780638da5cb5b1461028557610163565b8063013eba921461016757806303191ffc146101a35780632e1a7d4d146101cb578063379607f5146101f357610163565b36610163573460035f82825461010c91906112da565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c34604051610159919061131c565b60405180910390a2005b5f80fd5b348015610172575f80fd5b5061018d60048036038101906101889190611393565b6103e9565b60405161019a919061131c565b60405180910390f35b3480156101ae575f80fd5b506101c960048036038101906101c49190611393565b6103fe565b005b3480156101d6575f80fd5b506101f160048036038101906101ec91906113e8565b610449565b005b3480156101fe575f80fd5b50610219600480360381019061021491906113e8565b61065b565b005b348015610226575f80fd5b5061022f610a97565b60405161023c919061131c565b60405180910390f35b348015610250575f80fd5b50610259610a9d565b005b348015610266575f80fd5b5061026f610ab0565b60405161027c919061146e565b60405180910390f35b348015610290575f80fd5b50610299610ad5565b6040516102a69190611496565b60405180910390f35b3480156102ba575f80fd5b506102d560048036038101906102d091906113e8565b610b0a565b005b3480156102e2575f80fd5b506102eb610b53565b6040516102f8919061131c565b60405180910390f35b61031b600480360381019061031691906113e8565b610b59565b005b348015610328575f80fd5b50610331610cf9565b60405161033e919061131c565b60405180910390f35b348015610352575f80fd5b5061036d60048036038101906103689190611393565b610cff565b005b34801561037a575f80fd5b50610395600480360381019061039091906114af565b610d83565b005b3480156103a2575f80fd5b506103bd60048036038101906103b891906113e8565b610f95565b005b3480156103ca575f80fd5b506103d3610fde565b6040516103e09190611496565b60405180910390f35b6005602052805f5260405f205f915090505481565b610406611001565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610451611001565b600354811115610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90611580565b60405180910390fd5b8060035f8282546104a7919061159e565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105b5575f610509610ad5565b73ffffffffffffffffffffffffffffffffffffffff168260405161052c906115fe565b5f6040518083038185875af1925050503d805f8114610566576040519150601f19603f3d011682016040523d82523d5f602084013e61056b565b606091505b50509050806105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a69061165c565b60405180910390fd5b50610658565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6105f8610ad5565b836040518363ffffffff1660e01b815260040161061692919061167a565b6020604051808303815f875af1158015610632573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065691906116d6565b505b50565b6002548111156106a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106979061174b565b60405180910390fd5b6201518060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054426106ed919061159e565b101561072e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610725906117b3565b60405180910390fd5b60045460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663776f3843336040518263ffffffff1660e01b815260040161078b9190611496565b602060405180830381865afa1580156107a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ca91906117e5565b101561080b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108029061185a565b60405180910390fd5b600354811115610850576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610847906118c2565b60405180910390fd5b4260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060035f8282546108a3919061159e565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109aa575f3373ffffffffffffffffffffffffffffffffffffffff1682604051610921906115fe565b5f6040518083038185875af1925050503d805f811461095b576040519150601f19603f3d011682016040523d82523d5f602084013e610960565b606091505b50509050806109a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099b9061165c565b60405180910390fd5b50610a46565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610a0492919061167a565b6020604051808303815f875af1158015610a20573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4491906116d6565b505b3373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a82604051610a8c919061131c565b60405180910390a250565b60025481565b610aa5611001565b610aae5f611088565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610adf611159565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b610b12611001565b806004819055507fd98c5078430f16c83b85da9a630c27aac195dd3e768e25b102dfffa99f64b4d281604051610b48919061131c565b60405180910390a150565b60035481565b5f73ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bf257803414610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be49061192a565b60405180910390fd5b610c90565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c4e93929190611948565b6020604051808303815f875af1158015610c6a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8e91906116d6565b505b8060035f828254610ca191906112da565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c82604051610cee919061131c565b60405180910390a250565b60045481565b610d07611001565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d77575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d6e9190611496565b60405180910390fd5b610d8081611088565b50565b5f610d8c611180565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015610dd45750825b90505f60018367ffffffffffffffff16148015610e0757505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610e15575080155b15610e4c576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610e99576001855f0160086101000a81548160ff0219169083151502179055505b610ea2876111a7565b895f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508860015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600281905550856004819055508315610f89575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610f8091906119c9565b60405180910390a15b50505050505050505050565b610f9d611001565b806002819055507f69e4f4585a710debc30f07c33dcded264dd61e9dd02a9dfad6584a9189f185e481604051610fd3919061131c565b60405180910390a150565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110096111bb565b73ffffffffffffffffffffffffffffffffffffffff16611027610ad5565b73ffffffffffffffffffffffffffffffffffffffff16146110865761104a6111bb565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161107d9190611496565b60405180910390fd5b565b5f611091611159565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6111af6111c2565b6111b881611202565b50565b5f33905090565b6111ca611286565b611200576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61120a6111c2565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361127a575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112719190611496565b60405180910390fd5b61128381611088565b50565b5f61128f611180565b5f0160089054906101000a900460ff16905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112e4826112a4565b91506112ef836112a4565b9250828201905080821115611307576113066112ad565b5b92915050565b611316816112a4565b82525050565b5f60208201905061132f5f83018461130d565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61136282611339565b9050919050565b61137281611358565b811461137c575f80fd5b50565b5f8135905061138d81611369565b92915050565b5f602082840312156113a8576113a7611335565b5b5f6113b58482850161137f565b91505092915050565b6113c7816112a4565b81146113d1575f80fd5b50565b5f813590506113e2816113be565b92915050565b5f602082840312156113fd576113fc611335565b5b5f61140a848285016113d4565b91505092915050565b5f819050919050565b5f61143661143161142c84611339565b611413565b611339565b9050919050565b5f6114478261141c565b9050919050565b5f6114588261143d565b9050919050565b6114688161144e565b82525050565b5f6020820190506114815f83018461145f565b92915050565b61149081611358565b82525050565b5f6020820190506114a95f830184611487565b92915050565b5f805f805f60a086880312156114c8576114c7611335565b5b5f6114d58882890161137f565b95505060206114e68882890161137f565b94505060406114f7888289016113d4565b93505060606115088882890161137f565b9250506080611519888289016113d4565b9150509295509295909350565b5f82825260208201905092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f61156a601283611526565b915061157582611536565b602082019050919050565b5f6020820190508181035f8301526115978161155e565b9050919050565b5f6115a8826112a4565b91506115b3836112a4565b92508282039050818111156115cb576115ca6112ad565b5b92915050565b5f81905092915050565b50565b5f6115e95f836115d1565b91506115f4826115db565b5f82019050919050565b5f611608826115de565b9150819050919050565b7f455448207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f611646601383611526565b915061165182611612565b602082019050919050565b5f6020820190508181035f8301526116738161163a565b9050919050565b5f60408201905061168d5f830185611487565b61169a602083018461130d565b9392505050565b5f8115159050919050565b6116b5816116a1565b81146116bf575f80fd5b50565b5f815190506116d0816116ac565b92915050565b5f602082840312156116eb576116ea611335565b5b5f6116f8848285016116c2565b91505092915050565b7f45786365656473206461696c79206c696d6974000000000000000000000000005f82015250565b5f611735601383611526565b915061174082611701565b602082019050919050565b5f6020820190508181035f83015261176281611729565b9050919050565b7f4461696c7920636c61696d206c696d69742072656163686564000000000000005f82015250565b5f61179d601983611526565b91506117a882611769565b602082019050919050565b5f6020820190508181035f8301526117ca81611791565b9050919050565b5f815190506117df816113be565b92915050565b5f602082840312156117fa576117f9611335565b5b5f611807848285016117d1565b91505092915050565b7f53636f726520746f6f206c6f77000000000000000000000000000000000000005f82015250565b5f611844600d83611526565b915061184f82611810565b602082019050919050565b5f6020820190508181035f83015261187181611838565b9050919050565b7f496e73756666696369656e742066756e647320696e206a6172000000000000005f82015250565b5f6118ac601983611526565b91506118b782611878565b602082019050919050565b5f6020820190508181035f8301526118d9816118a0565b9050919050565b7f496e636f72726563742045544820616d6f756e740000000000000000000000005f82015250565b5f611914601483611526565b915061191f826118e0565b602082019050919050565b5f6020820190508181035f83015261194181611908565b9050919050565b5f60608201905061195b5f830186611487565b6119686020830185611487565b611975604083018461130d565b949350505050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f6119b36119ae6119a98461197d565b611413565b611986565b9050919050565b6119c381611999565b82525050565b5f6020820190506119dc5f8301846119ba565b9291505056fea264697066735822122040f2d7f931d5c3a5bd9a9d700e4e195e6d7fbcafa3736924637b6df356220df364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xABBEB55B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xF7C00E63 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF8175D78 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3BF JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0xABBEB55B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAD7A672F EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xDE9D2A77 EQ PUSH2 0x31D JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x67EEBA0C GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x67EEBA0C EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x285 JUMPI PUSH2 0x163 JUMP JUMPDEST DUP1 PUSH4 0x13EBA92 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x3191FFC EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1F3 JUMPI PUSH2 0x163 JUMP JUMPDEST CALLDATASIZE PUSH2 0x163 JUMPI CALLVALUE PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22F PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x250 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0xA9D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x299 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH2 0xB53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x328 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x1393 JUMP JUMPDEST PUSH2 0xCFF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0xD83 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH2 0xF95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D3 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x406 PUSH2 0x1001 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x451 PUSH2 0x1001 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48D SWAP1 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x159E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B5 JUMPI PUSH0 PUSH2 0x509 PUSH2 0xAD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x52C SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x566 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x56B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x658 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x5F8 PUSH2 0xAD5 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x616 SWAP3 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x174B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x159E JUMP JUMPDEST LT ISZERO PUSH2 0x72E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP1 PUSH2 0x17B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x776F3843 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0x17E5 JUMP JUMPDEST LT ISZERO PUSH2 0x80B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x802 SWAP1 PUSH2 0x185A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD DUP2 GT ISZERO PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x847 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8A3 SWAP2 SWAP1 PUSH2 0x159E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AA JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x921 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x95B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x960 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x9A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99B SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0xA46 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP3 SWAP2 SWAP1 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA20 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA44 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP3 PUSH1 0x40 MLOAD PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAA5 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0xAAE PUSH0 PUSH2 0x1088 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xADF PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB12 PUSH2 0x1001 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xD98C5078430F16C83B85DA9A630C27AAC195DD3E768E25B102DFFFA99F64B4D2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBF2 JUMPI DUP1 CALLVALUE EQ PUSH2 0xBED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE4 SWAP1 PUSH2 0x192A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC6A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x12DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C DUP3 PUSH1 0x40 MLOAD PUSH2 0xCEE SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD07 PUSH2 0x1001 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6E SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD80 DUP2 PUSH2 0x1088 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xD8C PUSH2 0x1180 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDD4 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xE07 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xE15 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xE4C JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xEA2 DUP8 PUSH2 0x11A7 JUMP JUMPDEST DUP10 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xF89 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x19C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF9D PUSH2 0x1001 JUMP JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x69E4F4585A710DEBC30F07C33DCDED264DD61E9DD02A9DFAD6584A9189F185E4 DUP2 PUSH1 0x40 MLOAD PUSH2 0xFD3 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1009 PUSH2 0x11BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1027 PUSH2 0xAD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1086 JUMPI PUSH2 0x104A PUSH2 0x11BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107D SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1091 PUSH2 0x1159 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11AF PUSH2 0x11C2 JUMP JUMPDEST PUSH2 0x11B8 DUP2 PUSH2 0x1202 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11CA PUSH2 0x1286 JUMP JUMPDEST PUSH2 0x1200 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x120A PUSH2 0x11C2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1271 SWAP2 SWAP1 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1283 DUP2 PUSH2 0x1088 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x128F PUSH2 0x1180 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12E4 DUP3 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x12EF DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1307 JUMPI PUSH2 0x1306 PUSH2 0x12AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1316 DUP2 PUSH2 0x12A4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x132F PUSH0 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1362 DUP3 PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1372 DUP2 PUSH2 0x1358 JUMP JUMPDEST DUP2 EQ PUSH2 0x137C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x138D DUP2 PUSH2 0x1369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13A8 JUMPI PUSH2 0x13A7 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13B5 DUP5 DUP3 DUP6 ADD PUSH2 0x137F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x12A4 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13E2 DUP2 PUSH2 0x13BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FD JUMPI PUSH2 0x13FC PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x140A DUP5 DUP3 DUP6 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1436 PUSH2 0x1431 PUSH2 0x142C DUP5 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x1339 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1447 DUP3 PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1458 DUP3 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x144E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1481 PUSH0 DUP4 ADD DUP5 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1490 DUP2 PUSH2 0x1358 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1487 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14D5 DUP9 DUP3 DUP10 ADD PUSH2 0x137F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x14E6 DUP9 DUP3 DUP10 ADD PUSH2 0x137F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x14F7 DUP9 DUP3 DUP10 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1508 DUP9 DUP3 DUP10 ADD PUSH2 0x137F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1519 DUP9 DUP3 DUP10 ADD PUSH2 0x13D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156A PUSH1 0x12 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1575 DUP3 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1597 DUP2 PUSH2 0x155E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A8 DUP3 PUSH2 0x12A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B3 DUP4 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x12AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x15E9 PUSH0 DUP4 PUSH2 0x15D1 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F4 DUP3 PUSH2 0x15DB JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1608 DUP3 PUSH2 0x15DE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1646 PUSH1 0x13 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1651 DUP3 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1673 DUP2 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x168D PUSH0 DUP4 ADD DUP6 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x169A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B5 DUP2 PUSH2 0x16A1 JUMP JUMPDEST DUP2 EQ PUSH2 0x16BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x16D0 DUP2 PUSH2 0x16AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EB JUMPI PUSH2 0x16EA PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F8 DUP5 DUP3 DUP6 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206461696C79206C696D697400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1735 PUSH1 0x13 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x1740 DUP3 PUSH2 0x1701 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1762 DUP2 PUSH2 0x1729 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4461696C7920636C61696D206C696D6974207265616368656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x179D PUSH1 0x19 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A8 DUP3 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17CA DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17DF DUP2 PUSH2 0x13BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1335 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1807 DUP5 DUP3 DUP6 ADD PUSH2 0x17D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53636F726520746F6F206C6F7700000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1844 PUSH1 0xD DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x184F DUP3 PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1871 DUP2 PUSH2 0x1838 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18AC PUSH1 0x19 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x18B7 DUP3 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D9 DUP2 PUSH2 0x18A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F72726563742045544820616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1914 PUSH1 0x14 DUP4 PUSH2 0x1526 JUMP JUMPDEST SWAP2 POP PUSH2 0x191F DUP3 PUSH2 0x18E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1941 DUP2 PUSH2 0x1908 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x195B PUSH0 DUP4 ADD DUP7 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1968 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1487 JUMP JUMPDEST PUSH2 0x1975 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x130D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19B3 PUSH2 0x19AE PUSH2 0x19A9 DUP5 PUSH2 0x197D JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x1986 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C3 DUP2 PUSH2 0x1999 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19DC PUSH0 DUP4 ADD DUP5 PUSH2 0x19BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH CALLCODE 0xD7 0xF9 BALANCE 0xD5 0xC3 0xA5 0xBD SWAP11 SWAP14 PUSH17 0xE4E195E6D7FBCAFA3736924637B6DF356 0x22 0xD RETURN PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "367:4616:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4917:9;4901:12;;:25;;;;;;;:::i;:::-;;;;;;;;4950:10;4942:30;;;4962:9;4942:30;;;;;;:::i;:::-;;;;;;;;367:4616;;;;;773:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4756:99;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4290:458;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3154:790;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;583:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;519:21:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:176:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;641:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1953:400;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;703:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1332:398:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3952:146;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;449:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;773:46;;;;;;;;;;;;;;;;;:::o;4756:99::-;2334:13:0;:11;:13::i;:::-;4839:7:11::1;4822:6;;:25;;;;;;;;;;;;;;;;;;4756:99:::0;:::o;4290:458::-;2334:13:0;:11;:13::i;:::-;4372:12:11::1;;4362:6;:22;;4354:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4436:6;4420:12;;:22;;;;;;;:::i;:::-;;;;;;;;4474:1;4457:19;;:5;::::0;::::1;;;;;;;;:19;;::::0;4453:288:::1;;4523:12;4541:7;:5;:7::i;:::-;:12;;4561:6;4541:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4522:50;;;4595:7;4587:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;4478:160;4453:288;;;4697:5;::::0;::::1;;;;;;;;4690:22;;;4713:7;:5;:7::i;:::-;4722:6;4690:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4453:288;4290:458:::0;:::o;3154:790::-;3223:10;;3213:6;:20;;3205:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3321:6;3294:11;:23;3306:10;3294:23;;;;;;;;;;;;;;;;3276:15;:41;;;;:::i;:::-;:51;;3268:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3404:13;;3376:6;;;;;;;;;;;:12;;;3389:10;3376:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;3368:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3464:12;;3454:6;:22;;3446:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3545:15;3519:11;:23;3531:10;3519:23;;;;;;;;;;;;;;;:41;;;;3587:6;3571:12;;:22;;;;;;;:::i;:::-;;;;;;;;3627:1;3610:19;;:5;;;;;;;;;;:19;;;3606:286;;3672:12;3690:10;:15;;3713:6;3690:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:53;;;3747:7;3739:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;3631:159;3606:286;;;3845:5;;;;;;;;;;3838:22;;;3861:10;3873:6;3838:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3606:286;3917:10;3909:27;;;3929:6;3909:27;;;;;;:::i;:::-;;;;;;;;3154:790;:::o;583:25::-;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;519:21:11:-;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;4106:176:11:-;2334:13:0;:11;:13::i;:::-;4204:16:11::1;4188:13;:32;;;;4236:38;4257:16;4236:38;;;;;;:::i;:::-;;;;;;;;4106:176:::0;:::o;641:27::-;;;;:::o;1953:400::-;2035:1;2018:19;;:5;;;;;;;;;;:19;;;2014:256;;2103:6;2090:9;:19;2082:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2014:256;;;2204:5;;;;;;;;;;2197:26;;;2224:10;2244:4;2251:6;2197:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2014:256;2296:6;2280:12;;:22;;;;;;;:::i;:::-;;;;;;;;2326:10;2318:27;;;2338:6;2318:27;;;;;;:::i;:::-;;;;;;;;1953:400;:::o;703:28::-;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1332:398:11:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1529:21:11::1;1544:5;1529:14;:21::i;:::-;1604:6;1596:5;::::0;:14:::1;;;;;;;;;;;;;;;;;;1638:7;1621:6;;:25;;;;;;;;;;;;;;;;;;1670:11;1657:10;:24;;;;1708:14;1692:13;:30;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1332:398:11;;;;;:::o;3952:146::-;2334:13:0;:11;:13::i;:::-;4039:8:11::1;4026:10;:21;;;;4063:27;4081:8;4063:27;;;;;;:::i;:::-;;;;;;;;3952:146:::0;:::o;449:20::-;;;;;;;;;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;906:117::-;1015:1;1012;1005:12;1152:126;1189:7;1229:42;1222:5;1218:54;1207:65;;1152:126;;;:::o;1284:96::-;1321:7;1350:24;1368:5;1350:24;:::i;:::-;1339:35;;1284:96;;;:::o;1386:122::-;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;1514:139::-;1560:5;1598:6;1585:20;1576:29;;1614:33;1641:5;1614:33;:::i;:::-;1514:139;;;;:::o;1659:329::-;1718:6;1767:2;1755:9;1746:7;1742:23;1738:32;1735:119;;;1773:79;;:::i;:::-;1735:119;1893:1;1918:53;1963:7;1954:6;1943:9;1939:22;1918:53;:::i;:::-;1908:63;;1864:117;1659:329;;;;:::o;1994:122::-;2067:24;2085:5;2067:24;:::i;:::-;2060:5;2057:35;2047:63;;2106:1;2103;2096:12;2047:63;1994:122;:::o;2122:139::-;2168:5;2206:6;2193:20;2184:29;;2222:33;2249:5;2222:33;:::i;:::-;2122:139;;;;:::o;2267:329::-;2326:6;2375:2;2363:9;2354:7;2350:23;2346:32;2343:119;;;2381:79;;:::i;:::-;2343:119;2501:1;2526:53;2571:7;2562:6;2551:9;2547:22;2526:53;:::i;:::-;2516:63;;2472:117;2267:329;;;;:::o;2602:60::-;2630:3;2651:5;2644:12;;2602:60;;;:::o;2668:142::-;2718:9;2751:53;2769:34;2778:24;2796:5;2778:24;:::i;:::-;2769:34;:::i;:::-;2751:53;:::i;:::-;2738:66;;2668:142;;;:::o;2816:126::-;2866:9;2899:37;2930:5;2899:37;:::i;:::-;2886:50;;2816:126;;;:::o;2948:142::-;3014:9;3047:37;3078:5;3047:37;:::i;:::-;3034:50;;2948:142;;;:::o;3096:163::-;3199:53;3246:5;3199:53;:::i;:::-;3194:3;3187:66;3096:163;;:::o;3265:254::-;3374:4;3412:2;3401:9;3397:18;3389:26;;3425:87;3509:1;3498:9;3494:17;3485:6;3425:87;:::i;:::-;3265:254;;;;:::o;3525:118::-;3612:24;3630:5;3612:24;:::i;:::-;3607:3;3600:37;3525:118;;:::o;3649:222::-;3742:4;3780:2;3769:9;3765:18;3757:26;;3793:71;3861:1;3850:9;3846:17;3837:6;3793:71;:::i;:::-;3649:222;;;;:::o;3877:911::-;3972:6;3980;3988;3996;4004;4053:3;4041:9;4032:7;4028:23;4024:33;4021:120;;;4060:79;;:::i;:::-;4021:120;4180:1;4205:53;4250:7;4241:6;4230:9;4226:22;4205:53;:::i;:::-;4195:63;;4151:117;4307:2;4333:53;4378:7;4369:6;4358:9;4354:22;4333:53;:::i;:::-;4323:63;;4278:118;4435:2;4461:53;4506:7;4497:6;4486:9;4482:22;4461:53;:::i;:::-;4451:63;;4406:118;4563:2;4589:53;4634:7;4625:6;4614:9;4610:22;4589:53;:::i;:::-;4579:63;;4534:118;4691:3;4718:53;4763:7;4754:6;4743:9;4739:22;4718:53;:::i;:::-;4708:63;;4662:119;3877:911;;;;;;;;:::o;4794:169::-;4878:11;4912:6;4907:3;4900:19;4952:4;4947:3;4943:14;4928:29;;4794:169;;;;:::o;4969:168::-;5109:20;5105:1;5097:6;5093:14;5086:44;4969:168;:::o;5143:366::-;5285:3;5306:67;5370:2;5365:3;5306:67;:::i;:::-;5299:74;;5382:93;5471:3;5382:93;:::i;:::-;5500:2;5495:3;5491:12;5484:19;;5143:366;;;:::o;5515:419::-;5681:4;5719:2;5708:9;5704:18;5696:26;;5768:9;5762:4;5758:20;5754:1;5743:9;5739:17;5732:47;5796:131;5922:4;5796:131;:::i;:::-;5788:139;;5515:419;;;:::o;5940:194::-;5980:4;6000:20;6018:1;6000:20;:::i;:::-;5995:25;;6034:20;6052:1;6034:20;:::i;:::-;6029:25;;6078:1;6075;6071:9;6063:17;;6102:1;6096:4;6093:11;6090:37;;;6107:18;;:::i;:::-;6090:37;5940:194;;;;:::o;6140:147::-;6241:11;6278:3;6263:18;;6140:147;;;;:::o;6293:114::-;;:::o;6413:398::-;6572:3;6593:83;6674:1;6669:3;6593:83;:::i;:::-;6586:90;;6685:93;6774:3;6685:93;:::i;:::-;6803:1;6798:3;6794:11;6787:18;;6413:398;;;:::o;6817:379::-;7001:3;7023:147;7166:3;7023:147;:::i;:::-;7016:154;;7187:3;7180:10;;6817:379;;;:::o;7202:169::-;7342:21;7338:1;7330:6;7326:14;7319:45;7202:169;:::o;7377:366::-;7519:3;7540:67;7604:2;7599:3;7540:67;:::i;:::-;7533:74;;7616:93;7705:3;7616:93;:::i;:::-;7734:2;7729:3;7725:12;7718:19;;7377:366;;;:::o;7749:419::-;7915:4;7953:2;7942:9;7938:18;7930:26;;8002:9;7996:4;7992:20;7988:1;7977:9;7973:17;7966:47;8030:131;8156:4;8030:131;:::i;:::-;8022:139;;7749:419;;;:::o;8174:332::-;8295:4;8333:2;8322:9;8318:18;8310:26;;8346:71;8414:1;8403:9;8399:17;8390:6;8346:71;:::i;:::-;8427:72;8495:2;8484:9;8480:18;8471:6;8427:72;:::i;:::-;8174:332;;;;;:::o;8512:90::-;8546:7;8589:5;8582:13;8575:21;8564:32;;8512:90;;;:::o;8608:116::-;8678:21;8693:5;8678:21;:::i;:::-;8671:5;8668:32;8658:60;;8714:1;8711;8704:12;8658:60;8608:116;:::o;8730:137::-;8784:5;8815:6;8809:13;8800:22;;8831:30;8855:5;8831:30;:::i;:::-;8730:137;;;;:::o;8873:345::-;8940:6;8989:2;8977:9;8968:7;8964:23;8960:32;8957:119;;;8995:79;;:::i;:::-;8957:119;9115:1;9140:61;9193:7;9184:6;9173:9;9169:22;9140:61;:::i;:::-;9130:71;;9086:125;8873:345;;;;:::o;9224:169::-;9364:21;9360:1;9352:6;9348:14;9341:45;9224:169;:::o;9399:366::-;9541:3;9562:67;9626:2;9621:3;9562:67;:::i;:::-;9555:74;;9638:93;9727:3;9638:93;:::i;:::-;9756:2;9751:3;9747:12;9740:19;;9399:366;;;:::o;9771:419::-;9937:4;9975:2;9964:9;9960:18;9952:26;;10024:9;10018:4;10014:20;10010:1;9999:9;9995:17;9988:47;10052:131;10178:4;10052:131;:::i;:::-;10044:139;;9771:419;;;:::o;10196:175::-;10336:27;10332:1;10324:6;10320:14;10313:51;10196:175;:::o;10377:366::-;10519:3;10540:67;10604:2;10599:3;10540:67;:::i;:::-;10533:74;;10616:93;10705:3;10616:93;:::i;:::-;10734:2;10729:3;10725:12;10718:19;;10377:366;;;:::o;10749:419::-;10915:4;10953:2;10942:9;10938:18;10930:26;;11002:9;10996:4;10992:20;10988:1;10977:9;10973:17;10966:47;11030:131;11156:4;11030:131;:::i;:::-;11022:139;;10749:419;;;:::o;11174:143::-;11231:5;11262:6;11256:13;11247:22;;11278:33;11305:5;11278:33;:::i;:::-;11174:143;;;;:::o;11323:351::-;11393:6;11442:2;11430:9;11421:7;11417:23;11413:32;11410:119;;;11448:79;;:::i;:::-;11410:119;11568:1;11593:64;11649:7;11640:6;11629:9;11625:22;11593:64;:::i;:::-;11583:74;;11539:128;11323:351;;;;:::o;11680:163::-;11820:15;11816:1;11808:6;11804:14;11797:39;11680:163;:::o;11849:366::-;11991:3;12012:67;12076:2;12071:3;12012:67;:::i;:::-;12005:74;;12088:93;12177:3;12088:93;:::i;:::-;12206:2;12201:3;12197:12;12190:19;;11849:366;;;:::o;12221:419::-;12387:4;12425:2;12414:9;12410:18;12402:26;;12474:9;12468:4;12464:20;12460:1;12449:9;12445:17;12438:47;12502:131;12628:4;12502:131;:::i;:::-;12494:139;;12221:419;;;:::o;12646:175::-;12786:27;12782:1;12774:6;12770:14;12763:51;12646:175;:::o;12827:366::-;12969:3;12990:67;13054:2;13049:3;12990:67;:::i;:::-;12983:74;;13066:93;13155:3;13066:93;:::i;:::-;13184:2;13179:3;13175:12;13168:19;;12827:366;;;:::o;13199:419::-;13365:4;13403:2;13392:9;13388:18;13380:26;;13452:9;13446:4;13442:20;13438:1;13427:9;13423:17;13416:47;13480:131;13606:4;13480:131;:::i;:::-;13472:139;;13199:419;;;:::o;13624:170::-;13764:22;13760:1;13752:6;13748:14;13741:46;13624:170;:::o;13800:366::-;13942:3;13963:67;14027:2;14022:3;13963:67;:::i;:::-;13956:74;;14039:93;14128:3;14039:93;:::i;:::-;14157:2;14152:3;14148:12;14141:19;;13800:366;;;:::o;14172:419::-;14338:4;14376:2;14365:9;14361:18;14353:26;;14425:9;14419:4;14415:20;14411:1;14400:9;14396:17;14389:47;14453:131;14579:4;14453:131;:::i;:::-;14445:139;;14172:419;;;:::o;14597:442::-;14746:4;14784:2;14773:9;14769:18;14761:26;;14797:71;14865:1;14854:9;14850:17;14841:6;14797:71;:::i;:::-;14878:72;14946:2;14935:9;14931:18;14922:6;14878:72;:::i;:::-;14960;15028:2;15017:9;15013:18;15004:6;14960:72;:::i;:::-;14597:442;;;;;;:::o;15045:85::-;15090:7;15119:5;15108:16;;15045:85;;;:::o;15136:101::-;15172:7;15212:18;15205:5;15201:30;15190:41;;15136:101;;;:::o;15243:156::-;15300:9;15333:60;15350:42;15359:32;15385:5;15359:32;:::i;:::-;15350:42;:::i;:::-;15333:60;:::i;:::-;15320:73;;15243:156;;;:::o;15405:145::-;15499:44;15537:5;15499:44;:::i;:::-;15494:3;15487:57;15405:145;;:::o;15556:236::-;15656:4;15694:2;15683:9;15679:18;15671:26;;15707:78;15782:1;15771:9;15767:17;15758:6;15707:78;:::i;:::-;15556:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1336000",
								"executionCost": "1388",
								"totalCost": "1337388"
							},
							"external": {
								"claim(uint256)": "infinite",
								"dailyLimit()": "2448",
								"deposit(uint256)": "infinite",
								"initialize(address,address,uint256,address,uint256)": "infinite",
								"lastClaimed(address)": "2826",
								"owner()": "2656",
								"renounceOwnership()": "infinite",
								"scoreRequired()": "2514",
								"scorer()": "infinite",
								"setScoreRequired(uint256)": "infinite",
								"setScorer(address)": "infinite",
								"token()": "2593",
								"totalBalance()": "2470",
								"transferOwnership(address)": "infinite",
								"updateDailyLimit(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 4983,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040f2d7f931d5c3a5bd9a9d700e4e195e6d7fbcafa3736924637b6df356220df364736f6c634300081a0033",
									".code": [
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "ABBEB55B"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "F7C00E63"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "F8175D78"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "FC0C546A"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "ABBEB55B"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "AD7A672F"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "B6B55F25"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "DE9D2A77"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "67EEBA0C"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "67EEBA0C"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "85C758F7"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "13EBA92"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "3191FFC"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "2E1A7D4D"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "379607F5"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4917,
											"end": 4926,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4901,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4926,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4950,
											"end": 4960,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "PUSH",
											"source": 11,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 4962,
											"end": 4971,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4942,
											"end": 4972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4972,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 4983,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 773,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 773,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 773,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 4756,
											"end": 4855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4756,
											"end": 4855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 4290,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4290,
											"end": 4748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3154,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3154,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 583,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 583,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 540,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 519,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 519,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 4106,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4106,
											"end": 4282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 641,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1953,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1953,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 703,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 703,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1332,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1332,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3952,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3952,
											"end": 4098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 449,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 449,
											"end": 469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 773,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4846,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4822,
											"end": 4828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4847,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4756,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4372,
											"end": 4384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4372,
											"end": 4384,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4384,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4362,
											"end": 4384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 4354,
											"end": 4407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 4354,
											"end": 4407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4436,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4420,
											"end": 4432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4420,
											"end": 4442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4420,
											"end": 4442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4474,
											"end": 4475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4457,
											"end": 4476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4462,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4457,
											"end": 4462,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4457,
											"end": 4476,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4457,
											"end": 4476,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4523,
											"end": 4535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4548,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 4541,
											"end": 4546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4541,
											"end": 4548,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4548,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 4541,
											"end": 4548,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4541,
											"end": 4553,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4561,
											"end": 4567,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4541,
											"end": 4572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4522,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4522,
											"end": 4572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4522,
											"end": 4572,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4595,
											"end": 4602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 4587,
											"end": 4626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4587,
											"end": 4626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4702,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4702,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4712,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 4713,
											"end": 4720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4713,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 4713,
											"end": 4720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4713,
											"end": 4720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 4713,
											"end": 4720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4728,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 4690,
											"end": 4729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4729,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 4690,
											"end": 4729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 4453,
											"end": 4741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4290,
											"end": 4748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3233,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3213,
											"end": 3233,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3205,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3205,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3321,
											"end": 3327,
											"name": "PUSH",
											"source": 11,
											"value": "15180"
										},
										{
											"begin": 3294,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3316,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3294,
											"end": 3317,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3291,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3276,
											"end": 3317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3276,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3317,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3276,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3327,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3276,
											"end": 3327,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3268,
											"end": 3357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3268,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3404,
											"end": 3417,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3417,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "PUSH",
											"source": 11,
											"value": "776F3843"
										},
										{
											"begin": 3389,
											"end": 3399,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3376,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 3376,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3417,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3376,
											"end": 3417,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 3368,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 3368,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3476,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3454,
											"end": 3476,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 3446,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 3446,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3531,
											"end": 3541,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3542,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3560,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3560,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3560,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3583,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3571,
											"end": 3583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3571,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3593,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3629,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3610,
											"end": 3629,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3610,
											"end": 3615,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3629,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3610,
											"end": 3629,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3610,
											"end": 3629,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3672,
											"end": 3684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3705,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3705,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3719,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 3690,
											"end": 3724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3671,
											"end": 3724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3739,
											"end": 3778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 3739,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3631,
											"end": 3790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3860,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3860,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 3861,
											"end": 3871,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3838,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3838,
											"end": 3880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 3606,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3927,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 3929,
											"end": 3935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 3909,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3936,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3154,
											"end": 3944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 608,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 583,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 519,
											"end": 540,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 519,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4204,
											"end": 4220,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4201,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4220,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4220,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4220,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4188,
											"end": 4220,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D98C5078430F16C83B85DA9A630C27AAC195DD3E768E25B102DFFFA99F64B4D2"
										},
										{
											"begin": 4257,
											"end": 4273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4236,
											"end": 4274,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4236,
											"end": 4274,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 641,
											"end": 668,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2036,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2018,
											"end": 2023,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2037,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2082,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2082,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2223,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2223,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2223,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2244,
											"end": 2248,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2251,
											"end": 2257,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 2197,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 2197,
											"end": 2258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2258,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2014,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2302,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2292,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2280,
											"end": 2292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2280,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2302,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2326,
											"end": 2336,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 2338,
											"end": 2344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2318,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2318,
											"end": 2345,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 2353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 703,
											"end": 731,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 703,
											"end": 731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1544,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 1529,
											"end": 1550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1529,
											"end": 1550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 1529,
											"end": 1550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1604,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1596,
											"end": 1610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1645,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1621,
											"end": 1627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1621,
											"end": 1646,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1681,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1657,
											"end": 1681,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1681,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1657,
											"end": 1681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1708,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1692,
											"end": 1722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1722,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1692,
											"end": 1722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1332,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4047,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4026,
											"end": 4047,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4047,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4047,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "69E4F4585A710DEBC30F07C33DCDED264DD61E9DD02A9DFAD6584A9189F185E4"
										},
										{
											"begin": 4081,
											"end": 4089,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 4063,
											"end": 4090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4063,
											"end": 4090,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3952,
											"end": 4098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 449,
											"end": 469,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 449,
											"end": 469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1218,
											"end": 1272,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1350,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 1459,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1449,
											"end": 1484,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1614,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1765,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1770,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1773,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1963,
											"end": 1970,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1952,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 1918,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2085,
											"end": 2090,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 2067,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 2067,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2092,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2096,
											"end": 2108,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 2047,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2193,
											"end": 2213,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2213,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2184,
											"end": 2213,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2222,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 2222,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2377,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2354,
											"end": 2361,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2373,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2378,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 2381,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 2381,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 2343,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2501,
											"end": 2502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 2571,
											"end": 2578,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2568,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2551,
											"end": 2560,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2526,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 2526,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2516,
											"end": 2579,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2516,
											"end": 2579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2267,
											"end": 2596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2656,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2644,
											"end": 2656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2662,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2810,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2668,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 2769,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 2778,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2778,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2802,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 2778,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2769,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2803,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 2769,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2751,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2804,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 2751,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2738,
											"end": 2804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2738,
											"end": 2804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2810,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2816,
											"end": 2942,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 2816,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2899,
											"end": 2936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 2899,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2886,
											"end": 2936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2886,
											"end": 2936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2816,
											"end": 2942,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2816,
											"end": 2942,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2816,
											"end": 2942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2816,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3090,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2948,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3047,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3047,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3084,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3096,
											"end": 3259,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3096,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 3199,
											"end": 3252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 3199,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3194,
											"end": 3197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3187,
											"end": 3253,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3096,
											"end": 3259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3096,
											"end": 3259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3096,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3519,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3265,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3414,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3397,
											"end": 3415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3389,
											"end": 3415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3389,
											"end": 3415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3494,
											"end": 3511,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3491,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3425,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3425,
											"end": 3512,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 3425,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3519,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3643,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3525,
											"end": 3643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 3630,
											"end": 3635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 3612,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3636,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 3612,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3600,
											"end": 3637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3525,
											"end": 3643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3871,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3649,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3742,
											"end": 3746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3765,
											"end": 3783,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3757,
											"end": 3783,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3757,
											"end": 3783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3861,
											"end": 3862,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3850,
											"end": 3859,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3843,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3793,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3864,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3793,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3871,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3871,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4032,
											"end": 4039,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4028,
											"end": 4051,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4057,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4141,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 4021,
											"end": 4141,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 4060,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 4060,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4060,
											"end": 4139,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 4060,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4141,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 4021,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4226,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 4205,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4205,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4151,
											"end": 4268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4309,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 4378,
											"end": 4385,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4358,
											"end": 4367,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 4333,
											"end": 4386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 4333,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4323,
											"end": 4386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4437,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4461,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 4506,
											"end": 4513,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4486,
											"end": 4495,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 4461,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4514,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 4461,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4514,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4524,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4565,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 4634,
											"end": 4641,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4625,
											"end": 4631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4623,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4610,
											"end": 4632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 4589,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4642,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4534,
											"end": 4652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4694,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4718,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4763,
											"end": 4770,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4761,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4718,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 4718,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4718,
											"end": 4771,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4718,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 4771,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 4788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4963,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 4794,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4907,
											"end": 4910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4919,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4952,
											"end": 4956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4947,
											"end": 4950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4943,
											"end": 4957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4928,
											"end": 4957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4928,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 5137,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4969,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5129,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 5105,
											"end": 5106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5086,
											"end": 5130,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 5137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4969,
											"end": 5137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5143,
											"end": 5509,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5143,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 5370,
											"end": 5372,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 5365,
											"end": 5368,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5306,
											"end": 5373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5373,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 5306,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5373,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 5471,
											"end": 5474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 5382,
											"end": 5475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5475,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 5382,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5495,
											"end": 5498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5143,
											"end": 5509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5143,
											"end": 5509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5143,
											"end": 5509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5143,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5934,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 5515,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5681,
											"end": 5685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5721,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5717,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5704,
											"end": 5722,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5696,
											"end": 5722,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5696,
											"end": 5722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5758,
											"end": 5778,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5754,
											"end": 5755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5743,
											"end": 5752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5739,
											"end": 5756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5732,
											"end": 5779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5922,
											"end": 5926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5796,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5927,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5796,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5788,
											"end": 5927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5788,
											"end": 5927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5934,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5515,
											"end": 5934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 6134,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 5940,
											"end": 6134,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6018,
											"end": 6019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6000,
											"end": 6020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6000,
											"end": 6020,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6000,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6020,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6034,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 6052,
											"end": 6053,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6034,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6034,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6034,
											"end": 6054,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 6034,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6054,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6075,
											"end": 6076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6080,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6063,
											"end": 6080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6063,
											"end": 6080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6102,
											"end": 6103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6100,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 6107,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 6134,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 6134,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 6134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 6134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 6134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6287,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6140,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6252,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6278,
											"end": 6281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6263,
											"end": 6281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6287,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6140,
											"end": 6287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6293,
											"end": 6407,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6293,
											"end": 6407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6293,
											"end": 6407,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6293,
											"end": 6407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6811,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6413,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6672,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 6593,
											"end": 6676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6593,
											"end": 6676,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 6593,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6586,
											"end": 6676,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6586,
											"end": 6676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6685,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6774,
											"end": 6777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6685,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6685,
											"end": 6778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6685,
											"end": 6778,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 6685,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6794,
											"end": 6805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6811,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6811,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 7196,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 6817,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 7166,
											"end": 7169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 7023,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7023,
											"end": 7170,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 7023,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7187,
											"end": 7190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 7196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 7196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 7196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 7196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7371,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 7202,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7342,
											"end": 7363,
											"name": "PUSH",
											"source": 13,
											"value": "455448207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 7338,
											"end": 7339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7202,
											"end": 7371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 7599,
											"end": 7602,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 7540,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 7540,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7705,
											"end": 7708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 7616,
											"end": 7709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 7616,
											"end": 7709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7734,
											"end": 7736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7725,
											"end": 7737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7377,
											"end": 7743,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7377,
											"end": 7743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 8168,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 7749,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7915,
											"end": 7919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7953,
											"end": 7955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7942,
											"end": 7951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7930,
											"end": 7956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8011,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7992,
											"end": 8012,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 7989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 7986,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 8013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 8156,
											"end": 8160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8030,
											"end": 8161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 8030,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 8168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 8168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 8168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7749,
											"end": 8168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8299,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8333,
											"end": 8335,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8322,
											"end": 8331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8310,
											"end": 8336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8412,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8396,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 8346,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8495,
											"end": 8497,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8484,
											"end": 8493,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 8427,
											"end": 8499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8427,
											"end": 8499,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8427,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8602,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 8512,
											"end": 8602,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8546,
											"end": 8553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8594,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8595,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8575,
											"end": 8596,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8564,
											"end": 8596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8564,
											"end": 8596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8602,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8602,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8602,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8724,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 8608,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8693,
											"end": 8698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 8678,
											"end": 8699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8671,
											"end": 8676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8668,
											"end": 8700,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8658,
											"end": 8718,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8712,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8704,
											"end": 8716,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8718,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 8658,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8867,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 8730,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8784,
											"end": 8789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8815,
											"end": 8821,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8822,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8800,
											"end": 8822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8800,
											"end": 8822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8855,
											"end": 8860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 8831,
											"end": 8861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 8831,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8867,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 9218,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 8873,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8989,
											"end": 8991,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8977,
											"end": 8986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8964,
											"end": 8987,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8960,
											"end": 8992,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 8995,
											"end": 9074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 8995,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 8957,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9115,
											"end": 9116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9140,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9193,
											"end": 9200,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9190,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9173,
											"end": 9182,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9169,
											"end": 9191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9140,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 9140,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9140,
											"end": 9201,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9140,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 9218,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 9218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 9218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 9218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 9218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9393,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 9224,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9364,
											"end": 9385,
											"name": "PUSH",
											"source": 13,
											"value": "45786365656473206461696C79206C696D697400000000000000000000000000"
										},
										{
											"begin": 9360,
											"end": 9361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9352,
											"end": 9358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9348,
											"end": 9362,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9341,
											"end": 9386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9765,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 9399,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9541,
											"end": 9544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9562,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9626,
											"end": 9628,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 9621,
											"end": 9624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 9629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 9562,
											"end": 9629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9562,
											"end": 9629,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9562,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9555,
											"end": 9629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9555,
											"end": 9629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 9727,
											"end": 9730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 9638,
											"end": 9731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9638,
											"end": 9731,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 9638,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9756,
											"end": 9758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9751,
											"end": 9754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9740,
											"end": 9759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9765,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9399,
											"end": 9765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 10190,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 9771,
											"end": 10190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9937,
											"end": 9941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9977,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9964,
											"end": 9973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 9978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 9978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10033,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10014,
											"end": 10034,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9995,
											"end": 10012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9988,
											"end": 10035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 10178,
											"end": 10182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 10052,
											"end": 10183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10052,
											"end": 10183,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 10052,
											"end": 10183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10044,
											"end": 10183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10044,
											"end": 10183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 10190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 10190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 10190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9771,
											"end": 10190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10196,
											"end": 10371,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 10196,
											"end": 10371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10336,
											"end": 10363,
											"name": "PUSH",
											"source": 13,
											"value": "4461696C7920636C61696D206C696D6974207265616368656400000000000000"
										},
										{
											"begin": 10332,
											"end": 10333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10320,
											"end": 10334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10313,
											"end": 10364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10196,
											"end": 10371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10196,
											"end": 10371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10743,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 10377,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10519,
											"end": 10522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10540,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 10604,
											"end": 10606,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 10599,
											"end": 10602,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10540,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 10540,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10540,
											"end": 10607,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 10540,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10533,
											"end": 10607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10533,
											"end": 10607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 10705,
											"end": 10708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 10616,
											"end": 10709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10616,
											"end": 10709,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 10616,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10729,
											"end": 10732,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10725,
											"end": 10737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10743,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10743,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10743,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10377,
											"end": 10743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 11168,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 10749,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10915,
											"end": 10919,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 10955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10942,
											"end": 10951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10938,
											"end": 10956,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 10956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10930,
											"end": 10956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11002,
											"end": 11011,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10996,
											"end": 11000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11012,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10988,
											"end": 10989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10977,
											"end": 10986,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10973,
											"end": 10990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10966,
											"end": 11013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11030,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11156,
											"end": 11160,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11030,
											"end": 11161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 11030,
											"end": 11161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11030,
											"end": 11161,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 11030,
											"end": 11161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 11168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 11168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 11168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10749,
											"end": 11168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11317,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 11174,
											"end": 11317,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11231,
											"end": 11236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11262,
											"end": 11268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11256,
											"end": 11269,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11247,
											"end": 11269,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11247,
											"end": 11269,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 11305,
											"end": 11310,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 11278,
											"end": 11311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 11278,
											"end": 11311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11317,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11317,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11317,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11174,
											"end": 11317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11674,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 11323,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11399,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11442,
											"end": 11444,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11439,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11421,
											"end": 11428,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11417,
											"end": 11440,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11413,
											"end": 11445,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11410,
											"end": 11529,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11410,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 11410,
											"end": 11529,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 11448,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 11448,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11410,
											"end": 11529,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 11410,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11568,
											"end": 11569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11593,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 11649,
											"end": 11656,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11640,
											"end": 11646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11629,
											"end": 11638,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11625,
											"end": 11647,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11593,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 11593,
											"end": 11657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11593,
											"end": 11657,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 11593,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11583,
											"end": 11657,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11583,
											"end": 11657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11539,
											"end": 11667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11674,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11674,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11323,
											"end": 11674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11680,
											"end": 11843,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 11680,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11820,
											"end": 11835,
											"name": "PUSH",
											"source": 13,
											"value": "53636F726520746F6F206C6F7700000000000000000000000000000000000000"
										},
										{
											"begin": 11816,
											"end": 11817,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11808,
											"end": 11814,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11804,
											"end": 11818,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11797,
											"end": 11836,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11680,
											"end": 11843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11680,
											"end": 11843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11849,
											"end": 12215,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 11849,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11991,
											"end": 11994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 12076,
											"end": 12078,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 12071,
											"end": 12074,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12012,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 12012,
											"end": 12079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12012,
											"end": 12079,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 12012,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12079,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12005,
											"end": 12079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12088,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 12177,
											"end": 12180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12088,
											"end": 12181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 12088,
											"end": 12181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12088,
											"end": 12181,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 12088,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12206,
											"end": 12208,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12201,
											"end": 12204,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12197,
											"end": 12209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12190,
											"end": 12209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12190,
											"end": 12209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11849,
											"end": 12215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11849,
											"end": 12215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11849,
											"end": 12215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11849,
											"end": 12215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12221,
											"end": 12640,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 12221,
											"end": 12640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12425,
											"end": 12427,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12414,
											"end": 12423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12410,
											"end": 12428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12474,
											"end": 12483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12468,
											"end": 12472,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12464,
											"end": 12484,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12461,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12449,
											"end": 12458,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12445,
											"end": 12462,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12438,
											"end": 12485,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12502,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 12628,
											"end": 12632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12502,
											"end": 12633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 12502,
											"end": 12633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12502,
											"end": 12633,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 12502,
											"end": 12633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12221,
											"end": 12640,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12221,
											"end": 12640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12221,
											"end": 12640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12221,
											"end": 12640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12821,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 12646,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12786,
											"end": 12813,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 12782,
											"end": 12783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12774,
											"end": 12780,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12770,
											"end": 12784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12763,
											"end": 12814,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12821,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12646,
											"end": 12821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 13193,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 12827,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12969,
											"end": 12972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 13054,
											"end": 13056,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 13049,
											"end": 13052,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12990,
											"end": 13057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 12990,
											"end": 13057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12990,
											"end": 13057,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 12990,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12983,
											"end": 13057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12983,
											"end": 13057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 13155,
											"end": 13158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 13066,
											"end": 13159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13159,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 13066,
											"end": 13159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13184,
											"end": 13186,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13179,
											"end": 13182,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13175,
											"end": 13187,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13187,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13168,
											"end": 13187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 13193,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 13193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 13193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 13193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13618,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 13199,
											"end": 13618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13365,
											"end": 13369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13405,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13392,
											"end": 13401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13380,
											"end": 13406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13380,
											"end": 13406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13452,
											"end": 13461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13442,
											"end": 13462,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13438,
											"end": 13439,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13427,
											"end": 13436,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13416,
											"end": 13463,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13480,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 13606,
											"end": 13610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13480,
											"end": 13611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 13480,
											"end": 13611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13480,
											"end": 13611,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 13480,
											"end": 13611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13472,
											"end": 13611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13618,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13199,
											"end": 13618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13794,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 13624,
											"end": 13794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 13786,
											"name": "PUSH",
											"source": 13,
											"value": "496E636F72726563742045544820616D6F756E74000000000000000000000000"
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13752,
											"end": 13758,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13748,
											"end": 13762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13741,
											"end": 13787,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13624,
											"end": 13794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13800,
											"end": 14166,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 13800,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13942,
											"end": 13945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13963,
											"end": 14030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 14027,
											"end": 14029,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 14022,
											"end": 14025,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 14030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 13963,
											"end": 14030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13963,
											"end": 14030,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 13963,
											"end": 14030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 14030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 14030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14039,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 14128,
											"end": 14131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14039,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 14039,
											"end": 14132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14039,
											"end": 14132,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 14039,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14157,
											"end": 14159,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14152,
											"end": 14155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14148,
											"end": 14160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14141,
											"end": 14160,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14141,
											"end": 14160,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13800,
											"end": 14166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13800,
											"end": 14166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13800,
											"end": 14166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13800,
											"end": 14166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14591,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 14172,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14338,
											"end": 14342,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14376,
											"end": 14378,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14365,
											"end": 14374,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14361,
											"end": 14379,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14353,
											"end": 14379,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14353,
											"end": 14379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14425,
											"end": 14434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14419,
											"end": 14423,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14415,
											"end": 14435,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14411,
											"end": 14412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14400,
											"end": 14409,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14396,
											"end": 14413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14389,
											"end": 14436,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 14579,
											"end": 14583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 14453,
											"end": 14584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14584,
											"name": "tag",
											"source": 13,
											"value": "416"
										},
										{
											"begin": 14453,
											"end": 14584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14445,
											"end": 14584,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14445,
											"end": 14584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14172,
											"end": 14591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14746,
											"end": 14750,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14784,
											"end": 14786,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 14773,
											"end": 14782,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14769,
											"end": 14787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14761,
											"end": 14787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14761,
											"end": 14787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 14865,
											"end": 14866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14854,
											"end": 14863,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14850,
											"end": 14867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14841,
											"end": 14847,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 14797,
											"end": 14868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14797,
											"end": 14868,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 14797,
											"end": 14868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 14946,
											"end": 14948,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14935,
											"end": 14944,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14931,
											"end": 14949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14922,
											"end": 14928,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 14878,
											"end": 14950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14950,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 14878,
											"end": 14950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14960,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 15028,
											"end": 15030,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15017,
											"end": 15026,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15013,
											"end": 15031,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15004,
											"end": 15010,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14960,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 14960,
											"end": 15032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14960,
											"end": 15032,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 14960,
											"end": 15032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14597,
											"end": 15039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15045,
											"end": 15130,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 15045,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15090,
											"end": 15097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15124,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15108,
											"end": 15124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15108,
											"end": 15124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15045,
											"end": 15130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15045,
											"end": 15130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15045,
											"end": 15130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15045,
											"end": 15130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15136,
											"end": 15237,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 15136,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15172,
											"end": 15179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15212,
											"end": 15230,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15205,
											"end": 15210,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15201,
											"end": 15231,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15231,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15190,
											"end": 15231,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15136,
											"end": 15237,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15136,
											"end": 15237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15136,
											"end": 15237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15136,
											"end": 15237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15399,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 15243,
											"end": 15399,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15300,
											"end": 15309,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15333,
											"end": 15393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 15350,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 15359,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 15385,
											"end": 15390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15359,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 15359,
											"end": 15391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15359,
											"end": 15391,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 15359,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15350,
											"end": 15392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 15350,
											"end": 15392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15350,
											"end": 15392,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 15350,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 15333,
											"end": 15393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15393,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 15333,
											"end": 15393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15320,
											"end": 15393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15320,
											"end": 15393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15399,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15243,
											"end": 15399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15550,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 15405,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15499,
											"end": 15543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 15537,
											"end": 15542,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15499,
											"end": 15543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 15499,
											"end": 15543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15499,
											"end": 15543,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 15499,
											"end": 15543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15494,
											"end": 15497,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15487,
											"end": 15544,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15792,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 15556,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15656,
											"end": 15660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15694,
											"end": 15696,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15683,
											"end": 15692,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15679,
											"end": 15697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15671,
											"end": 15697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 15782,
											"end": 15783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15771,
											"end": 15780,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15767,
											"end": 15784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15758,
											"end": 15764,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 15707,
											"end": 15785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15785,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 15707,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15556,
											"end": 15792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claim(uint256)": "379607f5",
							"dailyLimit()": "67eeba0c",
							"deposit(uint256)": "b6b55f25",
							"initialize(address,address,uint256,address,uint256)": "f7c00e63",
							"lastClaimed(address)": "013eba92",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scoreRequired()": "de9d2a77",
							"scorer()": "85c758f7",
							"setScoreRequired(uint256)": "abbeb55b",
							"setScorer(address)": "03191ffc",
							"token()": "fc0c546a",
							"totalBalance()": "ad7a672f",
							"transferOwnership(address)": "f2fde38b",
							"updateDailyLimit(uint256)": "f8175d78",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"UpdatedDailyLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScoreRequired\",\"type\":\"uint256\"}],\"name\":\"UpdatedScoreRequired\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_dailyLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_scoreRequired\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoreRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newScoreRequired\",\"type\":\"uint256\"}],\"name\":\"setScoreRequired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"}],\"name\":\"setScorer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLimit\",\"type\":\"uint256\"}],\"name\":\"updateDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"claim(uint256)\":{\"details\":\"Allows users to claim a specified amount of funds from the contract.      The claim is subject to the following conditions:      - The amount claimed cannot exceed the daily limit (`dailyLimit`).      - The user can only claim once every 24 hours, enforced by `lastClaimed`.      - The user must have a score that meets or exceeds the required score (`scoreRequired`).      - The contract must have enough funds to fulfill the claim.\",\"params\":{\"amount\":\"The amount of funds the user wishes to claim.\"}},\"deposit(uint256)\":{\"details\":\"This can be either ETH or a specific token, depending on what's set in token.\",\"params\":{\"amount\":\"The value to add (in wei for ETH).\"}},\"initialize(address,address,uint256,address,uint256)\":{\"details\":\"This is a special initialization phase where external calls are not allowed, and it can be called only once at instance creation time.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256)\":{\"notice\":\"Emits a `Claimed` event when the claim is successful.The function supports both ETH and ERC20 token claims. The behavior is based on whether `token` is set to `address(0)` (ETH).\"},\"deposit(uint256)\":{\"notice\":\"Deposits funds into this jar.\"},\"initialize(address,address,uint256,address,uint256)\":{\"notice\":\"Initializes this contract with its initial state.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cookie-jar.sol\":\"nCookieJar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/cookie-jar.sol\":{\"keccak256\":\"0xb5c58565add1508fc397ad2def28236b3c31e344ac868ec4b858a054498f5fc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0730a3e1f1e69652254244822772e2fc343a4e8411cc0bb8aef3e833357f32b8\",\"dweb:/ipfs/QmUPHpsg2BbjZP1AoLspcgyYM1UiZnfDbTwLmV1h5ZrC9v\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0xc61939a802c0e9e2059f20e60a904aeb10fcba36654d64f5737e0da725b01839\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fa7e4065063f4dba9c9066ed106399f63ff183149c6601646e56446187d0546\",\"dweb:/ipfs/QmVHx5YbwoCXBB5iHyoAFVk72q7moyStfNbiKVyVLsrXSs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1382,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1385,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "scorer",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IScorer)1723"
							},
							{
								"astId": 1387,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "dailyLimit",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1389,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "totalBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1391,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "scoreRequired",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1395,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "lastClaimed",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IScorer)1723": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim(uint256)": {
								"notice": "Emits a `Claimed` event when the claim is successful.The function supports both ETH and ERC20 token claims. The behavior is based on whether `token` is set to `address(0)` (ETH)."
							},
							"deposit(uint256)": {
								"notice": "Deposits funds into this jar."
							},
							"initialize(address,address,uint256,address,uint256)": {
								"notice": "Initializes this contract with its initial state."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"score(address)": {
								"details": "Returns the score of a specific user.      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"score(address)": "776f3843"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"score(address)\":{\"details\":\"Returns the score of a specific user.      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"score(address)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0xc61939a802c0e9e2059f20e60a904aeb10fcba36654d64f5737e0da725b01839\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fa7e4065063f4dba9c9066ed106399f63ff183149c6601646e56446187d0546\",\"dweb:/ipfs/QmVHx5YbwoCXBB5iHyoAFVk72q7moyStfNbiKVyVLsrXSs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"score(address)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							576
						],
						"IERC165": [
							1366
						],
						"IERC20": [
							662
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 585,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 581,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "590:6:3"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 504,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1366,
										"src": "598:7:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								1366,
								662
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 576,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 576,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 576,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 576,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 576,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 576,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								596,
								605
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1366
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 581,
							"sourceUnit": 1367,
							"src": "132:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "140:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 585,
							"sourceUnit": 663,
							"src": "131:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 587,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 596,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 605,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 662,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 662,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 662,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 662,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 662,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 662,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 663,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								596,
								605
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1332
						],
						"IERC1363": [
							576
						],
						"IERC20": [
							662
						],
						"SafeERC20": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 663,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 665,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 577,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 667,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 576,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 1333,
							"src": "238:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 669,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1332,
										"src": "246:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 676,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "875:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:7"
									},
									"src": "844:46:7"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 685,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1011:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1028:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1054:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:7"
									},
									"src": "972:109:7"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "1343:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1373:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 700,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "1395:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 629,
																	"src": "1395:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 702,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "1412:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "1416:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 698,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 696,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1353:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:7"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1293:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 687,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "1293:6:7"
													},
													"referencedDeclaration": 662,
													"src": "1293:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1307:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1319:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:7"
									},
									"scope": 1073,
									"src": "1271:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "1760:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "1790:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 726,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "1812:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 661,
																	"src": "1812:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 728,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "1833:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 729,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1839:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "1843:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 722,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1770:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:7"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1696:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "1696:6:7"
													},
													"referencedDeclaration": 662,
													"src": "1696:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1724:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1736:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:7"
									},
									"scope": 1073,
									"src": "1670:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2600:139:7",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "2610:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 753,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1073",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1073",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 751,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2664:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 749,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2633:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 639,
														"src": "2633:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2695:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 760,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2702:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 761,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "2711:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "2726:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2682:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:7"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2545:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 738,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "2545:6:7"
													},
													"referencedDeclaration": 662,
													"src": "2545:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2559:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:7"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:7"
									},
									"scope": 1073,
									"src": "2514:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "3505:370:7",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:7",
												"statements": [
													{
														"assignments": [
															779
														],
														"declarations": [
															{
																"constant": false,
																"id": 779,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 808,
																"src": "3539:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 778,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 788,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 784,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1073",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1073",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 782,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 786,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3597:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 780,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "3566:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 639,
																"src": "3566:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3623:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 790,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "3642:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 799,
														"nodeType": "IfStatement",
														"src": "3619:160:7",
														"trueBody": {
															"id": 798,
															"nodeType": "Block",
															"src": "3661:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 793,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "3719:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 794,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "3728:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 795,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "3746:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 792,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "3686:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 797,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 801,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "3805:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 802,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3812:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 803,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "3821:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 804,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "3840:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 800,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3792:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3438:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 769,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "3438:6:7"
													},
													"referencedDeclaration": 662,
													"src": "3438:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3452:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3469:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:7"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:7"
									},
									"scope": 1073,
									"src": "3407:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4529:303:7",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4539:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 821,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 825,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4582:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "4582:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 827,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "4598:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "4607:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 829,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 823,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:7"
											},
											{
												"condition": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 833,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4654:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 834,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4661:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 832,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "4630:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "4625:201:7",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "4676:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 838,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4710:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 841,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "4732:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$662",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 649,
																				"src": "4732:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 843,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 816,
																						"src": "4748:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 845,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 839,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 837,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4690:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4795:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 851,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "4802:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 849,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4775:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4474:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 812,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "4474:6:7"
													},
													"referencedDeclaration": 662,
													"src": "4474:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4488:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:7"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:7"
									},
									"scope": 1073,
									"src": "4452:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "5279:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 870,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5293:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 884,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5402:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "5406:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 886,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "5413:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 882,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "5380:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 527,
																"src": "5380:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 897,
													"nodeType": "IfStatement",
													"src": "5375:117:7",
													"trueBody": {
														"id": 896,
														"nodeType": "Block",
														"src": "5420:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 892,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "5474:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 890,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 889,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "5441:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 895,
																"nodeType": "RevertStatement",
																"src": "5434:47:7"
															}
														]
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "5289:203:7",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "5314:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 876,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "5341:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 877,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5348:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 878,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "5352:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 875,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "5328:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "5208:8:7"
													},
													"referencedDeclaration": 576,
													"src": "5208:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5224:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5236:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5251:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:7"
									},
									"scope": 1073,
									"src": "5176:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "6017:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 915,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "6031:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "6154:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 931,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "6160:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6164:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 933,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6171:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 928,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "6128:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 553,
																"src": "6128:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 944,
													"nodeType": "IfStatement",
													"src": "6123:127:7",
													"trueBody": {
														"id": 943,
														"nodeType": "Block",
														"src": "6178:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 939,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 904,
																					"src": "6232:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 937,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 936,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6199:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 942,
																"nodeType": "RevertStatement",
																"src": "6192:47:7"
															}
														]
													}
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "6027:223:7",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "6052:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "6083:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 922,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 906,
																		"src": "6090:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 923,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "6096:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 924,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "6100:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 920,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "6066:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 926,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5895:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 902,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "5895:8:7"
													},
													"referencedDeclaration": 576,
													"src": "5895:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5919:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5941:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5961:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5984:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:7"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:7"
									},
									"scope": 1073,
									"src": "5850:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "7023:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 960,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "7037:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 974,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "7145:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "7149:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 976,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "7156:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 972,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "7124:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 575,
																"src": "7124:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 987,
													"nodeType": "IfStatement",
													"src": "7119:116:7",
													"trueBody": {
														"id": 986,
														"nodeType": "Block",
														"src": "7163:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 982,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "7217:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 980,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 979,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "7184:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 985,
																"nodeType": "RevertStatement",
																"src": "7177:47:7"
															}
														]
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "7033:202:7",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "7058:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 966,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7085:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 967,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "7092:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 968,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "7096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 965,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "7072:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6952:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 949,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "6952:8:7"
													},
													"referencedDeclaration": 576,
													"src": "6952:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6968:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6980:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6995:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:7"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:7"
									},
									"scope": 1073,
									"src": "6921:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "7808:650:7",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "7818:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:7"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "7846:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:7",
													"nodeType": "YulBlock",
													"src": "7900:396:7",
													"statements": [
														{
															"nativeSrc": "7914:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:7"
																		},
																		"nativeSrc": "7934:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:7"
																		},
																		"nativeSrc": "7951:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:7"
																		},
																		"nativeSrc": "7968:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:7"
																},
																"nativeSrc": "7929:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:7",
																"nodeType": "YulBlock",
																"src": "8050:157:7",
																"statements": [
																	{
																		"nativeSrc": "8068:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:7"
																			},
																			"nativeSrc": "8079:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:7"
																					},
																					"nativeSrc": "8130:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:7"
																			},
																			"nativeSrc": "8107:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:7"
																		},
																		"nativeSrc": "8107:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:7"
																					},
																					"nativeSrc": "8176:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:7"
																			},
																			"nativeSrc": "8164:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:7"
																		},
																		"nativeSrc": "8164:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:7"
																},
																"nativeSrc": "8034:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:7"
															},
															"nativeSrc": "8031:176:7",
															"nodeType": "YulIf",
															"src": "8031:176:7"
														},
														{
															"nativeSrc": "8220:30:7",
															"nodeType": "YulAssignment",
															"src": "8220:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:7"
																},
																"nativeSrc": "8234:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:7"
																}
															]
														},
														{
															"nativeSrc": "8263:23:7",
															"nodeType": "YulAssignment",
															"src": "8263:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:7"
																},
																"nativeSrc": "8278:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:7",
														"valueSize": 1
													},
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1003,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:7",
														"valueSize": 1
													},
													{
														"declaration": 994,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1005,
												"nodeType": "InlineAssembly",
												"src": "7875:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1006,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "8310:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8362:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1011,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 994,
																			"src": "8336:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1009,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "8306:146:7",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "8380:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "8434:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$662",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$662",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1021,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "8401:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1027,
															"nodeType": "RevertStatement",
															"src": "8394:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7767:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "7767:6:7"
													},
													"referencedDeclaration": 662,
													"src": "7767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7781:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:7"
									},
									"scope": 1073,
									"src": "7738:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "9049:391:7",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9059:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:7"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9081:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:7"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9109:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:7",
													"nodeType": "YulBlock",
													"src": "9163:174:7",
													"statements": [
														{
															"nativeSrc": "9177:71:7",
															"nodeType": "YulAssignment",
															"src": "9177:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:7"
																		},
																		"nativeSrc": "9193:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:7"
																		},
																		"nativeSrc": "9210:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:7"
																		},
																		"nativeSrc": "9227:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:7"
																},
																"nativeSrc": "9188:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:7"
																}
															]
														},
														{
															"nativeSrc": "9261:30:7",
															"nodeType": "YulAssignment",
															"src": "9261:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:7"
																},
																"nativeSrc": "9275:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:7"
																}
															]
														},
														{
															"nativeSrc": "9304:23:7",
															"nodeType": "YulAssignment",
															"src": "9304:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:7"
																},
																"nativeSrc": "9319:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1037,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1037,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1046,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1043,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1035,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1051,
												"nodeType": "InlineAssembly",
												"src": "9138:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "9353:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "9365:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "9416:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1058,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1035,
																						"src": "9391:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$662",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$662",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1056,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1068,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1070,
												"nodeType": "Return",
												"src": "9346:87:7"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "8993:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "8993:6:7"
													},
													"referencedDeclaration": 662,
													"src": "8993:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9007:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9043:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:7"
									},
									"scope": 1073,
									"src": "8960:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1074,
							"src": "750:8692:7",
							"usedErrors": [
								676,
								685
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1332
						],
						"Errors": [
							1354
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 1355,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1076,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1354,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1078,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1083,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1361:278:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1093,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1096,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1103,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1101,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1106,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1098,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1342,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1112,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1111,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1119,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1113,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1525:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1115,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1547:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:8"
											},
											{
												"condition": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:8",
													"subExpression": {
														"id": 1120,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1573:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "1568:65:8",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "1582:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1122,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "1603:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "1603:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "1596:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1332,
									"src": "1290:349:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2573:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2612:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "2620:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1140,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2590:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1145,
												"nodeType": "Return",
												"src": "2583:45:8"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2506:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2522:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:8"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2559:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:8"
									},
									"scope": 1332,
									"src": "2484:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "3072:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1161,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1164,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "3110:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "3082:123:8",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "3117:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1169,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1174,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "3188:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1166,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "3138:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1342,
																	"src": "3138:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1176,
															"nodeType": "RevertStatement",
															"src": "3131:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1180,
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "3215:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "3229:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"id": 1187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3282:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3256:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "3275:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1191,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3339:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1193,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "3348:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1190,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3304:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1195,
												"nodeType": "Return",
												"src": "3297:62:8"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2990:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3006:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3025:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:8"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3058:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:8"
									},
									"scope": 1332,
									"src": "2959:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "3605:154:8",
										"statements": [
											{
												"assignments": [
													1208,
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3616:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1207,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3630:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1209,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"arguments": [
														{
															"id": 1213,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "3675:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3657:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3724:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "3732:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1219,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "3741:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1216,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3697:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1221,
												"nodeType": "Return",
												"src": "3690:62:8"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3533:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3549:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:8"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3591:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:8"
									},
									"scope": 1332,
									"src": "3505:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "3997:156:8",
										"statements": [
											{
												"assignments": [
													1234,
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "4008:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1233,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "4022:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1235,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"arguments": [
														{
															"id": 1239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4069:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1237,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4049:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4118:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "4126:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1245,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "4135:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1242,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "4091:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1247,
												"nodeType": "Return",
												"src": "4084:62:8"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3930:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3946:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:8"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3983:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:8"
									},
									"scope": 1332,
									"src": "3900:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "4579:424:8",
										"statements": [
											{
												"condition": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:8",
													"subExpression": {
														"id": 1261,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4594:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "4653:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1268,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "4841:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1272,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "4867:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1283,
															"nodeType": "IfStatement",
															"src": "4837:119:8",
															"trueBody": {
																"id": 1282,
																"nodeType": "Block",
																"src": "4892:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1279,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "4934:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1278,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "4917:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1281,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1284,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "4976:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1260,
															"id": 1285,
															"nodeType": "Return",
															"src": "4969:17:8"
														}
													]
												},
												"id": 1287,
												"nodeType": "IfStatement",
												"src": "4589:408:8",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "4603:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "4625:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1263,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "4617:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1266,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4490:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4512:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4565:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:8"
									},
									"scope": 1332,
									"src": "4421:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "5307:122:8",
										"statements": [
											{
												"condition": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:8",
													"subExpression": {
														"id": 1299,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5322:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "5381:42:8",
													"statements": [
														{
															"expression": {
																"id": 1306,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "5402:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1298,
															"id": 1307,
															"nodeType": "Return",
															"src": "5395:17:8"
														}
													]
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "5317:106:8",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "5331:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1302,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "5353:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1301,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "5345:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5231:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5245:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5293:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:8"
									},
									"scope": 1332,
									"src": "5205:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5598:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5674:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "5973:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1323,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "5994:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "5994:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1327,
															"nodeType": "RevertStatement",
															"src": "5987:26:8"
														}
													]
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "5670:354:8",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "5697:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:8",
																"nodeType": "YulBlock",
																"src": "5824:133:8",
																"statements": [
																	{
																		"nativeSrc": "5842:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:8"
																			},
																			"nativeSrc": "5865:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:8"
																					},
																					"nativeSrc": "5906:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:8"
																			},
																			"nativeSrc": "5899:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:8"
																		},
																		"nativeSrc": "5899:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:8"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1314,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1314,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1321,
															"nodeType": "InlineAssembly",
															"src": "5799:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5560:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:8"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:8"
									},
									"scope": 1332,
									"src": "5543:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1333,
							"src": "233:5799:8",
							"usedErrors": [
								1083
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1354
						]
					},
					"id": 1355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1354,
							"linearizedBaseContracts": [
								1354
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1342,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1345,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1348,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1353,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1355,
							"src": "411:484:9",
							"usedErrors": [
								1342,
								1345,
								1348,
								1353
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1366
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1366,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1367,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/cookie-jar.sol": {
				"ast": {
					"absolutePath": "contracts/cookie-jar.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"IERC20": [
							662
						],
						"IScorer": [
							1723
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"SafeERC20": [
							1073
						],
						"nCookieJar": [
							1712
						]
					},
					"id": 1713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 195,
							"src": "61:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 663,
							"src": "138:72:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1370,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "147:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 1074,
							"src": "212:84:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1372,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1073,
										"src": "221:9:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1713,
							"sourceUnit": 1724,
							"src": "298:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1375,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"390:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "390:18:11"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "390:18:11"
								}
							],
							"canonicalName": "nCookieJar",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1712,
							"linearizedBaseContracts": [
								1712,
								194,
								494,
								448
							],
							"name": "nCookieJar",
							"nameLocation": "376:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1380,
									"libraryName": {
										"id": 1377,
										"name": "SafeERC20",
										"nameLocations": [
											"422:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "422:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "416:27:11",
									"typeName": {
										"id": 1379,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1378,
											"name": "IERC20",
											"nameLocations": [
												"436:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 662,
											"src": "436:6:11"
										},
										"referencedDeclaration": 662,
										"src": "436:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$662",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 1382,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "464:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "449:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1381,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1385,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "534:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "519:21:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1723",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1384,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1383,
											"name": "IScorer",
											"nameLocations": [
												"519:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1723,
											"src": "519:7:11"
										},
										"referencedDeclaration": 1723,
										"src": "519:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1723",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67eeba0c",
									"id": 1387,
									"mutability": "mutable",
									"name": "dailyLimit",
									"nameLocation": "598:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "583:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1386,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad7a672f",
									"id": 1389,
									"mutability": "mutable",
									"name": "totalBalance",
									"nameLocation": "656:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "641:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1388,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "641:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de9d2a77",
									"id": 1391,
									"mutability": "mutable",
									"name": "scoreRequired",
									"nameLocation": "718:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "703:28:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1390,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013eba92",
									"id": 1395,
									"mutability": "mutable",
									"name": "lastClaimed",
									"nameLocation": "808:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1712,
									"src": "773:46:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1394,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1392,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "781:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "773:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1393,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "792:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 1401,
									"name": "Deposit",
									"nameLocation": "870:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "894:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "878:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "913:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "905:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:43:11"
									},
									"src": "864:57:11"
								},
								{
									"anonymous": false,
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 1407,
									"name": "Claimed",
									"nameLocation": "933:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "957:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "941:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "975:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "967:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:42:11"
									},
									"src": "927:56:11"
								},
								{
									"anonymous": false,
									"eventSelector": "69e4f4585a710debc30f07c33dcded264dd61e9dd02a9dfad6584a9189f185e4",
									"id": 1411,
									"name": "UpdatedDailyLimit",
									"nameLocation": "995:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"indexed": false,
												"mutability": "mutable",
												"name": "newLimit",
												"nameLocation": "1021:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "1013:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:18:11"
									},
									"src": "989:42:11"
								},
								{
									"anonymous": false,
									"eventSelector": "d98c5078430f16c83b85da9a630c27aac195dd3e768e25b102dfffa99f64b4d2",
									"id": 1415,
									"name": "UpdatedScoreRequired",
									"nameLocation": "1043:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"indexed": false,
												"mutability": "mutable",
												"name": "newScoreRequired",
												"nameLocation": "1072:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "1064:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:26:11"
									},
									"src": "1037:53:11"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "1518:212:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1432,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "1544:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1431,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1529:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "1529:21:11"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1435,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "1596:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1436,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "1604:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1596:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "1596:14:11"
											},
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1439,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "1621:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1723",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1441,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "1638:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1440,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "1630:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1723_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1630:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1723",
															"typeString": "contract IScorer"
														}
													},
													"src": "1621:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1723",
														"typeString": "contract IScorer"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "1621:25:11"
											},
											{
												"expression": {
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1445,
														"name": "dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "1657:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1446,
														"name": "_dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "1670:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1657:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "1657:24:11"
											},
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "scoreRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "1692:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1450,
														"name": "_scoreRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "1708:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1692:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "1692:30:11"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "1098:228:11",
										"text": "@notice Initializes this contract with its initial state.\n @dev This is a special initialization phase where external calls are not allowed,\n and it can be called only once at instance creation time."
									},
									"functionSelector": "f7c00e63",
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1428,
												"name": "initializer",
												"nameLocations": [
													"1506:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1506:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1506:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "1341:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1370:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1362:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1362:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "1395:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1387:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "_dailyLimit",
												"nameLocation": "1421:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1413:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1451:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1443:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_scoreRequired",
												"nameLocation": "1475:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "1467:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1467:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1351:145:11"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:11"
									},
									"scope": 1712,
									"src": "1332:398:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "2003:350:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1460,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "2018:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2035:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2027:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1461,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2027:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2027:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2018:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1488,
													"nodeType": "Block",
													"src": "2152:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1479,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2224:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2228:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2224:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1483,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2244:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_nCookieJar_$1712",
																					"typeString": "contract nCookieJar"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_nCookieJar_$1712",
																					"typeString": "contract nCookieJar"
																				}
																			],
																			"id": 1482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2236:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1481,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2236:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2236:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1485,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2251:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1476,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "2204:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1475,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "2197:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2197:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2211:12:11",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 661,
																	"src": "2197:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2197:61:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "2197:61:11"
														}
													]
												},
												"id": 1489,
												"nodeType": "IfStatement",
												"src": "2014:256:11",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "2039:107:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1467,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2090:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2094:5:11",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2090:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1469,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "2103:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2090:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f72726563742045544820616d6f756e74",
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
																			"typeString": "literal_string \"Incorrect ETH amount\""
																		},
																		"value": "Incorrect ETH amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b",
																			"typeString": "literal_string \"Incorrect ETH amount\""
																		}
																	],
																	"id": 1466,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2082:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2082:52:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "2082:52:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1490,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "2280:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1491,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "2296:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2280:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "2280:22:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1495,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2326:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2330:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2326:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "2338:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1494,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "2318:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2318:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1499,
												"nodeType": "EmitStatement",
												"src": "2313:32:11"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "1738:209:11",
										"text": "@notice Deposits funds into this jar.\n @dev This can be either ETH or a specific token, depending on what's set in token.\n @param amount The value to add (in wei for ETH)."
									},
									"functionSelector": "b6b55f25",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1962:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1978:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "1970:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:16:11"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:11"
									},
									"scope": 1712,
									"src": "1953:400:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1596,
										"nodeType": "Block",
										"src": "3194:750:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1508,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "3213:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1509,
																"name": "dailyLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "3223:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3213:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206461696c79206c696d6974",
															"id": 1511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3235:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927",
																"typeString": "literal_string \"Exceeds daily limit\""
															},
															"value": "Exceeds daily limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa843bbac1bf6a44fb5966f63b6a1ba0a6d7d0d1f54c81dd76bdfb6fde11c927",
																"typeString": "literal_string \"Exceeds daily limit\""
															}
														],
														"id": 1507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3205:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3205:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "3205:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1515,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3276:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3282:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3276:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1517,
																		"name": "lastClaimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "3294:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1520,
																	"indexExpression": {
																		"expression": {
																			"id": 1518,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3306:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3310:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3306:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3294:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3276:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3321:6:11",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "3276:51:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4461696c7920636c61696d206c696d69742072656163686564",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3329:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874",
																"typeString": "literal_string \"Daily claim limit reached\""
															},
															"value": "Daily claim limit reached"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_387d1786611216bcafcb75adf700f20f73c194a38fb297aa114e3cd414e2d874",
																"typeString": "literal_string \"Daily claim limit reached\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3268:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3268:89:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "3268:89:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1530,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3389:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3393:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3389:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1528,
																		"name": "scorer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "3376:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IScorer_$1723",
																			"typeString": "contract IScorer"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3383:5:11",
																	"memberName": "score",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1722,
																	"src": "3376:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3376:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1533,
																"name": "scoreRequired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "3404:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3376:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520746f6f206c6f77",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3419:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad",
																"typeString": "literal_string \"Score too low\""
															},
															"value": "Score too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f70a2538c4264ddfec8c372c79a9612b32e1985014d764a01f6005a4fe0fc7ad",
																"typeString": "literal_string \"Score too low\""
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3368:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3368:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "3368:67:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1539,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "3454:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1540,
																"name": "totalBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3464:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3454:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3478:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1538,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3446:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "3446:60:11"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1545,
															"name": "lastClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "3519:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1548,
														"indexExpression": {
															"expression": {
																"id": 1546,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3531:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3535:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3531:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3519:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1549,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3545:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3551:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3545:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3519:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "3519:41:11"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1553,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "3571:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1554,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "3587:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3571:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "3571:22:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1557,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "3610:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3627:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3619:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3619:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3619:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3610:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1588,
													"nodeType": "Block",
													"src": "3796:96:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1583,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3861:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3865:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3861:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1585,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1504,
																		"src": "3873:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1580,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "3845:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1579,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "3838:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3838:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3852:8:11",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 629,
																	"src": "3838:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3838:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1587,
															"nodeType": "ExpressionStatement",
															"src": "3838:42:11"
														}
													]
												},
												"id": 1589,
												"nodeType": "IfStatement",
												"src": "3606:286:11",
												"trueBody": {
													"id": 1578,
													"nodeType": "Block",
													"src": "3631:159:11",
													"statements": [
														{
															"assignments": [
																1564,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1564,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3677:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1578,
																	"src": "3672:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1563,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3672:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1572,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3721:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1565,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3690:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3694:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3690:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3701:4:11",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3690:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1568,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1504,
																			"src": "3713:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3690:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3690:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3671:53:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1574,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "3747:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3756:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		},
																		"value": "ETH transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		}
																	],
																	"id": 1573,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3739:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3739:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "3739:39:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1591,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3917:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3921:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3917:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1593,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "3929:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1590,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "3909:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3909:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1595,
												"nodeType": "EmitStatement",
												"src": "3904:32:11"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "2361:787:11",
										"text": " @dev Allows users to claim a specified amount of funds from the contract.\n      The claim is subject to the following conditions:\n      - The amount claimed cannot exceed the daily limit (`dailyLimit`).\n      - The user can only claim once every 24 hours, enforced by `lastClaimed`.\n      - The user must have a score that meets or exceeds the required score (`scoreRequired`).\n      - The contract must have enough funds to fulfill the claim.\n @param amount The amount of funds the user wishes to claim.\n @notice Emits a `Claimed` event when the claim is successful.\n @notice The function supports both ETH and ERC20 token claims. The behavior is based on whether `token` is set to `address(0)` (ETH)."
									},
									"functionSelector": "379607f5",
									"id": 1597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "3163:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3177:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "3169:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3169:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:16:11"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3194:0:11"
									},
									"scope": 1712,
									"src": "3154:790:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "4015:83:11",
										"statements": [
											{
												"expression": {
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1604,
														"name": "dailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "4026:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1605,
														"name": "newLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "4039:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4026:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "4026:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1609,
															"name": "newLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "4081:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1608,
														"name": "UpdatedDailyLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "4063:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4063:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1611,
												"nodeType": "EmitStatement",
												"src": "4058:32:11"
											}
										]
									},
									"functionSelector": "f8175d78",
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1602,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1601,
												"name": "onlyOwner",
												"nameLocations": [
													"4005:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4005:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4005:9:11"
										}
									],
									"name": "updateDailyLimit",
									"nameLocation": "3961:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "newLimit",
												"nameLocation": "3986:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3978:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3978:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3977:18:11"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4015:0:11"
									},
									"scope": 1712,
									"src": "3952:146:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "4177:105:11",
										"statements": [
											{
												"expression": {
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1620,
														"name": "scoreRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "4188:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1621,
														"name": "newScoreRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "4204:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4188:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1623,
												"nodeType": "ExpressionStatement",
												"src": "4188:32:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1625,
															"name": "newScoreRequired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4257:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1624,
														"name": "UpdatedScoreRequired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "4236:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "EmitStatement",
												"src": "4231:43:11"
											}
										]
									},
									"functionSelector": "abbeb55b",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1617,
												"name": "onlyOwner",
												"nameLocations": [
													"4167:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4167:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4167:9:11"
										}
									],
									"name": "setScoreRequired",
									"nameLocation": "4115:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "newScoreRequired",
												"nameLocation": "4140:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4132:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4131:26:11"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4177:0:11"
									},
									"scope": 1712,
									"src": "4106:176:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "4343:405:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1637,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "4362:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1638,
																"name": "totalBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "4372:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4362:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4386:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4354:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4354:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "4354:53:11"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1643,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "4420:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1644,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1631,
														"src": "4436:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4420:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "4420:22:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1647,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "4457:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4474:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4466:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4466:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4466:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4457:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1678,
													"nodeType": "Block",
													"src": "4644:97:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1673,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "4713:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4713:7:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1675,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "4722:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1670,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1382,
																				"src": "4697:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1669,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "4690:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4690:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4704:8:11",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 629,
																	"src": "4690:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1677,
															"nodeType": "ExpressionStatement",
															"src": "4690:39:11"
														}
													]
												},
												"id": 1679,
												"nodeType": "IfStatement",
												"src": "4453:288:11",
												"trueBody": {
													"id": 1668,
													"nodeType": "Block",
													"src": "4478:160:11",
													"statements": [
														{
															"assignments": [
																1654,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1654,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "4528:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1668,
																	"src": "4523:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1653,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "4523:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1662,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4569:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1655,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "4541:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4541:7:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4549:4:11",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "4541:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1658,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "4561:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "4541:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4541:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4522:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1664,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1654,
																		"src": "4595:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455448207472616e73666572206661696c6564",
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4604:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		},
																		"value": "ETH transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
																			"typeString": "literal_string \"ETH transfer failed\""
																		}
																	],
																	"id": 1663,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4587:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4587:39:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "4587:39:11"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1634,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1633,
												"name": "onlyOwner",
												"nameLocations": [
													"4333:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4333:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4333:9:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "4299:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4316:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "4308:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:16:11"
									},
									"returnParameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4343:0:11"
									},
									"scope": 1712,
									"src": "4290:458:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "4811:44:11",
										"statements": [
											{
												"expression": {
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1688,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "4822:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1723",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1690,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "4839:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1689,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "4831:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1723_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4831:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1723",
															"typeString": "contract IScorer"
														}
													},
													"src": "4822:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1723",
														"typeString": "contract IScorer"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "4822:25:11"
											}
										]
									},
									"functionSelector": "03191ffc",
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1685,
												"name": "onlyOwner",
												"nameLocations": [
													"4801:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4801:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4801:9:11"
										}
									],
									"name": "setScorer",
									"nameLocation": "4765:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "4783:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "4775:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4775:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4774:17:11"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4811:0:11"
									},
									"scope": 1712,
									"src": "4756:99:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "4890:90:11",
										"statements": [
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1698,
														"name": "totalBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "4901:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1699,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4917:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4921:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "4917:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4901:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "4901:25:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1704,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4950:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4954:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4950:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1706,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4962:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4966:5:11",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "4962:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1703,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "4942:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4942:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1709,
												"nodeType": "EmitStatement",
												"src": "4937:35:11"
											}
										]
									},
									"id": 1711,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4870:2:11"
									},
									"returnParameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4890:0:11"
									},
									"scope": 1712,
									"src": "4863:117:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1713,
							"src": "367:4616:11",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								1401,
								1407,
								1411,
								1415
							]
						}
					],
					"src": "33:4952:11"
				},
				"id": 11
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1723
						]
					},
					"id": 1724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1714,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1723,
							"linearizedBaseContracts": [
								1723
							],
							"name": "IScorer",
							"nameLocation": "71:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "90:541:12",
										"text": " @dev Returns the score of a specific user.\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "776f3843",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "646:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "660:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "652:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:14:12"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "689:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:9:12"
									},
									"scope": 1723,
									"src": "637:61:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1724,
							"src": "61:640:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:670:12"
				},
				"id": 12
			}
		}
	}
}