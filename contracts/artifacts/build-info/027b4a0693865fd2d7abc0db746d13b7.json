{
	"id": "027b4a0693865fd2d7abc0db746d13b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/cookie-jar.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\nimport \"./interface/IScorer.sol\"; // Import the IScorer interface\r\n\r\ncontract nCookieJar is OwnableUpgradeable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    address public constant ETHER = address(0); // Placeholder for Ether\r\n    IScorer public scorer; // Scoring contract for eligibility\r\n\r\n    struct Round {\r\n        uint256 start; // Start timestamp of the round\r\n        uint256 end; // End timestamp of the round\r\n        string metadataURI; // IPFS URI for round metadata\r\n    }\r\n\r\n    Round public currentRound; // Current round details\r\n\r\n    // Tracks balances for each token (including Ether)\r\n    mapping(address => uint256) public totalBalances;\r\n    // Allowed amounts per user per token\r\n    mapping(address => mapping(address => uint256)) public allowedAmounts;\r\n\r\n    event Deposit(address indexed depositor, address indexed token, uint256 amount);\r\n    event Withdraw(address indexed withdrawer, address indexed token, uint256 amount);\r\n    event Claimed(address indexed claimant, address indexed token, uint256 amount);\r\n    event AllowedAmountUpdated(address indexed user, address indexed token, uint256 newAmount);\r\n    event RoundUpdated(uint256 start, uint256 end, string metadataURI);\r\n\r\n    /// @notice Initializes this contract with its initial state.\r\n    ///\r\n    /// @param _scorer The scoring contract address.\r\n    /// @param owner The owner address.\r\n    function initialize(address _scorer, address owner) external initializer {\r\n        __Ownable_init(owner); // Initialize OwnableUpgradeable\r\n        scorer = IScorer(_scorer);\r\n    }\r\n\r\n    /// @notice Deposits funds into this jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The value to add (in wei for Ether).\r\n    function deposit(address token, uint256 amount) external payable {\r\n        if (token == ETHER) {\r\n            require(msg.value == amount, \"Incorrect Ether amount\");\r\n        } else {\r\n            require(amount > 0, \"Deposit amount must be greater than zero\");\r\n            IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        totalBalances[token] += amount;\r\n        emit Deposit(msg.sender, token, amount);\r\n    }\r\n\r\n    /// @notice Claims the full allowed amount for a user during the round.\r\n    function claim(address token) external {\r\n        require(block.timestamp >= currentRound.start && block.timestamp <= currentRound.end, \"Not within round duration\");\r\n\r\n        uint256 userAllowedAmount = allowedAmounts[msg.sender][token];\r\n        require(userAllowedAmount > 0, \"No claimable amount\");\r\n        require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\");\r\n\r\n        // Check the user's Trust score from the scorer\r\n        bytes32 trustKey = keccak256(\"Trust\");\r\n        require(scorer.score(msg.sender, trustKey) > 0, \"Insufficient Trust score\");\r\n\r\n        allowedAmounts[msg.sender][token] = 0;\r\n        totalBalances[token] -= userAllowedAmount;\r\n\r\n        if (token == ETHER) {\r\n            (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(msg.sender, userAllowedAmount);\r\n        }\r\n\r\n        emit Claimed(msg.sender, token, userAllowedAmount);\r\n    }\r\n\r\n    /// @notice Sets the allowed amount for a specific user and token.\r\n    ///\r\n    /// @param user The address of the user.\r\n    /// @param token The token address.\r\n    /// @param amount The allowed amount for the user.\r\n    function setAllowedAmount(address user, address token, uint256 amount) external onlyOwner {\r\n        allowedAmounts[user][token] = amount;\r\n        emit AllowedAmountUpdated(user, token, amount);\r\n    }\r\n\r\n    /// @notice Sets the round duration and metadata URI.\r\n    ///\r\n    /// @param start The start timestamp of the round.\r\n    /// @param end The end timestamp of the round.\r\n    /// @param metadataURI The IPFS URI for the round metadata.\r\n    function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyOwner {\r\n        require(start < end, \"Start time must be before end time\");\r\n        currentRound = Round(start, end, metadataURI);\r\n        emit RoundUpdated(start, end, metadataURI);\r\n    }\r\n\r\n    /// @notice Withdraws funds from the jar for a specific token or Ether.\r\n    ///\r\n    /// @param token The token address (address(0) for Ether).\r\n    /// @param amount The amount to withdraw.\r\n    function withdraw(address token, uint256 amount) external onlyOwner {\r\n        require(amount > 0, \"Withdrawal amount must be greater than zero\");\r\n        require(totalBalances[token] >= amount, \"Insufficient funds\");\r\n\r\n        totalBalances[token] -= amount;\r\n\r\n        if (token == ETHER) {\r\n            (bool success, ) = owner().call{value: amount}(\"\");\r\n            require(success, \"Ether transfer failed\");\r\n        } else {\r\n            IERC20(token).safeTransfer(owner(), amount);\r\n        }\r\n        emit Withdraw(owner(), token, amount);\r\n    }\r\n\r\n    /// @notice Allows Ether deposits directly via fallback function.\r\n    receive() external payable {\r\n        totalBalances[ETHER] += msg.value;\r\n        emit Deposit(msg.sender, ETHER, msg.value);\r\n    }\r\n}\r\n"
			},
			"contracts/interface/IScorer.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.17;\r\n\r\ninterface IScorer {\r\n    /**\r\n     * @dev Returns the score of a specific user for a given score type.\r\n     *      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\r\n     *      The score is typically used to determine the user's eligibility for certain actions or claims.\r\n     *      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\r\n     *\r\n     * @param user The address of the user whose score is being queried.\r\n     * @param scoreType The type of score to query, represented as a `bytes32` hash.\r\n     * @return The score of the user as a uint256 value.\r\n     * @notice This function should be implemented in the contract that inherits the `IScorer` interface.\r\n     */\r\n    function score(address user, bytes32 scoreType) external view returns (uint256);\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 LOG2 PUSH15 0xF63ECD82E1FE6DCD1FF2932B23D2B4 0xCF SWAP7 0xBB SWAP5 0xB2 CALLVALUE PUSH17 0x434C9E4016FB664736F6C634300081C00 CALLER ",
							"sourceMap": "750:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 LOG2 PUSH15 0xF63ECD82E1FE6DCD1FF2932B23D2B4 0xCF SWAP7 0xBB SWAP5 0xB2 CALLVALUE PUSH17 0x434C9E4016FB664736F6C634300081C00 CALLER ",
							"sourceMap": "750:8692:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA NOT 0xAB 0xEC EQ 0xBD SLOAD PUSH11 0x3E2501B9C50B6356651A79 SSTORE 0xD9 0xAB 0xB2 ADDMOD PUSH9 0x26DD5F0D18ED64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA NOT 0xAB 0xEC EQ 0xBD SLOAD PUSH11 0x3E2501B9C50B6356651A79 SSTORE 0xD9 0xAB 0xB2 ADDMOD PUSH9 0x26DD5F0D18ED64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "233:5799:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/cookie-jar.sol": {
				"nCookieJar": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "AllowedAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "claimant",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "RoundUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "withdrawer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ETHER",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedAmounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentRound",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_scorer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scorer",
							"outputs": [
								{
									"internalType": "contract IScorer",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setAllowedAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "metadataURI",
									"type": "string"
								}
							],
							"name": "setRound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "totalBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"deposit(address,uint256)": {
								"params": {
									"amount": "The value to add (in wei for Ether).",
									"token": "The token address (address(0) for Ether)."
								}
							},
							"initialize(address,address)": {
								"params": {
									"_scorer": "The scoring contract address.",
									"owner": "The owner address."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setAllowedAmount(address,address,uint256)": {
								"params": {
									"amount": "The allowed amount for the user.",
									"token": "The token address.",
									"user": "The address of the user."
								}
							},
							"setRound(uint256,uint256,string)": {
								"params": {
									"end": "The end timestamp of the round.",
									"metadataURI": "The IPFS URI for the round metadata.",
									"start": "The start timestamp of the round."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdraw(address,uint256)": {
								"params": {
									"amount": "The amount to withdraw.",
									"token": "The token address (address(0) for Ether)."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/cookie-jar.sol\":367:5584  contract nCookieJar is OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/cookie-jar.sol\":367:5584  contract nCookieJar is OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb807a3c4\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb807a3c4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbe9a7687\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9590e8a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xaee9c872\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x485cc955\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x485cc955\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x85c758f7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a19c8bc\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x1e83409a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x42cb1fbc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x47e7ef24\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/cookie-jar.sol\":5511:5520  msg.value */\n      callvalue\n        /* \"contracts/cookie-jar.sol\":5487:5500  totalBalances */\n      0x04\n        /* \"contracts/cookie-jar.sol\":5487:5507  totalBalances[ETHER] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":491:492  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":5487:5507  totalBalances[ETHER] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/cookie-jar.sol\":5487:5520  totalBalances[ETHER] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":491:492  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":5536:5573  Deposit(msg.sender, ETHER, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":5544:5554  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":5536:5573  Deposit(msg.sender, ETHER, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/cookie-jar.sol\":5563:5572  msg.value */\n      callvalue\n        /* \"contracts/cookie-jar.sol\":5536:5573  Deposit(msg.sender, ETHER, msg.value) */\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/cookie-jar.sol\":367:5584  contract nCookieJar is OwnableUpgradeable {... */\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/cookie-jar.sol\":2620:3647  function claim(address token) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/cookie-jar.sol\":451:493  address public constant ETHER = address(0) */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":2082:2535  function deposit(address token, uint256 amount) external payable {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/cookie-jar.sol\":1682:1864  function initialize(address _scorer, address owner) external initializer {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/cookie-jar.sol\":525:546  IScorer public scorer */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":788:813  Round public currentRound */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":1002:1071  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":904:952  mapping(address => uint256) public totalBalances */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      revert(0x00, 0x00)\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/cookie-jar.sol\":3879:4081  function setAllowedAmount(address user, address token, uint256 amount) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/cookie-jar.sol\":4330:4608  function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/cookie-jar.sol\":4813:5370  function withdraw(address token, uint256 amount) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/cookie-jar.sol\":2620:3647  function claim(address token) external {... */\n    tag_30:\n        /* \"contracts/cookie-jar.sol\":2697:2709  currentRound */\n      0x01\n        /* \"contracts/cookie-jar.sol\":2697:2715  currentRound.start */\n      0x00\n      add\n      sload\n        /* \"contracts/cookie-jar.sol\":2678:2693  block.timestamp */\n      timestamp\n        /* \"contracts/cookie-jar.sol\":2678:2715  block.timestamp >= currentRound.start */\n      lt\n      iszero\n        /* \"contracts/cookie-jar.sol\":2678:2754  block.timestamp >= currentRound.start && block.timestamp <= currentRound.end */\n      dup1\n      iszero\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/cookie-jar.sol\":2738:2750  currentRound */\n      0x01\n        /* \"contracts/cookie-jar.sol\":2738:2754  currentRound.end */\n      dup1\n      add\n      sload\n        /* \"contracts/cookie-jar.sol\":2719:2734  block.timestamp */\n      timestamp\n        /* \"contracts/cookie-jar.sol\":2719:2754  block.timestamp <= currentRound.end */\n      gt\n      iszero\n        /* \"contracts/cookie-jar.sol\":2678:2754  block.timestamp >= currentRound.start && block.timestamp <= currentRound.end */\n    tag_91:\n        /* \"contracts/cookie-jar.sol\":2670:2784  require(block.timestamp >= currentRound.start && block.timestamp <= currentRound.end, \"Not within round duration\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/cookie-jar.sol\":2797:2822  uint256 userAllowedAmount */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2825:2839  allowedAmounts */\n      0x05\n        /* \"contracts/cookie-jar.sol\":2825:2851  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2840:2850  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":2825:2851  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cookie-jar.sol\":2825:2858  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2852:2857  token */\n      dup4\n        /* \"contracts/cookie-jar.sol\":2825:2858  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/cookie-jar.sol\":2797:2858  uint256 userAllowedAmount = allowedAmounts[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/cookie-jar.sol\":2897:2898  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2877:2894  userAllowedAmount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":2877:2898  userAllowedAmount > 0 */\n      gt\n        /* \"contracts/cookie-jar.sol\":2869:2922  require(userAllowedAmount > 0, \"No claimable amount\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/cookie-jar.sol\":2965:2982  userAllowedAmount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":2941:2954  totalBalances */\n      0x04\n        /* \"contracts/cookie-jar.sol\":2941:2961  totalBalances[token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2955:2960  token */\n      dup5\n        /* \"contracts/cookie-jar.sol\":2941:2961  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/cookie-jar.sol\":2941:2982  totalBalances[token] >= userAllowedAmount */\n      lt\n      iszero\n        /* \"contracts/cookie-jar.sol\":2933:3012  require(totalBalances[token] >= userAllowedAmount, \"Insufficient funds in jar\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/cookie-jar.sol\":3082:3098  bytes32 trustKey */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3101:3119  keccak256(\"Trust\") */\n      0x63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b\n        /* \"contracts/cookie-jar.sol\":3082:3119  bytes32 trustKey = keccak256(\"Trust\") */\n      swap1\n      pop\n        /* \"contracts/cookie-jar.sol\":3175:3176  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3138:3144  scorer */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3138:3150  scorer.score */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfaa5e295\n        /* \"contracts/cookie-jar.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3163:3171  trustKey */\n      dup5\n        /* \"contracts/cookie-jar.sol\":3138:3172  scorer.score(msg.sender, trustKey) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap3\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/cookie-jar.sol\":3138:3176  scorer.score(msg.sender, trustKey) > 0 */\n      gt\n        /* \"contracts/cookie-jar.sol\":3130:3205  require(scorer.score(msg.sender, trustKey) > 0, \"Insufficient Trust score\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/cookie-jar.sol\":3254:3255  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3218:3232  allowedAmounts */\n      0x05\n        /* \"contracts/cookie-jar.sol\":3218:3244  allowedAmounts[msg.sender] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3233:3243  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3218:3244  allowedAmounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cookie-jar.sol\":3218:3251  allowedAmounts[msg.sender][token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3245:3250  token */\n      dup6\n        /* \"contracts/cookie-jar.sol\":3218:3251  allowedAmounts[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cookie-jar.sol\":3218:3255  allowedAmounts[msg.sender][token] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":3290:3307  userAllowedAmount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":3266:3279  totalBalances */\n      0x04\n        /* \"contracts/cookie-jar.sol\":3266:3286  totalBalances[token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3280:3285  token */\n      dup6\n        /* \"contracts/cookie-jar.sol\":3266:3286  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/cookie-jar.sol\":3266:3307  totalBalances[token] -= userAllowedAmount */\n      dup3\n      dup3\n      sload\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":491:492  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3324:3338  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3324:3329  token */\n      dup4\n        /* \"contracts/cookie-jar.sol\":3324:3338  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/cookie-jar.sol\":3320:3577  if (token == ETHER) {... */\n      tag_112\n      jumpi\n        /* \"contracts/cookie-jar.sol\":3356:3368  bool success */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3374:3384  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3374:3389  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3397:3414  userAllowedAmount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":3374:3419  msg.sender.call{value: userAllowedAmount}(\"\") */\n      mload(0x40)\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_117\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_116)\n    tag_117:\n      0x60\n      swap2\n      pop\n    tag_116:\n      pop\n        /* \"contracts/cookie-jar.sol\":3355:3419  (bool success, ) = msg.sender.call{value: userAllowedAmount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cookie-jar.sol\":3442:3449  success */\n      dup1\n        /* \"contracts/cookie-jar.sol\":3434:3475  require(success, \"Ether transfer failed\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/cookie-jar.sol\":3340:3487  {... */\n      pop\n        /* \"contracts/cookie-jar.sol\":3320:3577  if (token == ETHER) {... */\n      jump(tag_121)\n    tag_112:\n        /* \"contracts/cookie-jar.sol\":3508:3565  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      tag_122\n        /* \"contracts/cookie-jar.sol\":3535:3545  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3547:3564  userAllowedAmount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":3515:3520  token */\n      dup6\n        /* \"contracts/cookie-jar.sol\":3508:3534  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_123\n      swap1\n        /* \"contracts/cookie-jar.sol\":3508:3565  IERC20(token).safeTransfer(msg.sender, userAllowedAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_122:\n        /* \"contracts/cookie-jar.sol\":3320:3577  if (token == ETHER) {... */\n    tag_121:\n        /* \"contracts/cookie-jar.sol\":3614:3619  token */\n      dup3\n        /* \"contracts/cookie-jar.sol\":3594:3639  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":3602:3612  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":3594:3639  Claimed(msg.sender, token, userAllowedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683\n        /* \"contracts/cookie-jar.sol\":3621:3638  userAllowedAmount */\n      dup5\n        /* \"contracts/cookie-jar.sol\":3594:3639  Claimed(msg.sender, token, userAllowedAmount) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/cookie-jar.sol\":2659:3647  {... */\n      pop\n      pop\n        /* \"contracts/cookie-jar.sol\":2620:3647  function claim(address token) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":451:493  address public constant ETHER = address(0) */\n    tag_33:\n        /* \"contracts/cookie-jar.sol\":491:492  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":451:493  address public constant ETHER = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":2082:2535  function deposit(address token, uint256 amount) external payable {... */\n    tag_39:\n        /* \"contracts/cookie-jar.sol\":491:492  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2162:2176  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":2162:2167  token */\n      dup3\n        /* \"contracts/cookie-jar.sol\":2162:2176  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/cookie-jar.sol\":2158:2435  if (token == ETHER) {... */\n      tag_126\n      jumpi\n        /* \"contracts/cookie-jar.sol\":2214:2220  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":2201:2210  msg.value */\n      callvalue\n        /* \"contracts/cookie-jar.sol\":2201:2220  msg.value == amount */\n      eq\n        /* \"contracts/cookie-jar.sol\":2193:2247  require(msg.value == amount, \"Incorrect Ether amount\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/cookie-jar.sol\":2158:2435  if (token == ETHER) {... */\n      jump(tag_130)\n    tag_126:\n        /* \"contracts/cookie-jar.sol\":2297:2298  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2288:2294  amount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":2288:2298  amount > 0 */\n      gt\n        /* \"contracts/cookie-jar.sol\":2280:2343  require(amount > 0, \"Deposit amount must be greater than zero\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/cookie-jar.sol\":2358:2423  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_134\n        /* \"contracts/cookie-jar.sol\":2389:2399  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":2409:2413  this */\n      address\n        /* \"contracts/cookie-jar.sol\":2416:2422  amount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":2365:2370  token */\n      dup6\n        /* \"contracts/cookie-jar.sol\":2358:2388  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_135\n      swap1\n        /* \"contracts/cookie-jar.sol\":2358:2423  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"contracts/cookie-jar.sol\":2158:2435  if (token == ETHER) {... */\n    tag_130:\n        /* \"contracts/cookie-jar.sol\":2471:2477  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":2447:2460  totalBalances */\n      0x04\n        /* \"contracts/cookie-jar.sol\":2447:2467  totalBalances[token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":2461:2466  token */\n      dup5\n        /* \"contracts/cookie-jar.sol\":2447:2467  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/cookie-jar.sol\":2447:2477  totalBalances[token] += amount */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":2513:2518  token */\n      dup2\n        /* \"contracts/cookie-jar.sol\":2493:2527  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":2501:2511  msg.sender */\n      caller\n        /* \"contracts/cookie-jar.sol\":2493:2527  Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62\n        /* \"contracts/cookie-jar.sol\":2520:2526  amount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":2493:2527  Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/cookie-jar.sol\":2082:2535  function deposit(address token, uint256 amount) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":1682:1864  function initialize(address _scorer, address owner) external initializer {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_142\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_143\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_145:\n        /* \"contracts/cookie-jar.sol\":1766:1787  __Ownable_init(owner) */\n      tag_147\n        /* \"contracts/cookie-jar.sol\":1781:1786  owner */\n      dup7\n        /* \"contracts/cookie-jar.sol\":1766:1780  __Ownable_init */\n      tag_148\n        /* \"contracts/cookie-jar.sol\":1766:1787  __Ownable_init(owner) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/cookie-jar.sol\":1848:1855  _scorer */\n      dup7\n        /* \"contracts/cookie-jar.sol\":1831:1837  scorer */\n      0x00\n      0x00\n        /* \"contracts/cookie-jar.sol\":1831:1856  scorer = IScorer(_scorer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/cookie-jar.sol\":1682:1864  function initialize(address _scorer, address owner) external initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":525:546  IScorer public scorer */\n    tag_50:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":788:813  Round public currentRound */\n    tag_55:\n      0x01\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_159\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_165\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":1002:1071  mapping(address => mapping(address => uint256)) public allowedAmounts */\n    tag_65:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":904:952  mapping(address => uint256) public totalBalances */\n    tag_70:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":3879:4081  function setAllowedAmount(address user, address token, uint256 amount) external onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/cookie-jar.sol\":4010:4016  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":3980:3994  allowedAmounts */\n      0x05\n        /* \"contracts/cookie-jar.sol\":3980:4000  allowedAmounts[user] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":3995:3999  user */\n      dup6\n        /* \"contracts/cookie-jar.sol\":3980:4000  allowedAmounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cookie-jar.sol\":3980:4007  allowedAmounts[user][token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":4001:4006  token */\n      dup5\n        /* \"contracts/cookie-jar.sol\":3980:4007  allowedAmounts[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/cookie-jar.sol\":3980:4016  allowedAmounts[user][token] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4059:4064  token */\n      dup2\n        /* \"contracts/cookie-jar.sol\":4032:4073  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":4053:4057  user */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4032:4073  AllowedAmountUpdated(user, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2\n        /* \"contracts/cookie-jar.sol\":4066:4072  amount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4032:4073  AllowedAmountUpdated(user, token, amount) */\n      mload(0x40)\n      tag_170\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/cookie-jar.sol\":3879:4081  function setAllowedAmount(address user, address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":4330:4608  function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"contracts/cookie-jar.sol\":4449:4452  end */\n      dup2\n        /* \"contracts/cookie-jar.sol\":4441:4446  start */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4441:4452  start < end */\n      lt\n        /* \"contracts/cookie-jar.sol\":4433:4491  require(start < end, \"Start time must be before end time\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/cookie-jar.sol\":4517:4547  Round(start, end, metadataURI) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/cookie-jar.sol\":4523:4528  start */\n      dup5\n        /* \"contracts/cookie-jar.sol\":4517:4547  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cookie-jar.sol\":4530:4533  end */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4517:4547  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/cookie-jar.sol\":4535:4546  metadataURI */\n      dup3\n        /* \"contracts/cookie-jar.sol\":4517:4547  Round(start, end, metadataURI) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/cookie-jar.sol\":4502:4514  currentRound */\n      0x01\n        /* \"contracts/cookie-jar.sol\":4502:4547  currentRound = Round(start, end, metadataURI) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/cookie-jar.sol\":4563:4600  RoundUpdated(start, end, metadataURI) */\n      0x09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13\n        /* \"contracts/cookie-jar.sol\":4576:4581  start */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4583:4586  end */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4588:4599  metadataURI */\n      dup4\n        /* \"contracts/cookie-jar.sol\":4563:4600  RoundUpdated(start, end, metadataURI) */\n      mload(0x40)\n      tag_179\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/cookie-jar.sol\":4330:4608  function setRound(uint256 start, uint256 end, string memory metadataURI) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/cookie-jar.sol\":4813:5370  function withdraw(address token, uint256 amount) external onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"contracts/cookie-jar.sol\":4909:4910  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":4900:4906  amount */\n      dup2\n        /* \"contracts/cookie-jar.sol\":4900:4910  amount > 0 */\n      gt\n        /* \"contracts/cookie-jar.sol\":4892:4958  require(amount > 0, \"Withdrawal amount must be greater than zero\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/cookie-jar.sol\":5001:5007  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":4977:4990  totalBalances */\n      0x04\n        /* \"contracts/cookie-jar.sol\":4977:4997  totalBalances[token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":4991:4996  token */\n      dup5\n        /* \"contracts/cookie-jar.sol\":4977:4997  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/cookie-jar.sol\":4977:5007  totalBalances[token] >= amount */\n      lt\n      iszero\n        /* \"contracts/cookie-jar.sol\":4969:5030  require(totalBalances[token] >= amount, \"Insufficient funds\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"contracts/cookie-jar.sol\":5067:5073  amount */\n      dup1\n        /* \"contracts/cookie-jar.sol\":5043:5056  totalBalances */\n      0x04\n        /* \"contracts/cookie-jar.sol\":5043:5063  totalBalances[token] */\n      0x00\n        /* \"contracts/cookie-jar.sol\":5057:5062  token */\n      dup5\n        /* \"contracts/cookie-jar.sol\":5043:5063  totalBalances[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/cookie-jar.sol\":5043:5073  totalBalances[token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/cookie-jar.sol\":491:492  0 */\n      0x00\n        /* \"contracts/cookie-jar.sol\":5090:5104  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":5090:5095  token */\n      dup3\n        /* \"contracts/cookie-jar.sol\":5090:5104  token == ETHER */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/cookie-jar.sol\":5086:5315  if (token == ETHER) {... */\n      tag_196\n      jumpi\n        /* \"contracts/cookie-jar.sol\":5122:5134  bool success */\n      0x00\n        /* \"contracts/cookie-jar.sol\":5140:5147  owner() */\n      tag_197\n        /* \"contracts/cookie-jar.sol\":5140:5145  owner */\n      tag_60\n        /* \"contracts/cookie-jar.sol\":5140:5147  owner() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/cookie-jar.sol\":5140:5152  owner().call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":5160:5166  amount */\n      dup3\n        /* \"contracts/cookie-jar.sol\":5140:5171  owner().call{value: amount}(\"\") */\n      mload(0x40)\n      tag_198\n      swap1\n      tag_114\n      jump\t// in\n    tag_198:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_201\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_200)\n    tag_201:\n      0x60\n      swap2\n      pop\n    tag_200:\n      pop\n        /* \"contracts/cookie-jar.sol\":5121:5171  (bool success, ) = owner().call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/cookie-jar.sol\":5194:5201  success */\n      dup1\n        /* \"contracts/cookie-jar.sol\":5186:5227  require(success, \"Ether transfer failed\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap1\n      tag_120\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/cookie-jar.sol\":5106:5239  {... */\n      pop\n        /* \"contracts/cookie-jar.sol\":5086:5315  if (token == ETHER) {... */\n      jump(tag_204)\n    tag_196:\n        /* \"contracts/cookie-jar.sol\":5260:5303  IERC20(token).safeTransfer(owner(), amount) */\n      tag_205\n        /* \"contracts/cookie-jar.sol\":5287:5294  owner() */\n      tag_206\n        /* \"contracts/cookie-jar.sol\":5287:5292  owner */\n      tag_60\n        /* \"contracts/cookie-jar.sol\":5287:5294  owner() */\n      jump\t// in\n    tag_206:\n        /* \"contracts/cookie-jar.sol\":5296:5302  amount */\n      dup3\n        /* \"contracts/cookie-jar.sol\":5267:5272  token */\n      dup5\n        /* \"contracts/cookie-jar.sol\":5260:5286  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_123\n      swap1\n        /* \"contracts/cookie-jar.sol\":5260:5303  IERC20(token).safeTransfer(owner(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/cookie-jar.sol\":5086:5315  if (token == ETHER) {... */\n    tag_204:\n        /* \"contracts/cookie-jar.sol\":5348:5353  token */\n      dup2\n        /* \"contracts/cookie-jar.sol\":5330:5362  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/cookie-jar.sol\":5339:5346  owner() */\n      tag_207\n        /* \"contracts/cookie-jar.sol\":5339:5344  owner */\n      tag_60\n        /* \"contracts/cookie-jar.sol\":5339:5346  owner() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/cookie-jar.sol\":5330:5362  Withdraw(owner(), token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb\n        /* \"contracts/cookie-jar.sol\":5355:5361  amount */\n      dup4\n        /* \"contracts/cookie-jar.sol\":5330:5362  Withdraw(owner(), token, amount) */\n      mload(0x40)\n      tag_208\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/cookie-jar.sol\":4813:5370  function withdraw(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_211\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_216\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_238)\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_254:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:270   */\n    tag_255:\n        /* \"#utility.yul\":138:215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":128:216   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x11\n        /* \"#utility.yul\":232:233   */\n      0x04\n        /* \"#utility.yul\":225:240   */\n      mstore\n        /* \"#utility.yul\":259:263   */\n      0x24\n        /* \"#utility.yul\":256:257   */\n      0x00\n        /* \"#utility.yul\":249:264   */\n      revert\n        /* \"#utility.yul\":276:467   */\n    tag_23:\n        /* \"#utility.yul\":316:319   */\n      0x00\n        /* \"#utility.yul\":335:355   */\n      tag_335\n        /* \"#utility.yul\":353:354   */\n      dup3\n        /* \"#utility.yul\":335:355   */\n      tag_254\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":330:355   */\n      swap2\n      pop\n        /* \"#utility.yul\":369:389   */\n      tag_336\n        /* \"#utility.yul\":387:388   */\n      dup4\n        /* \"#utility.yul\":369:389   */\n      tag_254\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":364:389   */\n      swap3\n      pop\n        /* \"#utility.yul\":412:413   */\n      dup3\n        /* \"#utility.yul\":409:410   */\n      dup3\n        /* \"#utility.yul\":405:414   */\n      add\n        /* \"#utility.yul\":398:414   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:436   */\n      dup1\n        /* \"#utility.yul\":430:431   */\n      dup3\n        /* \"#utility.yul\":427:437   */\n      gt\n        /* \"#utility.yul\":424:460   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":440:458   */\n      tag_338\n      tag_255\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":424:460   */\n    tag_337:\n        /* \"#utility.yul\":276:467   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":473:591   */\n    tag_256:\n        /* \"#utility.yul\":560:584   */\n      tag_340\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":560:584   */\n      tag_254\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":555:558   */\n      dup3\n        /* \"#utility.yul\":548:585   */\n      mstore\n        /* \"#utility.yul\":473:591   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:819   */\n    tag_25:\n        /* \"#utility.yul\":690:694   */\n      0x00\n        /* \"#utility.yul\":728:730   */\n      0x20\n        /* \"#utility.yul\":717:726   */\n      dup3\n        /* \"#utility.yul\":713:731   */\n      add\n        /* \"#utility.yul\":705:731   */\n      swap1\n      pop\n        /* \"#utility.yul\":741:812   */\n      tag_342\n        /* \"#utility.yul\":809:810   */\n      0x00\n        /* \"#utility.yul\":798:807   */\n      dup4\n        /* \"#utility.yul\":794:811   */\n      add\n        /* \"#utility.yul\":785:791   */\n      dup5\n        /* \"#utility.yul\":741:812   */\n      tag_256\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":597:819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":825:900   */\n    tag_257:\n        /* \"#utility.yul\":858:864   */\n      0x00\n        /* \"#utility.yul\":891:893   */\n      0x40\n        /* \"#utility.yul\":885:894   */\n      mload\n        /* \"#utility.yul\":875:894   */\n      swap1\n      pop\n        /* \"#utility.yul\":825:900   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":906:1023   */\n    tag_258:\n        /* \"#utility.yul\":1015:1016   */\n      0x00\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1005:1017   */\n      revert\n        /* \"#utility.yul\":1029:1146   */\n    tag_259:\n        /* \"#utility.yul\":1138:1139   */\n      0x00\n        /* \"#utility.yul\":1135:1136   */\n      0x00\n        /* \"#utility.yul\":1128:1140   */\n      revert\n        /* \"#utility.yul\":1152:1278   */\n    tag_260:\n        /* \"#utility.yul\":1189:1196   */\n      0x00\n        /* \"#utility.yul\":1229:1271   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1222:1227   */\n      dup3\n        /* \"#utility.yul\":1218:1272   */\n      and\n        /* \"#utility.yul\":1207:1272   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1380   */\n    tag_261:\n        /* \"#utility.yul\":1321:1328   */\n      0x00\n        /* \"#utility.yul\":1350:1374   */\n      tag_348\n        /* \"#utility.yul\":1368:1373   */\n      dup3\n        /* \"#utility.yul\":1350:1374   */\n      tag_260\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":1339:1374   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1386:1508   */\n    tag_262:\n        /* \"#utility.yul\":1459:1483   */\n      tag_350\n        /* \"#utility.yul\":1477:1482   */\n      dup2\n        /* \"#utility.yul\":1459:1483   */\n      tag_261\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":1452:1457   */\n      dup2\n        /* \"#utility.yul\":1449:1484   */\n      eq\n        /* \"#utility.yul\":1439:1502   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      0x00\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1439:1502   */\n    tag_351:\n        /* \"#utility.yul\":1386:1508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1514:1653   */\n    tag_263:\n        /* \"#utility.yul\":1560:1565   */\n      0x00\n        /* \"#utility.yul\":1598:1604   */\n      dup2\n        /* \"#utility.yul\":1585:1605   */\n      calldataload\n        /* \"#utility.yul\":1576:1605   */\n      swap1\n      pop\n        /* \"#utility.yul\":1614:1647   */\n      tag_353\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1614:1647   */\n      tag_262\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":1514:1653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1659:1988   */\n    tag_29:\n        /* \"#utility.yul\":1718:1724   */\n      0x00\n        /* \"#utility.yul\":1767:1769   */\n      0x20\n        /* \"#utility.yul\":1755:1764   */\n      dup3\n        /* \"#utility.yul\":1746:1753   */\n      dup5\n        /* \"#utility.yul\":1742:1765   */\n      sub\n        /* \"#utility.yul\":1738:1770   */\n      slt\n        /* \"#utility.yul\":1735:1854   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":1773:1852   */\n      tag_356\n      tag_258\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":1735:1854   */\n    tag_355:\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1918:1971   */\n      tag_357\n        /* \"#utility.yul\":1963:1970   */\n      dup5\n        /* \"#utility.yul\":1954:1960   */\n      dup3\n        /* \"#utility.yul\":1943:1952   */\n      dup6\n        /* \"#utility.yul\":1939:1961   */\n      add\n        /* \"#utility.yul\":1918:1971   */\n      tag_263\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1908:1971   */\n      swap2\n      pop\n        /* \"#utility.yul\":1864:1981   */\n      pop\n        /* \"#utility.yul\":1659:1988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2112   */\n    tag_264:\n        /* \"#utility.yul\":2081:2105   */\n      tag_359\n        /* \"#utility.yul\":2099:2104   */\n      dup2\n        /* \"#utility.yul\":2081:2105   */\n      tag_261\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2076:2079   */\n      dup3\n        /* \"#utility.yul\":2069:2106   */\n      mstore\n        /* \"#utility.yul\":1994:2112   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2118:2340   */\n    tag_35:\n        /* \"#utility.yul\":2211:2215   */\n      0x00\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2238:2247   */\n      dup3\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2226:2252   */\n      swap1\n      pop\n        /* \"#utility.yul\":2262:2333   */\n      tag_361\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2319:2328   */\n      dup4\n        /* \"#utility.yul\":2315:2332   */\n      add\n        /* \"#utility.yul\":2306:2312   */\n      dup5\n        /* \"#utility.yul\":2262:2333   */\n      tag_264\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":2118:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2346:2468   */\n    tag_265:\n        /* \"#utility.yul\":2419:2443   */\n      tag_363\n        /* \"#utility.yul\":2437:2442   */\n      dup2\n        /* \"#utility.yul\":2419:2443   */\n      tag_254\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":2412:2417   */\n      dup2\n        /* \"#utility.yul\":2409:2444   */\n      eq\n        /* \"#utility.yul\":2399:2462   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":2458:2459   */\n      0x00\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2448:2460   */\n      revert\n        /* \"#utility.yul\":2399:2462   */\n    tag_364:\n        /* \"#utility.yul\":2346:2468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2474:2613   */\n    tag_266:\n        /* \"#utility.yul\":2520:2525   */\n      0x00\n        /* \"#utility.yul\":2558:2564   */\n      dup2\n        /* \"#utility.yul\":2545:2565   */\n      calldataload\n        /* \"#utility.yul\":2536:2565   */\n      swap1\n      pop\n        /* \"#utility.yul\":2574:2607   */\n      tag_366\n        /* \"#utility.yul\":2601:2606   */\n      dup2\n        /* \"#utility.yul\":2574:2607   */\n      tag_265\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":2474:2613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2619:3093   */\n    tag_38:\n        /* \"#utility.yul\":2687:2693   */\n      0x00\n        /* \"#utility.yul\":2695:2701   */\n      0x00\n        /* \"#utility.yul\":2744:2746   */\n      0x40\n        /* \"#utility.yul\":2732:2741   */\n      dup4\n        /* \"#utility.yul\":2723:2730   */\n      dup6\n        /* \"#utility.yul\":2719:2742   */\n      sub\n        /* \"#utility.yul\":2715:2747   */\n      slt\n        /* \"#utility.yul\":2712:2831   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":2750:2829   */\n      tag_369\n      tag_258\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2712:2831   */\n    tag_368:\n        /* \"#utility.yul\":2870:2871   */\n      0x00\n        /* \"#utility.yul\":2895:2948   */\n      tag_370\n        /* \"#utility.yul\":2940:2947   */\n      dup6\n        /* \"#utility.yul\":2931:2937   */\n      dup3\n        /* \"#utility.yul\":2920:2929   */\n      dup7\n        /* \"#utility.yul\":2916:2938   */\n      add\n        /* \"#utility.yul\":2895:2948   */\n      tag_263\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2885:2948   */\n      swap3\n      pop\n        /* \"#utility.yul\":2841:2958   */\n      pop\n        /* \"#utility.yul\":2997:2999   */\n      0x20\n        /* \"#utility.yul\":3023:3076   */\n      tag_371\n        /* \"#utility.yul\":3068:3075   */\n      dup6\n        /* \"#utility.yul\":3059:3065   */\n      dup3\n        /* \"#utility.yul\":3048:3057   */\n      dup7\n        /* \"#utility.yul\":3044:3066   */\n      add\n        /* \"#utility.yul\":3023:3076   */\n      tag_266\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":3013:3076   */\n      swap2\n      pop\n        /* \"#utility.yul\":2968:3086   */\n      pop\n        /* \"#utility.yul\":2619:3093   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3573   */\n    tag_43:\n        /* \"#utility.yul\":3167:3173   */\n      0x00\n        /* \"#utility.yul\":3175:3181   */\n      0x00\n        /* \"#utility.yul\":3224:3226   */\n      0x40\n        /* \"#utility.yul\":3212:3221   */\n      dup4\n        /* \"#utility.yul\":3203:3210   */\n      dup6\n        /* \"#utility.yul\":3199:3222   */\n      sub\n        /* \"#utility.yul\":3195:3227   */\n      slt\n        /* \"#utility.yul\":3192:3311   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":3230:3309   */\n      tag_374\n      tag_258\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":3192:3311   */\n    tag_373:\n        /* \"#utility.yul\":3350:3351   */\n      0x00\n        /* \"#utility.yul\":3375:3428   */\n      tag_375\n        /* \"#utility.yul\":3420:3427   */\n      dup6\n        /* \"#utility.yul\":3411:3417   */\n      dup3\n        /* \"#utility.yul\":3400:3409   */\n      dup7\n        /* \"#utility.yul\":3396:3418   */\n      add\n        /* \"#utility.yul\":3375:3428   */\n      tag_263\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":3365:3428   */\n      swap3\n      pop\n        /* \"#utility.yul\":3321:3438   */\n      pop\n        /* \"#utility.yul\":3477:3479   */\n      0x20\n        /* \"#utility.yul\":3503:3556   */\n      tag_376\n        /* \"#utility.yul\":3548:3555   */\n      dup6\n        /* \"#utility.yul\":3539:3545   */\n      dup3\n        /* \"#utility.yul\":3528:3537   */\n      dup7\n        /* \"#utility.yul\":3524:3546   */\n      add\n        /* \"#utility.yul\":3503:3556   */\n      tag_263\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3493:3556   */\n      swap2\n      pop\n        /* \"#utility.yul\":3448:3566   */\n      pop\n        /* \"#utility.yul\":3099:3573   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3579:3639   */\n    tag_267:\n        /* \"#utility.yul\":3607:3610   */\n      0x00\n        /* \"#utility.yul\":3628:3633   */\n      dup2\n        /* \"#utility.yul\":3621:3633   */\n      swap1\n      pop\n        /* \"#utility.yul\":3579:3639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3645:3787   */\n    tag_268:\n        /* \"#utility.yul\":3695:3704   */\n      0x00\n        /* \"#utility.yul\":3728:3781   */\n      tag_379\n        /* \"#utility.yul\":3746:3780   */\n      tag_380\n        /* \"#utility.yul\":3755:3779   */\n      tag_381\n        /* \"#utility.yul\":3773:3778   */\n      dup5\n        /* \"#utility.yul\":3755:3779   */\n      tag_260\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3746:3780   */\n      tag_267\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3728:3781   */\n      tag_260\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3715:3781   */\n      swap1\n      pop\n        /* \"#utility.yul\":3645:3787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3793:3919   */\n    tag_269:\n        /* \"#utility.yul\":3843:3852   */\n      0x00\n        /* \"#utility.yul\":3876:3913   */\n      tag_383\n        /* \"#utility.yul\":3907:3912   */\n      dup3\n        /* \"#utility.yul\":3876:3913   */\n      tag_268\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3863:3913   */\n      swap1\n      pop\n        /* \"#utility.yul\":3793:3919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3925:4067   */\n    tag_270:\n        /* \"#utility.yul\":3991:4000   */\n      0x00\n        /* \"#utility.yul\":4024:4061   */\n      tag_385\n        /* \"#utility.yul\":4055:4060   */\n      dup3\n        /* \"#utility.yul\":4024:4061   */\n      tag_269\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":4011:4061   */\n      swap1\n      pop\n        /* \"#utility.yul\":3925:4067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4073:4236   */\n    tag_271:\n        /* \"#utility.yul\":4176:4229   */\n      tag_387\n        /* \"#utility.yul\":4223:4228   */\n      dup2\n        /* \"#utility.yul\":4176:4229   */\n      tag_270\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":4171:4174   */\n      dup3\n        /* \"#utility.yul\":4164:4230   */\n      mstore\n        /* \"#utility.yul\":4073:4236   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4242:4496   */\n    tag_52:\n        /* \"#utility.yul\":4351:4355   */\n      0x00\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"#utility.yul\":4378:4387   */\n      dup3\n        /* \"#utility.yul\":4374:4392   */\n      add\n        /* \"#utility.yul\":4366:4392   */\n      swap1\n      pop\n        /* \"#utility.yul\":4402:4489   */\n      tag_389\n        /* \"#utility.yul\":4486:4487   */\n      0x00\n        /* \"#utility.yul\":4475:4484   */\n      dup4\n        /* \"#utility.yul\":4471:4488   */\n      add\n        /* \"#utility.yul\":4462:4468   */\n      dup5\n        /* \"#utility.yul\":4402:4489   */\n      tag_271\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":4242:4496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4502:4601   */\n    tag_272:\n        /* \"#utility.yul\":4554:4560   */\n      0x00\n        /* \"#utility.yul\":4588:4593   */\n      dup2\n        /* \"#utility.yul\":4582:4594   */\n      mload\n        /* \"#utility.yul\":4572:4594   */\n      swap1\n      pop\n        /* \"#utility.yul\":4502:4601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4607:4776   */\n    tag_273:\n        /* \"#utility.yul\":4691:4702   */\n      0x00\n        /* \"#utility.yul\":4725:4731   */\n      dup3\n        /* \"#utility.yul\":4720:4723   */\n      dup3\n        /* \"#utility.yul\":4713:4732   */\n      mstore\n        /* \"#utility.yul\":4765:4769   */\n      0x20\n        /* \"#utility.yul\":4760:4763   */\n      dup3\n        /* \"#utility.yul\":4756:4770   */\n      add\n        /* \"#utility.yul\":4741:4770   */\n      swap1\n      pop\n        /* \"#utility.yul\":4607:4776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4782:4921   */\n    tag_274:\n        /* \"#utility.yul\":4871:4877   */\n      dup3\n        /* \"#utility.yul\":4866:4869   */\n      dup2\n        /* \"#utility.yul\":4861:4864   */\n      dup4\n        /* \"#utility.yul\":4855:4878   */\n      mcopy\n        /* \"#utility.yul\":4912:4913   */\n      0x00\n        /* \"#utility.yul\":4903:4909   */\n      dup4\n        /* \"#utility.yul\":4898:4901   */\n      dup4\n        /* \"#utility.yul\":4894:4910   */\n      add\n        /* \"#utility.yul\":4887:4914   */\n      mstore\n        /* \"#utility.yul\":4782:4921   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4927:5029   */\n    tag_275:\n        /* \"#utility.yul\":4968:4974   */\n      0x00\n        /* \"#utility.yul\":5019:5021   */\n      0x1f\n        /* \"#utility.yul\":5015:5022   */\n      not\n        /* \"#utility.yul\":5010:5012   */\n      0x1f\n        /* \"#utility.yul\":5003:5008   */\n      dup4\n        /* \"#utility.yul\":4999:5013   */\n      add\n        /* \"#utility.yul\":4995:5023   */\n      and\n        /* \"#utility.yul\":4985:5023   */\n      swap1\n      pop\n        /* \"#utility.yul\":4927:5029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5035:5412   */\n    tag_276:\n        /* \"#utility.yul\":5123:5126   */\n      0x00\n        /* \"#utility.yul\":5151:5190   */\n      tag_395\n        /* \"#utility.yul\":5184:5189   */\n      dup3\n        /* \"#utility.yul\":5151:5190   */\n      tag_272\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":5206:5277   */\n      tag_396\n        /* \"#utility.yul\":5270:5276   */\n      dup2\n        /* \"#utility.yul\":5265:5268   */\n      dup6\n        /* \"#utility.yul\":5206:5277   */\n      tag_273\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":5199:5277   */\n      swap4\n      pop\n        /* \"#utility.yul\":5286:5351   */\n      tag_397\n        /* \"#utility.yul\":5344:5350   */\n      dup2\n        /* \"#utility.yul\":5339:5342   */\n      dup6\n        /* \"#utility.yul\":5332:5336   */\n      0x20\n        /* \"#utility.yul\":5325:5330   */\n      dup7\n        /* \"#utility.yul\":5321:5337   */\n      add\n        /* \"#utility.yul\":5286:5351   */\n      tag_274\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":5376:5405   */\n      tag_398\n        /* \"#utility.yul\":5398:5404   */\n      dup2\n        /* \"#utility.yul\":5376:5405   */\n      tag_275\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":5371:5374   */\n      dup5\n        /* \"#utility.yul\":5367:5406   */\n      add\n        /* \"#utility.yul\":5360:5406   */\n      swap2\n      pop\n        /* \"#utility.yul\":5127:5412   */\n      pop\n        /* \"#utility.yul\":5035:5412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5418:5951   */\n    tag_57:\n        /* \"#utility.yul\":5587:5591   */\n      0x00\n        /* \"#utility.yul\":5625:5627   */\n      0x60\n        /* \"#utility.yul\":5614:5623   */\n      dup3\n        /* \"#utility.yul\":5610:5628   */\n      add\n        /* \"#utility.yul\":5602:5628   */\n      swap1\n      pop\n        /* \"#utility.yul\":5638:5709   */\n      tag_400\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5695:5704   */\n      dup4\n        /* \"#utility.yul\":5691:5708   */\n      add\n        /* \"#utility.yul\":5682:5688   */\n      dup7\n        /* \"#utility.yul\":5638:5709   */\n      tag_256\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":5719:5791   */\n      tag_401\n        /* \"#utility.yul\":5787:5789   */\n      0x20\n        /* \"#utility.yul\":5776:5785   */\n      dup4\n        /* \"#utility.yul\":5772:5790   */\n      add\n        /* \"#utility.yul\":5763:5769   */\n      dup6\n        /* \"#utility.yul\":5719:5791   */\n      tag_256\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5838:5847   */\n      dup2\n        /* \"#utility.yul\":5832:5836   */\n      dup2\n        /* \"#utility.yul\":5828:5848   */\n      sub\n        /* \"#utility.yul\":5823:5825   */\n      0x40\n        /* \"#utility.yul\":5812:5821   */\n      dup4\n        /* \"#utility.yul\":5808:5826   */\n      add\n        /* \"#utility.yul\":5801:5849   */\n      mstore\n        /* \"#utility.yul\":5866:5944   */\n      tag_402\n        /* \"#utility.yul\":5939:5943   */\n      dup2\n        /* \"#utility.yul\":5930:5936   */\n      dup5\n        /* \"#utility.yul\":5866:5944   */\n      tag_276\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5858:5944   */\n      swap1\n      pop\n        /* \"#utility.yul\":5418:5951   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5957:6576   */\n    tag_75:\n        /* \"#utility.yul\":6034:6040   */\n      0x00\n        /* \"#utility.yul\":6042:6048   */\n      0x00\n        /* \"#utility.yul\":6050:6056   */\n      0x00\n        /* \"#utility.yul\":6099:6101   */\n      0x60\n        /* \"#utility.yul\":6087:6096   */\n      dup5\n        /* \"#utility.yul\":6078:6085   */\n      dup7\n        /* \"#utility.yul\":6074:6097   */\n      sub\n        /* \"#utility.yul\":6070:6102   */\n      slt\n        /* \"#utility.yul\":6067:6186   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":6105:6184   */\n      tag_405\n      tag_258\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6067:6186   */\n    tag_404:\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6250:6303   */\n      tag_406\n        /* \"#utility.yul\":6295:6302   */\n      dup7\n        /* \"#utility.yul\":6286:6292   */\n      dup3\n        /* \"#utility.yul\":6275:6284   */\n      dup8\n        /* \"#utility.yul\":6271:6293   */\n      add\n        /* \"#utility.yul\":6250:6303   */\n      tag_263\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6240:6303   */\n      swap4\n      pop\n        /* \"#utility.yul\":6196:6313   */\n      pop\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"#utility.yul\":6378:6431   */\n      tag_407\n        /* \"#utility.yul\":6423:6430   */\n      dup7\n        /* \"#utility.yul\":6414:6420   */\n      dup3\n        /* \"#utility.yul\":6403:6412   */\n      dup8\n        /* \"#utility.yul\":6399:6421   */\n      add\n        /* \"#utility.yul\":6378:6431   */\n      tag_263\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6368:6431   */\n      swap3\n      pop\n        /* \"#utility.yul\":6323:6441   */\n      pop\n        /* \"#utility.yul\":6480:6482   */\n      0x40\n        /* \"#utility.yul\":6506:6559   */\n      tag_408\n        /* \"#utility.yul\":6551:6558   */\n      dup7\n        /* \"#utility.yul\":6542:6548   */\n      dup3\n        /* \"#utility.yul\":6531:6540   */\n      dup8\n        /* \"#utility.yul\":6527:6549   */\n      add\n        /* \"#utility.yul\":6506:6559   */\n      tag_266\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6496:6559   */\n      swap2\n      pop\n        /* \"#utility.yul\":6451:6569   */\n      pop\n        /* \"#utility.yul\":5957:6576   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6582:6699   */\n    tag_277:\n        /* \"#utility.yul\":6691:6692   */\n      0x00\n        /* \"#utility.yul\":6688:6689   */\n      0x00\n        /* \"#utility.yul\":6681:6693   */\n      revert\n        /* \"#utility.yul\":6705:6822   */\n    tag_278:\n        /* \"#utility.yul\":6814:6815   */\n      0x00\n        /* \"#utility.yul\":6811:6812   */\n      0x00\n        /* \"#utility.yul\":6804:6816   */\n      revert\n        /* \"#utility.yul\":6828:7008   */\n    tag_279:\n        /* \"#utility.yul\":6876:6953   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6866:6954   */\n      mstore\n        /* \"#utility.yul\":6973:6977   */\n      0x41\n        /* \"#utility.yul\":6970:6971   */\n      0x04\n        /* \"#utility.yul\":6963:6978   */\n      mstore\n        /* \"#utility.yul\":6997:7001   */\n      0x24\n        /* \"#utility.yul\":6994:6995   */\n      0x00\n        /* \"#utility.yul\":6987:7002   */\n      revert\n        /* \"#utility.yul\":7014:7295   */\n    tag_280:\n        /* \"#utility.yul\":7097:7124   */\n      tag_413\n        /* \"#utility.yul\":7119:7123   */\n      dup3\n        /* \"#utility.yul\":7097:7124   */\n      tag_275\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":7089:7095   */\n      dup2\n        /* \"#utility.yul\":7085:7125   */\n      add\n        /* \"#utility.yul\":7227:7233   */\n      dup2\n        /* \"#utility.yul\":7215:7225   */\n      dup2\n        /* \"#utility.yul\":7212:7234   */\n      lt\n        /* \"#utility.yul\":7191:7209   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7179:7189   */\n      dup3\n        /* \"#utility.yul\":7176:7210   */\n      gt\n        /* \"#utility.yul\":7173:7235   */\n      or\n        /* \"#utility.yul\":7170:7258   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":7238:7256   */\n      tag_415\n      tag_279\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":7170:7258   */\n    tag_414:\n        /* \"#utility.yul\":7278:7288   */\n      dup1\n        /* \"#utility.yul\":7274:7276   */\n      0x40\n        /* \"#utility.yul\":7267:7289   */\n      mstore\n        /* \"#utility.yul\":7057:7295   */\n      pop\n        /* \"#utility.yul\":7014:7295   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7301:7430   */\n    tag_281:\n        /* \"#utility.yul\":7335:7341   */\n      0x00\n        /* \"#utility.yul\":7362:7382   */\n      tag_417\n      tag_257\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":7352:7382   */\n      swap1\n      pop\n        /* \"#utility.yul\":7391:7424   */\n      tag_418\n        /* \"#utility.yul\":7419:7423   */\n      dup3\n        /* \"#utility.yul\":7411:7417   */\n      dup3\n        /* \"#utility.yul\":7391:7424   */\n      tag_280\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":7301:7430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7436:7744   */\n    tag_282:\n        /* \"#utility.yul\":7498:7502   */\n      0x00\n        /* \"#utility.yul\":7588:7606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7580:7586   */\n      dup3\n        /* \"#utility.yul\":7577:7607   */\n      gt\n        /* \"#utility.yul\":7574:7630   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7610:7628   */\n      tag_421\n      tag_279\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7574:7630   */\n    tag_420:\n        /* \"#utility.yul\":7648:7677   */\n      tag_422\n        /* \"#utility.yul\":7670:7676   */\n      dup3\n        /* \"#utility.yul\":7648:7677   */\n      tag_275\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7640:7677   */\n      swap1\n      pop\n        /* \"#utility.yul\":7732:7736   */\n      0x20\n        /* \"#utility.yul\":7726:7730   */\n      dup2\n        /* \"#utility.yul\":7722:7737   */\n      add\n        /* \"#utility.yul\":7714:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7436:7744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7750:7898   */\n    tag_283:\n        /* \"#utility.yul\":7848:7854   */\n      dup3\n        /* \"#utility.yul\":7843:7846   */\n      dup2\n        /* \"#utility.yul\":7838:7841   */\n      dup4\n        /* \"#utility.yul\":7825:7855   */\n      calldatacopy\n        /* \"#utility.yul\":7889:7890   */\n      0x00\n        /* \"#utility.yul\":7880:7886   */\n      dup4\n        /* \"#utility.yul\":7875:7878   */\n      dup4\n        /* \"#utility.yul\":7871:7887   */\n      add\n        /* \"#utility.yul\":7864:7891   */\n      mstore\n        /* \"#utility.yul\":7750:7898   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7904:8329   */\n    tag_284:\n        /* \"#utility.yul\":7982:7987   */\n      0x00\n        /* \"#utility.yul\":8007:8073   */\n      tag_425\n        /* \"#utility.yul\":8023:8072   */\n      tag_426\n        /* \"#utility.yul\":8065:8071   */\n      dup5\n        /* \"#utility.yul\":8023:8072   */\n      tag_282\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":8007:8073   */\n      tag_281\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":7998:8073   */\n      swap1\n      pop\n        /* \"#utility.yul\":8096:8102   */\n      dup3\n        /* \"#utility.yul\":8089:8094   */\n      dup2\n        /* \"#utility.yul\":8082:8103   */\n      mstore\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8127:8132   */\n      dup2\n        /* \"#utility.yul\":8123:8139   */\n      add\n        /* \"#utility.yul\":8172:8175   */\n      dup5\n        /* \"#utility.yul\":8163:8169   */\n      dup5\n        /* \"#utility.yul\":8158:8161   */\n      dup5\n        /* \"#utility.yul\":8154:8170   */\n      add\n        /* \"#utility.yul\":8151:8176   */\n      gt\n        /* \"#utility.yul\":8148:8260   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8179:8258   */\n      tag_428\n      tag_278\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":8148:8260   */\n    tag_427:\n        /* \"#utility.yul\":8269:8323   */\n      tag_429\n        /* \"#utility.yul\":8316:8322   */\n      dup5\n        /* \"#utility.yul\":8311:8314   */\n      dup3\n        /* \"#utility.yul\":8306:8309   */\n      dup6\n        /* \"#utility.yul\":8269:8323   */\n      tag_283\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7988:8329   */\n      pop\n        /* \"#utility.yul\":7904:8329   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8349:8689   */\n    tag_285:\n        /* \"#utility.yul\":8405:8410   */\n      0x00\n        /* \"#utility.yul\":8454:8457   */\n      dup3\n        /* \"#utility.yul\":8447:8451   */\n      0x1f\n        /* \"#utility.yul\":8439:8445   */\n      dup4\n        /* \"#utility.yul\":8435:8452   */\n      add\n        /* \"#utility.yul\":8431:8458   */\n      slt\n        /* \"#utility.yul\":8421:8543   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":8462:8541   */\n      tag_432\n      tag_277\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8421:8543   */\n    tag_431:\n        /* \"#utility.yul\":8579:8585   */\n      dup2\n        /* \"#utility.yul\":8566:8586   */\n      calldataload\n        /* \"#utility.yul\":8604:8683   */\n      tag_433\n        /* \"#utility.yul\":8679:8682   */\n      dup5\n        /* \"#utility.yul\":8671:8677   */\n      dup3\n        /* \"#utility.yul\":8664:8668   */\n      0x20\n        /* \"#utility.yul\":8656:8662   */\n      dup7\n        /* \"#utility.yul\":8652:8669   */\n      add\n        /* \"#utility.yul\":8604:8683   */\n      tag_284\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8595:8683   */\n      swap2\n      pop\n        /* \"#utility.yul\":8411:8689   */\n      pop\n        /* \"#utility.yul\":8349:8689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8695:9494   */\n    tag_80:\n        /* \"#utility.yul\":8782:8788   */\n      0x00\n        /* \"#utility.yul\":8790:8796   */\n      0x00\n        /* \"#utility.yul\":8798:8804   */\n      0x00\n        /* \"#utility.yul\":8847:8849   */\n      0x60\n        /* \"#utility.yul\":8835:8844   */\n      dup5\n        /* \"#utility.yul\":8826:8833   */\n      dup7\n        /* \"#utility.yul\":8822:8845   */\n      sub\n        /* \"#utility.yul\":8818:8850   */\n      slt\n        /* \"#utility.yul\":8815:8934   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_436\n      tag_258\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":8815:8934   */\n    tag_435:\n        /* \"#utility.yul\":8973:8974   */\n      0x00\n        /* \"#utility.yul\":8998:9051   */\n      tag_437\n        /* \"#utility.yul\":9043:9050   */\n      dup7\n        /* \"#utility.yul\":9034:9040   */\n      dup3\n        /* \"#utility.yul\":9023:9032   */\n      dup8\n        /* \"#utility.yul\":9019:9041   */\n      add\n        /* \"#utility.yul\":8998:9051   */\n      tag_266\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8988:9051   */\n      swap4\n      pop\n        /* \"#utility.yul\":8944:9061   */\n      pop\n        /* \"#utility.yul\":9100:9102   */\n      0x20\n        /* \"#utility.yul\":9126:9179   */\n      tag_438\n        /* \"#utility.yul\":9171:9178   */\n      dup7\n        /* \"#utility.yul\":9162:9168   */\n      dup3\n        /* \"#utility.yul\":9151:9160   */\n      dup8\n        /* \"#utility.yul\":9147:9169   */\n      add\n        /* \"#utility.yul\":9126:9179   */\n      tag_266\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":9116:9179   */\n      swap3\n      pop\n        /* \"#utility.yul\":9071:9189   */\n      pop\n        /* \"#utility.yul\":9256:9258   */\n      0x40\n        /* \"#utility.yul\":9245:9254   */\n      dup5\n        /* \"#utility.yul\":9241:9259   */\n      add\n        /* \"#utility.yul\":9228:9260   */\n      calldataload\n        /* \"#utility.yul\":9287:9305   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9279:9285   */\n      dup2\n        /* \"#utility.yul\":9276:9306   */\n      gt\n        /* \"#utility.yul\":9273:9390   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":9309:9388   */\n      tag_440\n      tag_259\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":9273:9390   */\n    tag_439:\n        /* \"#utility.yul\":9414:9477   */\n      tag_441\n        /* \"#utility.yul\":9469:9476   */\n      dup7\n        /* \"#utility.yul\":9460:9466   */\n      dup3\n        /* \"#utility.yul\":9449:9458   */\n      dup8\n        /* \"#utility.yul\":9445:9467   */\n      add\n        /* \"#utility.yul\":9414:9477   */\n      tag_285\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":9404:9477   */\n      swap2\n      pop\n        /* \"#utility.yul\":9199:9487   */\n      pop\n        /* \"#utility.yul\":8695:9494   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9500:9675   */\n    tag_286:\n        /* \"#utility.yul\":9640:9667   */\n      0x4e6f742077697468696e20726f756e64206475726174696f6e00000000000000\n        /* \"#utility.yul\":9636:9637   */\n      0x00\n        /* \"#utility.yul\":9628:9634   */\n      dup3\n        /* \"#utility.yul\":9624:9638   */\n      add\n        /* \"#utility.yul\":9617:9668   */\n      mstore\n        /* \"#utility.yul\":9500:9675   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9681:10047   */\n    tag_287:\n        /* \"#utility.yul\":9823:9826   */\n      0x00\n        /* \"#utility.yul\":9844:9911   */\n      tag_444\n        /* \"#utility.yul\":9908:9910   */\n      0x19\n        /* \"#utility.yul\":9903:9906   */\n      dup4\n        /* \"#utility.yul\":9844:9911   */\n      tag_273\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":9837:9911   */\n      swap2\n      pop\n        /* \"#utility.yul\":9920:10013   */\n      tag_445\n        /* \"#utility.yul\":10009:10012   */\n      dup3\n        /* \"#utility.yul\":9920:10013   */\n      tag_286\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":10038:10040   */\n      0x20\n        /* \"#utility.yul\":10033:10036   */\n      dup3\n        /* \"#utility.yul\":10029:10041   */\n      add\n        /* \"#utility.yul\":10022:10041   */\n      swap1\n      pop\n        /* \"#utility.yul\":9681:10047   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10053:10472   */\n    tag_94:\n        /* \"#utility.yul\":10219:10223   */\n      0x00\n        /* \"#utility.yul\":10257:10259   */\n      0x20\n        /* \"#utility.yul\":10246:10255   */\n      dup3\n        /* \"#utility.yul\":10242:10260   */\n      add\n        /* \"#utility.yul\":10234:10260   */\n      swap1\n      pop\n        /* \"#utility.yul\":10306:10315   */\n      dup2\n        /* \"#utility.yul\":10300:10304   */\n      dup2\n        /* \"#utility.yul\":10296:10316   */\n      sub\n        /* \"#utility.yul\":10292:10293   */\n      0x00\n        /* \"#utility.yul\":10281:10290   */\n      dup4\n        /* \"#utility.yul\":10277:10294   */\n      add\n        /* \"#utility.yul\":10270:10317   */\n      mstore\n        /* \"#utility.yul\":10334:10465   */\n      tag_447\n        /* \"#utility.yul\":10460:10464   */\n      dup2\n        /* \"#utility.yul\":10334:10465   */\n      tag_287\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":10326:10465   */\n      swap1\n      pop\n        /* \"#utility.yul\":10053:10472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10478:10647   */\n    tag_288:\n        /* \"#utility.yul\":10618:10639   */\n      0x4e6f20636c61696d61626c6520616d6f756e7400000000000000000000000000\n        /* \"#utility.yul\":10614:10615   */\n      0x00\n        /* \"#utility.yul\":10606:10612   */\n      dup3\n        /* \"#utility.yul\":10602:10616   */\n      add\n        /* \"#utility.yul\":10595:10640   */\n      mstore\n        /* \"#utility.yul\":10478:10647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10653:11019   */\n    tag_289:\n        /* \"#utility.yul\":10795:10798   */\n      0x00\n        /* \"#utility.yul\":10816:10883   */\n      tag_450\n        /* \"#utility.yul\":10880:10882   */\n      0x13\n        /* \"#utility.yul\":10875:10878   */\n      dup4\n        /* \"#utility.yul\":10816:10883   */\n      tag_273\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":10809:10883   */\n      swap2\n      pop\n        /* \"#utility.yul\":10892:10985   */\n      tag_451\n        /* \"#utility.yul\":10981:10984   */\n      dup3\n        /* \"#utility.yul\":10892:10985   */\n      tag_288\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":11010:11012   */\n      0x20\n        /* \"#utility.yul\":11005:11008   */\n      dup3\n        /* \"#utility.yul\":11001:11013   */\n      add\n        /* \"#utility.yul\":10994:11013   */\n      swap1\n      pop\n        /* \"#utility.yul\":10653:11019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11025:11444   */\n    tag_97:\n        /* \"#utility.yul\":11191:11195   */\n      0x00\n        /* \"#utility.yul\":11229:11231   */\n      0x20\n        /* \"#utility.yul\":11218:11227   */\n      dup3\n        /* \"#utility.yul\":11214:11232   */\n      add\n        /* \"#utility.yul\":11206:11232   */\n      swap1\n      pop\n        /* \"#utility.yul\":11278:11287   */\n      dup2\n        /* \"#utility.yul\":11272:11276   */\n      dup2\n        /* \"#utility.yul\":11268:11288   */\n      sub\n        /* \"#utility.yul\":11264:11265   */\n      0x00\n        /* \"#utility.yul\":11253:11262   */\n      dup4\n        /* \"#utility.yul\":11249:11266   */\n      add\n        /* \"#utility.yul\":11242:11289   */\n      mstore\n        /* \"#utility.yul\":11306:11437   */\n      tag_453\n        /* \"#utility.yul\":11432:11436   */\n      dup2\n        /* \"#utility.yul\":11306:11437   */\n      tag_289\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11298:11437   */\n      swap1\n      pop\n        /* \"#utility.yul\":11025:11444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11450:11625   */\n    tag_290:\n        /* \"#utility.yul\":11590:11617   */\n      0x496e73756666696369656e742066756e647320696e206a617200000000000000\n        /* \"#utility.yul\":11586:11587   */\n      0x00\n        /* \"#utility.yul\":11578:11584   */\n      dup3\n        /* \"#utility.yul\":11574:11588   */\n      add\n        /* \"#utility.yul\":11567:11618   */\n      mstore\n        /* \"#utility.yul\":11450:11625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11631:11997   */\n    tag_291:\n        /* \"#utility.yul\":11773:11776   */\n      0x00\n        /* \"#utility.yul\":11794:11861   */\n      tag_456\n        /* \"#utility.yul\":11858:11860   */\n      0x19\n        /* \"#utility.yul\":11853:11856   */\n      dup4\n        /* \"#utility.yul\":11794:11861   */\n      tag_273\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":11787:11861   */\n      swap2\n      pop\n        /* \"#utility.yul\":11870:11963   */\n      tag_457\n        /* \"#utility.yul\":11959:11962   */\n      dup3\n        /* \"#utility.yul\":11870:11963   */\n      tag_290\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11988:11990   */\n      0x20\n        /* \"#utility.yul\":11983:11986   */\n      dup3\n        /* \"#utility.yul\":11979:11991   */\n      add\n        /* \"#utility.yul\":11972:11991   */\n      swap1\n      pop\n        /* \"#utility.yul\":11631:11997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12003:12422   */\n    tag_100:\n        /* \"#utility.yul\":12169:12173   */\n      0x00\n        /* \"#utility.yul\":12207:12209   */\n      0x20\n        /* \"#utility.yul\":12196:12205   */\n      dup3\n        /* \"#utility.yul\":12192:12210   */\n      add\n        /* \"#utility.yul\":12184:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":12256:12265   */\n      dup2\n        /* \"#utility.yul\":12250:12254   */\n      dup2\n        /* \"#utility.yul\":12246:12266   */\n      sub\n        /* \"#utility.yul\":12242:12243   */\n      0x00\n        /* \"#utility.yul\":12231:12240   */\n      dup4\n        /* \"#utility.yul\":12227:12244   */\n      add\n        /* \"#utility.yul\":12220:12267   */\n      mstore\n        /* \"#utility.yul\":12284:12415   */\n      tag_459\n        /* \"#utility.yul\":12410:12414   */\n      dup2\n        /* \"#utility.yul\":12284:12415   */\n      tag_291\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12276:12415   */\n      swap1\n      pop\n        /* \"#utility.yul\":12003:12422   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12428:12505   */\n    tag_292:\n        /* \"#utility.yul\":12465:12472   */\n      0x00\n        /* \"#utility.yul\":12494:12499   */\n      dup2\n        /* \"#utility.yul\":12483:12499   */\n      swap1\n      pop\n        /* \"#utility.yul\":12428:12505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12511:12629   */\n    tag_293:\n        /* \"#utility.yul\":12598:12622   */\n      tag_462\n        /* \"#utility.yul\":12616:12621   */\n      dup2\n        /* \"#utility.yul\":12598:12622   */\n      tag_292\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":12593:12596   */\n      dup3\n        /* \"#utility.yul\":12586:12623   */\n      mstore\n        /* \"#utility.yul\":12511:12629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12635:12967   */\n    tag_102:\n        /* \"#utility.yul\":12756:12760   */\n      0x00\n        /* \"#utility.yul\":12794:12796   */\n      0x40\n        /* \"#utility.yul\":12783:12792   */\n      dup3\n        /* \"#utility.yul\":12779:12797   */\n      add\n        /* \"#utility.yul\":12771:12797   */\n      swap1\n      pop\n        /* \"#utility.yul\":12807:12878   */\n      tag_464\n        /* \"#utility.yul\":12875:12876   */\n      0x00\n        /* \"#utility.yul\":12864:12873   */\n      dup4\n        /* \"#utility.yul\":12860:12877   */\n      add\n        /* \"#utility.yul\":12851:12857   */\n      dup6\n        /* \"#utility.yul\":12807:12878   */\n      tag_264\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":12888:12960   */\n      tag_465\n        /* \"#utility.yul\":12956:12958   */\n      0x20\n        /* \"#utility.yul\":12945:12954   */\n      dup4\n        /* \"#utility.yul\":12941:12959   */\n      add\n        /* \"#utility.yul\":12932:12938   */\n      dup5\n        /* \"#utility.yul\":12888:12960   */\n      tag_293\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":12635:12967   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12973:13116   */\n    tag_294:\n        /* \"#utility.yul\":13030:13035   */\n      0x00\n        /* \"#utility.yul\":13061:13067   */\n      dup2\n        /* \"#utility.yul\":13055:13068   */\n      mload\n        /* \"#utility.yul\":13046:13068   */\n      swap1\n      pop\n        /* \"#utility.yul\":13077:13110   */\n      tag_467\n        /* \"#utility.yul\":13104:13109   */\n      dup2\n        /* \"#utility.yul\":13077:13110   */\n      tag_265\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12973:13116   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13122:13473   */\n    tag_106:\n        /* \"#utility.yul\":13192:13198   */\n      0x00\n        /* \"#utility.yul\":13241:13243   */\n      0x20\n        /* \"#utility.yul\":13229:13238   */\n      dup3\n        /* \"#utility.yul\":13220:13227   */\n      dup5\n        /* \"#utility.yul\":13216:13239   */\n      sub\n        /* \"#utility.yul\":13212:13244   */\n      slt\n        /* \"#utility.yul\":13209:13328   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":13247:13326   */\n      tag_470\n      tag_258\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":13209:13328   */\n    tag_469:\n        /* \"#utility.yul\":13367:13368   */\n      0x00\n        /* \"#utility.yul\":13392:13456   */\n      tag_471\n        /* \"#utility.yul\":13448:13455   */\n      dup5\n        /* \"#utility.yul\":13439:13445   */\n      dup3\n        /* \"#utility.yul\":13428:13437   */\n      dup6\n        /* \"#utility.yul\":13424:13446   */\n      add\n        /* \"#utility.yul\":13392:13456   */\n      tag_294\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":13382:13456   */\n      swap2\n      pop\n        /* \"#utility.yul\":13338:13466   */\n      pop\n        /* \"#utility.yul\":13122:13473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13479:13653   */\n    tag_295:\n        /* \"#utility.yul\":13619:13645   */\n      0x496e73756666696369656e742054727573742073636f72650000000000000000\n        /* \"#utility.yul\":13615:13616   */\n      0x00\n        /* \"#utility.yul\":13607:13613   */\n      dup3\n        /* \"#utility.yul\":13603:13617   */\n      add\n        /* \"#utility.yul\":13596:13646   */\n      mstore\n        /* \"#utility.yul\":13479:13653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13659:14025   */\n    tag_296:\n        /* \"#utility.yul\":13801:13804   */\n      0x00\n        /* \"#utility.yul\":13822:13889   */\n      tag_474\n        /* \"#utility.yul\":13886:13888   */\n      0x18\n        /* \"#utility.yul\":13881:13884   */\n      dup4\n        /* \"#utility.yul\":13822:13889   */\n      tag_273\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":13815:13889   */\n      swap2\n      pop\n        /* \"#utility.yul\":13898:13991   */\n      tag_475\n        /* \"#utility.yul\":13987:13990   */\n      dup3\n        /* \"#utility.yul\":13898:13991   */\n      tag_295\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14016:14018   */\n      0x20\n        /* \"#utility.yul\":14011:14014   */\n      dup3\n        /* \"#utility.yul\":14007:14019   */\n      add\n        /* \"#utility.yul\":14000:14019   */\n      swap1\n      pop\n        /* \"#utility.yul\":13659:14025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14031:14450   */\n    tag_109:\n        /* \"#utility.yul\":14197:14201   */\n      0x00\n        /* \"#utility.yul\":14235:14237   */\n      0x20\n        /* \"#utility.yul\":14224:14233   */\n      dup3\n        /* \"#utility.yul\":14220:14238   */\n      add\n        /* \"#utility.yul\":14212:14238   */\n      swap1\n      pop\n        /* \"#utility.yul\":14284:14293   */\n      dup2\n        /* \"#utility.yul\":14278:14282   */\n      dup2\n        /* \"#utility.yul\":14274:14294   */\n      sub\n        /* \"#utility.yul\":14270:14271   */\n      0x00\n        /* \"#utility.yul\":14259:14268   */\n      dup4\n        /* \"#utility.yul\":14255:14272   */\n      add\n        /* \"#utility.yul\":14248:14295   */\n      mstore\n        /* \"#utility.yul\":14312:14443   */\n      tag_477\n        /* \"#utility.yul\":14438:14442   */\n      dup2\n        /* \"#utility.yul\":14312:14443   */\n      tag_296\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":14304:14443   */\n      swap1\n      pop\n        /* \"#utility.yul\":14031:14450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14456:14650   */\n    tag_111:\n        /* \"#utility.yul\":14496:14500   */\n      0x00\n        /* \"#utility.yul\":14516:14536   */\n      tag_479\n        /* \"#utility.yul\":14534:14535   */\n      dup3\n        /* \"#utility.yul\":14516:14536   */\n      tag_254\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":14511:14536   */\n      swap2\n      pop\n        /* \"#utility.yul\":14550:14570   */\n      tag_480\n        /* \"#utility.yul\":14568:14569   */\n      dup4\n        /* \"#utility.yul\":14550:14570   */\n      tag_254\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":14545:14570   */\n      swap3\n      pop\n        /* \"#utility.yul\":14594:14595   */\n      dup3\n        /* \"#utility.yul\":14591:14592   */\n      dup3\n        /* \"#utility.yul\":14587:14596   */\n      sub\n        /* \"#utility.yul\":14579:14596   */\n      swap1\n      pop\n        /* \"#utility.yul\":14618:14619   */\n      dup2\n        /* \"#utility.yul\":14612:14616   */\n      dup2\n        /* \"#utility.yul\":14609:14620   */\n      gt\n        /* \"#utility.yul\":14606:14643   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":14623:14641   */\n      tag_482\n      tag_255\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":14606:14643   */\n    tag_481:\n        /* \"#utility.yul\":14456:14650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14656:14803   */\n    tag_297:\n        /* \"#utility.yul\":14757:14768   */\n      0x00\n        /* \"#utility.yul\":14794:14797   */\n      dup2\n        /* \"#utility.yul\":14779:14797   */\n      swap1\n      pop\n        /* \"#utility.yul\":14656:14803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14809:14923   */\n    tag_298:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14929:15327   */\n    tag_299:\n        /* \"#utility.yul\":15088:15091   */\n      0x00\n        /* \"#utility.yul\":15109:15192   */\n      tag_486\n        /* \"#utility.yul\":15190:15191   */\n      0x00\n        /* \"#utility.yul\":15185:15188   */\n      dup4\n        /* \"#utility.yul\":15109:15192   */\n      tag_297\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":15102:15192   */\n      swap2\n      pop\n        /* \"#utility.yul\":15201:15294   */\n      tag_487\n        /* \"#utility.yul\":15290:15293   */\n      dup3\n        /* \"#utility.yul\":15201:15294   */\n      tag_298\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":15319:15320   */\n      0x00\n        /* \"#utility.yul\":15314:15317   */\n      dup3\n        /* \"#utility.yul\":15310:15321   */\n      add\n        /* \"#utility.yul\":15303:15321   */\n      swap1\n      pop\n        /* \"#utility.yul\":14929:15327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15333:15712   */\n    tag_114:\n        /* \"#utility.yul\":15517:15520   */\n      0x00\n        /* \"#utility.yul\":15539:15686   */\n      tag_489\n        /* \"#utility.yul\":15682:15685   */\n      dup3\n        /* \"#utility.yul\":15539:15686   */\n      tag_299\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":15532:15686   */\n      swap2\n      pop\n        /* \"#utility.yul\":15703:15706   */\n      dup2\n        /* \"#utility.yul\":15696:15706   */\n      swap1\n      pop\n        /* \"#utility.yul\":15333:15712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15718:15889   */\n    tag_300:\n        /* \"#utility.yul\":15858:15881   */\n      0x4574686572207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":15854:15855   */\n      0x00\n        /* \"#utility.yul\":15846:15852   */\n      dup3\n        /* \"#utility.yul\":15842:15856   */\n      add\n        /* \"#utility.yul\":15835:15882   */\n      mstore\n        /* \"#utility.yul\":15718:15889   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15895:16261   */\n    tag_301:\n        /* \"#utility.yul\":16037:16040   */\n      0x00\n        /* \"#utility.yul\":16058:16125   */\n      tag_492\n        /* \"#utility.yul\":16122:16124   */\n      0x15\n        /* \"#utility.yul\":16117:16120   */\n      dup4\n        /* \"#utility.yul\":16058:16125   */\n      tag_273\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":16051:16125   */\n      swap2\n      pop\n        /* \"#utility.yul\":16134:16227   */\n      tag_493\n        /* \"#utility.yul\":16223:16226   */\n      dup3\n        /* \"#utility.yul\":16134:16227   */\n      tag_300\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":16252:16254   */\n      0x20\n        /* \"#utility.yul\":16247:16250   */\n      dup3\n        /* \"#utility.yul\":16243:16255   */\n      add\n        /* \"#utility.yul\":16236:16255   */\n      swap1\n      pop\n        /* \"#utility.yul\":15895:16261   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16267:16686   */\n    tag_120:\n        /* \"#utility.yul\":16433:16437   */\n      0x00\n        /* \"#utility.yul\":16471:16473   */\n      0x20\n        /* \"#utility.yul\":16460:16469   */\n      dup3\n        /* \"#utility.yul\":16456:16474   */\n      add\n        /* \"#utility.yul\":16448:16474   */\n      swap1\n      pop\n        /* \"#utility.yul\":16520:16529   */\n      dup2\n        /* \"#utility.yul\":16514:16518   */\n      dup2\n        /* \"#utility.yul\":16510:16530   */\n      sub\n        /* \"#utility.yul\":16506:16507   */\n      0x00\n        /* \"#utility.yul\":16495:16504   */\n      dup4\n        /* \"#utility.yul\":16491:16508   */\n      add\n        /* \"#utility.yul\":16484:16531   */\n      mstore\n        /* \"#utility.yul\":16548:16679   */\n      tag_495\n        /* \"#utility.yul\":16674:16678   */\n      dup2\n        /* \"#utility.yul\":16548:16679   */\n      tag_301\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":16540:16679   */\n      swap1\n      pop\n        /* \"#utility.yul\":16267:16686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16692:16864   */\n    tag_302:\n        /* \"#utility.yul\":16832:16856   */\n      0x496e636f727265637420457468657220616d6f756e7400000000000000000000\n        /* \"#utility.yul\":16828:16829   */\n      0x00\n        /* \"#utility.yul\":16820:16826   */\n      dup3\n        /* \"#utility.yul\":16816:16830   */\n      add\n        /* \"#utility.yul\":16809:16857   */\n      mstore\n        /* \"#utility.yul\":16692:16864   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16870:17236   */\n    tag_303:\n        /* \"#utility.yul\":17012:17015   */\n      0x00\n        /* \"#utility.yul\":17033:17100   */\n      tag_498\n        /* \"#utility.yul\":17097:17099   */\n      0x16\n        /* \"#utility.yul\":17092:17095   */\n      dup4\n        /* \"#utility.yul\":17033:17100   */\n      tag_273\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":17026:17100   */\n      swap2\n      pop\n        /* \"#utility.yul\":17109:17202   */\n      tag_499\n        /* \"#utility.yul\":17198:17201   */\n      dup3\n        /* \"#utility.yul\":17109:17202   */\n      tag_302\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17227:17229   */\n      0x20\n        /* \"#utility.yul\":17222:17225   */\n      dup3\n        /* \"#utility.yul\":17218:17230   */\n      add\n        /* \"#utility.yul\":17211:17230   */\n      swap1\n      pop\n        /* \"#utility.yul\":16870:17236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17242:17661   */\n    tag_129:\n        /* \"#utility.yul\":17408:17412   */\n      0x00\n        /* \"#utility.yul\":17446:17448   */\n      0x20\n        /* \"#utility.yul\":17435:17444   */\n      dup3\n        /* \"#utility.yul\":17431:17449   */\n      add\n        /* \"#utility.yul\":17423:17449   */\n      swap1\n      pop\n        /* \"#utility.yul\":17495:17504   */\n      dup2\n        /* \"#utility.yul\":17489:17493   */\n      dup2\n        /* \"#utility.yul\":17485:17505   */\n      sub\n        /* \"#utility.yul\":17481:17482   */\n      0x00\n        /* \"#utility.yul\":17470:17479   */\n      dup4\n        /* \"#utility.yul\":17466:17483   */\n      add\n        /* \"#utility.yul\":17459:17506   */\n      mstore\n        /* \"#utility.yul\":17523:17654   */\n      tag_501\n        /* \"#utility.yul\":17649:17653   */\n      dup2\n        /* \"#utility.yul\":17523:17654   */\n      tag_303\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":17515:17654   */\n      swap1\n      pop\n        /* \"#utility.yul\":17242:17661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17667:17894   */\n    tag_304:\n        /* \"#utility.yul\":17807:17841   */\n      0x4465706f73697420616d6f756e74206d75737420626520677265617465722074\n        /* \"#utility.yul\":17803:17804   */\n      0x00\n        /* \"#utility.yul\":17795:17801   */\n      dup3\n        /* \"#utility.yul\":17791:17805   */\n      add\n        /* \"#utility.yul\":17784:17842   */\n      mstore\n        /* \"#utility.yul\":17876:17886   */\n      0x68616e207a65726f000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17871:17873   */\n      0x20\n        /* \"#utility.yul\":17863:17869   */\n      dup3\n        /* \"#utility.yul\":17859:17874   */\n      add\n        /* \"#utility.yul\":17852:17887   */\n      mstore\n        /* \"#utility.yul\":17667:17894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17900:18266   */\n    tag_305:\n        /* \"#utility.yul\":18042:18045   */\n      0x00\n        /* \"#utility.yul\":18063:18130   */\n      tag_504\n        /* \"#utility.yul\":18127:18129   */\n      0x28\n        /* \"#utility.yul\":18122:18125   */\n      dup4\n        /* \"#utility.yul\":18063:18130   */\n      tag_273\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":18056:18130   */\n      swap2\n      pop\n        /* \"#utility.yul\":18139:18232   */\n      tag_505\n        /* \"#utility.yul\":18228:18231   */\n      dup3\n        /* \"#utility.yul\":18139:18232   */\n      tag_304\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":18257:18259   */\n      0x40\n        /* \"#utility.yul\":18252:18255   */\n      dup3\n        /* \"#utility.yul\":18248:18260   */\n      add\n        /* \"#utility.yul\":18241:18260   */\n      swap1\n      pop\n        /* \"#utility.yul\":17900:18266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18272:18691   */\n    tag_133:\n        /* \"#utility.yul\":18438:18442   */\n      0x00\n        /* \"#utility.yul\":18476:18478   */\n      0x20\n        /* \"#utility.yul\":18465:18474   */\n      dup3\n        /* \"#utility.yul\":18461:18479   */\n      add\n        /* \"#utility.yul\":18453:18479   */\n      swap1\n      pop\n        /* \"#utility.yul\":18525:18534   */\n      dup2\n        /* \"#utility.yul\":18519:18523   */\n      dup2\n        /* \"#utility.yul\":18515:18535   */\n      sub\n        /* \"#utility.yul\":18511:18512   */\n      0x00\n        /* \"#utility.yul\":18500:18509   */\n      dup4\n        /* \"#utility.yul\":18496:18513   */\n      add\n        /* \"#utility.yul\":18489:18536   */\n      mstore\n        /* \"#utility.yul\":18553:18684   */\n      tag_507\n        /* \"#utility.yul\":18679:18683   */\n      dup2\n        /* \"#utility.yul\":18553:18684   */\n      tag_305\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":18545:18684   */\n      swap1\n      pop\n        /* \"#utility.yul\":18272:18691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18697:18782   */\n    tag_306:\n        /* \"#utility.yul\":18742:18749   */\n      0x00\n        /* \"#utility.yul\":18771:18776   */\n      dup2\n        /* \"#utility.yul\":18760:18776   */\n      swap1\n      pop\n        /* \"#utility.yul\":18697:18782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18788:18889   */\n    tag_307:\n        /* \"#utility.yul\":18824:18831   */\n      0x00\n        /* \"#utility.yul\":18864:18882   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18857:18862   */\n      dup3\n        /* \"#utility.yul\":18853:18883   */\n      and\n        /* \"#utility.yul\":18842:18883   */\n      swap1\n      pop\n        /* \"#utility.yul\":18788:18889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18895:19051   */\n    tag_308:\n        /* \"#utility.yul\":18952:18961   */\n      0x00\n        /* \"#utility.yul\":18985:19045   */\n      tag_511\n        /* \"#utility.yul\":19002:19044   */\n      tag_512\n        /* \"#utility.yul\":19011:19043   */\n      tag_513\n        /* \"#utility.yul\":19037:19042   */\n      dup5\n        /* \"#utility.yul\":19011:19043   */\n      tag_306\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":19002:19044   */\n      tag_267\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":18985:19045   */\n      tag_307\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":18972:19045   */\n      swap1\n      pop\n        /* \"#utility.yul\":18895:19051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19057:19202   */\n    tag_309:\n        /* \"#utility.yul\":19151:19195   */\n      tag_515\n        /* \"#utility.yul\":19189:19194   */\n      dup2\n        /* \"#utility.yul\":19151:19195   */\n      tag_308\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":19146:19149   */\n      dup3\n        /* \"#utility.yul\":19139:19196   */\n      mstore\n        /* \"#utility.yul\":19057:19202   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19208:19444   */\n    tag_151:\n        /* \"#utility.yul\":19308:19312   */\n      0x00\n        /* \"#utility.yul\":19346:19348   */\n      0x20\n        /* \"#utility.yul\":19335:19344   */\n      dup3\n        /* \"#utility.yul\":19331:19349   */\n      add\n        /* \"#utility.yul\":19323:19349   */\n      swap1\n      pop\n        /* \"#utility.yul\":19359:19437   */\n      tag_517\n        /* \"#utility.yul\":19434:19435   */\n      0x00\n        /* \"#utility.yul\":19423:19432   */\n      dup4\n        /* \"#utility.yul\":19419:19436   */\n      add\n        /* \"#utility.yul\":19410:19416   */\n      dup5\n        /* \"#utility.yul\":19359:19437   */\n      tag_309\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":19208:19444   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19450:19630   */\n    tag_310:\n        /* \"#utility.yul\":19498:19575   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19495:19496   */\n      0x00\n        /* \"#utility.yul\":19488:19576   */\n      mstore\n        /* \"#utility.yul\":19595:19599   */\n      0x22\n        /* \"#utility.yul\":19592:19593   */\n      0x04\n        /* \"#utility.yul\":19585:19600   */\n      mstore\n        /* \"#utility.yul\":19619:19623   */\n      0x24\n        /* \"#utility.yul\":19616:19617   */\n      0x00\n        /* \"#utility.yul\":19609:19624   */\n      revert\n        /* \"#utility.yul\":19636:19956   */\n    tag_159:\n        /* \"#utility.yul\":19680:19686   */\n      0x00\n        /* \"#utility.yul\":19717:19718   */\n      0x02\n        /* \"#utility.yul\":19711:19715   */\n      dup3\n        /* \"#utility.yul\":19707:19719   */\n      div\n        /* \"#utility.yul\":19697:19719   */\n      swap1\n      pop\n        /* \"#utility.yul\":19764:19765   */\n      0x01\n        /* \"#utility.yul\":19758:19762   */\n      dup3\n        /* \"#utility.yul\":19754:19766   */\n      and\n        /* \"#utility.yul\":19785:19803   */\n      dup1\n        /* \"#utility.yul\":19775:19856   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":19841:19845   */\n      0x7f\n        /* \"#utility.yul\":19833:19839   */\n      dup3\n        /* \"#utility.yul\":19829:19846   */\n      and\n        /* \"#utility.yul\":19819:19846   */\n      swap2\n      pop\n        /* \"#utility.yul\":19775:19856   */\n    tag_520:\n        /* \"#utility.yul\":19903:19905   */\n      0x20\n        /* \"#utility.yul\":19895:19901   */\n      dup3\n        /* \"#utility.yul\":19892:19906   */\n      lt\n        /* \"#utility.yul\":19872:19890   */\n      dup2\n        /* \"#utility.yul\":19869:19907   */\n      sub\n        /* \"#utility.yul\":19866:19950   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":19922:19940   */\n      tag_522\n      tag_310\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":19866:19950   */\n    tag_521:\n        /* \"#utility.yul\":19687:19956   */\n      pop\n        /* \"#utility.yul\":19636:19956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19962:20183   */\n    tag_311:\n        /* \"#utility.yul\":20102:20136   */\n      0x53746172742074696d65206d757374206265206265666f726520656e64207469\n        /* \"#utility.yul\":20098:20099   */\n      0x00\n        /* \"#utility.yul\":20090:20096   */\n      dup3\n        /* \"#utility.yul\":20086:20100   */\n      add\n        /* \"#utility.yul\":20079:20137   */\n      mstore\n        /* \"#utility.yul\":20171:20175   */\n      0x6d65000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20166:20168   */\n      0x20\n        /* \"#utility.yul\":20158:20164   */\n      dup3\n        /* \"#utility.yul\":20154:20169   */\n      add\n        /* \"#utility.yul\":20147:20176   */\n      mstore\n        /* \"#utility.yul\":19962:20183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20189:20555   */\n    tag_312:\n        /* \"#utility.yul\":20331:20334   */\n      0x00\n        /* \"#utility.yul\":20352:20419   */\n      tag_525\n        /* \"#utility.yul\":20416:20418   */\n      0x22\n        /* \"#utility.yul\":20411:20414   */\n      dup4\n        /* \"#utility.yul\":20352:20419   */\n      tag_273\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":20345:20419   */\n      swap2\n      pop\n        /* \"#utility.yul\":20428:20521   */\n      tag_526\n        /* \"#utility.yul\":20517:20520   */\n      dup3\n        /* \"#utility.yul\":20428:20521   */\n      tag_311\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":20546:20548   */\n      0x40\n        /* \"#utility.yul\":20541:20544   */\n      dup3\n        /* \"#utility.yul\":20537:20549   */\n      add\n        /* \"#utility.yul\":20530:20549   */\n      swap1\n      pop\n        /* \"#utility.yul\":20189:20555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20561:20980   */\n    tag_176:\n        /* \"#utility.yul\":20727:20731   */\n      0x00\n        /* \"#utility.yul\":20765:20767   */\n      0x20\n        /* \"#utility.yul\":20754:20763   */\n      dup3\n        /* \"#utility.yul\":20750:20768   */\n      add\n        /* \"#utility.yul\":20742:20768   */\n      swap1\n      pop\n        /* \"#utility.yul\":20814:20823   */\n      dup2\n        /* \"#utility.yul\":20808:20812   */\n      dup2\n        /* \"#utility.yul\":20804:20824   */\n      sub\n        /* \"#utility.yul\":20800:20801   */\n      0x00\n        /* \"#utility.yul\":20789:20798   */\n      dup4\n        /* \"#utility.yul\":20785:20802   */\n      add\n        /* \"#utility.yul\":20778:20825   */\n      mstore\n        /* \"#utility.yul\":20842:20973   */\n      tag_528\n        /* \"#utility.yul\":20968:20972   */\n      dup2\n        /* \"#utility.yul\":20842:20973   */\n      tag_312\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20834:20973   */\n      swap1\n      pop\n        /* \"#utility.yul\":20561:20980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20986:21127   */\n    tag_313:\n        /* \"#utility.yul\":21035:21039   */\n      0x00\n        /* \"#utility.yul\":21058:21061   */\n      dup2\n        /* \"#utility.yul\":21050:21061   */\n      swap1\n      pop\n        /* \"#utility.yul\":21081:21084   */\n      dup2\n        /* \"#utility.yul\":21078:21079   */\n      0x00\n        /* \"#utility.yul\":21071:21085   */\n      mstore\n        /* \"#utility.yul\":21115:21119   */\n      0x20\n        /* \"#utility.yul\":21112:21113   */\n      0x00\n        /* \"#utility.yul\":21102:21120   */\n      keccak256\n        /* \"#utility.yul\":21094:21120   */\n      swap1\n      pop\n        /* \"#utility.yul\":20986:21127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21133:21226   */\n    tag_314:\n        /* \"#utility.yul\":21170:21176   */\n      0x00\n        /* \"#utility.yul\":21217:21219   */\n      0x20\n        /* \"#utility.yul\":21212:21214   */\n      0x1f\n        /* \"#utility.yul\":21205:21210   */\n      dup4\n        /* \"#utility.yul\":21201:21215   */\n      add\n        /* \"#utility.yul\":21197:21220   */\n      div\n        /* \"#utility.yul\":21187:21220   */\n      swap1\n      pop\n        /* \"#utility.yul\":21133:21226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21232:21339   */\n    tag_315:\n        /* \"#utility.yul\":21276:21284   */\n      0x00\n        /* \"#utility.yul\":21326:21331   */\n      dup3\n        /* \"#utility.yul\":21320:21324   */\n      dup3\n        /* \"#utility.yul\":21316:21332   */\n      shl\n        /* \"#utility.yul\":21295:21332   */\n      swap1\n      pop\n        /* \"#utility.yul\":21232:21339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21345:21738   */\n    tag_316:\n        /* \"#utility.yul\":21414:21420   */\n      0x00\n        /* \"#utility.yul\":21464:21465   */\n      0x08\n        /* \"#utility.yul\":21452:21462   */\n      dup4\n        /* \"#utility.yul\":21448:21466   */\n      mul\n        /* \"#utility.yul\":21487:21584   */\n      tag_533\n        /* \"#utility.yul\":21517:21583   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21506:21515   */\n      dup3\n        /* \"#utility.yul\":21487:21584   */\n      tag_315\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":21605:21644   */\n      tag_534\n        /* \"#utility.yul\":21635:21643   */\n      dup7\n        /* \"#utility.yul\":21624:21633   */\n      dup4\n        /* \"#utility.yul\":21605:21644   */\n      tag_315\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21593:21644   */\n      swap6\n      pop\n        /* \"#utility.yul\":21677:21681   */\n      dup1\n        /* \"#utility.yul\":21673:21682   */\n      not\n        /* \"#utility.yul\":21666:21671   */\n      dup5\n        /* \"#utility.yul\":21662:21683   */\n      and\n        /* \"#utility.yul\":21653:21683   */\n      swap4\n      pop\n        /* \"#utility.yul\":21726:21730   */\n      dup1\n        /* \"#utility.yul\":21716:21724   */\n      dup7\n        /* \"#utility.yul\":21712:21731   */\n      and\n        /* \"#utility.yul\":21705:21710   */\n      dup5\n        /* \"#utility.yul\":21702:21732   */\n      or\n        /* \"#utility.yul\":21692:21732   */\n      swap3\n      pop\n        /* \"#utility.yul\":21421:21738   */\n      pop\n      pop\n        /* \"#utility.yul\":21345:21738   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21744:21886   */\n    tag_317:\n        /* \"#utility.yul\":21794:21803   */\n      0x00\n        /* \"#utility.yul\":21827:21880   */\n      tag_536\n        /* \"#utility.yul\":21845:21879   */\n      tag_537\n        /* \"#utility.yul\":21854:21878   */\n      tag_538\n        /* \"#utility.yul\":21872:21877   */\n      dup5\n        /* \"#utility.yul\":21854:21878   */\n      tag_254\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":21845:21879   */\n      tag_267\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":21827:21880   */\n      tag_254\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":21814:21880   */\n      swap1\n      pop\n        /* \"#utility.yul\":21744:21886   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21892:21967   */\n    tag_318:\n        /* \"#utility.yul\":21935:21938   */\n      0x00\n        /* \"#utility.yul\":21956:21961   */\n      dup2\n        /* \"#utility.yul\":21949:21961   */\n      swap1\n      pop\n        /* \"#utility.yul\":21892:21967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21973:22242   */\n    tag_319:\n        /* \"#utility.yul\":22083:22122   */\n      tag_541\n        /* \"#utility.yul\":22114:22121   */\n      dup4\n        /* \"#utility.yul\":22083:22122   */\n      tag_317\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":22144:22235   */\n      tag_542\n        /* \"#utility.yul\":22193:22234   */\n      tag_543\n        /* \"#utility.yul\":22217:22233   */\n      dup3\n        /* \"#utility.yul\":22193:22234   */\n      tag_318\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":22185:22191   */\n      dup5\n        /* \"#utility.yul\":22178:22182   */\n      dup5\n        /* \"#utility.yul\":22172:22183   */\n      sload\n        /* \"#utility.yul\":22144:22235   */\n      tag_316\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":22138:22142   */\n      dup3\n        /* \"#utility.yul\":22131:22236   */\n      sstore\n        /* \"#utility.yul\":22049:22242   */\n      pop\n        /* \"#utility.yul\":21973:22242   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22248:22321   */\n    tag_320:\n        /* \"#utility.yul\":22293:22296   */\n      0x00\n        /* \"#utility.yul\":22314:22315   */\n      0x00\n        /* \"#utility.yul\":22307:22315   */\n      swap1\n      pop\n        /* \"#utility.yul\":22248:22321   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":22327:22516   */\n    tag_321:\n        /* \"#utility.yul\":22404:22436   */\n      tag_546\n      tag_320\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":22445:22510   */\n      tag_547\n        /* \"#utility.yul\":22503:22509   */\n      dup2\n        /* \"#utility.yul\":22495:22501   */\n      dup5\n        /* \"#utility.yul\":22489:22493   */\n      dup5\n        /* \"#utility.yul\":22445:22510   */\n      tag_319\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":22380:22516   */\n      pop\n        /* \"#utility.yul\":22327:22516   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22522:22708   */\n    tag_322:\n        /* \"#utility.yul\":22582:22702   */\n    tag_549:\n        /* \"#utility.yul\":22599:22602   */\n      dup2\n        /* \"#utility.yul\":22592:22597   */\n      dup2\n        /* \"#utility.yul\":22589:22603   */\n      lt\n        /* \"#utility.yul\":22582:22702   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":22653:22692   */\n      tag_552\n        /* \"#utility.yul\":22690:22691   */\n      0x00\n        /* \"#utility.yul\":22683:22688   */\n      dup3\n        /* \"#utility.yul\":22653:22692   */\n      tag_321\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":22626:22627   */\n      0x01\n        /* \"#utility.yul\":22619:22624   */\n      dup2\n        /* \"#utility.yul\":22615:22628   */\n      add\n        /* \"#utility.yul\":22606:22628   */\n      swap1\n      pop\n        /* \"#utility.yul\":22582:22702   */\n      jump(tag_549)\n    tag_551:\n        /* \"#utility.yul\":22522:22708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22714:23257   */\n    tag_323:\n        /* \"#utility.yul\":22815:22817   */\n      0x1f\n        /* \"#utility.yul\":22810:22813   */\n      dup3\n        /* \"#utility.yul\":22807:22818   */\n      gt\n        /* \"#utility.yul\":22804:23250   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":22849:22887   */\n      tag_555\n        /* \"#utility.yul\":22881:22886   */\n      dup2\n        /* \"#utility.yul\":22849:22887   */\n      tag_313\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":22933:22962   */\n      tag_556\n        /* \"#utility.yul\":22951:22961   */\n      dup5\n        /* \"#utility.yul\":22933:22962   */\n      tag_314\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":22923:22931   */\n      dup2\n        /* \"#utility.yul\":22919:22963   */\n      add\n        /* \"#utility.yul\":23116:23118   */\n      0x20\n        /* \"#utility.yul\":23104:23114   */\n      dup6\n        /* \"#utility.yul\":23101:23119   */\n      lt\n        /* \"#utility.yul\":23098:23147   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":23137:23145   */\n      dup2\n        /* \"#utility.yul\":23122:23145   */\n      swap1\n      pop\n        /* \"#utility.yul\":23098:23147   */\n    tag_557:\n        /* \"#utility.yul\":23160:23240   */\n      tag_558\n        /* \"#utility.yul\":23216:23238   */\n      tag_559\n        /* \"#utility.yul\":23234:23237   */\n      dup6\n        /* \"#utility.yul\":23216:23238   */\n      tag_314\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":23206:23214   */\n      dup4\n        /* \"#utility.yul\":23202:23239   */\n      add\n        /* \"#utility.yul\":23189:23200   */\n      dup3\n        /* \"#utility.yul\":23160:23240   */\n      tag_322\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":22819:23250   */\n      pop\n      pop\n        /* \"#utility.yul\":22804:23250   */\n    tag_554:\n        /* \"#utility.yul\":22714:23257   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23263:23380   */\n    tag_324:\n        /* \"#utility.yul\":23317:23325   */\n      0x00\n        /* \"#utility.yul\":23367:23372   */\n      dup3\n        /* \"#utility.yul\":23361:23365   */\n      dup3\n        /* \"#utility.yul\":23357:23373   */\n      shr\n        /* \"#utility.yul\":23336:23373   */\n      swap1\n      pop\n        /* \"#utility.yul\":23263:23380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23386:23555   */\n    tag_325:\n        /* \"#utility.yul\":23430:23436   */\n      0x00\n        /* \"#utility.yul\":23463:23514   */\n      tag_562\n        /* \"#utility.yul\":23511:23512   */\n      0x00\n        /* \"#utility.yul\":23507:23513   */\n      not\n        /* \"#utility.yul\":23499:23504   */\n      dup5\n        /* \"#utility.yul\":23496:23497   */\n      0x08\n        /* \"#utility.yul\":23492:23505   */\n      mul\n        /* \"#utility.yul\":23463:23514   */\n      tag_324\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":23459:23515   */\n      not\n        /* \"#utility.yul\":23544:23548   */\n      dup1\n        /* \"#utility.yul\":23538:23542   */\n      dup4\n        /* \"#utility.yul\":23534:23549   */\n      and\n        /* \"#utility.yul\":23524:23549   */\n      swap2\n      pop\n        /* \"#utility.yul\":23437:23555   */\n      pop\n        /* \"#utility.yul\":23386:23555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23560:23855   */\n    tag_326:\n        /* \"#utility.yul\":23636:23640   */\n      0x00\n        /* \"#utility.yul\":23782:23811   */\n      tag_564\n        /* \"#utility.yul\":23807:23810   */\n      dup4\n        /* \"#utility.yul\":23801:23805   */\n      dup4\n        /* \"#utility.yul\":23782:23811   */\n      tag_325\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":23774:23811   */\n      swap2\n      pop\n        /* \"#utility.yul\":23844:23847   */\n      dup3\n        /* \"#utility.yul\":23841:23842   */\n      0x02\n        /* \"#utility.yul\":23837:23848   */\n      mul\n        /* \"#utility.yul\":23831:23835   */\n      dup3\n        /* \"#utility.yul\":23828:23849   */\n      or\n        /* \"#utility.yul\":23820:23849   */\n      swap1\n      pop\n        /* \"#utility.yul\":23560:23855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23860:25255   */\n    tag_178:\n        /* \"#utility.yul\":23977:24014   */\n      tag_566\n        /* \"#utility.yul\":24010:24013   */\n      dup3\n        /* \"#utility.yul\":23977:24014   */\n      tag_272\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":24079:24097   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24071:24077   */\n      dup2\n        /* \"#utility.yul\":24068:24098   */\n      gt\n        /* \"#utility.yul\":24065:24121   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":24101:24119   */\n      tag_568\n      tag_279\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":24065:24121   */\n    tag_567:\n        /* \"#utility.yul\":24145:24183   */\n      tag_569\n        /* \"#utility.yul\":24177:24181   */\n      dup3\n        /* \"#utility.yul\":24171:24182   */\n      sload\n        /* \"#utility.yul\":24145:24183   */\n      tag_159\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":24230:24297   */\n      tag_570\n        /* \"#utility.yul\":24290:24296   */\n      dup3\n        /* \"#utility.yul\":24282:24288   */\n      dup3\n        /* \"#utility.yul\":24276:24280   */\n      dup6\n        /* \"#utility.yul\":24230:24297   */\n      tag_323\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":24324:24325   */\n      0x00\n        /* \"#utility.yul\":24348:24352   */\n      0x20\n        /* \"#utility.yul\":24335:24352   */\n      swap1\n      pop\n        /* \"#utility.yul\":24380:24382   */\n      0x1f\n        /* \"#utility.yul\":24372:24378   */\n      dup4\n        /* \"#utility.yul\":24369:24383   */\n      gt\n        /* \"#utility.yul\":24397:24398   */\n      0x01\n        /* \"#utility.yul\":24392:25010   */\n      dup2\n      eq\n      tag_572\n      jumpi\n        /* \"#utility.yul\":25054:25055   */\n      0x00\n        /* \"#utility.yul\":25071:25077   */\n      dup5\n        /* \"#utility.yul\":25068:25145   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":25120:25129   */\n      dup3\n        /* \"#utility.yul\":25115:25118   */\n      dup8\n        /* \"#utility.yul\":25111:25130   */\n      add\n        /* \"#utility.yul\":25105:25131   */\n      mload\n        /* \"#utility.yul\":25096:25131   */\n      swap1\n      pop\n        /* \"#utility.yul\":25068:25145   */\n    tag_573:\n        /* \"#utility.yul\":25171:25238   */\n      tag_574\n        /* \"#utility.yul\":25231:25237   */\n      dup6\n        /* \"#utility.yul\":25224:25229   */\n      dup3\n        /* \"#utility.yul\":25171:25238   */\n      tag_326\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":25165:25169   */\n      dup7\n        /* \"#utility.yul\":25158:25239   */\n      sstore\n        /* \"#utility.yul\":25027:25249   */\n      pop\n        /* \"#utility.yul\":24362:25249   */\n      jump(tag_571)\n        /* \"#utility.yul\":24392:25010   */\n    tag_572:\n        /* \"#utility.yul\":24444:24448   */\n      0x1f\n        /* \"#utility.yul\":24440:24449   */\n      not\n        /* \"#utility.yul\":24432:24438   */\n      dup5\n        /* \"#utility.yul\":24428:24450   */\n      and\n        /* \"#utility.yul\":24478:24515   */\n      tag_575\n        /* \"#utility.yul\":24510:24514   */\n      dup7\n        /* \"#utility.yul\":24478:24515   */\n      tag_313\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":24537:24538   */\n      0x00\n        /* \"#utility.yul\":24551:24759   */\n    tag_576:\n        /* \"#utility.yul\":24565:24572   */\n      dup3\n        /* \"#utility.yul\":24562:24563   */\n      dup2\n        /* \"#utility.yul\":24559:24573   */\n      lt\n        /* \"#utility.yul\":24551:24759   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":24644:24653   */\n      dup5\n        /* \"#utility.yul\":24639:24642   */\n      dup10\n        /* \"#utility.yul\":24635:24654   */\n      add\n        /* \"#utility.yul\":24629:24655   */\n      mload\n        /* \"#utility.yul\":24621:24627   */\n      dup3\n        /* \"#utility.yul\":24614:24656   */\n      sstore\n        /* \"#utility.yul\":24695:24696   */\n      0x01\n        /* \"#utility.yul\":24687:24693   */\n      dup3\n        /* \"#utility.yul\":24683:24697   */\n      add\n        /* \"#utility.yul\":24673:24697   */\n      swap2\n      pop\n        /* \"#utility.yul\":24742:24744   */\n      0x20\n        /* \"#utility.yul\":24731:24740   */\n      dup6\n        /* \"#utility.yul\":24727:24745   */\n      add\n        /* \"#utility.yul\":24714:24745   */\n      swap5\n      pop\n        /* \"#utility.yul\":24588:24592   */\n      0x20\n        /* \"#utility.yul\":24585:24586   */\n      dup2\n        /* \"#utility.yul\":24581:24593   */\n      add\n        /* \"#utility.yul\":24576:24593   */\n      swap1\n      pop\n        /* \"#utility.yul\":24551:24759   */\n      jump(tag_576)\n    tag_578:\n        /* \"#utility.yul\":24787:24793   */\n      dup7\n        /* \"#utility.yul\":24778:24785   */\n      dup4\n        /* \"#utility.yul\":24775:24794   */\n      lt\n        /* \"#utility.yul\":24772:24951   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":24845:24854   */\n      dup5\n        /* \"#utility.yul\":24840:24843   */\n      dup10\n        /* \"#utility.yul\":24836:24855   */\n      add\n        /* \"#utility.yul\":24830:24856   */\n      mload\n        /* \"#utility.yul\":24888:24936   */\n      tag_580\n        /* \"#utility.yul\":24930:24934   */\n      0x1f\n        /* \"#utility.yul\":24922:24928   */\n      dup10\n        /* \"#utility.yul\":24918:24935   */\n      and\n        /* \"#utility.yul\":24907:24916   */\n      dup3\n        /* \"#utility.yul\":24888:24936   */\n      tag_325\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":24880:24886   */\n      dup4\n        /* \"#utility.yul\":24873:24937   */\n      sstore\n        /* \"#utility.yul\":24795:24951   */\n      pop\n        /* \"#utility.yul\":24772:24951   */\n    tag_579:\n        /* \"#utility.yul\":24997:24998   */\n      0x01\n        /* \"#utility.yul\":24993:24994   */\n      0x02\n        /* \"#utility.yul\":24985:24991   */\n      dup9\n        /* \"#utility.yul\":24981:24995   */\n      mul\n        /* \"#utility.yul\":24977:24999   */\n      add\n        /* \"#utility.yul\":24971:24975   */\n      dup9\n        /* \"#utility.yul\":24964:25000   */\n      sstore\n        /* \"#utility.yul\":24399:25010   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24362:25249   */\n    tag_571:\n      pop\n        /* \"#utility.yul\":23952:25255   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":23860:25255   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25261:25491   */\n    tag_327:\n        /* \"#utility.yul\":25401:25435   */\n      0x5769746864726177616c20616d6f756e74206d75737420626520677265617465\n        /* \"#utility.yul\":25397:25398   */\n      0x00\n        /* \"#utility.yul\":25389:25395   */\n      dup3\n        /* \"#utility.yul\":25385:25399   */\n      add\n        /* \"#utility.yul\":25378:25436   */\n      mstore\n        /* \"#utility.yul\":25470:25483   */\n      0x72207468616e207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25465:25467   */\n      0x20\n        /* \"#utility.yul\":25457:25463   */\n      dup3\n        /* \"#utility.yul\":25453:25468   */\n      add\n        /* \"#utility.yul\":25446:25484   */\n      mstore\n        /* \"#utility.yul\":25261:25491   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25497:25863   */\n    tag_328:\n        /* \"#utility.yul\":25639:25642   */\n      0x00\n        /* \"#utility.yul\":25660:25727   */\n      tag_583\n        /* \"#utility.yul\":25724:25726   */\n      0x2b\n        /* \"#utility.yul\":25719:25722   */\n      dup4\n        /* \"#utility.yul\":25660:25727   */\n      tag_273\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":25653:25727   */\n      swap2\n      pop\n        /* \"#utility.yul\":25736:25829   */\n      tag_584\n        /* \"#utility.yul\":25825:25828   */\n      dup3\n        /* \"#utility.yul\":25736:25829   */\n      tag_327\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":25854:25856   */\n      0x40\n        /* \"#utility.yul\":25849:25852   */\n      dup3\n        /* \"#utility.yul\":25845:25857   */\n      add\n        /* \"#utility.yul\":25838:25857   */\n      swap1\n      pop\n        /* \"#utility.yul\":25497:25863   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25869:26288   */\n    tag_191:\n        /* \"#utility.yul\":26035:26039   */\n      0x00\n        /* \"#utility.yul\":26073:26075   */\n      0x20\n        /* \"#utility.yul\":26062:26071   */\n      dup3\n        /* \"#utility.yul\":26058:26076   */\n      add\n        /* \"#utility.yul\":26050:26076   */\n      swap1\n      pop\n        /* \"#utility.yul\":26122:26131   */\n      dup2\n        /* \"#utility.yul\":26116:26120   */\n      dup2\n        /* \"#utility.yul\":26112:26132   */\n      sub\n        /* \"#utility.yul\":26108:26109   */\n      0x00\n        /* \"#utility.yul\":26097:26106   */\n      dup4\n        /* \"#utility.yul\":26093:26110   */\n      add\n        /* \"#utility.yul\":26086:26133   */\n      mstore\n        /* \"#utility.yul\":26150:26281   */\n      tag_586\n        /* \"#utility.yul\":26276:26280   */\n      dup2\n        /* \"#utility.yul\":26150:26281   */\n      tag_328\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":26142:26281   */\n      swap1\n      pop\n        /* \"#utility.yul\":25869:26288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26294:26462   */\n    tag_329:\n        /* \"#utility.yul\":26434:26454   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":26430:26431   */\n      0x00\n        /* \"#utility.yul\":26422:26428   */\n      dup3\n        /* \"#utility.yul\":26418:26432   */\n      add\n        /* \"#utility.yul\":26411:26455   */\n      mstore\n        /* \"#utility.yul\":26294:26462   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26468:26834   */\n    tag_330:\n        /* \"#utility.yul\":26610:26613   */\n      0x00\n        /* \"#utility.yul\":26631:26698   */\n      tag_589\n        /* \"#utility.yul\":26695:26697   */\n      0x12\n        /* \"#utility.yul\":26690:26693   */\n      dup4\n        /* \"#utility.yul\":26631:26698   */\n      tag_273\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":26624:26698   */\n      swap2\n      pop\n        /* \"#utility.yul\":26707:26800   */\n      tag_590\n        /* \"#utility.yul\":26796:26799   */\n      dup3\n        /* \"#utility.yul\":26707:26800   */\n      tag_329\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":26825:26827   */\n      0x20\n        /* \"#utility.yul\":26820:26823   */\n      dup3\n        /* \"#utility.yul\":26816:26828   */\n      add\n        /* \"#utility.yul\":26809:26828   */\n      swap1\n      pop\n        /* \"#utility.yul\":26468:26834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26840:27259   */\n    tag_194:\n        /* \"#utility.yul\":27006:27010   */\n      0x00\n        /* \"#utility.yul\":27044:27046   */\n      0x20\n        /* \"#utility.yul\":27033:27042   */\n      dup3\n        /* \"#utility.yul\":27029:27047   */\n      add\n        /* \"#utility.yul\":27021:27047   */\n      swap1\n      pop\n        /* \"#utility.yul\":27093:27102   */\n      dup2\n        /* \"#utility.yul\":27087:27091   */\n      dup2\n        /* \"#utility.yul\":27083:27103   */\n      sub\n        /* \"#utility.yul\":27079:27080   */\n      0x00\n        /* \"#utility.yul\":27068:27077   */\n      dup4\n        /* \"#utility.yul\":27064:27081   */\n      add\n        /* \"#utility.yul\":27057:27104   */\n      mstore\n        /* \"#utility.yul\":27121:27252   */\n      tag_592\n        /* \"#utility.yul\":27247:27251   */\n      dup2\n        /* \"#utility.yul\":27121:27252   */\n      tag_330\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":27113:27252   */\n      swap1\n      pop\n        /* \"#utility.yul\":26840:27259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27265:27597   */\n    tag_212:\n        /* \"#utility.yul\":27386:27390   */\n      0x00\n        /* \"#utility.yul\":27424:27426   */\n      0x40\n        /* \"#utility.yul\":27413:27422   */\n      dup3\n        /* \"#utility.yul\":27409:27427   */\n      add\n        /* \"#utility.yul\":27401:27427   */\n      swap1\n      pop\n        /* \"#utility.yul\":27437:27508   */\n      tag_594\n        /* \"#utility.yul\":27505:27506   */\n      0x00\n        /* \"#utility.yul\":27494:27503   */\n      dup4\n        /* \"#utility.yul\":27490:27507   */\n      add\n        /* \"#utility.yul\":27481:27487   */\n      dup6\n        /* \"#utility.yul\":27437:27508   */\n      tag_264\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":27518:27590   */\n      tag_595\n        /* \"#utility.yul\":27586:27588   */\n      0x20\n        /* \"#utility.yul\":27575:27584   */\n      dup4\n        /* \"#utility.yul\":27571:27589   */\n      add\n        /* \"#utility.yul\":27562:27568   */\n      dup5\n        /* \"#utility.yul\":27518:27590   */\n      tag_256\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":27265:27597   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27603:28045   */\n    tag_217:\n        /* \"#utility.yul\":27752:27756   */\n      0x00\n        /* \"#utility.yul\":27790:27792   */\n      0x60\n        /* \"#utility.yul\":27779:27788   */\n      dup3\n        /* \"#utility.yul\":27775:27793   */\n      add\n        /* \"#utility.yul\":27767:27793   */\n      swap1\n      pop\n        /* \"#utility.yul\":27803:27874   */\n      tag_597\n        /* \"#utility.yul\":27871:27872   */\n      0x00\n        /* \"#utility.yul\":27860:27869   */\n      dup4\n        /* \"#utility.yul\":27856:27873   */\n      add\n        /* \"#utility.yul\":27847:27853   */\n      dup7\n        /* \"#utility.yul\":27803:27874   */\n      tag_264\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":27884:27956   */\n      tag_598\n        /* \"#utility.yul\":27952:27954   */\n      0x20\n        /* \"#utility.yul\":27941:27950   */\n      dup4\n        /* \"#utility.yul\":27937:27955   */\n      add\n        /* \"#utility.yul\":27928:27934   */\n      dup6\n        /* \"#utility.yul\":27884:27956   */\n      tag_264\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":27966:28038   */\n      tag_599\n        /* \"#utility.yul\":28034:28036   */\n      0x40\n        /* \"#utility.yul\":28023:28032   */\n      dup4\n        /* \"#utility.yul\":28019:28037   */\n      add\n        /* \"#utility.yul\":28010:28016   */\n      dup5\n        /* \"#utility.yul\":27966:28038   */\n      tag_256\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":27603:28045   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122024e3517b87c161f501a8357a9651f0890b168285d910a9f32225e2a049ddc17964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24C2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xBE9A7687 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3BF JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x30B JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x279 JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42CB1FBC EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1F5 JUMPI PUSH2 0x19F JUMP JUMPDEST CALLDATASIZE PUSH2 0x19F JUMPI CALLVALUE PUSH1 0x4 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0xC2D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0xFB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 ADD SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI POP PUSH1 0x1 DUP1 ADD SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F3 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x573 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x63608FAAE6311EF53110180034271A9B97988EBE924A609749732BC2F158407B SWAP1 POP PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAA5E295 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP3 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST GT PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82C JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x858 JUMP JUMPDEST PUSH2 0x857 CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1258 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x940 JUMPI DUP1 CALLVALUE EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x979 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AF CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12D7 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA75 PUSH2 0x1359 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xABD JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAF0 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAFE JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB82 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB8B DUP7 PUSH2 0x1380 JUMP JUMPDEST DUP7 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC24 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC35 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0xC3E PUSH0 PUSH2 0x141B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xC80 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCAC SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCF7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCCE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCF7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCDA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD0B PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD73 PUSH2 0x1394 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE62 PUSH2 0x1394 JUMP JUMPDEST DUP2 DUP4 LT PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF1F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xF34 PUSH2 0x1394 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9B SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAD DUP2 PUSH2 0x141B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFB8 PUSH2 0x1394 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF1 SWAP1 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B5 JUMPI PUSH0 PUSH2 0x1109 PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x112C SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x116B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A6 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x11E7 PUSH2 0x11C0 PUSH2 0xD01 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1258 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1207 PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x12D2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x128B SWAP3 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1513 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1353 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x130C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1513 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1388 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x15EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13BA PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1419 JUMPI PUSH2 0x13DD PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1424 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x154B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1566 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x15A8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15B6 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15F6 PUSH2 0x15AE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1666 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165D SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166F DUP2 PUSH2 0x141B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1682 PUSH2 0x1359 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16D7 DUP3 PUSH2 0x1697 JUMP JUMPDEST SWAP2 POP PUSH2 0x16E2 DUP4 PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FA JUMPI PUSH2 0x16F9 PUSH2 0x16A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1709 DUP2 PUSH2 0x1697 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1722 PUSH0 DUP4 ADD DUP5 PUSH2 0x1700 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1762 DUP3 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1772 DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP2 EQ PUSH2 0x177C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x178D DUP2 PUSH2 0x1769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A7 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B5 DUP5 DUP3 DUP6 ADD PUSH2 0x177F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C7 DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x17BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x1697 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180A DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1826 JUMPI PUSH2 0x1825 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1833 DUP6 DUP3 DUP7 ADD PUSH2 0x177F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1844 DUP6 DUP3 DUP7 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1871 DUP6 DUP3 DUP7 ADD PUSH2 0x177F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1882 DUP6 DUP3 DUP7 ADD PUSH2 0x177F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AF PUSH2 0x18AA PUSH2 0x18A5 DUP5 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C0 DUP3 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D1 DUP3 PUSH2 0x18B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E1 DUP2 PUSH2 0x18C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FA PUSH0 DUP4 ADD DUP5 PUSH2 0x18D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1942 DUP3 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x194C DUP2 DUP6 PUSH2 0x190A JUMP JUMPDEST SWAP4 POP PUSH2 0x195C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1928 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1983 PUSH0 DUP4 ADD DUP7 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x1990 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1700 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19A2 DUP2 DUP5 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C3 JUMPI PUSH2 0x19C2 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D0 DUP7 DUP3 DUP8 ADD PUSH2 0x177F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19E1 DUP7 DUP3 DUP8 ADD PUSH2 0x177F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19F2 DUP7 DUP3 DUP8 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A3A DUP3 PUSH2 0x1928 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A59 JUMPI PUSH2 0x1A58 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6B PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A77 DUP3 DUP3 PUSH2 0x1A31 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST PUSH2 0x1A9F DUP3 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACC PUSH2 0x1AC7 DUP5 PUSH2 0x1A7C JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x1A00 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF3 DUP5 DUP3 DUP6 PUSH2 0x1AAC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x19FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B1F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ABA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4C DUP7 DUP3 DUP8 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B5D DUP7 DUP3 DUP8 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1735 JUMP JUMPDEST JUMPDEST PUSH2 0x1B8A DUP7 DUP3 DUP8 ADD PUSH2 0x1AFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E6F742077697468696E20726F756E64206475726174696F6E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC8 PUSH1 0x19 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD3 DUP3 PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF5 DUP2 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C30 PUSH1 0x13 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3B DUP3 PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C5D DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C98 PUSH1 0x19 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP3 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC5 DUP2 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDE DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x1D04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D19 DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D34 JUMPI PUSH2 0x1D33 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D41 DUP5 DUP3 DUP6 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742054727573742073636F72650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7E PUSH1 0x18 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D89 DUP3 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAB DUP2 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBC DUP3 PUSH2 0x1697 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC7 DUP4 PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x16A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFD PUSH0 DUP4 PUSH2 0x1DE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E08 DUP3 PUSH2 0x1DEF JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1C DUP3 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5A PUSH1 0x15 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E65 DUP3 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E87 DUP2 PUSH2 0x1E4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC2 PUSH1 0x16 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECD DUP3 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EEF DUP2 PUSH2 0x1EB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F50 PUSH1 0x28 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5B DUP3 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F7D DUP2 PUSH2 0x1F44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBA PUSH2 0x1FB5 PUSH2 0x1FB0 DUP5 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1F8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1FA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x202D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1FE9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH1 0x22 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP3 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20CD DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2130 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x213A DUP7 DUP4 PUSH2 0x20F5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x216C PUSH2 0x2167 PUSH2 0x2162 DUP5 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2185 DUP4 PUSH2 0x2152 JUMP JUMPDEST PUSH2 0x2199 PUSH2 0x2191 DUP3 PUSH2 0x2173 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2101 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x21B0 PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x21BB DUP2 DUP5 DUP5 PUSH2 0x217C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21DE JUMPI PUSH2 0x21D3 PUSH0 DUP3 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x21F4 DUP2 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x21FD DUP5 PUSH2 0x20E6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x220C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2220 PUSH2 0x2218 DUP6 PUSH2 0x20E6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21C0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2243 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2228 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x225B DUP4 DUP4 PUSH2 0x2234 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2274 DUP3 PUSH2 0x1900 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST PUSH2 0x2297 DUP3 SLOAD PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x22A2 DUP3 DUP3 DUP6 PUSH2 0x21E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22D3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22C1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x22CB DUP6 DUP3 PUSH2 0x2250 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x22E1 DUP7 PUSH2 0x20D4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2308 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2325 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2321 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2234 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2394 PUSH1 0x2B DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x239F DUP3 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C1 DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23FC PUSH1 0x12 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x2407 DUP3 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2429 DUP2 PUSH2 0x23F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH0 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x2450 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1700 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x246A PUSH0 DUP4 ADD DUP7 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x2477 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x2484 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1700 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xE3 MLOAD PUSH28 0x87C161F501A8357A9651F0890B168285D910A9F32225E2A049DDC179 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "367:5217:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ETHER_1386": {
									"entryPoint": 2242,
									"id": 1386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1794": {
									"entryPoint": null,
									"id": 1794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 4992,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 5614,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1031": {
									"entryPoint": 5395,
									"id": 1031,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 5550,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5012,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 4953,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 5356,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 5753,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": 5746,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 5147,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedAmounts_1409": {
									"entryPoint": 3382,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1643": {
									"entryPoint": 999,
									"id": 1643,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentRound_1399": {
									"entryPoint": 3172,
									"id": 1399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1526": {
									"entryPoint": 2246,
									"id": 1526,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1470": {
									"entryPoint": 2668,
									"id": 1470,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 3329,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3117,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_736": {
									"entryPoint": 4823,
									"id": 736,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_709": {
									"entryPoint": 4696,
									"id": 709,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@scorer_1389": {
									"entryPoint": 3136,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAllowedAmount_1670": {
									"entryPoint": 3435,
									"id": 1670,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRound_1704": {
									"entryPoint": 3674,
									"id": 1704,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@totalBalances_1403": {
									"entryPoint": 3414,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 3884,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1774": {
									"entryPoint": 4016,
									"id": 1774,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6842,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr": {
									"entryPoint": 6952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IScorer_$1808_to_t_address_fromStack": {
									"entryPoint": 6360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9303,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 7396,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9264,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IScorer_$1808__to_t_address__fromStack_reversed": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 8144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IScorer_$1808_to_t_address": {
									"entryPoint": 6343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 8096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6828,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6426,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf": {
									"entryPoint": 7164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 9160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375": {
									"entryPoint": 7822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5": {
									"entryPoint": 7498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d": {
									"entryPoint": 7268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71": {
									"entryPoint": 7926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76": {
									"entryPoint": 9018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28048:13",
										"nodeType": "YulBlock",
										"src": "0:28048:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:13",
													"nodeType": "YulBlock",
													"src": "52:32:13",
													"statements": [
														{
															"nativeSrc": "62:16:13",
															"nodeType": "YulAssignment",
															"src": "62:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:13",
																"nodeType": "YulIdentifier",
																"src": "73:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:77:13"
											},
											{
												"body": {
													"nativeSrc": "118:152:13",
													"nodeType": "YulBlock",
													"src": "118:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "138:77:13",
																		"nodeType": "YulLiteral",
																		"src": "138:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:13"
																},
																"nativeSrc": "128:88:13",
																"nodeType": "YulFunctionCall",
																"src": "128:88:13"
															},
															"nativeSrc": "128:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "128:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "232:1:13",
																		"nodeType": "YulLiteral",
																		"src": "232:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "235:4:13",
																		"nodeType": "YulLiteral",
																		"src": "235:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "225:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:13"
																},
																"nativeSrc": "225:15:13",
																"nodeType": "YulFunctionCall",
																"src": "225:15:13"
															},
															"nativeSrc": "225:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "225:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "256:1:13",
																		"nodeType": "YulLiteral",
																		"src": "256:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "259:4:13",
																		"nodeType": "YulLiteral",
																		"src": "259:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "249:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:13"
																},
																"nativeSrc": "249:15:13",
																"nodeType": "YulFunctionCall",
																"src": "249:15:13"
															},
															"nativeSrc": "249:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "249:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "90:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:13"
											},
											{
												"body": {
													"nativeSrc": "320:147:13",
													"nodeType": "YulBlock",
													"src": "320:147:13",
													"statements": [
														{
															"nativeSrc": "330:25:13",
															"nodeType": "YulAssignment",
															"src": "330:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "353:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "353:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "335:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "335:17:13"
																},
																"nativeSrc": "335:20:13",
																"nodeType": "YulFunctionCall",
																"src": "335:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "330:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "330:1:13"
																}
															]
														},
														{
															"nativeSrc": "364:25:13",
															"nodeType": "YulAssignment",
															"src": "364:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "387:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "387:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "369:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "369:17:13"
																},
																"nativeSrc": "369:20:13",
																"nodeType": "YulFunctionCall",
																"src": "369:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "364:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "364:1:13"
																}
															]
														},
														{
															"nativeSrc": "398:16:13",
															"nodeType": "YulAssignment",
															"src": "398:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "409:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "409:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "412:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "412:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "405:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:13"
																},
																"nativeSrc": "405:9:13",
																"nodeType": "YulFunctionCall",
																"src": "405:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "398:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "398:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "438:22:13",
																"nodeType": "YulBlock",
																"src": "438:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "440:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "440:16:13"
																			},
																			"nativeSrc": "440:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "440:18:13"
																		},
																		"nativeSrc": "440:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "440:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "430:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "430:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "433:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "433:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "427:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "427:2:13"
																},
																"nativeSrc": "427:10:13",
																"nodeType": "YulFunctionCall",
																"src": "427:10:13"
															},
															"nativeSrc": "424:36:13",
															"nodeType": "YulIf",
															"src": "424:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "276:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "307:1:13",
														"nodeType": "YulTypedName",
														"src": "307:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "310:1:13",
														"nodeType": "YulTypedName",
														"src": "310:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "316:3:13",
														"nodeType": "YulTypedName",
														"src": "316:3:13",
														"type": ""
													}
												],
												"src": "276:191:13"
											},
											{
												"body": {
													"nativeSrc": "538:53:13",
													"nodeType": "YulBlock",
													"src": "538:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "555:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "555:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "578:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "578:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "560:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "560:17:13"
																		},
																		"nativeSrc": "560:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "560:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "548:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:13"
																},
																"nativeSrc": "548:37:13",
																"nodeType": "YulFunctionCall",
																"src": "548:37:13"
															},
															"nativeSrc": "548:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "548:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "473:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "526:5:13",
														"nodeType": "YulTypedName",
														"src": "526:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "533:3:13",
														"nodeType": "YulTypedName",
														"src": "533:3:13",
														"type": ""
													}
												],
												"src": "473:118:13"
											},
											{
												"body": {
													"nativeSrc": "695:124:13",
													"nodeType": "YulBlock",
													"src": "695:124:13",
													"statements": [
														{
															"nativeSrc": "705:26:13",
															"nodeType": "YulAssignment",
															"src": "705:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "717:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "717:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "728:2:13",
																		"nodeType": "YulLiteral",
																		"src": "728:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:13"
																},
																"nativeSrc": "713:18:13",
																"nodeType": "YulFunctionCall",
																"src": "713:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "705:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "705:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "785:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "798:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "798:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "809:1:13",
																				"nodeType": "YulLiteral",
																				"src": "809:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "794:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:13"
																		},
																		"nativeSrc": "794:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "794:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "741:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "741:43:13"
																},
																"nativeSrc": "741:71:13",
																"nodeType": "YulFunctionCall",
																"src": "741:71:13"
															},
															"nativeSrc": "741:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "741:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "597:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "667:9:13",
														"nodeType": "YulTypedName",
														"src": "667:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "679:6:13",
														"nodeType": "YulTypedName",
														"src": "679:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "690:4:13",
														"nodeType": "YulTypedName",
														"src": "690:4:13",
														"type": ""
													}
												],
												"src": "597:222:13"
											},
											{
												"body": {
													"nativeSrc": "865:35:13",
													"nodeType": "YulBlock",
													"src": "865:35:13",
													"statements": [
														{
															"nativeSrc": "875:19:13",
															"nodeType": "YulAssignment",
															"src": "875:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "891:2:13",
																		"nodeType": "YulLiteral",
																		"src": "891:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "885:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:13"
																},
																"nativeSrc": "885:9:13",
																"nodeType": "YulFunctionCall",
																"src": "885:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "825:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "858:6:13",
														"nodeType": "YulTypedName",
														"src": "858:6:13",
														"type": ""
													}
												],
												"src": "825:75:13"
											},
											{
												"body": {
													"nativeSrc": "995:28:13",
													"nodeType": "YulBlock",
													"src": "995:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1012:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1015:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1005:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1005:6:13"
																},
																"nativeSrc": "1005:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1005:12:13"
															},
															"nativeSrc": "1005:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1005:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "906:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "906:117:13"
											},
											{
												"body": {
													"nativeSrc": "1118:28:13",
													"nodeType": "YulBlock",
													"src": "1118:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1135:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1138:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1138:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1128:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:13"
																},
																"nativeSrc": "1128:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1128:12:13"
															},
															"nativeSrc": "1128:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1128:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1029:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1029:117:13"
											},
											{
												"body": {
													"nativeSrc": "1197:81:13",
													"nodeType": "YulBlock",
													"src": "1197:81:13",
													"statements": [
														{
															"nativeSrc": "1207:65:13",
															"nodeType": "YulAssignment",
															"src": "1207:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1222:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1222:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1229:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1229:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1218:3:13"
																},
																"nativeSrc": "1218:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1218:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1207:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1207:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1152:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1179:5:13",
														"nodeType": "YulTypedName",
														"src": "1179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1189:7:13",
														"nodeType": "YulTypedName",
														"src": "1189:7:13",
														"type": ""
													}
												],
												"src": "1152:126:13"
											},
											{
												"body": {
													"nativeSrc": "1329:51:13",
													"nodeType": "YulBlock",
													"src": "1329:51:13",
													"statements": [
														{
															"nativeSrc": "1339:35:13",
															"nodeType": "YulAssignment",
															"src": "1339:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1368:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1350:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1350:17:13"
																},
																"nativeSrc": "1350:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1350:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1339:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1339:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1284:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1311:5:13",
														"nodeType": "YulTypedName",
														"src": "1311:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1321:7:13",
														"nodeType": "YulTypedName",
														"src": "1321:7:13",
														"type": ""
													}
												],
												"src": "1284:96:13"
											},
											{
												"body": {
													"nativeSrc": "1429:79:13",
													"nodeType": "YulBlock",
													"src": "1429:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1486:16:13",
																"nodeType": "YulBlock",
																"src": "1486:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1495:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1488:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:13"
																			},
																			"nativeSrc": "1488:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:13"
																		},
																		"nativeSrc": "1488:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1452:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1477:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1459:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:13"
																				},
																				"nativeSrc": "1459:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1449:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:13"
																		},
																		"nativeSrc": "1449:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:13"
																},
																"nativeSrc": "1442:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:43:13"
															},
															"nativeSrc": "1439:63:13",
															"nodeType": "YulIf",
															"src": "1439:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1386:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1422:5:13",
														"nodeType": "YulTypedName",
														"src": "1422:5:13",
														"type": ""
													}
												],
												"src": "1386:122:13"
											},
											{
												"body": {
													"nativeSrc": "1566:87:13",
													"nodeType": "YulBlock",
													"src": "1566:87:13",
													"statements": [
														{
															"nativeSrc": "1576:29:13",
															"nodeType": "YulAssignment",
															"src": "1576:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1598:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1598:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1585:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1585:12:13"
																},
																"nativeSrc": "1585:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1585:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1576:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1576:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1641:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1641:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1614:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1614:26:13"
																},
																"nativeSrc": "1614:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1614:33:13"
															},
															"nativeSrc": "1614:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1614:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1514:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1544:6:13",
														"nodeType": "YulTypedName",
														"src": "1544:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1552:3:13",
														"nodeType": "YulTypedName",
														"src": "1552:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"src": "1514:139:13"
											},
											{
												"body": {
													"nativeSrc": "1725:263:13",
													"nodeType": "YulBlock",
													"src": "1725:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1771:83:13",
																"nodeType": "YulBlock",
																"src": "1771:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1773:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1773:77:13"
																			},
																			"nativeSrc": "1773:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1773:79:13"
																		},
																		"nativeSrc": "1773:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1773:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1746:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1746:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1755:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1755:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1742:3:13"
																		},
																		"nativeSrc": "1742:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1742:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1767:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1767:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1738:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1738:3:13"
																},
																"nativeSrc": "1738:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1738:32:13"
															},
															"nativeSrc": "1735:119:13",
															"nodeType": "YulIf",
															"src": "1735:119:13"
														},
														{
															"nativeSrc": "1864:117:13",
															"nodeType": "YulBlock",
															"src": "1864:117:13",
															"statements": [
																{
																	"nativeSrc": "1879:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1893:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1893:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1883:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1883:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1908:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1908:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1943:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1943:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1954:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1954:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1939:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1939:3:13"
																				},
																				"nativeSrc": "1939:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1939:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1963:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1963:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1918:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1918:20:13"
																		},
																		"nativeSrc": "1918:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1918:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1908:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1908:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1659:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1695:9:13",
														"nodeType": "YulTypedName",
														"src": "1695:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1706:7:13",
														"nodeType": "YulTypedName",
														"src": "1706:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1718:6:13",
														"nodeType": "YulTypedName",
														"src": "1718:6:13",
														"type": ""
													}
												],
												"src": "1659:329:13"
											},
											{
												"body": {
													"nativeSrc": "2059:53:13",
													"nodeType": "YulBlock",
													"src": "2059:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2076:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2076:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2099:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2081:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2081:17:13"
																		},
																		"nativeSrc": "2081:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:13"
																},
																"nativeSrc": "2069:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2069:37:13"
															},
															"nativeSrc": "2069:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2069:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1994:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2047:5:13",
														"nodeType": "YulTypedName",
														"src": "2047:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2054:3:13",
														"nodeType": "YulTypedName",
														"src": "2054:3:13",
														"type": ""
													}
												],
												"src": "1994:118:13"
											},
											{
												"body": {
													"nativeSrc": "2216:124:13",
													"nodeType": "YulBlock",
													"src": "2216:124:13",
													"statements": [
														{
															"nativeSrc": "2226:26:13",
															"nodeType": "YulAssignment",
															"src": "2226:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2238:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2238:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2249:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2249:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2234:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2234:3:13"
																},
																"nativeSrc": "2234:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2234:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2226:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2226:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2306:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2306:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2319:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2319:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2330:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2330:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2315:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2315:3:13"
																		},
																		"nativeSrc": "2315:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2315:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2262:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2262:43:13"
																},
																"nativeSrc": "2262:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2262:71:13"
															},
															"nativeSrc": "2262:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2262:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2118:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2188:9:13",
														"nodeType": "YulTypedName",
														"src": "2188:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2200:6:13",
														"nodeType": "YulTypedName",
														"src": "2200:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2211:4:13",
														"nodeType": "YulTypedName",
														"src": "2211:4:13",
														"type": ""
													}
												],
												"src": "2118:222:13"
											},
											{
												"body": {
													"nativeSrc": "2389:79:13",
													"nodeType": "YulBlock",
													"src": "2389:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2446:16:13",
																"nodeType": "YulBlock",
																"src": "2446:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2455:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2458:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2458:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2448:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2448:6:13"
																			},
																			"nativeSrc": "2448:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2448:12:13"
																		},
																		"nativeSrc": "2448:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2448:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2412:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2412:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2437:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2437:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2419:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2419:17:13"
																				},
																				"nativeSrc": "2419:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2419:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2409:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2409:2:13"
																		},
																		"nativeSrc": "2409:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nativeSrc": "2402:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2402:43:13"
															},
															"nativeSrc": "2399:63:13",
															"nodeType": "YulIf",
															"src": "2399:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2346:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2382:5:13",
														"nodeType": "YulTypedName",
														"src": "2382:5:13",
														"type": ""
													}
												],
												"src": "2346:122:13"
											},
											{
												"body": {
													"nativeSrc": "2526:87:13",
													"nodeType": "YulBlock",
													"src": "2526:87:13",
													"statements": [
														{
															"nativeSrc": "2536:29:13",
															"nodeType": "YulAssignment",
															"src": "2536:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2558:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2558:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2545:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2545:12:13"
																},
																"nativeSrc": "2545:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2545:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2536:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2536:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2601:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2601:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2574:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2574:26:13"
																},
																"nativeSrc": "2574:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2574:33:13"
															},
															"nativeSrc": "2574:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2574:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2474:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2504:6:13",
														"nodeType": "YulTypedName",
														"src": "2504:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2512:3:13",
														"nodeType": "YulTypedName",
														"src": "2512:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2520:5:13",
														"nodeType": "YulTypedName",
														"src": "2520:5:13",
														"type": ""
													}
												],
												"src": "2474:139:13"
											},
											{
												"body": {
													"nativeSrc": "2702:391:13",
													"nodeType": "YulBlock",
													"src": "2702:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2748:83:13",
																"nodeType": "YulBlock",
																"src": "2748:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2750:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2750:77:13"
																			},
																			"nativeSrc": "2750:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2750:79:13"
																		},
																		"nativeSrc": "2750:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2750:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2723:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2723:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2732:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2732:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2719:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:13"
																		},
																		"nativeSrc": "2719:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2744:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2744:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2715:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2715:3:13"
																},
																"nativeSrc": "2715:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2715:32:13"
															},
															"nativeSrc": "2712:119:13",
															"nodeType": "YulIf",
															"src": "2712:119:13"
														},
														{
															"nativeSrc": "2841:117:13",
															"nodeType": "YulBlock",
															"src": "2841:117:13",
															"statements": [
																{
																	"nativeSrc": "2856:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2856:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2870:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2870:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2860:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2860:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2885:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2885:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2920:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2920:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2931:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2931:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2916:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2916:3:13"
																				},
																				"nativeSrc": "2916:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2916:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2940:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2940:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2895:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2895:20:13"
																		},
																		"nativeSrc": "2895:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2885:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2885:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2968:118:13",
															"nodeType": "YulBlock",
															"src": "2968:118:13",
															"statements": [
																{
																	"nativeSrc": "2983:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2983:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2997:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2997:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2987:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2987:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3013:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3013:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3048:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3048:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3059:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3059:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3044:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:13"
																				},
																				"nativeSrc": "3044:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3044:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3068:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3068:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3023:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3023:20:13"
																		},
																		"nativeSrc": "3023:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3023:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3013:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3013:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2619:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2664:9:13",
														"nodeType": "YulTypedName",
														"src": "2664:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2675:7:13",
														"nodeType": "YulTypedName",
														"src": "2675:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2687:6:13",
														"nodeType": "YulTypedName",
														"src": "2687:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2695:6:13",
														"nodeType": "YulTypedName",
														"src": "2695:6:13",
														"type": ""
													}
												],
												"src": "2619:474:13"
											},
											{
												"body": {
													"nativeSrc": "3182:391:13",
													"nodeType": "YulBlock",
													"src": "3182:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3228:83:13",
																"nodeType": "YulBlock",
																"src": "3228:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3230:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3230:77:13"
																			},
																			"nativeSrc": "3230:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3230:79:13"
																		},
																		"nativeSrc": "3230:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3230:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3212:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3212:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3199:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3199:3:13"
																		},
																		"nativeSrc": "3199:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3224:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3224:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3195:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3195:3:13"
																},
																"nativeSrc": "3195:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3195:32:13"
															},
															"nativeSrc": "3192:119:13",
															"nodeType": "YulIf",
															"src": "3192:119:13"
														},
														{
															"nativeSrc": "3321:117:13",
															"nodeType": "YulBlock",
															"src": "3321:117:13",
															"statements": [
																{
																	"nativeSrc": "3336:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3336:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3350:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3350:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3340:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3340:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3365:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3365:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3400:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3400:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3411:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3411:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3396:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3396:3:13"
																				},
																				"nativeSrc": "3396:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3396:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3420:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3420:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3375:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3375:20:13"
																		},
																		"nativeSrc": "3375:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3375:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3365:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3365:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3448:118:13",
															"nodeType": "YulBlock",
															"src": "3448:118:13",
															"statements": [
																{
																	"nativeSrc": "3463:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3463:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3477:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3477:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3467:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3467:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3493:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3493:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3528:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3528:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3539:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3539:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3524:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3524:3:13"
																				},
																				"nativeSrc": "3524:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3524:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3548:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3548:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3503:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3503:20:13"
																		},
																		"nativeSrc": "3503:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3503:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3493:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3493:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3099:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3144:9:13",
														"nodeType": "YulTypedName",
														"src": "3144:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3155:7:13",
														"nodeType": "YulTypedName",
														"src": "3155:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3167:6:13",
														"nodeType": "YulTypedName",
														"src": "3167:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3175:6:13",
														"nodeType": "YulTypedName",
														"src": "3175:6:13",
														"type": ""
													}
												],
												"src": "3099:474:13"
											},
											{
												"body": {
													"nativeSrc": "3611:28:13",
													"nodeType": "YulBlock",
													"src": "3611:28:13",
													"statements": [
														{
															"nativeSrc": "3621:12:13",
															"nodeType": "YulAssignment",
															"src": "3621:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3628:5:13",
																"nodeType": "YulIdentifier",
																"src": "3628:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3621:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3579:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3597:5:13",
														"nodeType": "YulTypedName",
														"src": "3597:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3607:3:13",
														"nodeType": "YulTypedName",
														"src": "3607:3:13",
														"type": ""
													}
												],
												"src": "3579:60:13"
											},
											{
												"body": {
													"nativeSrc": "3705:82:13",
													"nodeType": "YulBlock",
													"src": "3705:82:13",
													"statements": [
														{
															"nativeSrc": "3715:66:13",
															"nodeType": "YulAssignment",
															"src": "3715:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3773:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3773:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3755:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3755:17:13"
																				},
																				"nativeSrc": "3755:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3755:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3746:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3746:8:13"
																		},
																		"nativeSrc": "3746:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3746:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3728:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3728:17:13"
																},
																"nativeSrc": "3728:53:13",
																"nodeType": "YulFunctionCall",
																"src": "3728:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3715:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3715:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3645:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3685:5:13",
														"nodeType": "YulTypedName",
														"src": "3685:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3695:9:13",
														"nodeType": "YulTypedName",
														"src": "3695:9:13",
														"type": ""
													}
												],
												"src": "3645:142:13"
											},
											{
												"body": {
													"nativeSrc": "3853:66:13",
													"nodeType": "YulBlock",
													"src": "3853:66:13",
													"statements": [
														{
															"nativeSrc": "3863:50:13",
															"nodeType": "YulAssignment",
															"src": "3863:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3907:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3907:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "3876:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "3876:30:13"
																},
																"nativeSrc": "3876:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3876:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3863:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3863:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "3793:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3833:5:13",
														"nodeType": "YulTypedName",
														"src": "3833:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3843:9:13",
														"nodeType": "YulTypedName",
														"src": "3843:9:13",
														"type": ""
													}
												],
												"src": "3793:126:13"
											},
											{
												"body": {
													"nativeSrc": "4001:66:13",
													"nodeType": "YulBlock",
													"src": "4001:66:13",
													"statements": [
														{
															"nativeSrc": "4011:50:13",
															"nodeType": "YulAssignment",
															"src": "4011:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4055:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4055:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4024:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4024:30:13"
																},
																"nativeSrc": "4024:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4024:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4011:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4011:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IScorer_$1808_to_t_address",
												"nativeSrc": "3925:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3981:5:13",
														"nodeType": "YulTypedName",
														"src": "3981:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3991:9:13",
														"nodeType": "YulTypedName",
														"src": "3991:9:13",
														"type": ""
													}
												],
												"src": "3925:142:13"
											},
											{
												"body": {
													"nativeSrc": "4154:82:13",
													"nodeType": "YulBlock",
													"src": "4154:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4171:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4171:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4223:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4223:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IScorer_$1808_to_t_address",
																			"nativeSrc": "4176:46:13",
																			"nodeType": "YulIdentifier",
																			"src": "4176:46:13"
																		},
																		"nativeSrc": "4176:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4176:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4164:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4164:6:13"
																},
																"nativeSrc": "4164:66:13",
																"nodeType": "YulFunctionCall",
																"src": "4164:66:13"
															},
															"nativeSrc": "4164:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "4164:66:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IScorer_$1808_to_t_address_fromStack",
												"nativeSrc": "4073:163:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4142:5:13",
														"nodeType": "YulTypedName",
														"src": "4142:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4149:3:13",
														"nodeType": "YulTypedName",
														"src": "4149:3:13",
														"type": ""
													}
												],
												"src": "4073:163:13"
											},
											{
												"body": {
													"nativeSrc": "4356:140:13",
													"nodeType": "YulBlock",
													"src": "4356:140:13",
													"statements": [
														{
															"nativeSrc": "4366:26:13",
															"nodeType": "YulAssignment",
															"src": "4366:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4378:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4378:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4389:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4389:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4374:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4374:3:13"
																},
																"nativeSrc": "4374:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4374:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4366:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4366:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4462:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4462:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4475:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4475:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4486:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4486:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4471:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4471:3:13"
																		},
																		"nativeSrc": "4471:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4471:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IScorer_$1808_to_t_address_fromStack",
																	"nativeSrc": "4402:59:13",
																	"nodeType": "YulIdentifier",
																	"src": "4402:59:13"
																},
																"nativeSrc": "4402:87:13",
																"nodeType": "YulFunctionCall",
																"src": "4402:87:13"
															},
															"nativeSrc": "4402:87:13",
															"nodeType": "YulExpressionStatement",
															"src": "4402:87:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IScorer_$1808__to_t_address__fromStack_reversed",
												"nativeSrc": "4242:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4328:9:13",
														"nodeType": "YulTypedName",
														"src": "4328:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4340:6:13",
														"nodeType": "YulTypedName",
														"src": "4340:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4351:4:13",
														"nodeType": "YulTypedName",
														"src": "4351:4:13",
														"type": ""
													}
												],
												"src": "4242:254:13"
											},
											{
												"body": {
													"nativeSrc": "4561:40:13",
													"nodeType": "YulBlock",
													"src": "4561:40:13",
													"statements": [
														{
															"nativeSrc": "4572:22:13",
															"nodeType": "YulAssignment",
															"src": "4572:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4588:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4588:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4582:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4582:5:13"
																},
																"nativeSrc": "4582:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4582:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4572:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4502:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4544:5:13",
														"nodeType": "YulTypedName",
														"src": "4544:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4554:6:13",
														"nodeType": "YulTypedName",
														"src": "4554:6:13",
														"type": ""
													}
												],
												"src": "4502:99:13"
											},
											{
												"body": {
													"nativeSrc": "4703:73:13",
													"nodeType": "YulBlock",
													"src": "4703:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4720:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4720:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4725:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4725:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4713:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:13"
																},
																"nativeSrc": "4713:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4713:19:13"
															},
															"nativeSrc": "4713:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "4713:19:13"
														},
														{
															"nativeSrc": "4741:29:13",
															"nodeType": "YulAssignment",
															"src": "4741:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4760:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4760:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4765:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4765:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4756:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4756:3:13"
																},
																"nativeSrc": "4756:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4756:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4741:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "4741:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4607:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4675:3:13",
														"nodeType": "YulTypedName",
														"src": "4675:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4680:6:13",
														"nodeType": "YulTypedName",
														"src": "4680:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4691:11:13",
														"nodeType": "YulTypedName",
														"src": "4691:11:13",
														"type": ""
													}
												],
												"src": "4607:169:13"
											},
											{
												"body": {
													"nativeSrc": "4844:77:13",
													"nodeType": "YulBlock",
													"src": "4844:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4861:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4861:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4866:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4866:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4871:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4871:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4855:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4855:5:13"
																},
																"nativeSrc": "4855:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4855:23:13"
															},
															"nativeSrc": "4855:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "4855:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4898:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4898:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4903:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4903:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4894:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:13"
																		},
																		"nativeSrc": "4894:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4912:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4912:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4887:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:13"
																},
																"nativeSrc": "4887:27:13",
																"nodeType": "YulFunctionCall",
																"src": "4887:27:13"
															},
															"nativeSrc": "4887:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "4887:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4782:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4826:3:13",
														"nodeType": "YulTypedName",
														"src": "4826:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4831:3:13",
														"nodeType": "YulTypedName",
														"src": "4831:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4836:6:13",
														"nodeType": "YulTypedName",
														"src": "4836:6:13",
														"type": ""
													}
												],
												"src": "4782:139:13"
											},
											{
												"body": {
													"nativeSrc": "4975:54:13",
													"nodeType": "YulBlock",
													"src": "4975:54:13",
													"statements": [
														{
															"nativeSrc": "4985:38:13",
															"nodeType": "YulAssignment",
															"src": "4985:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5003:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5003:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5010:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:13"
																		},
																		"nativeSrc": "4999:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4999:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5019:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5019:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:13"
																		},
																		"nativeSrc": "5015:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:13"
																},
																"nativeSrc": "4995:28:13",
																"nodeType": "YulFunctionCall",
																"src": "4995:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4985:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4927:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4958:5:13",
														"nodeType": "YulTypedName",
														"src": "4958:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4968:6:13",
														"nodeType": "YulTypedName",
														"src": "4968:6:13",
														"type": ""
													}
												],
												"src": "4927:102:13"
											},
											{
												"body": {
													"nativeSrc": "5127:285:13",
													"nodeType": "YulBlock",
													"src": "5127:285:13",
													"statements": [
														{
															"nativeSrc": "5137:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5137:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5184:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5184:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5151:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "5151:32:13"
																},
																"nativeSrc": "5151:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5151:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5141:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5141:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5199:78:13",
															"nodeType": "YulAssignment",
															"src": "5199:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5265:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5270:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5270:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5206:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5206:58:13"
																},
																"nativeSrc": "5206:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5206:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5199:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5199:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5325:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5325:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5332:4:13",
																				"nodeType": "YulLiteral",
																				"src": "5332:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:13"
																		},
																		"nativeSrc": "5321:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5339:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5339:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5344:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5344:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5286:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "5286:34:13"
																},
																"nativeSrc": "5286:65:13",
																"nodeType": "YulFunctionCall",
																"src": "5286:65:13"
															},
															"nativeSrc": "5286:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "5286:65:13"
														},
														{
															"nativeSrc": "5360:46:13",
															"nodeType": "YulAssignment",
															"src": "5360:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5371:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5371:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5398:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5398:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5376:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "5376:21:13"
																		},
																		"nativeSrc": "5376:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5367:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:13"
																},
																"nativeSrc": "5367:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5367:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5360:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5360:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5035:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5108:5:13",
														"nodeType": "YulTypedName",
														"src": "5108:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5115:3:13",
														"nodeType": "YulTypedName",
														"src": "5115:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5123:3:13",
														"nodeType": "YulTypedName",
														"src": "5123:3:13",
														"type": ""
													}
												],
												"src": "5035:377:13"
											},
											{
												"body": {
													"nativeSrc": "5592:359:13",
													"nodeType": "YulBlock",
													"src": "5592:359:13",
													"statements": [
														{
															"nativeSrc": "5602:26:13",
															"nodeType": "YulAssignment",
															"src": "5602:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5614:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5614:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5625:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5625:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:13"
																},
																"nativeSrc": "5610:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5610:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5602:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5602:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5682:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5682:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5695:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5706:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5706:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5691:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:13"
																		},
																		"nativeSrc": "5691:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5638:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5638:43:13"
																},
																"nativeSrc": "5638:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5638:71:13"
															},
															"nativeSrc": "5638:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5638:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5763:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5763:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5776:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5776:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5787:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5787:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:13"
																		},
																		"nativeSrc": "5772:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5719:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5719:43:13"
																},
																"nativeSrc": "5719:72:13",
																"nodeType": "YulFunctionCall",
																"src": "5719:72:13"
															},
															"nativeSrc": "5719:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "5719:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5812:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5812:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5823:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5823:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5808:3:13"
																		},
																		"nativeSrc": "5808:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5808:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5832:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5832:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5838:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5838:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5828:3:13"
																		},
																		"nativeSrc": "5828:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5828:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:13"
																},
																"nativeSrc": "5801:48:13",
																"nodeType": "YulFunctionCall",
																"src": "5801:48:13"
															},
															"nativeSrc": "5801:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "5801:48:13"
														},
														{
															"nativeSrc": "5858:86:13",
															"nodeType": "YulAssignment",
															"src": "5858:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5930:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5930:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5939:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5939:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5866:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "5866:63:13"
																},
																"nativeSrc": "5866:78:13",
																"nodeType": "YulFunctionCall",
																"src": "5866:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5858:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5858:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5418:533:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5548:9:13",
														"nodeType": "YulTypedName",
														"src": "5548:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5560:6:13",
														"nodeType": "YulTypedName",
														"src": "5560:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5568:6:13",
														"nodeType": "YulTypedName",
														"src": "5568:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5576:6:13",
														"nodeType": "YulTypedName",
														"src": "5576:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5587:4:13",
														"nodeType": "YulTypedName",
														"src": "5587:4:13",
														"type": ""
													}
												],
												"src": "5418:533:13"
											},
											{
												"body": {
													"nativeSrc": "6057:519:13",
													"nodeType": "YulBlock",
													"src": "6057:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6103:83:13",
																"nodeType": "YulBlock",
																"src": "6103:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6105:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:77:13"
																			},
																			"nativeSrc": "6105:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6105:79:13"
																		},
																		"nativeSrc": "6105:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6105:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6078:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6078:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6087:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6074:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:13"
																		},
																		"nativeSrc": "6074:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6099:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6099:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6070:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:13"
																},
																"nativeSrc": "6070:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6070:32:13"
															},
															"nativeSrc": "6067:119:13",
															"nodeType": "YulIf",
															"src": "6067:119:13"
														},
														{
															"nativeSrc": "6196:117:13",
															"nodeType": "YulBlock",
															"src": "6196:117:13",
															"statements": [
																{
																	"nativeSrc": "6211:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6211:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6225:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6225:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6215:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6215:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6240:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6240:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6275:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6275:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6286:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6286:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6271:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6271:3:13"
																				},
																				"nativeSrc": "6271:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6271:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6295:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6295:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6250:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6250:20:13"
																		},
																		"nativeSrc": "6250:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6250:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6240:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6240:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6323:118:13",
															"nodeType": "YulBlock",
															"src": "6323:118:13",
															"statements": [
																{
																	"nativeSrc": "6338:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6338:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6352:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6342:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6342:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6368:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6368:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6403:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6403:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6414:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6414:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6399:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6399:3:13"
																				},
																				"nativeSrc": "6399:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6399:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6423:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6423:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6378:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6378:20:13"
																		},
																		"nativeSrc": "6378:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6378:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6368:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6368:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6451:118:13",
															"nodeType": "YulBlock",
															"src": "6451:118:13",
															"statements": [
																{
																	"nativeSrc": "6466:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6466:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6480:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6470:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6470:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6496:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6496:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6531:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6531:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6542:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6542:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6527:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6527:3:13"
																				},
																				"nativeSrc": "6527:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6527:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6551:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6551:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6506:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6506:20:13"
																		},
																		"nativeSrc": "6506:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6506:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6496:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6496:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5957:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6011:9:13",
														"nodeType": "YulTypedName",
														"src": "6011:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6022:7:13",
														"nodeType": "YulTypedName",
														"src": "6022:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6034:6:13",
														"nodeType": "YulTypedName",
														"src": "6034:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6042:6:13",
														"nodeType": "YulTypedName",
														"src": "6042:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6050:6:13",
														"nodeType": "YulTypedName",
														"src": "6050:6:13",
														"type": ""
													}
												],
												"src": "5957:619:13"
											},
											{
												"body": {
													"nativeSrc": "6671:28:13",
													"nodeType": "YulBlock",
													"src": "6671:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6688:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6688:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6681:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:13"
																},
																"nativeSrc": "6681:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6681:12:13"
															},
															"nativeSrc": "6681:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6681:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6582:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6582:117:13"
											},
											{
												"body": {
													"nativeSrc": "6794:28:13",
													"nodeType": "YulBlock",
													"src": "6794:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6811:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6811:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6814:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6814:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6804:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6804:6:13"
																},
																"nativeSrc": "6804:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6804:12:13"
															},
															"nativeSrc": "6804:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "6804:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6705:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6705:117:13"
											},
											{
												"body": {
													"nativeSrc": "6856:152:13",
													"nodeType": "YulBlock",
													"src": "6856:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6873:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6873:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6876:77:13",
																		"nodeType": "YulLiteral",
																		"src": "6876:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:13"
																},
																"nativeSrc": "6866:88:13",
																"nodeType": "YulFunctionCall",
																"src": "6866:88:13"
															},
															"nativeSrc": "6866:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "6866:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6970:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6970:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6973:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6973:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6963:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:13"
																},
																"nativeSrc": "6963:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6963:15:13"
															},
															"nativeSrc": "6963:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6963:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6994:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6994:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6997:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6997:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6987:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:13"
																},
																"nativeSrc": "6987:15:13",
																"nodeType": "YulFunctionCall",
																"src": "6987:15:13"
															},
															"nativeSrc": "6987:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "6987:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6828:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "6828:180:13"
											},
											{
												"body": {
													"nativeSrc": "7057:238:13",
													"nodeType": "YulBlock",
													"src": "7057:238:13",
													"statements": [
														{
															"nativeSrc": "7067:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7067:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7089:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7089:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7119:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7119:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7097:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "7097:21:13"
																		},
																		"nativeSrc": "7097:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7097:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7085:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7085:3:13"
																},
																"nativeSrc": "7085:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7085:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7071:10:13",
																	"nodeType": "YulTypedName",
																	"src": "7071:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7236:22:13",
																"nodeType": "YulBlock",
																"src": "7236:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7238:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7238:16:13"
																			},
																			"nativeSrc": "7238:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7238:18:13"
																		},
																		"nativeSrc": "7238:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7238:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7179:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "7179:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7191:18:13",
																				"nodeType": "YulLiteral",
																				"src": "7191:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7176:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7176:2:13"
																		},
																		"nativeSrc": "7176:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7176:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7215:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "7215:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7227:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7227:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7212:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7212:2:13"
																		},
																		"nativeSrc": "7212:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7173:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7173:2:13"
																},
																"nativeSrc": "7173:62:13",
																"nodeType": "YulFunctionCall",
																"src": "7173:62:13"
															},
															"nativeSrc": "7170:88:13",
															"nodeType": "YulIf",
															"src": "7170:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7274:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7274:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7278:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "7278:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7267:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7267:6:13"
																},
																"nativeSrc": "7267:22:13",
																"nodeType": "YulFunctionCall",
																"src": "7267:22:13"
															},
															"nativeSrc": "7267:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "7267:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7014:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7043:6:13",
														"nodeType": "YulTypedName",
														"src": "7043:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7051:4:13",
														"nodeType": "YulTypedName",
														"src": "7051:4:13",
														"type": ""
													}
												],
												"src": "7014:281:13"
											},
											{
												"body": {
													"nativeSrc": "7342:88:13",
													"nodeType": "YulBlock",
													"src": "7342:88:13",
													"statements": [
														{
															"nativeSrc": "7352:30:13",
															"nodeType": "YulAssignment",
															"src": "7352:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7362:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7362:18:13"
																},
																"nativeSrc": "7362:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7362:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7352:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7411:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7411:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7419:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7419:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7391:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "7391:19:13"
																},
																"nativeSrc": "7391:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7391:33:13"
															},
															"nativeSrc": "7391:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7391:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7301:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7326:4:13",
														"nodeType": "YulTypedName",
														"src": "7326:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7335:6:13",
														"nodeType": "YulTypedName",
														"src": "7335:6:13",
														"type": ""
													}
												],
												"src": "7301:129:13"
											},
											{
												"body": {
													"nativeSrc": "7503:241:13",
													"nodeType": "YulBlock",
													"src": "7503:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7608:22:13",
																"nodeType": "YulBlock",
																"src": "7608:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7610:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7610:16:13"
																			},
																			"nativeSrc": "7610:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7610:18:13"
																		},
																		"nativeSrc": "7610:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7610:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7580:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7580:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7588:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7588:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7577:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:13"
																},
																"nativeSrc": "7577:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7577:30:13"
															},
															"nativeSrc": "7574:56:13",
															"nodeType": "YulIf",
															"src": "7574:56:13"
														},
														{
															"nativeSrc": "7640:37:13",
															"nodeType": "YulAssignment",
															"src": "7640:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7670:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7648:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "7648:21:13"
																},
																"nativeSrc": "7648:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7648:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7640:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7640:4:13"
																}
															]
														},
														{
															"nativeSrc": "7714:23:13",
															"nodeType": "YulAssignment",
															"src": "7714:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7726:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7726:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7732:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7732:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:13"
																},
																"nativeSrc": "7722:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7722:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7714:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7714:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "7436:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7487:6:13",
														"nodeType": "YulTypedName",
														"src": "7487:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7498:4:13",
														"nodeType": "YulTypedName",
														"src": "7498:4:13",
														"type": ""
													}
												],
												"src": "7436:308:13"
											},
											{
												"body": {
													"nativeSrc": "7814:84:13",
													"nodeType": "YulBlock",
													"src": "7814:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7838:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7838:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7843:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7843:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7848:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7848:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7825:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7825:12:13"
																},
																"nativeSrc": "7825:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7825:30:13"
															},
															"nativeSrc": "7825:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7825:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7875:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7875:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7880:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7880:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7871:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7871:3:13"
																		},
																		"nativeSrc": "7871:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7871:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7889:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7864:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:13"
																},
																"nativeSrc": "7864:27:13",
																"nodeType": "YulFunctionCall",
																"src": "7864:27:13"
															},
															"nativeSrc": "7864:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "7864:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7750:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7796:3:13",
														"nodeType": "YulTypedName",
														"src": "7796:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7801:3:13",
														"nodeType": "YulTypedName",
														"src": "7801:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7806:6:13",
														"nodeType": "YulTypedName",
														"src": "7806:6:13",
														"type": ""
													}
												],
												"src": "7750:148:13"
											},
											{
												"body": {
													"nativeSrc": "7988:341:13",
													"nodeType": "YulBlock",
													"src": "7988:341:13",
													"statements": [
														{
															"nativeSrc": "7998:75:13",
															"nodeType": "YulAssignment",
															"src": "7998:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8065:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8065:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "8023:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "8023:41:13"
																		},
																		"nativeSrc": "8023:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8023:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8007:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "8007:15:13"
																},
																"nativeSrc": "8007:66:13",
																"nodeType": "YulFunctionCall",
																"src": "8007:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7998:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7998:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8089:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8089:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8096:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8096:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8082:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8082:6:13"
																},
																"nativeSrc": "8082:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8082:21:13"
															},
															"nativeSrc": "8082:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8082:21:13"
														},
														{
															"nativeSrc": "8112:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8112:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8127:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8127:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8134:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8123:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:13"
																},
																"nativeSrc": "8123:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8123:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8116:3:13",
																	"nodeType": "YulTypedName",
																	"src": "8116:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8177:83:13",
																"nodeType": "YulBlock",
																"src": "8177:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8179:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8179:77:13"
																			},
																			"nativeSrc": "8179:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8179:79:13"
																		},
																		"nativeSrc": "8179:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8179:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8158:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8158:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8163:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8163:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8154:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8154:3:13"
																		},
																		"nativeSrc": "8154:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8172:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8151:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8151:2:13"
																},
																"nativeSrc": "8151:25:13",
																"nodeType": "YulFunctionCall",
																"src": "8151:25:13"
															},
															"nativeSrc": "8148:112:13",
															"nodeType": "YulIf",
															"src": "8148:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8306:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8306:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8311:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8311:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8316:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8316:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8269:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "8269:36:13"
																},
																"nativeSrc": "8269:54:13",
																"nodeType": "YulFunctionCall",
																"src": "8269:54:13"
															},
															"nativeSrc": "8269:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "8269:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "7904:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7961:3:13",
														"nodeType": "YulTypedName",
														"src": "7961:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7966:6:13",
														"nodeType": "YulTypedName",
														"src": "7966:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7974:3:13",
														"nodeType": "YulTypedName",
														"src": "7974:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7982:5:13",
														"nodeType": "YulTypedName",
														"src": "7982:5:13",
														"type": ""
													}
												],
												"src": "7904:425:13"
											},
											{
												"body": {
													"nativeSrc": "8411:278:13",
													"nodeType": "YulBlock",
													"src": "8411:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8460:83:13",
																"nodeType": "YulBlock",
																"src": "8460:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8462:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8462:77:13"
																			},
																			"nativeSrc": "8462:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8462:79:13"
																		},
																		"nativeSrc": "8462:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8462:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8439:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8439:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8447:4:13",
																						"nodeType": "YulLiteral",
																						"src": "8447:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8435:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8435:3:13"
																				},
																				"nativeSrc": "8435:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8435:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8454:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8454:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8431:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8431:3:13"
																		},
																		"nativeSrc": "8431:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8431:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8424:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8424:6:13"
																},
																"nativeSrc": "8424:35:13",
																"nodeType": "YulFunctionCall",
																"src": "8424:35:13"
															},
															"nativeSrc": "8421:122:13",
															"nodeType": "YulIf",
															"src": "8421:122:13"
														},
														{
															"nativeSrc": "8552:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8552:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8579:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8579:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8566:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8566:12:13"
																},
																"nativeSrc": "8566:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8566:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8556:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8556:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8595:88:13",
															"nodeType": "YulAssignment",
															"src": "8595:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8656:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8656:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8664:4:13",
																				"nodeType": "YulLiteral",
																				"src": "8664:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8652:3:13"
																		},
																		"nativeSrc": "8652:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8652:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8671:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8671:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8679:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8679:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "8604:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "8604:47:13"
																},
																"nativeSrc": "8604:79:13",
																"nodeType": "YulFunctionCall",
																"src": "8604:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8595:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8595:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "8349:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8389:6:13",
														"nodeType": "YulTypedName",
														"src": "8389:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8397:3:13",
														"nodeType": "YulTypedName",
														"src": "8397:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8405:5:13",
														"nodeType": "YulTypedName",
														"src": "8405:5:13",
														"type": ""
													}
												],
												"src": "8349:340:13"
											},
											{
												"body": {
													"nativeSrc": "8805:689:13",
													"nodeType": "YulBlock",
													"src": "8805:689:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8851:83:13",
																"nodeType": "YulBlock",
																"src": "8851:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8853:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:13"
																			},
																			"nativeSrc": "8853:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:13"
																		},
																		"nativeSrc": "8853:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8826:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8826:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8835:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8835:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8822:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:13"
																		},
																		"nativeSrc": "8822:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8822:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8847:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8847:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8818:3:13"
																},
																"nativeSrc": "8818:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8818:32:13"
															},
															"nativeSrc": "8815:119:13",
															"nodeType": "YulIf",
															"src": "8815:119:13"
														},
														{
															"nativeSrc": "8944:117:13",
															"nodeType": "YulBlock",
															"src": "8944:117:13",
															"statements": [
																{
																	"nativeSrc": "8959:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8959:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8973:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8973:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8963:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8963:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8988:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8988:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9023:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9023:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9034:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9019:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9019:3:13"
																				},
																				"nativeSrc": "9019:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9019:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9043:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9043:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8998:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8998:20:13"
																		},
																		"nativeSrc": "8998:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8998:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8988:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8988:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9071:118:13",
															"nodeType": "YulBlock",
															"src": "9071:118:13",
															"statements": [
																{
																	"nativeSrc": "9086:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9086:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9100:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9100:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9090:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9090:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9116:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9116:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9147:3:13"
																				},
																				"nativeSrc": "9147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9126:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9126:20:13"
																		},
																		"nativeSrc": "9126:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9116:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9116:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9199:288:13",
															"nodeType": "YulBlock",
															"src": "9199:288:13",
															"statements": [
																{
																	"nativeSrc": "9214:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9214:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9245:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9245:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9256:2:13",
																						"nodeType": "YulLiteral",
																						"src": "9256:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9241:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9241:3:13"
																				},
																				"nativeSrc": "9241:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9241:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9228:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "9228:12:13"
																		},
																		"nativeSrc": "9228:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9228:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9218:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9218:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9307:83:13",
																		"nodeType": "YulBlock",
																		"src": "9307:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9309:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "9309:77:13"
																					},
																					"nativeSrc": "9309:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9309:79:13"
																				},
																				"nativeSrc": "9309:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9309:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9279:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9279:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9287:18:13",
																				"nodeType": "YulLiteral",
																				"src": "9287:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9276:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9276:2:13"
																		},
																		"nativeSrc": "9276:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9276:30:13"
																	},
																	"nativeSrc": "9273:117:13",
																	"nodeType": "YulIf",
																	"src": "9273:117:13"
																},
																{
																	"nativeSrc": "9404:73:13",
																	"nodeType": "YulAssignment",
																	"src": "9404:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9449:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9449:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9460:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9460:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9445:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9445:3:13"
																				},
																				"nativeSrc": "9445:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9445:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9469:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9469:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "9414:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "9414:30:13"
																		},
																		"nativeSrc": "9414:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9414:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9404:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9404:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr",
												"nativeSrc": "8695:799:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8759:9:13",
														"nodeType": "YulTypedName",
														"src": "8759:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8770:7:13",
														"nodeType": "YulTypedName",
														"src": "8770:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8782:6:13",
														"nodeType": "YulTypedName",
														"src": "8782:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8790:6:13",
														"nodeType": "YulTypedName",
														"src": "8790:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8798:6:13",
														"nodeType": "YulTypedName",
														"src": "8798:6:13",
														"type": ""
													}
												],
												"src": "8695:799:13"
											},
											{
												"body": {
													"nativeSrc": "9606:69:13",
													"nodeType": "YulBlock",
													"src": "9606:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9628:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9628:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9636:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9636:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9624:3:13"
																		},
																		"nativeSrc": "9624:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9624:14:13"
																	},
																	{
																		"hexValue": "4e6f742077697468696e20726f756e64206475726174696f6e",
																		"kind": "string",
																		"nativeSrc": "9640:27:13",
																		"nodeType": "YulLiteral",
																		"src": "9640:27:13",
																		"type": "",
																		"value": "Not within round duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9617:6:13"
																},
																"nativeSrc": "9617:51:13",
																"nodeType": "YulFunctionCall",
																"src": "9617:51:13"
															},
															"nativeSrc": "9617:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "9617:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
												"nativeSrc": "9500:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9598:6:13",
														"nodeType": "YulTypedName",
														"src": "9598:6:13",
														"type": ""
													}
												],
												"src": "9500:175:13"
											},
											{
												"body": {
													"nativeSrc": "9827:220:13",
													"nodeType": "YulBlock",
													"src": "9827:220:13",
													"statements": [
														{
															"nativeSrc": "9837:74:13",
															"nodeType": "YulAssignment",
															"src": "9837:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9903:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9903:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9908:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9908:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9844:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9844:58:13"
																},
																"nativeSrc": "9844:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9844:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9837:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9837:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10009:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10009:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
																	"nativeSrc": "9920:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9920:88:13"
																},
																"nativeSrc": "9920:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9920:93:13"
															},
															"nativeSrc": "9920:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9920:93:13"
														},
														{
															"nativeSrc": "10022:19:13",
															"nodeType": "YulAssignment",
															"src": "10022:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10033:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10033:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10038:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10038:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10029:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10029:3:13"
																},
																"nativeSrc": "10029:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10029:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10022:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10022:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9681:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9815:3:13",
														"nodeType": "YulTypedName",
														"src": "9815:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9823:3:13",
														"nodeType": "YulTypedName",
														"src": "9823:3:13",
														"type": ""
													}
												],
												"src": "9681:366:13"
											},
											{
												"body": {
													"nativeSrc": "10224:248:13",
													"nodeType": "YulBlock",
													"src": "10224:248:13",
													"statements": [
														{
															"nativeSrc": "10234:26:13",
															"nodeType": "YulAssignment",
															"src": "10234:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10246:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10246:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10242:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10242:3:13"
																},
																"nativeSrc": "10242:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10242:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10234:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10234:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10281:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10281:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10292:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10292:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10277:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10277:3:13"
																		},
																		"nativeSrc": "10277:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10277:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10300:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10300:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10306:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10296:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10296:3:13"
																		},
																		"nativeSrc": "10296:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10296:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10270:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10270:6:13"
																},
																"nativeSrc": "10270:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10270:47:13"
															},
															"nativeSrc": "10270:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10270:47:13"
														},
														{
															"nativeSrc": "10326:139:13",
															"nodeType": "YulAssignment",
															"src": "10326:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10460:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10460:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10334:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10334:124:13"
																},
																"nativeSrc": "10334:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10334:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10326:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10326:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10053:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10204:9:13",
														"nodeType": "YulTypedName",
														"src": "10204:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10219:4:13",
														"nodeType": "YulTypedName",
														"src": "10219:4:13",
														"type": ""
													}
												],
												"src": "10053:419:13"
											},
											{
												"body": {
													"nativeSrc": "10584:63:13",
													"nodeType": "YulBlock",
													"src": "10584:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10606:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10606:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10614:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10614:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10602:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10602:3:13"
																		},
																		"nativeSrc": "10602:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10602:14:13"
																	},
																	{
																		"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10618:21:13",
																		"nodeType": "YulLiteral",
																		"src": "10618:21:13",
																		"type": "",
																		"value": "No claimable amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10595:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10595:6:13"
																},
																"nativeSrc": "10595:45:13",
																"nodeType": "YulFunctionCall",
																"src": "10595:45:13"
															},
															"nativeSrc": "10595:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "10595:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
												"nativeSrc": "10478:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10576:6:13",
														"nodeType": "YulTypedName",
														"src": "10576:6:13",
														"type": ""
													}
												],
												"src": "10478:169:13"
											},
											{
												"body": {
													"nativeSrc": "10799:220:13",
													"nodeType": "YulBlock",
													"src": "10799:220:13",
													"statements": [
														{
															"nativeSrc": "10809:74:13",
															"nodeType": "YulAssignment",
															"src": "10809:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10875:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10875:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10880:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10880:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10816:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10816:58:13"
																},
																"nativeSrc": "10816:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10816:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10809:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10809:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10981:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10981:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																	"nativeSrc": "10892:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10892:88:13"
																},
																"nativeSrc": "10892:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10892:93:13"
															},
															"nativeSrc": "10892:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10892:93:13"
														},
														{
															"nativeSrc": "10994:19:13",
															"nodeType": "YulAssignment",
															"src": "10994:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11005:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11005:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11010:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11010:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11001:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11001:3:13"
																},
																"nativeSrc": "11001:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11001:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10994:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10994:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10653:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10787:3:13",
														"nodeType": "YulTypedName",
														"src": "10787:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10795:3:13",
														"nodeType": "YulTypedName",
														"src": "10795:3:13",
														"type": ""
													}
												],
												"src": "10653:366:13"
											},
											{
												"body": {
													"nativeSrc": "11196:248:13",
													"nodeType": "YulBlock",
													"src": "11196:248:13",
													"statements": [
														{
															"nativeSrc": "11206:26:13",
															"nodeType": "YulAssignment",
															"src": "11206:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11218:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11218:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11229:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11229:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11214:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11214:3:13"
																},
																"nativeSrc": "11214:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11214:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11206:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11206:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11253:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11264:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11264:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11249:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:13"
																		},
																		"nativeSrc": "11249:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11249:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11272:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11272:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11278:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11268:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11268:3:13"
																		},
																		"nativeSrc": "11268:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11268:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11242:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:13"
																},
																"nativeSrc": "11242:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11242:47:13"
															},
															"nativeSrc": "11242:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11242:47:13"
														},
														{
															"nativeSrc": "11298:139:13",
															"nodeType": "YulAssignment",
															"src": "11298:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11432:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11306:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11306:124:13"
																},
																"nativeSrc": "11306:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11306:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11298:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11298:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11025:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11176:9:13",
														"nodeType": "YulTypedName",
														"src": "11176:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11191:4:13",
														"nodeType": "YulTypedName",
														"src": "11191:4:13",
														"type": ""
													}
												],
												"src": "11025:419:13"
											},
											{
												"body": {
													"nativeSrc": "11556:69:13",
													"nodeType": "YulBlock",
													"src": "11556:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11578:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11578:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11586:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11586:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11574:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11574:3:13"
																		},
																		"nativeSrc": "11574:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11574:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
																		"kind": "string",
																		"nativeSrc": "11590:27:13",
																		"nodeType": "YulLiteral",
																		"src": "11590:27:13",
																		"type": "",
																		"value": "Insufficient funds in jar"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11567:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11567:6:13"
																},
																"nativeSrc": "11567:51:13",
																"nodeType": "YulFunctionCall",
																"src": "11567:51:13"
															},
															"nativeSrc": "11567:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "11567:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
												"nativeSrc": "11450:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11548:6:13",
														"nodeType": "YulTypedName",
														"src": "11548:6:13",
														"type": ""
													}
												],
												"src": "11450:175:13"
											},
											{
												"body": {
													"nativeSrc": "11777:220:13",
													"nodeType": "YulBlock",
													"src": "11777:220:13",
													"statements": [
														{
															"nativeSrc": "11787:74:13",
															"nodeType": "YulAssignment",
															"src": "11787:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11853:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11853:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11858:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11858:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11794:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11794:58:13"
																},
																"nativeSrc": "11794:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11794:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11787:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11787:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11959:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11959:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																	"nativeSrc": "11870:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11870:88:13"
																},
																"nativeSrc": "11870:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11870:93:13"
															},
															"nativeSrc": "11870:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11870:93:13"
														},
														{
															"nativeSrc": "11972:19:13",
															"nodeType": "YulAssignment",
															"src": "11972:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11983:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11988:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11988:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11979:3:13"
																},
																"nativeSrc": "11979:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11979:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11972:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11972:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11631:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11765:3:13",
														"nodeType": "YulTypedName",
														"src": "11765:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11773:3:13",
														"nodeType": "YulTypedName",
														"src": "11773:3:13",
														"type": ""
													}
												],
												"src": "11631:366:13"
											},
											{
												"body": {
													"nativeSrc": "12174:248:13",
													"nodeType": "YulBlock",
													"src": "12174:248:13",
													"statements": [
														{
															"nativeSrc": "12184:26:13",
															"nodeType": "YulAssignment",
															"src": "12184:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12196:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12207:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12207:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12192:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:13"
																},
																"nativeSrc": "12192:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12192:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12184:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12184:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12231:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12231:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12242:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12242:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12227:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12227:3:13"
																		},
																		"nativeSrc": "12227:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12227:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12250:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12250:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12256:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12256:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12246:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12246:3:13"
																		},
																		"nativeSrc": "12246:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12246:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12220:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12220:6:13"
																},
																"nativeSrc": "12220:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12220:47:13"
															},
															"nativeSrc": "12220:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12220:47:13"
														},
														{
															"nativeSrc": "12276:139:13",
															"nodeType": "YulAssignment",
															"src": "12276:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12410:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12410:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12284:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12284:124:13"
																},
																"nativeSrc": "12284:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12284:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12276:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12276:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12003:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12154:9:13",
														"nodeType": "YulTypedName",
														"src": "12154:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12169:4:13",
														"nodeType": "YulTypedName",
														"src": "12169:4:13",
														"type": ""
													}
												],
												"src": "12003:419:13"
											},
											{
												"body": {
													"nativeSrc": "12473:32:13",
													"nodeType": "YulBlock",
													"src": "12473:32:13",
													"statements": [
														{
															"nativeSrc": "12483:16:13",
															"nodeType": "YulAssignment",
															"src": "12483:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "12494:5:13",
																"nodeType": "YulIdentifier",
																"src": "12494:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12483:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "12483:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "12428:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12455:5:13",
														"nodeType": "YulTypedName",
														"src": "12455:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12465:7:13",
														"nodeType": "YulTypedName",
														"src": "12465:7:13",
														"type": ""
													}
												],
												"src": "12428:77:13"
											},
											{
												"body": {
													"nativeSrc": "12576:53:13",
													"nodeType": "YulBlock",
													"src": "12576:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12593:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12593:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12616:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12616:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "12598:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "12598:17:13"
																		},
																		"nativeSrc": "12598:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12598:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12586:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12586:6:13"
																},
																"nativeSrc": "12586:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12586:37:13"
															},
															"nativeSrc": "12586:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "12586:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "12511:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12564:5:13",
														"nodeType": "YulTypedName",
														"src": "12564:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12571:3:13",
														"nodeType": "YulTypedName",
														"src": "12571:3:13",
														"type": ""
													}
												],
												"src": "12511:118:13"
											},
											{
												"body": {
													"nativeSrc": "12761:206:13",
													"nodeType": "YulBlock",
													"src": "12761:206:13",
													"statements": [
														{
															"nativeSrc": "12771:26:13",
															"nodeType": "YulAssignment",
															"src": "12771:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12783:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12783:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12794:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12794:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12779:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12779:3:13"
																},
																"nativeSrc": "12779:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12779:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12771:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12771:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12851:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12851:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12864:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12864:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12875:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12875:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12860:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12860:3:13"
																		},
																		"nativeSrc": "12860:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12860:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12807:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12807:43:13"
																},
																"nativeSrc": "12807:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12807:71:13"
															},
															"nativeSrc": "12807:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12807:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12932:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12932:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12945:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12945:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12956:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12956:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12941:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12941:3:13"
																		},
																		"nativeSrc": "12941:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12941:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12888:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12888:43:13"
																},
																"nativeSrc": "12888:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12888:72:13"
															},
															"nativeSrc": "12888:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12888:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "12635:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12725:9:13",
														"nodeType": "YulTypedName",
														"src": "12725:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12737:6:13",
														"nodeType": "YulTypedName",
														"src": "12737:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12745:6:13",
														"nodeType": "YulTypedName",
														"src": "12745:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12756:4:13",
														"nodeType": "YulTypedName",
														"src": "12756:4:13",
														"type": ""
													}
												],
												"src": "12635:332:13"
											},
											{
												"body": {
													"nativeSrc": "13036:80:13",
													"nodeType": "YulBlock",
													"src": "13036:80:13",
													"statements": [
														{
															"nativeSrc": "13046:22:13",
															"nodeType": "YulAssignment",
															"src": "13046:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13061:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13055:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13055:5:13"
																},
																"nativeSrc": "13055:13:13",
																"nodeType": "YulFunctionCall",
																"src": "13055:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13046:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "13046:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13104:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13104:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13077:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "13077:26:13"
																},
																"nativeSrc": "13077:33:13",
																"nodeType": "YulFunctionCall",
																"src": "13077:33:13"
															},
															"nativeSrc": "13077:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "13077:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12973:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13014:6:13",
														"nodeType": "YulTypedName",
														"src": "13014:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13022:3:13",
														"nodeType": "YulTypedName",
														"src": "13022:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13030:5:13",
														"nodeType": "YulTypedName",
														"src": "13030:5:13",
														"type": ""
													}
												],
												"src": "12973:143:13"
											},
											{
												"body": {
													"nativeSrc": "13199:274:13",
													"nodeType": "YulBlock",
													"src": "13199:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13245:83:13",
																"nodeType": "YulBlock",
																"src": "13245:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13247:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "13247:77:13"
																			},
																			"nativeSrc": "13247:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13247:79:13"
																		},
																		"nativeSrc": "13247:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13247:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13220:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13220:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13229:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13229:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13216:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13216:3:13"
																		},
																		"nativeSrc": "13216:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13216:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13241:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13241:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13212:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13212:3:13"
																},
																"nativeSrc": "13212:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13212:32:13"
															},
															"nativeSrc": "13209:119:13",
															"nodeType": "YulIf",
															"src": "13209:119:13"
														},
														{
															"nativeSrc": "13338:128:13",
															"nodeType": "YulBlock",
															"src": "13338:128:13",
															"statements": [
																{
																	"nativeSrc": "13353:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13353:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13367:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13367:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13357:6:13",
																			"nodeType": "YulTypedName",
																			"src": "13357:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13382:74:13",
																	"nodeType": "YulAssignment",
																	"src": "13382:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13428:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "13428:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13439:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "13439:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13424:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "13424:3:13"
																				},
																				"nativeSrc": "13424:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13424:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13448:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "13448:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13392:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "13392:31:13"
																		},
																		"nativeSrc": "13392:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13392:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13382:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "13382:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13122:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13169:9:13",
														"nodeType": "YulTypedName",
														"src": "13169:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13180:7:13",
														"nodeType": "YulTypedName",
														"src": "13180:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13192:6:13",
														"nodeType": "YulTypedName",
														"src": "13192:6:13",
														"type": ""
													}
												],
												"src": "13122:351:13"
											},
											{
												"body": {
													"nativeSrc": "13585:68:13",
													"nodeType": "YulBlock",
													"src": "13585:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13607:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13607:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13615:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13615:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13603:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13603:3:13"
																		},
																		"nativeSrc": "13603:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13603:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742054727573742073636f7265",
																		"kind": "string",
																		"nativeSrc": "13619:26:13",
																		"nodeType": "YulLiteral",
																		"src": "13619:26:13",
																		"type": "",
																		"value": "Insufficient Trust score"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13596:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13596:6:13"
																},
																"nativeSrc": "13596:50:13",
																"nodeType": "YulFunctionCall",
																"src": "13596:50:13"
															},
															"nativeSrc": "13596:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "13596:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
												"nativeSrc": "13479:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13577:6:13",
														"nodeType": "YulTypedName",
														"src": "13577:6:13",
														"type": ""
													}
												],
												"src": "13479:174:13"
											},
											{
												"body": {
													"nativeSrc": "13805:220:13",
													"nodeType": "YulBlock",
													"src": "13805:220:13",
													"statements": [
														{
															"nativeSrc": "13815:74:13",
															"nodeType": "YulAssignment",
															"src": "13815:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13881:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13881:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13886:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13886:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13822:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13822:58:13"
																},
																"nativeSrc": "13822:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13822:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13815:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13815:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13987:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13987:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																	"nativeSrc": "13898:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13898:88:13"
																},
																"nativeSrc": "13898:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13898:93:13"
															},
															"nativeSrc": "13898:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13898:93:13"
														},
														{
															"nativeSrc": "14000:19:13",
															"nodeType": "YulAssignment",
															"src": "14000:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14011:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14011:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14016:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14016:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14007:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14007:3:13"
																},
																"nativeSrc": "14007:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14007:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14000:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14000:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13659:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13793:3:13",
														"nodeType": "YulTypedName",
														"src": "13793:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13801:3:13",
														"nodeType": "YulTypedName",
														"src": "13801:3:13",
														"type": ""
													}
												],
												"src": "13659:366:13"
											},
											{
												"body": {
													"nativeSrc": "14202:248:13",
													"nodeType": "YulBlock",
													"src": "14202:248:13",
													"statements": [
														{
															"nativeSrc": "14212:26:13",
															"nodeType": "YulAssignment",
															"src": "14212:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14224:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14224:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14235:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14235:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14220:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14220:3:13"
																},
																"nativeSrc": "14220:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14220:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14212:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14212:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14259:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14259:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14270:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14270:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14255:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14255:3:13"
																		},
																		"nativeSrc": "14255:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14255:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14278:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14278:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14284:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14284:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14274:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14274:3:13"
																		},
																		"nativeSrc": "14274:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14274:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14248:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14248:6:13"
																},
																"nativeSrc": "14248:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14248:47:13"
															},
															"nativeSrc": "14248:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14248:47:13"
														},
														{
															"nativeSrc": "14304:139:13",
															"nodeType": "YulAssignment",
															"src": "14304:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14438:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14438:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14312:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14312:124:13"
																},
																"nativeSrc": "14312:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14312:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14304:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14304:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14031:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14182:9:13",
														"nodeType": "YulTypedName",
														"src": "14182:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14197:4:13",
														"nodeType": "YulTypedName",
														"src": "14197:4:13",
														"type": ""
													}
												],
												"src": "14031:419:13"
											},
											{
												"body": {
													"nativeSrc": "14501:149:13",
													"nodeType": "YulBlock",
													"src": "14501:149:13",
													"statements": [
														{
															"nativeSrc": "14511:25:13",
															"nodeType": "YulAssignment",
															"src": "14511:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14534:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14534:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14516:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14516:17:13"
																},
																"nativeSrc": "14516:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14516:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14511:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14511:1:13"
																}
															]
														},
														{
															"nativeSrc": "14545:25:13",
															"nodeType": "YulAssignment",
															"src": "14545:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14568:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14568:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14550:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "14550:17:13"
																},
																"nativeSrc": "14550:20:13",
																"nodeType": "YulFunctionCall",
																"src": "14550:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14545:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14545:1:13"
																}
															]
														},
														{
															"nativeSrc": "14579:17:13",
															"nodeType": "YulAssignment",
															"src": "14579:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14591:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14591:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14594:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14594:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14587:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14587:3:13"
																},
																"nativeSrc": "14587:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14587:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14579:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14579:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14621:22:13",
																"nodeType": "YulBlock",
																"src": "14621:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14623:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14623:16:13"
																			},
																			"nativeSrc": "14623:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14623:18:13"
																		},
																		"nativeSrc": "14623:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14623:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14612:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14612:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14618:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14618:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14609:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14609:2:13"
																},
																"nativeSrc": "14609:11:13",
																"nodeType": "YulFunctionCall",
																"src": "14609:11:13"
															},
															"nativeSrc": "14606:37:13",
															"nodeType": "YulIf",
															"src": "14606:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14456:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14487:1:13",
														"nodeType": "YulTypedName",
														"src": "14487:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14490:1:13",
														"nodeType": "YulTypedName",
														"src": "14490:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14496:4:13",
														"nodeType": "YulTypedName",
														"src": "14496:4:13",
														"type": ""
													}
												],
												"src": "14456:194:13"
											},
											{
												"body": {
													"nativeSrc": "14769:34:13",
													"nodeType": "YulBlock",
													"src": "14769:34:13",
													"statements": [
														{
															"nativeSrc": "14779:18:13",
															"nodeType": "YulAssignment",
															"src": "14779:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "14794:3:13",
																"nodeType": "YulIdentifier",
																"src": "14794:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14779:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "14779:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14656:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14741:3:13",
														"nodeType": "YulTypedName",
														"src": "14741:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14746:6:13",
														"nodeType": "YulTypedName",
														"src": "14746:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14757:11:13",
														"nodeType": "YulTypedName",
														"src": "14757:11:13",
														"type": ""
													}
												],
												"src": "14656:147:13"
											},
											{
												"body": {
													"nativeSrc": "14915:8:13",
													"nodeType": "YulBlock",
													"src": "14915:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "14809:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14907:6:13",
														"nodeType": "YulTypedName",
														"src": "14907:6:13",
														"type": ""
													}
												],
												"src": "14809:114:13"
											},
											{
												"body": {
													"nativeSrc": "15092:235:13",
													"nodeType": "YulBlock",
													"src": "15092:235:13",
													"statements": [
														{
															"nativeSrc": "15102:90:13",
															"nodeType": "YulAssignment",
															"src": "15102:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15185:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15185:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15190:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15190:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15109:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "15109:75:13"
																},
																"nativeSrc": "15109:83:13",
																"nodeType": "YulFunctionCall",
																"src": "15109:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15102:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15102:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15290:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15290:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "15201:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15201:88:13"
																},
																"nativeSrc": "15201:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15201:93:13"
															},
															"nativeSrc": "15201:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15201:93:13"
														},
														{
															"nativeSrc": "15303:18:13",
															"nodeType": "YulAssignment",
															"src": "15303:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15314:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15314:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15319:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15319:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15310:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15310:3:13"
																},
																"nativeSrc": "15310:11:13",
																"nodeType": "YulFunctionCall",
																"src": "15310:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15303:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15303:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14929:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15080:3:13",
														"nodeType": "YulTypedName",
														"src": "15080:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15088:3:13",
														"nodeType": "YulTypedName",
														"src": "15088:3:13",
														"type": ""
													}
												],
												"src": "14929:398:13"
											},
											{
												"body": {
													"nativeSrc": "15521:191:13",
													"nodeType": "YulBlock",
													"src": "15521:191:13",
													"statements": [
														{
															"nativeSrc": "15532:154:13",
															"nodeType": "YulAssignment",
															"src": "15532:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15682:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15682:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15539:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "15539:141:13"
																},
																"nativeSrc": "15539:147:13",
																"nodeType": "YulFunctionCall",
																"src": "15539:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15532:3:13"
																}
															]
														},
														{
															"nativeSrc": "15696:10:13",
															"nodeType": "YulAssignment",
															"src": "15696:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "15703:3:13",
																"nodeType": "YulIdentifier",
																"src": "15703:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15696:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15696:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15333:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15508:3:13",
														"nodeType": "YulTypedName",
														"src": "15508:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15517:3:13",
														"nodeType": "YulTypedName",
														"src": "15517:3:13",
														"type": ""
													}
												],
												"src": "15333:379:13"
											},
											{
												"body": {
													"nativeSrc": "15824:65:13",
													"nodeType": "YulBlock",
													"src": "15824:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15846:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15846:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15854:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15854:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15842:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15842:3:13"
																		},
																		"nativeSrc": "15842:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15842:14:13"
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15858:23:13",
																		"nodeType": "YulLiteral",
																		"src": "15858:23:13",
																		"type": "",
																		"value": "Ether transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15835:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15835:6:13"
																},
																"nativeSrc": "15835:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15835:47:13"
															},
															"nativeSrc": "15835:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15835:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
												"nativeSrc": "15718:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15816:6:13",
														"nodeType": "YulTypedName",
														"src": "15816:6:13",
														"type": ""
													}
												],
												"src": "15718:171:13"
											},
											{
												"body": {
													"nativeSrc": "16041:220:13",
													"nodeType": "YulBlock",
													"src": "16041:220:13",
													"statements": [
														{
															"nativeSrc": "16051:74:13",
															"nodeType": "YulAssignment",
															"src": "16051:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16117:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16117:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16122:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16122:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16058:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16058:58:13"
																},
																"nativeSrc": "16058:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16058:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16051:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16051:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16223:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16223:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																	"nativeSrc": "16134:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16134:88:13"
																},
																"nativeSrc": "16134:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16134:93:13"
															},
															"nativeSrc": "16134:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16134:93:13"
														},
														{
															"nativeSrc": "16236:19:13",
															"nodeType": "YulAssignment",
															"src": "16236:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16247:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16247:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16252:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16252:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16243:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16243:3:13"
																},
																"nativeSrc": "16243:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16243:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16236:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16236:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15895:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16029:3:13",
														"nodeType": "YulTypedName",
														"src": "16029:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16037:3:13",
														"nodeType": "YulTypedName",
														"src": "16037:3:13",
														"type": ""
													}
												],
												"src": "15895:366:13"
											},
											{
												"body": {
													"nativeSrc": "16438:248:13",
													"nodeType": "YulBlock",
													"src": "16438:248:13",
													"statements": [
														{
															"nativeSrc": "16448:26:13",
															"nodeType": "YulAssignment",
															"src": "16448:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16460:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16460:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16471:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16471:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16456:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16456:3:13"
																},
																"nativeSrc": "16456:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16456:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16448:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16448:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16495:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16495:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16506:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16506:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16491:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16491:3:13"
																		},
																		"nativeSrc": "16491:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16491:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16514:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16514:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16520:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16520:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16510:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16510:3:13"
																		},
																		"nativeSrc": "16510:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16510:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16484:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16484:6:13"
																},
																"nativeSrc": "16484:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16484:47:13"
															},
															"nativeSrc": "16484:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16484:47:13"
														},
														{
															"nativeSrc": "16540:139:13",
															"nodeType": "YulAssignment",
															"src": "16540:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16674:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16674:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16548:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16548:124:13"
																},
																"nativeSrc": "16548:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16548:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16540:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16540:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16267:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16418:9:13",
														"nodeType": "YulTypedName",
														"src": "16418:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16433:4:13",
														"nodeType": "YulTypedName",
														"src": "16433:4:13",
														"type": ""
													}
												],
												"src": "16267:419:13"
											},
											{
												"body": {
													"nativeSrc": "16798:66:13",
													"nodeType": "YulBlock",
													"src": "16798:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16820:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16820:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16828:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16828:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16816:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16816:3:13"
																		},
																		"nativeSrc": "16816:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16816:14:13"
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "16832:24:13",
																		"nodeType": "YulLiteral",
																		"src": "16832:24:13",
																		"type": "",
																		"value": "Incorrect Ether amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16809:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16809:6:13"
																},
																"nativeSrc": "16809:48:13",
																"nodeType": "YulFunctionCall",
																"src": "16809:48:13"
															},
															"nativeSrc": "16809:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "16809:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
												"nativeSrc": "16692:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16790:6:13",
														"nodeType": "YulTypedName",
														"src": "16790:6:13",
														"type": ""
													}
												],
												"src": "16692:172:13"
											},
											{
												"body": {
													"nativeSrc": "17016:220:13",
													"nodeType": "YulBlock",
													"src": "17016:220:13",
													"statements": [
														{
															"nativeSrc": "17026:74:13",
															"nodeType": "YulAssignment",
															"src": "17026:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17092:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17092:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17097:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17097:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17033:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17033:58:13"
																},
																"nativeSrc": "17033:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17033:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17026:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17026:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17198:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17198:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																	"nativeSrc": "17109:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17109:88:13"
																},
																"nativeSrc": "17109:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17109:93:13"
															},
															"nativeSrc": "17109:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17109:93:13"
														},
														{
															"nativeSrc": "17211:19:13",
															"nodeType": "YulAssignment",
															"src": "17211:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17222:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17222:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17227:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17227:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17218:3:13"
																},
																"nativeSrc": "17218:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17218:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17211:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17211:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16870:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17004:3:13",
														"nodeType": "YulTypedName",
														"src": "17004:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17012:3:13",
														"nodeType": "YulTypedName",
														"src": "17012:3:13",
														"type": ""
													}
												],
												"src": "16870:366:13"
											},
											{
												"body": {
													"nativeSrc": "17413:248:13",
													"nodeType": "YulBlock",
													"src": "17413:248:13",
													"statements": [
														{
															"nativeSrc": "17423:26:13",
															"nodeType": "YulAssignment",
															"src": "17423:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17435:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17435:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17446:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17446:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17431:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17431:3:13"
																},
																"nativeSrc": "17431:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17431:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17423:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17423:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17470:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17470:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17481:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17481:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17466:3:13"
																		},
																		"nativeSrc": "17466:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17466:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17489:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17489:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17495:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17495:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17485:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17485:3:13"
																		},
																		"nativeSrc": "17485:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17485:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17459:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17459:6:13"
																},
																"nativeSrc": "17459:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17459:47:13"
															},
															"nativeSrc": "17459:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17459:47:13"
														},
														{
															"nativeSrc": "17515:139:13",
															"nodeType": "YulAssignment",
															"src": "17515:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17649:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17649:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17523:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17523:124:13"
																},
																"nativeSrc": "17523:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17523:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17515:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17515:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17242:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17393:9:13",
														"nodeType": "YulTypedName",
														"src": "17393:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17408:4:13",
														"nodeType": "YulTypedName",
														"src": "17408:4:13",
														"type": ""
													}
												],
												"src": "17242:419:13"
											},
											{
												"body": {
													"nativeSrc": "17773:121:13",
													"nodeType": "YulBlock",
													"src": "17773:121:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17795:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17795:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17803:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17803:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17791:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17791:3:13"
																		},
																		"nativeSrc": "17791:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17791:14:13"
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d75737420626520677265617465722074",
																		"kind": "string",
																		"nativeSrc": "17807:34:13",
																		"nodeType": "YulLiteral",
																		"src": "17807:34:13",
																		"type": "",
																		"value": "Deposit amount must be greater t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17784:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17784:6:13"
																},
																"nativeSrc": "17784:58:13",
																"nodeType": "YulFunctionCall",
																"src": "17784:58:13"
															},
															"nativeSrc": "17784:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "17784:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17863:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17863:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17871:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17871:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17859:3:13"
																		},
																		"nativeSrc": "17859:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17859:15:13"
																	},
																	{
																		"hexValue": "68616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "17876:10:13",
																		"nodeType": "YulLiteral",
																		"src": "17876:10:13",
																		"type": "",
																		"value": "han zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17852:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17852:6:13"
																},
																"nativeSrc": "17852:35:13",
																"nodeType": "YulFunctionCall",
																"src": "17852:35:13"
															},
															"nativeSrc": "17852:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "17852:35:13"
														}
													]
												},
												"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
												"nativeSrc": "17667:227:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17765:6:13",
														"nodeType": "YulTypedName",
														"src": "17765:6:13",
														"type": ""
													}
												],
												"src": "17667:227:13"
											},
											{
												"body": {
													"nativeSrc": "18046:220:13",
													"nodeType": "YulBlock",
													"src": "18046:220:13",
													"statements": [
														{
															"nativeSrc": "18056:74:13",
															"nodeType": "YulAssignment",
															"src": "18056:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18122:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18122:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18127:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18127:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18063:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "18063:58:13"
																},
																"nativeSrc": "18063:67:13",
																"nodeType": "YulFunctionCall",
																"src": "18063:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18056:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18056:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18228:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18228:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																	"nativeSrc": "18139:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18139:88:13"
																},
																"nativeSrc": "18139:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18139:93:13"
															},
															"nativeSrc": "18139:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18139:93:13"
														},
														{
															"nativeSrc": "18241:19:13",
															"nodeType": "YulAssignment",
															"src": "18241:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18252:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18252:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18257:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18257:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18248:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18248:3:13"
																},
																"nativeSrc": "18248:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18248:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18241:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18241:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17900:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18034:3:13",
														"nodeType": "YulTypedName",
														"src": "18034:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18042:3:13",
														"nodeType": "YulTypedName",
														"src": "18042:3:13",
														"type": ""
													}
												],
												"src": "17900:366:13"
											},
											{
												"body": {
													"nativeSrc": "18443:248:13",
													"nodeType": "YulBlock",
													"src": "18443:248:13",
													"statements": [
														{
															"nativeSrc": "18453:26:13",
															"nodeType": "YulAssignment",
															"src": "18453:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18465:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18465:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18476:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18476:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18461:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18461:3:13"
																},
																"nativeSrc": "18461:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18461:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18453:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18453:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18500:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18500:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18511:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18511:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18496:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18496:3:13"
																		},
																		"nativeSrc": "18496:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18496:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18519:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18519:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18525:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18525:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18515:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18515:3:13"
																		},
																		"nativeSrc": "18515:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18515:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18489:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18489:6:13"
																},
																"nativeSrc": "18489:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18489:47:13"
															},
															"nativeSrc": "18489:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18489:47:13"
														},
														{
															"nativeSrc": "18545:139:13",
															"nodeType": "YulAssignment",
															"src": "18545:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18679:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18679:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18553:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18553:124:13"
																},
																"nativeSrc": "18553:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18553:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18545:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18545:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18272:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18423:9:13",
														"nodeType": "YulTypedName",
														"src": "18423:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18438:4:13",
														"nodeType": "YulTypedName",
														"src": "18438:4:13",
														"type": ""
													}
												],
												"src": "18272:419:13"
											},
											{
												"body": {
													"nativeSrc": "18750:32:13",
													"nodeType": "YulBlock",
													"src": "18750:32:13",
													"statements": [
														{
															"nativeSrc": "18760:16:13",
															"nodeType": "YulAssignment",
															"src": "18760:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "18771:5:13",
																"nodeType": "YulIdentifier",
																"src": "18771:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "18760:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "18760:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "18697:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18732:5:13",
														"nodeType": "YulTypedName",
														"src": "18732:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "18742:7:13",
														"nodeType": "YulTypedName",
														"src": "18742:7:13",
														"type": ""
													}
												],
												"src": "18697:85:13"
											},
											{
												"body": {
													"nativeSrc": "18832:57:13",
													"nodeType": "YulBlock",
													"src": "18832:57:13",
													"statements": [
														{
															"nativeSrc": "18842:41:13",
															"nodeType": "YulAssignment",
															"src": "18842:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18857:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18857:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18864:18:13",
																		"nodeType": "YulLiteral",
																		"src": "18864:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18853:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18853:3:13"
																},
																"nativeSrc": "18853:30:13",
																"nodeType": "YulFunctionCall",
																"src": "18853:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "18842:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "18842:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "18788:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18814:5:13",
														"nodeType": "YulTypedName",
														"src": "18814:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "18824:7:13",
														"nodeType": "YulTypedName",
														"src": "18824:7:13",
														"type": ""
													}
												],
												"src": "18788:101:13"
											},
											{
												"body": {
													"nativeSrc": "18962:89:13",
													"nodeType": "YulBlock",
													"src": "18962:89:13",
													"statements": [
														{
															"nativeSrc": "18972:73:13",
															"nodeType": "YulAssignment",
															"src": "18972:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19037:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "19037:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "19011:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "19011:25:13"
																				},
																				"nativeSrc": "19011:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "19011:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19002:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "19002:8:13"
																		},
																		"nativeSrc": "19002:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19002:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "18985:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "18985:16:13"
																},
																"nativeSrc": "18985:60:13",
																"nodeType": "YulFunctionCall",
																"src": "18985:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "18972:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "18972:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "18895:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18942:5:13",
														"nodeType": "YulTypedName",
														"src": "18942:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "18952:9:13",
														"nodeType": "YulTypedName",
														"src": "18952:9:13",
														"type": ""
													}
												],
												"src": "18895:156:13"
											},
											{
												"body": {
													"nativeSrc": "19129:73:13",
													"nodeType": "YulBlock",
													"src": "19129:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19146:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19146:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19189:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19189:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "19151:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "19151:37:13"
																		},
																		"nativeSrc": "19151:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19151:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19139:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19139:6:13"
																},
																"nativeSrc": "19139:57:13",
																"nodeType": "YulFunctionCall",
																"src": "19139:57:13"
															},
															"nativeSrc": "19139:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "19139:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "19057:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19117:5:13",
														"nodeType": "YulTypedName",
														"src": "19117:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19124:3:13",
														"nodeType": "YulTypedName",
														"src": "19124:3:13",
														"type": ""
													}
												],
												"src": "19057:145:13"
											},
											{
												"body": {
													"nativeSrc": "19313:131:13",
													"nodeType": "YulBlock",
													"src": "19313:131:13",
													"statements": [
														{
															"nativeSrc": "19323:26:13",
															"nodeType": "YulAssignment",
															"src": "19323:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19335:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19335:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19346:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19346:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19331:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19331:3:13"
																},
																"nativeSrc": "19331:18:13",
																"nodeType": "YulFunctionCall",
																"src": "19331:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19323:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19323:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19410:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19410:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19423:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19423:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19434:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19434:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19419:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19419:3:13"
																		},
																		"nativeSrc": "19419:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19419:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "19359:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "19359:50:13"
																},
																"nativeSrc": "19359:78:13",
																"nodeType": "YulFunctionCall",
																"src": "19359:78:13"
															},
															"nativeSrc": "19359:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "19359:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "19208:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19285:9:13",
														"nodeType": "YulTypedName",
														"src": "19285:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19297:6:13",
														"nodeType": "YulTypedName",
														"src": "19297:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19308:4:13",
														"nodeType": "YulTypedName",
														"src": "19308:4:13",
														"type": ""
													}
												],
												"src": "19208:236:13"
											},
											{
												"body": {
													"nativeSrc": "19478:152:13",
													"nodeType": "YulBlock",
													"src": "19478:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19495:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19495:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19498:77:13",
																		"nodeType": "YulLiteral",
																		"src": "19498:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19488:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19488:6:13"
																},
																"nativeSrc": "19488:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19488:88:13"
															},
															"nativeSrc": "19488:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "19488:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19592:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19592:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19595:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19595:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19585:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19585:6:13"
																},
																"nativeSrc": "19585:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19585:15:13"
															},
															"nativeSrc": "19585:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19585:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19616:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19616:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19619:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19619:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19609:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19609:6:13"
																},
																"nativeSrc": "19609:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19609:15:13"
															},
															"nativeSrc": "19609:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19609:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "19450:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19450:180:13"
											},
											{
												"body": {
													"nativeSrc": "19687:269:13",
													"nodeType": "YulBlock",
													"src": "19687:269:13",
													"statements": [
														{
															"nativeSrc": "19697:22:13",
															"nodeType": "YulAssignment",
															"src": "19697:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19711:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19711:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19717:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19717:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19707:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19707:3:13"
																},
																"nativeSrc": "19707:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19707:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19697:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19697:6:13"
																}
															]
														},
														{
															"nativeSrc": "19728:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "19728:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19758:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "19758:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19764:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19764:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19754:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19754:3:13"
																},
																"nativeSrc": "19754:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19754:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "19732:18:13",
																	"nodeType": "YulTypedName",
																	"src": "19732:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19805:51:13",
																"nodeType": "YulBlock",
																"src": "19805:51:13",
																"statements": [
																	{
																		"nativeSrc": "19819:27:13",
																		"nodeType": "YulAssignment",
																		"src": "19819:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "19833:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "19833:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19841:4:13",
																					"nodeType": "YulLiteral",
																					"src": "19841:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "19829:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "19829:3:13"
																			},
																			"nativeSrc": "19829:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19829:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "19819:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19819:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19785:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "19785:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19778:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19778:6:13"
																},
																"nativeSrc": "19778:26:13",
																"nodeType": "YulFunctionCall",
																"src": "19778:26:13"
															},
															"nativeSrc": "19775:81:13",
															"nodeType": "YulIf",
															"src": "19775:81:13"
														},
														{
															"body": {
																"nativeSrc": "19908:42:13",
																"nodeType": "YulBlock",
																"src": "19908:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "19922:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19922:16:13"
																			},
																			"nativeSrc": "19922:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19922:18:13"
																		},
																		"nativeSrc": "19922:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19922:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "19872:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "19872:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19895:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19895:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19903:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19903:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19892:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "19892:2:13"
																		},
																		"nativeSrc": "19892:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19892:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19869:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "19869:2:13"
																},
																"nativeSrc": "19869:38:13",
																"nodeType": "YulFunctionCall",
																"src": "19869:38:13"
															},
															"nativeSrc": "19866:84:13",
															"nodeType": "YulIf",
															"src": "19866:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "19636:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19671:4:13",
														"nodeType": "YulTypedName",
														"src": "19671:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19680:6:13",
														"nodeType": "YulTypedName",
														"src": "19680:6:13",
														"type": ""
													}
												],
												"src": "19636:320:13"
											},
											{
												"body": {
													"nativeSrc": "20068:115:13",
													"nodeType": "YulBlock",
													"src": "20068:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20090:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20090:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20098:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20098:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20086:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20086:3:13"
																		},
																		"nativeSrc": "20086:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20086:14:13"
																	},
																	{
																		"hexValue": "53746172742074696d65206d757374206265206265666f726520656e64207469",
																		"kind": "string",
																		"nativeSrc": "20102:34:13",
																		"nodeType": "YulLiteral",
																		"src": "20102:34:13",
																		"type": "",
																		"value": "Start time must be before end ti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20079:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20079:6:13"
																},
																"nativeSrc": "20079:58:13",
																"nodeType": "YulFunctionCall",
																"src": "20079:58:13"
															},
															"nativeSrc": "20079:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "20079:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20158:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20166:2:13",
																				"nodeType": "YulLiteral",
																				"src": "20166:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20154:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20154:3:13"
																		},
																		"nativeSrc": "20154:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20154:15:13"
																	},
																	{
																		"hexValue": "6d65",
																		"kind": "string",
																		"nativeSrc": "20171:4:13",
																		"nodeType": "YulLiteral",
																		"src": "20171:4:13",
																		"type": "",
																		"value": "me"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20147:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20147:6:13"
																},
																"nativeSrc": "20147:29:13",
																"nodeType": "YulFunctionCall",
																"src": "20147:29:13"
															},
															"nativeSrc": "20147:29:13",
															"nodeType": "YulExpressionStatement",
															"src": "20147:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
												"nativeSrc": "19962:221:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20060:6:13",
														"nodeType": "YulTypedName",
														"src": "20060:6:13",
														"type": ""
													}
												],
												"src": "19962:221:13"
											},
											{
												"body": {
													"nativeSrc": "20335:220:13",
													"nodeType": "YulBlock",
													"src": "20335:220:13",
													"statements": [
														{
															"nativeSrc": "20345:74:13",
															"nodeType": "YulAssignment",
															"src": "20345:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20411:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20411:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20416:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20416:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20352:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20352:58:13"
																},
																"nativeSrc": "20352:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20352:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20345:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20345:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20517:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20517:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																	"nativeSrc": "20428:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20428:88:13"
																},
																"nativeSrc": "20428:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20428:93:13"
															},
															"nativeSrc": "20428:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20428:93:13"
														},
														{
															"nativeSrc": "20530:19:13",
															"nodeType": "YulAssignment",
															"src": "20530:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20541:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20541:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20546:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20546:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20537:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20537:3:13"
																},
																"nativeSrc": "20537:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20537:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20530:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20189:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20323:3:13",
														"nodeType": "YulTypedName",
														"src": "20323:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20331:3:13",
														"nodeType": "YulTypedName",
														"src": "20331:3:13",
														"type": ""
													}
												],
												"src": "20189:366:13"
											},
											{
												"body": {
													"nativeSrc": "20732:248:13",
													"nodeType": "YulBlock",
													"src": "20732:248:13",
													"statements": [
														{
															"nativeSrc": "20742:26:13",
															"nodeType": "YulAssignment",
															"src": "20742:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20754:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20754:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20765:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20765:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20750:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20750:3:13"
																},
																"nativeSrc": "20750:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20750:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20742:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20742:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20789:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20789:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20800:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20800:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20785:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20785:3:13"
																		},
																		"nativeSrc": "20785:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20785:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20808:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20808:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20814:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20814:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20804:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20804:3:13"
																		},
																		"nativeSrc": "20804:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20804:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20778:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20778:6:13"
																},
																"nativeSrc": "20778:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20778:47:13"
															},
															"nativeSrc": "20778:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20778:47:13"
														},
														{
															"nativeSrc": "20834:139:13",
															"nodeType": "YulAssignment",
															"src": "20834:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20968:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20968:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20842:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20842:124:13"
																},
																"nativeSrc": "20842:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20842:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20834:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20834:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20561:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20712:9:13",
														"nodeType": "YulTypedName",
														"src": "20712:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20727:4:13",
														"nodeType": "YulTypedName",
														"src": "20727:4:13",
														"type": ""
													}
												],
												"src": "20561:419:13"
											},
											{
												"body": {
													"nativeSrc": "21040:87:13",
													"nodeType": "YulBlock",
													"src": "21040:87:13",
													"statements": [
														{
															"nativeSrc": "21050:11:13",
															"nodeType": "YulAssignment",
															"src": "21050:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "21058:3:13",
																"nodeType": "YulIdentifier",
																"src": "21058:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21050:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21050:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21078:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21078:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21081:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21081:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21071:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21071:6:13"
																},
																"nativeSrc": "21071:14:13",
																"nodeType": "YulFunctionCall",
																"src": "21071:14:13"
															},
															"nativeSrc": "21071:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "21071:14:13"
														},
														{
															"nativeSrc": "21094:26:13",
															"nodeType": "YulAssignment",
															"src": "21094:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21112:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21112:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21115:4:13",
																		"nodeType": "YulLiteral",
																		"src": "21115:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "21102:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "21102:9:13"
																},
																"nativeSrc": "21102:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21102:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21094:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21094:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "20986:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21027:3:13",
														"nodeType": "YulTypedName",
														"src": "21027:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21035:4:13",
														"nodeType": "YulTypedName",
														"src": "21035:4:13",
														"type": ""
													}
												],
												"src": "20986:141:13"
											},
											{
												"body": {
													"nativeSrc": "21177:49:13",
													"nodeType": "YulBlock",
													"src": "21177:49:13",
													"statements": [
														{
															"nativeSrc": "21187:33:13",
															"nodeType": "YulAssignment",
															"src": "21187:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21205:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "21205:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21212:2:13",
																				"nodeType": "YulLiteral",
																				"src": "21212:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21201:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21201:3:13"
																		},
																		"nativeSrc": "21201:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21201:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21217:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21217:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21197:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21197:3:13"
																},
																"nativeSrc": "21197:23:13",
																"nodeType": "YulFunctionCall",
																"src": "21197:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21187:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "21133:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21160:5:13",
														"nodeType": "YulTypedName",
														"src": "21160:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21170:6:13",
														"nodeType": "YulTypedName",
														"src": "21170:6:13",
														"type": ""
													}
												],
												"src": "21133:93:13"
											},
											{
												"body": {
													"nativeSrc": "21285:54:13",
													"nodeType": "YulBlock",
													"src": "21285:54:13",
													"statements": [
														{
															"nativeSrc": "21295:37:13",
															"nodeType": "YulAssignment",
															"src": "21295:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "21320:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21320:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "21326:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21326:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "21316:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21316:3:13"
																},
																"nativeSrc": "21316:16:13",
																"nodeType": "YulFunctionCall",
																"src": "21316:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "21295:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "21295:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "21232:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "21260:4:13",
														"nodeType": "YulTypedName",
														"src": "21260:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "21266:5:13",
														"nodeType": "YulTypedName",
														"src": "21266:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "21276:8:13",
														"nodeType": "YulTypedName",
														"src": "21276:8:13",
														"type": ""
													}
												],
												"src": "21232:107:13"
											},
											{
												"body": {
													"nativeSrc": "21421:317:13",
													"nodeType": "YulBlock",
													"src": "21421:317:13",
													"statements": [
														{
															"nativeSrc": "21431:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "21431:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "21452:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "21452:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21464:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21464:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21448:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21448:3:13"
																},
																"nativeSrc": "21448:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21448:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "21435:9:13",
																	"nodeType": "YulTypedName",
																	"src": "21435:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21475:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "21475:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21506:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21506:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21517:66:13",
																		"nodeType": "YulLiteral",
																		"src": "21517:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21487:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "21487:18:13"
																},
																"nativeSrc": "21487:97:13",
																"nodeType": "YulFunctionCall",
																"src": "21487:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "21479:4:13",
																	"nodeType": "YulTypedName",
																	"src": "21479:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21593:51:13",
															"nodeType": "YulAssignment",
															"src": "21593:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "21624:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21624:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "21635:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "21635:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "21605:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "21605:18:13"
																},
																"nativeSrc": "21605:39:13",
																"nodeType": "YulFunctionCall",
																"src": "21605:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "21593:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "21593:8:13"
																}
															]
														},
														{
															"nativeSrc": "21653:30:13",
															"nodeType": "YulAssignment",
															"src": "21653:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21666:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21666:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "21677:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21677:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "21673:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21673:3:13"
																		},
																		"nativeSrc": "21673:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21673:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "21662:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21662:3:13"
																},
																"nativeSrc": "21662:21:13",
																"nodeType": "YulFunctionCall",
																"src": "21662:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21653:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21653:5:13"
																}
															]
														},
														{
															"nativeSrc": "21692:40:13",
															"nodeType": "YulAssignment",
															"src": "21692:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21705:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21705:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "21716:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "21716:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "21726:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21726:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "21712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21712:3:13"
																		},
																		"nativeSrc": "21712:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21712:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21702:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "21702:2:13"
																},
																"nativeSrc": "21702:30:13",
																"nodeType": "YulFunctionCall",
																"src": "21702:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21692:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21692:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "21345:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21382:5:13",
														"nodeType": "YulTypedName",
														"src": "21382:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "21389:10:13",
														"nodeType": "YulTypedName",
														"src": "21389:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "21401:8:13",
														"nodeType": "YulTypedName",
														"src": "21401:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21414:6:13",
														"nodeType": "YulTypedName",
														"src": "21414:6:13",
														"type": ""
													}
												],
												"src": "21345:393:13"
											},
											{
												"body": {
													"nativeSrc": "21804:82:13",
													"nodeType": "YulBlock",
													"src": "21804:82:13",
													"statements": [
														{
															"nativeSrc": "21814:66:13",
															"nodeType": "YulAssignment",
															"src": "21814:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "21872:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "21872:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "21854:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "21854:17:13"
																				},
																				"nativeSrc": "21854:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21854:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "21845:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "21845:8:13"
																		},
																		"nativeSrc": "21845:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21845:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21827:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "21827:17:13"
																},
																"nativeSrc": "21827:53:13",
																"nodeType": "YulFunctionCall",
																"src": "21827:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21814:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "21814:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "21744:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21784:5:13",
														"nodeType": "YulTypedName",
														"src": "21784:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21794:9:13",
														"nodeType": "YulTypedName",
														"src": "21794:9:13",
														"type": ""
													}
												],
												"src": "21744:142:13"
											},
											{
												"body": {
													"nativeSrc": "21939:28:13",
													"nodeType": "YulBlock",
													"src": "21939:28:13",
													"statements": [
														{
															"nativeSrc": "21949:12:13",
															"nodeType": "YulAssignment",
															"src": "21949:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "21956:5:13",
																"nodeType": "YulIdentifier",
																"src": "21956:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21949:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21949:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "21892:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21925:5:13",
														"nodeType": "YulTypedName",
														"src": "21925:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21935:3:13",
														"nodeType": "YulTypedName",
														"src": "21935:3:13",
														"type": ""
													}
												],
												"src": "21892:75:13"
											},
											{
												"body": {
													"nativeSrc": "22049:193:13",
													"nodeType": "YulBlock",
													"src": "22049:193:13",
													"statements": [
														{
															"nativeSrc": "22059:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "22059:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "22114:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "22114:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "22083:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "22083:30:13"
																},
																"nativeSrc": "22083:39:13",
																"nodeType": "YulFunctionCall",
																"src": "22083:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "22063:16:13",
																	"nodeType": "YulTypedName",
																	"src": "22063:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22138:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22138:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "22178:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "22178:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "22172:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "22172:5:13"
																				},
																				"nativeSrc": "22172:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22172:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "22185:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22185:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "22217:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "22217:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "22193:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "22193:23:13"
																				},
																				"nativeSrc": "22193:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22193:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "22144:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "22144:27:13"
																		},
																		"nativeSrc": "22144:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22144:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "22131:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22131:6:13"
																},
																"nativeSrc": "22131:105:13",
																"nodeType": "YulFunctionCall",
																"src": "22131:105:13"
															},
															"nativeSrc": "22131:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "22131:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "21973:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22026:4:13",
														"nodeType": "YulTypedName",
														"src": "22026:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22032:6:13",
														"nodeType": "YulTypedName",
														"src": "22032:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "22040:7:13",
														"nodeType": "YulTypedName",
														"src": "22040:7:13",
														"type": ""
													}
												],
												"src": "21973:269:13"
											},
											{
												"body": {
													"nativeSrc": "22297:24:13",
													"nodeType": "YulBlock",
													"src": "22297:24:13",
													"statements": [
														{
															"nativeSrc": "22307:8:13",
															"nodeType": "YulAssignment",
															"src": "22307:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "22314:1:13",
																"nodeType": "YulLiteral",
																"src": "22314:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22307:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22307:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "22248:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22293:3:13",
														"nodeType": "YulTypedName",
														"src": "22293:3:13",
														"type": ""
													}
												],
												"src": "22248:73:13"
											},
											{
												"body": {
													"nativeSrc": "22380:136:13",
													"nodeType": "YulBlock",
													"src": "22380:136:13",
													"statements": [
														{
															"nativeSrc": "22390:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "22390:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "22404:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "22404:30:13"
																},
																"nativeSrc": "22404:32:13",
																"nodeType": "YulFunctionCall",
																"src": "22404:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "22394:6:13",
																	"nodeType": "YulTypedName",
																	"src": "22394:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22489:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22489:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "22495:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22495:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "22503:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22503:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "22445:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22445:43:13"
																},
																"nativeSrc": "22445:65:13",
																"nodeType": "YulFunctionCall",
																"src": "22445:65:13"
															},
															"nativeSrc": "22445:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "22445:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "22327:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22366:4:13",
														"nodeType": "YulTypedName",
														"src": "22366:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22372:6:13",
														"nodeType": "YulTypedName",
														"src": "22372:6:13",
														"type": ""
													}
												],
												"src": "22327:189:13"
											},
											{
												"body": {
													"nativeSrc": "22572:136:13",
													"nodeType": "YulBlock",
													"src": "22572:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "22639:63:13",
																"nodeType": "YulBlock",
																"src": "22639:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22683:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "22683:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22690:1:13",
																					"nodeType": "YulLiteral",
																					"src": "22690:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "22653:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "22653:29:13"
																			},
																			"nativeSrc": "22653:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "22653:39:13"
																		},
																		"nativeSrc": "22653:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "22653:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "22592:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "22592:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "22599:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22599:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "22589:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "22589:2:13"
																},
																"nativeSrc": "22589:14:13",
																"nodeType": "YulFunctionCall",
																"src": "22589:14:13"
															},
															"nativeSrc": "22582:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "22604:26:13",
																"nodeType": "YulBlock",
																"src": "22604:26:13",
																"statements": [
																	{
																		"nativeSrc": "22606:22:13",
																		"nodeType": "YulAssignment",
																		"src": "22606:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "22619:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "22619:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22626:1:13",
																					"nodeType": "YulLiteral",
																					"src": "22626:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22615:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "22615:3:13"
																			},
																			"nativeSrc": "22615:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "22615:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "22606:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "22606:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "22586:2:13",
																"nodeType": "YulBlock",
																"src": "22586:2:13",
																"statements": []
															},
															"src": "22582:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "22522:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "22560:5:13",
														"nodeType": "YulTypedName",
														"src": "22560:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "22567:3:13",
														"nodeType": "YulTypedName",
														"src": "22567:3:13",
														"type": ""
													}
												],
												"src": "22522:186:13"
											},
											{
												"body": {
													"nativeSrc": "22793:464:13",
													"nodeType": "YulBlock",
													"src": "22793:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "22819:431:13",
																"nodeType": "YulBlock",
																"src": "22819:431:13",
																"statements": [
																	{
																		"nativeSrc": "22833:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22833:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "22881:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "22881:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "22849:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "22849:31:13"
																			},
																			"nativeSrc": "22849:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "22849:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "22837:8:13",
																				"nodeType": "YulTypedName",
																				"src": "22837:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "22900:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "22900:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "22923:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "22923:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "22951:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "22951:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "22933:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "22933:17:13"
																					},
																					"nativeSrc": "22933:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "22933:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "22919:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "22919:3:13"
																			},
																			"nativeSrc": "22919:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "22919:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "22904:11:13",
																				"nodeType": "YulTypedName",
																				"src": "22904:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "23120:27:13",
																			"nodeType": "YulBlock",
																			"src": "23120:27:13",
																			"statements": [
																				{
																					"nativeSrc": "23122:23:13",
																					"nodeType": "YulAssignment",
																					"src": "23122:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "23137:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "23137:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "23122:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "23122:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "23104:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "23104:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23116:2:13",
																					"nodeType": "YulLiteral",
																					"src": "23116:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "23101:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "23101:2:13"
																			},
																			"nativeSrc": "23101:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23101:18:13"
																		},
																		"nativeSrc": "23098:49:13",
																		"nodeType": "YulIf",
																		"src": "23098:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "23189:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "23189:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "23206:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "23206:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "23234:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "23234:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "23216:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "23216:17:13"
																							},
																							"nativeSrc": "23216:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "23216:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23202:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "23202:3:13"
																					},
																					"nativeSrc": "23202:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "23202:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "23160:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "23160:28:13"
																			},
																			"nativeSrc": "23160:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "23160:80:13"
																		},
																		"nativeSrc": "23160:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "23160:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "22810:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22810:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22815:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22815:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22807:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "22807:2:13"
																},
																"nativeSrc": "22807:11:13",
																"nodeType": "YulFunctionCall",
																"src": "22807:11:13"
															},
															"nativeSrc": "22804:446:13",
															"nodeType": "YulIf",
															"src": "22804:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "22714:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "22769:5:13",
														"nodeType": "YulTypedName",
														"src": "22769:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "22776:3:13",
														"nodeType": "YulTypedName",
														"src": "22776:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "22781:10:13",
														"nodeType": "YulTypedName",
														"src": "22781:10:13",
														"type": ""
													}
												],
												"src": "22714:543:13"
											},
											{
												"body": {
													"nativeSrc": "23326:54:13",
													"nodeType": "YulBlock",
													"src": "23326:54:13",
													"statements": [
														{
															"nativeSrc": "23336:37:13",
															"nodeType": "YulAssignment",
															"src": "23336:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "23361:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23361:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "23367:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "23367:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "23357:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23357:3:13"
																},
																"nativeSrc": "23357:16:13",
																"nodeType": "YulFunctionCall",
																"src": "23357:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "23336:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "23336:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "23263:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "23301:4:13",
														"nodeType": "YulTypedName",
														"src": "23301:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "23307:5:13",
														"nodeType": "YulTypedName",
														"src": "23307:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "23317:8:13",
														"nodeType": "YulTypedName",
														"src": "23317:8:13",
														"type": ""
													}
												],
												"src": "23263:117:13"
											},
											{
												"body": {
													"nativeSrc": "23437:118:13",
													"nodeType": "YulBlock",
													"src": "23437:118:13",
													"statements": [
														{
															"nativeSrc": "23447:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23447:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23496:1:13",
																						"nodeType": "YulLiteral",
																						"src": "23496:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "23499:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "23499:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "23492:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "23492:3:13"
																				},
																				"nativeSrc": "23492:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "23492:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23511:1:13",
																						"nodeType": "YulLiteral",
																						"src": "23511:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "23507:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "23507:3:13"
																				},
																				"nativeSrc": "23507:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "23507:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "23463:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "23463:28:13"
																		},
																		"nativeSrc": "23463:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23463:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "23459:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23459:3:13"
																},
																"nativeSrc": "23459:56:13",
																"nodeType": "YulFunctionCall",
																"src": "23459:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "23451:4:13",
																	"nodeType": "YulTypedName",
																	"src": "23451:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "23524:25:13",
															"nodeType": "YulAssignment",
															"src": "23524:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23538:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23538:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "23544:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23544:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "23534:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23534:3:13"
																},
																"nativeSrc": "23534:15:13",
																"nodeType": "YulFunctionCall",
																"src": "23534:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "23524:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23524:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "23386:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23414:4:13",
														"nodeType": "YulTypedName",
														"src": "23414:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "23420:5:13",
														"nodeType": "YulTypedName",
														"src": "23420:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "23430:6:13",
														"nodeType": "YulTypedName",
														"src": "23430:6:13",
														"type": ""
													}
												],
												"src": "23386:169:13"
											},
											{
												"body": {
													"nativeSrc": "23641:214:13",
													"nodeType": "YulBlock",
													"src": "23641:214:13",
													"statements": [
														{
															"nativeSrc": "23774:37:13",
															"nodeType": "YulAssignment",
															"src": "23774:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23801:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23801:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "23807:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "23807:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "23782:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "23782:18:13"
																},
																"nativeSrc": "23782:29:13",
																"nodeType": "YulFunctionCall",
																"src": "23782:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "23774:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23774:4:13"
																}
															]
														},
														{
															"nativeSrc": "23820:29:13",
															"nodeType": "YulAssignment",
															"src": "23820:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "23831:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23831:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "23841:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23841:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "23844:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "23844:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "23837:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23837:3:13"
																		},
																		"nativeSrc": "23837:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23837:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "23828:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "23828:2:13"
																},
																"nativeSrc": "23828:21:13",
																"nodeType": "YulFunctionCall",
																"src": "23828:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "23820:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23820:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "23560:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "23622:4:13",
														"nodeType": "YulTypedName",
														"src": "23622:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23628:3:13",
														"nodeType": "YulTypedName",
														"src": "23628:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "23636:4:13",
														"nodeType": "YulTypedName",
														"src": "23636:4:13",
														"type": ""
													}
												],
												"src": "23560:295:13"
											},
											{
												"body": {
													"nativeSrc": "23952:1303:13",
													"nodeType": "YulBlock",
													"src": "23952:1303:13",
													"statements": [
														{
															"nativeSrc": "23963:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "23963:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24010:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "24010:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "23977:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "23977:32:13"
																},
																"nativeSrc": "23977:37:13",
																"nodeType": "YulFunctionCall",
																"src": "23977:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "23967:6:13",
																	"nodeType": "YulTypedName",
																	"src": "23967:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24099:22:13",
																"nodeType": "YulBlock",
																"src": "24099:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "24101:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "24101:16:13"
																			},
																			"nativeSrc": "24101:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "24101:18:13"
																		},
																		"nativeSrc": "24101:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "24101:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24071:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24071:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24079:18:13",
																		"nodeType": "YulLiteral",
																		"src": "24079:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24068:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24068:2:13"
																},
																"nativeSrc": "24068:30:13",
																"nodeType": "YulFunctionCall",
																"src": "24068:30:13"
															},
															"nativeSrc": "24065:56:13",
															"nodeType": "YulIf",
															"src": "24065:56:13"
														},
														{
															"nativeSrc": "24131:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24131:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "24177:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "24177:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "24171:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "24171:5:13"
																		},
																		"nativeSrc": "24171:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24171:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24145:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "24145:25:13"
																},
																"nativeSrc": "24145:38:13",
																"nodeType": "YulFunctionCall",
																"src": "24145:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "24135:6:13",
																	"nodeType": "YulTypedName",
																	"src": "24135:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "24276:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "24276:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "24282:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24282:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "24290:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24290:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "24230:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "24230:45:13"
																},
																"nativeSrc": "24230:67:13",
																"nodeType": "YulFunctionCall",
																"src": "24230:67:13"
															},
															"nativeSrc": "24230:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "24230:67:13"
														},
														{
															"nativeSrc": "24307:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "24307:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24324:1:13",
																"nodeType": "YulLiteral",
																"src": "24324:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24311:9:13",
																	"nodeType": "YulTypedName",
																	"src": "24311:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24335:17:13",
															"nodeType": "YulAssignment",
															"src": "24335:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "24348:4:13",
																"nodeType": "YulLiteral",
																"src": "24348:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "24335:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "24335:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "24399:611:13",
																		"nodeType": "YulBlock",
																		"src": "24399:611:13",
																		"statements": [
																			{
																				"nativeSrc": "24413:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24413:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "24432:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "24432:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "24444:4:13",
																									"nodeType": "YulLiteral",
																									"src": "24444:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "24440:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "24440:3:13"
																							},
																							"nativeSrc": "24440:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "24440:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "24428:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "24428:3:13"
																					},
																					"nativeSrc": "24428:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24428:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "24417:7:13",
																						"nodeType": "YulTypedName",
																						"src": "24417:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24464:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24464:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24510:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "24510:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "24478:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "24478:31:13"
																					},
																					"nativeSrc": "24478:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24478:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "24468:6:13",
																						"nodeType": "YulTypedName",
																						"src": "24468:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "24528:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "24528:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "24537:1:13",
																					"nodeType": "YulLiteral",
																					"src": "24537:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "24532:1:13",
																						"nodeType": "YulTypedName",
																						"src": "24532:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "24596:163:13",
																					"nodeType": "YulBlock",
																					"src": "24596:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24621:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "24621:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "24639:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "24639:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "24644:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "24644:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "24635:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "24635:3:13"
																												},
																												"nativeSrc": "24635:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "24635:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "24629:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "24629:5:13"
																										},
																										"nativeSrc": "24629:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "24629:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24614:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "24614:6:13"
																								},
																								"nativeSrc": "24614:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24614:42:13"
																							},
																							"nativeSrc": "24614:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "24614:42:13"
																						},
																						{
																							"nativeSrc": "24673:24:13",
																							"nodeType": "YulAssignment",
																							"src": "24673:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24687:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "24687:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24695:1:13",
																										"nodeType": "YulLiteral",
																										"src": "24695:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24683:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "24683:3:13"
																								},
																								"nativeSrc": "24683:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24683:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "24673:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "24673:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "24714:31:13",
																							"nodeType": "YulAssignment",
																							"src": "24714:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "24731:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "24731:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24742:2:13",
																										"nodeType": "YulLiteral",
																										"src": "24742:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24727:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "24727:3:13"
																								},
																								"nativeSrc": "24727:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24727:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "24714:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "24714:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "24562:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "24562:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24565:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "24565:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24559:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "24559:2:13"
																					},
																					"nativeSrc": "24559:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24559:14:13"
																				},
																				"nativeSrc": "24551:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "24574:21:13",
																					"nodeType": "YulBlock",
																					"src": "24574:21:13",
																					"statements": [
																						{
																							"nativeSrc": "24576:17:13",
																							"nodeType": "YulAssignment",
																							"src": "24576:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "24585:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "24585:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "24588:4:13",
																										"nodeType": "YulLiteral",
																										"src": "24588:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "24581:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "24581:3:13"
																								},
																								"nativeSrc": "24581:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24581:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "24576:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "24576:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "24555:3:13",
																					"nodeType": "YulBlock",
																					"src": "24555:3:13",
																					"statements": []
																				},
																				"src": "24551:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "24795:156:13",
																					"nodeType": "YulBlock",
																					"src": "24795:156:13",
																					"statements": [
																						{
																							"nativeSrc": "24813:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "24813:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "24840:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "24840:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "24845:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "24845:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "24836:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "24836:3:13"
																										},
																										"nativeSrc": "24836:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "24836:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "24830:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "24830:5:13"
																								},
																								"nativeSrc": "24830:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24830:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "24817:9:13",
																									"nodeType": "YulTypedName",
																									"src": "24817:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "24880:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "24880:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "24907:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "24907:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "24922:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "24922:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "24930:4:13",
																														"nodeType": "YulLiteral",
																														"src": "24930:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "24918:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "24918:3:13"
																												},
																												"nativeSrc": "24918:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "24918:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "24888:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "24888:18:13"
																										},
																										"nativeSrc": "24888:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "24888:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "24873:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "24873:6:13"
																								},
																								"nativeSrc": "24873:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "24873:64:13"
																							},
																							"nativeSrc": "24873:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "24873:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "24778:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "24778:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "24787:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "24787:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "24775:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "24775:2:13"
																					},
																					"nativeSrc": "24775:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24775:19:13"
																				},
																				"nativeSrc": "24772:179:13",
																				"nodeType": "YulIf",
																				"src": "24772:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "24971:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "24971:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "24985:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "24985:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24993:1:13",
																											"nodeType": "YulLiteral",
																											"src": "24993:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "24981:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "24981:3:13"
																									},
																									"nativeSrc": "24981:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "24981:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "24997:1:13",
																									"nodeType": "YulLiteral",
																									"src": "24997:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "24977:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "24977:3:13"
																							},
																							"nativeSrc": "24977:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "24977:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "24964:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "24964:6:13"
																					},
																					"nativeSrc": "24964:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "24964:36:13"
																				},
																				"nativeSrc": "24964:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "24964:36:13"
																			}
																		]
																	},
																	"nativeSrc": "24392:618:13",
																	"nodeType": "YulCase",
																	"src": "24392:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24397:1:13",
																		"nodeType": "YulLiteral",
																		"src": "24397:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25027:222:13",
																		"nodeType": "YulBlock",
																		"src": "25027:222:13",
																		"statements": [
																			{
																				"nativeSrc": "25041:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25041:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25054:1:13",
																					"nodeType": "YulLiteral",
																					"src": "25054:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "25045:5:13",
																						"nodeType": "YulTypedName",
																						"src": "25045:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25078:67:13",
																					"nodeType": "YulBlock",
																					"src": "25078:67:13",
																					"statements": [
																						{
																							"nativeSrc": "25096:35:13",
																							"nodeType": "YulAssignment",
																							"src": "25096:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25115:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "25115:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25120:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "25120:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25111:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "25111:3:13"
																										},
																										"nativeSrc": "25111:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "25111:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25105:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25105:5:13"
																								},
																								"nativeSrc": "25105:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "25105:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "25096:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25096:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "25071:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "25071:6:13"
																				},
																				"nativeSrc": "25068:77:13",
																				"nodeType": "YulIf",
																				"src": "25068:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25165:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "25165:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25224:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "25224:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25231:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "25231:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "25171:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "25171:52:13"
																							},
																							"nativeSrc": "25171:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "25171:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25158:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "25158:6:13"
																					},
																					"nativeSrc": "25158:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "25158:81:13"
																				},
																				"nativeSrc": "25158:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "25158:81:13"
																			}
																		]
																	},
																	"nativeSrc": "25019:230:13",
																	"nodeType": "YulCase",
																	"src": "25019:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24372:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24372:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24380:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24380:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24369:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "24369:2:13"
																},
																"nativeSrc": "24369:14:13",
																"nodeType": "YulFunctionCall",
																"src": "24369:14:13"
															},
															"nativeSrc": "24362:887:13",
															"nodeType": "YulSwitch",
															"src": "24362:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "23860:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23941:4:13",
														"nodeType": "YulTypedName",
														"src": "23941:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "23947:3:13",
														"nodeType": "YulTypedName",
														"src": "23947:3:13",
														"type": ""
													}
												],
												"src": "23860:1395:13"
											},
											{
												"body": {
													"nativeSrc": "25367:124:13",
													"nodeType": "YulBlock",
													"src": "25367:124:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25389:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "25389:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25397:1:13",
																				"nodeType": "YulLiteral",
																				"src": "25397:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25385:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25385:3:13"
																		},
																		"nativeSrc": "25385:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25385:14:13"
																	},
																	{
																		"hexValue": "5769746864726177616c20616d6f756e74206d75737420626520677265617465",
																		"kind": "string",
																		"nativeSrc": "25401:34:13",
																		"nodeType": "YulLiteral",
																		"src": "25401:34:13",
																		"type": "",
																		"value": "Withdrawal amount must be greate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25378:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25378:6:13"
																},
																"nativeSrc": "25378:58:13",
																"nodeType": "YulFunctionCall",
																"src": "25378:58:13"
															},
															"nativeSrc": "25378:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "25378:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25457:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "25457:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25465:2:13",
																				"nodeType": "YulLiteral",
																				"src": "25465:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25453:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "25453:3:13"
																		},
																		"nativeSrc": "25453:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "25453:15:13"
																	},
																	{
																		"hexValue": "72207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "25470:13:13",
																		"nodeType": "YulLiteral",
																		"src": "25470:13:13",
																		"type": "",
																		"value": "r than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25446:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "25446:6:13"
																},
																"nativeSrc": "25446:38:13",
																"nodeType": "YulFunctionCall",
																"src": "25446:38:13"
															},
															"nativeSrc": "25446:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "25446:38:13"
														}
													]
												},
												"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
												"nativeSrc": "25261:230:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25359:6:13",
														"nodeType": "YulTypedName",
														"src": "25359:6:13",
														"type": ""
													}
												],
												"src": "25261:230:13"
											},
											{
												"body": {
													"nativeSrc": "25643:220:13",
													"nodeType": "YulBlock",
													"src": "25643:220:13",
													"statements": [
														{
															"nativeSrc": "25653:74:13",
															"nodeType": "YulAssignment",
															"src": "25653:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25719:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25719:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25724:2:13",
																		"nodeType": "YulLiteral",
																		"src": "25724:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25660:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "25660:58:13"
																},
																"nativeSrc": "25660:67:13",
																"nodeType": "YulFunctionCall",
																"src": "25660:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25653:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25653:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25825:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25825:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																	"nativeSrc": "25736:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "25736:88:13"
																},
																"nativeSrc": "25736:93:13",
																"nodeType": "YulFunctionCall",
																"src": "25736:93:13"
															},
															"nativeSrc": "25736:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "25736:93:13"
														},
														{
															"nativeSrc": "25838:19:13",
															"nodeType": "YulAssignment",
															"src": "25838:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25849:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "25849:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25854:2:13",
																		"nodeType": "YulLiteral",
																		"src": "25854:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25845:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25845:3:13"
																},
																"nativeSrc": "25845:12:13",
																"nodeType": "YulFunctionCall",
																"src": "25845:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25838:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "25838:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25497:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25631:3:13",
														"nodeType": "YulTypedName",
														"src": "25631:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25639:3:13",
														"nodeType": "YulTypedName",
														"src": "25639:3:13",
														"type": ""
													}
												],
												"src": "25497:366:13"
											},
											{
												"body": {
													"nativeSrc": "26040:248:13",
													"nodeType": "YulBlock",
													"src": "26040:248:13",
													"statements": [
														{
															"nativeSrc": "26050:26:13",
															"nodeType": "YulAssignment",
															"src": "26050:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26062:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "26062:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "26073:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26058:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "26058:3:13"
																},
																"nativeSrc": "26058:18:13",
																"nodeType": "YulFunctionCall",
																"src": "26058:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26050:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "26050:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26097:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "26097:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26108:1:13",
																				"nodeType": "YulLiteral",
																				"src": "26108:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26093:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "26093:3:13"
																		},
																		"nativeSrc": "26093:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26093:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26116:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "26116:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26122:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "26122:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "26112:3:13"
																		},
																		"nativeSrc": "26112:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26112:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "26086:6:13"
																},
																"nativeSrc": "26086:47:13",
																"nodeType": "YulFunctionCall",
																"src": "26086:47:13"
															},
															"nativeSrc": "26086:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "26086:47:13"
														},
														{
															"nativeSrc": "26142:139:13",
															"nodeType": "YulAssignment",
															"src": "26142:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26276:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "26276:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26150:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "26150:124:13"
																},
																"nativeSrc": "26150:131:13",
																"nodeType": "YulFunctionCall",
																"src": "26150:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26142:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "26142:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25869:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26020:9:13",
														"nodeType": "YulTypedName",
														"src": "26020:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26035:4:13",
														"nodeType": "YulTypedName",
														"src": "26035:4:13",
														"type": ""
													}
												],
												"src": "25869:419:13"
											},
											{
												"body": {
													"nativeSrc": "26400:62:13",
													"nodeType": "YulBlock",
													"src": "26400:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26422:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "26422:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26430:1:13",
																				"nodeType": "YulLiteral",
																				"src": "26430:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26418:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "26418:3:13"
																		},
																		"nativeSrc": "26418:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "26418:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "26434:20:13",
																		"nodeType": "YulLiteral",
																		"src": "26434:20:13",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26411:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "26411:6:13"
																},
																"nativeSrc": "26411:44:13",
																"nodeType": "YulFunctionCall",
																"src": "26411:44:13"
															},
															"nativeSrc": "26411:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "26411:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "26294:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26392:6:13",
														"nodeType": "YulTypedName",
														"src": "26392:6:13",
														"type": ""
													}
												],
												"src": "26294:168:13"
											},
											{
												"body": {
													"nativeSrc": "26614:220:13",
													"nodeType": "YulBlock",
													"src": "26614:220:13",
													"statements": [
														{
															"nativeSrc": "26624:74:13",
															"nodeType": "YulAssignment",
															"src": "26624:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26690:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "26690:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26695:2:13",
																		"nodeType": "YulLiteral",
																		"src": "26695:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26631:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "26631:58:13"
																},
																"nativeSrc": "26631:67:13",
																"nodeType": "YulFunctionCall",
																"src": "26631:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26624:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "26624:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26796:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "26796:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "26707:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "26707:88:13"
																},
																"nativeSrc": "26707:93:13",
																"nodeType": "YulFunctionCall",
																"src": "26707:93:13"
															},
															"nativeSrc": "26707:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "26707:93:13"
														},
														{
															"nativeSrc": "26809:19:13",
															"nodeType": "YulAssignment",
															"src": "26809:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26820:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "26820:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26825:2:13",
																		"nodeType": "YulLiteral",
																		"src": "26825:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26816:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "26816:3:13"
																},
																"nativeSrc": "26816:12:13",
																"nodeType": "YulFunctionCall",
																"src": "26816:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26809:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "26809:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26468:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26602:3:13",
														"nodeType": "YulTypedName",
														"src": "26602:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26610:3:13",
														"nodeType": "YulTypedName",
														"src": "26610:3:13",
														"type": ""
													}
												],
												"src": "26468:366:13"
											},
											{
												"body": {
													"nativeSrc": "27011:248:13",
													"nodeType": "YulBlock",
													"src": "27011:248:13",
													"statements": [
														{
															"nativeSrc": "27021:26:13",
															"nodeType": "YulAssignment",
															"src": "27021:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27033:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "27033:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27044:2:13",
																		"nodeType": "YulLiteral",
																		"src": "27044:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27029:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27029:3:13"
																},
																"nativeSrc": "27029:18:13",
																"nodeType": "YulFunctionCall",
																"src": "27029:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27021:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "27021:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27068:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27068:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27079:1:13",
																				"nodeType": "YulLiteral",
																				"src": "27079:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27064:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27064:3:13"
																		},
																		"nativeSrc": "27064:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27064:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27087:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "27087:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27093:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27093:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27083:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27083:3:13"
																		},
																		"nativeSrc": "27083:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27083:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27057:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "27057:6:13"
																},
																"nativeSrc": "27057:47:13",
																"nodeType": "YulFunctionCall",
																"src": "27057:47:13"
															},
															"nativeSrc": "27057:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "27057:47:13"
														},
														{
															"nativeSrc": "27113:139:13",
															"nodeType": "YulAssignment",
															"src": "27113:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27247:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "27247:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27121:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "27121:124:13"
																},
																"nativeSrc": "27121:131:13",
																"nodeType": "YulFunctionCall",
																"src": "27121:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27113:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "27113:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26840:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26991:9:13",
														"nodeType": "YulTypedName",
														"src": "26991:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27006:4:13",
														"nodeType": "YulTypedName",
														"src": "27006:4:13",
														"type": ""
													}
												],
												"src": "26840:419:13"
											},
											{
												"body": {
													"nativeSrc": "27391:206:13",
													"nodeType": "YulBlock",
													"src": "27391:206:13",
													"statements": [
														{
															"nativeSrc": "27401:26:13",
															"nodeType": "YulAssignment",
															"src": "27401:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27413:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "27413:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27424:2:13",
																		"nodeType": "YulLiteral",
																		"src": "27424:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27409:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27409:3:13"
																},
																"nativeSrc": "27409:18:13",
																"nodeType": "YulFunctionCall",
																"src": "27409:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27401:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "27401:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27481:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27481:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27494:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27494:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27505:1:13",
																				"nodeType": "YulLiteral",
																				"src": "27505:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27490:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27490:3:13"
																		},
																		"nativeSrc": "27490:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27490:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27437:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27437:43:13"
																},
																"nativeSrc": "27437:71:13",
																"nodeType": "YulFunctionCall",
																"src": "27437:71:13"
															},
															"nativeSrc": "27437:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "27437:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27562:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27562:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27575:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27586:2:13",
																				"nodeType": "YulLiteral",
																				"src": "27586:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27571:3:13"
																		},
																		"nativeSrc": "27571:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27571:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27518:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27518:43:13"
																},
																"nativeSrc": "27518:72:13",
																"nodeType": "YulFunctionCall",
																"src": "27518:72:13"
															},
															"nativeSrc": "27518:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "27518:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "27265:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27355:9:13",
														"nodeType": "YulTypedName",
														"src": "27355:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27367:6:13",
														"nodeType": "YulTypedName",
														"src": "27367:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27375:6:13",
														"nodeType": "YulTypedName",
														"src": "27375:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27386:4:13",
														"nodeType": "YulTypedName",
														"src": "27386:4:13",
														"type": ""
													}
												],
												"src": "27265:332:13"
											},
											{
												"body": {
													"nativeSrc": "27757:288:13",
													"nodeType": "YulBlock",
													"src": "27757:288:13",
													"statements": [
														{
															"nativeSrc": "27767:26:13",
															"nodeType": "YulAssignment",
															"src": "27767:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27779:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "27779:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27790:2:13",
																		"nodeType": "YulLiteral",
																		"src": "27790:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27775:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "27775:3:13"
																},
																"nativeSrc": "27775:18:13",
																"nodeType": "YulFunctionCall",
																"src": "27775:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27767:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "27767:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27847:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27847:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27860:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27860:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27871:1:13",
																				"nodeType": "YulLiteral",
																				"src": "27871:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27856:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27856:3:13"
																		},
																		"nativeSrc": "27856:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27856:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27803:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27803:43:13"
																},
																"nativeSrc": "27803:71:13",
																"nodeType": "YulFunctionCall",
																"src": "27803:71:13"
															},
															"nativeSrc": "27803:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "27803:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27928:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "27928:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27941:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "27941:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27952:2:13",
																				"nodeType": "YulLiteral",
																				"src": "27952:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27937:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "27937:3:13"
																		},
																		"nativeSrc": "27937:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "27937:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "27884:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27884:43:13"
																},
																"nativeSrc": "27884:72:13",
																"nodeType": "YulFunctionCall",
																"src": "27884:72:13"
															},
															"nativeSrc": "27884:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "27884:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28010:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "28010:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28023:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "28023:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28034:2:13",
																				"nodeType": "YulLiteral",
																				"src": "28034:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28019:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "28019:3:13"
																		},
																		"nativeSrc": "28019:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "28019:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "27966:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "27966:43:13"
																},
																"nativeSrc": "27966:72:13",
																"nodeType": "YulFunctionCall",
																"src": "27966:72:13"
															},
															"nativeSrc": "27966:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "27966:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "27603:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27713:9:13",
														"nodeType": "YulTypedName",
														"src": "27713:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "27725:6:13",
														"nodeType": "YulTypedName",
														"src": "27725:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27733:6:13",
														"nodeType": "YulTypedName",
														"src": "27733:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27741:6:13",
														"nodeType": "YulTypedName",
														"src": "27741:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27752:4:13",
														"nodeType": "YulTypedName",
														"src": "27752:4:13",
														"type": ""
													}
												],
												"src": "27603:442:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IScorer_$1808_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IScorer_$1808_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IScorer_$1808_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IScorer_$1808__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IScorer_$1808_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not within round duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(memPtr) {\n\n        mstore(add(memPtr, 0), \"No claimable amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds in jar\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Trust score\")\n\n    }\n\n    function abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ether transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect Ether amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit amount must be greater t\")\n\n        mstore(add(memPtr, 32), \"han zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Start time must be before end ti\")\n\n        mstore(add(memPtr, 32), \"me\")\n\n    }\n\n    function abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal amount must be greate\")\n\n        mstore(add(memPtr, 32), \"r than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e0575f3560e01c80638da5cb5b1161007e578063b807a3c411610058578063b807a3c414610347578063be9a76871461036f578063f2fde38b14610397578063f3fef3a3146103bf5761019f565b80638da5cb5b146102a5578063a9590e8a146102cf578063aee9c8721461030b5761019f565b8063485cc955116100ba578063485cc95514610211578063715018a61461023957806385c758f71461024f5780638a19c8bc146102795761019f565b80631e83409a146101a357806342cb1fbc146101cb57806347e7ef24146101f55761019f565b3661019f573460045f5f73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461013191906116cd565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6234604051610195919061170f565b60405180910390a3005b5f5ffd5b3480156101ae575f5ffd5b506101c960048036038101906101c49190611793565b6103e7565b005b3480156101d6575f5ffd5b506101df6108c2565b6040516101ec91906117cd565b60405180910390f35b61020f600480360381019061020a9190611810565b6108c6565b005b34801561021c575f5ffd5b506102376004803603810190610232919061184e565b610a6c565b005b348015610244575f5ffd5b5061024d610c2d565b005b34801561025a575f5ffd5b50610263610c40565b60405161027091906118e7565b60405180910390f35b348015610284575f5ffd5b5061028d610c64565b60405161029c93929190611970565b60405180910390f35b3480156102b0575f5ffd5b506102b9610d01565b6040516102c691906117cd565b60405180910390f35b3480156102da575f5ffd5b506102f560048036038101906102f0919061184e565b610d36565b604051610302919061170f565b60405180910390f35b348015610316575f5ffd5b50610331600480360381019061032c9190611793565b610d56565b60405161033e919061170f565b60405180910390f35b348015610352575f5ffd5b5061036d600480360381019061036891906119ac565b610d6b565b005b34801561037a575f5ffd5b5061039560048036038101906103909190611b28565b610e5a565b005b3480156103a2575f5ffd5b506103bd60048036038101906103b89190611793565b610f2c565b005b3480156103ca575f5ffd5b506103e560048036038101906103e09190611810565b610fb0565b005b60015f015442101580156103ff575060018001544211155b61043e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043590611bde565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116104fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f390611c46565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561057c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057390611cae565b60405180910390fd5b5f7f63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b90505f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663faa5e29533846040518363ffffffff1660e01b81526004016105fc929190611ce4565b602060405180830381865afa158015610617573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061063b9190611d1f565b1161067b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067290611d94565b60405180910390fd5b5f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508160045f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107449190611db2565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361082c575f3373ffffffffffffffffffffffffffffffffffffffff16836040516107a390611e12565b5f6040518083038185875af1925050503d805f81146107dd576040519150601f19603f3d011682016040523d82523d5f602084013e6107e2565b606091505b5050905080610826576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081d90611e70565b60405180910390fd5b50610858565b61085733838573ffffffffffffffffffffffffffffffffffffffff166112589092919063ffffffff16565b5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683846040516108b5919061170f565b60405180910390a3505050565b5f81565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109405780341461093b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093290611ed8565b60405180910390fd5b6109b0565b5f8111610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990611f66565b60405180910390fd5b6109af3330838573ffffffffffffffffffffffffffffffffffffffff166112d7909392919063ffffffff16565b5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109fc91906116cd565b925050819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6283604051610a60919061170f565b60405180910390a35050565b5f610a75611359565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff16148015610abd5750825b90505f60018367ffffffffffffffff16148015610af057505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610afe575080155b15610b35576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610b82576001855f0160086101000a81548160ff0219169083151502179055505b610b8b86611380565b865f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315610c24575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610c1b9190611fd0565b60405180910390a15b50505050505050565b610c35611394565b610c3e5f61141b565b565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805f015490806001015490806002018054610c8090612016565b80601f0160208091040260200160405190810160405280929190818152602001828054610cac90612016565b8015610cf75780601f10610cce57610100808354040283529160200191610cf7565b820191905f5260205f20905b815481529060010190602001808311610cda57829003601f168201915b5050505050905083565b5f5f610d0b6114ec565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6005602052815f5260405f20602052805f5260405f205f91509150505481565b6004602052805f5260405f205f915090505481565b610d73611394565b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc283604051610e4d919061170f565b60405180910390a3505050565b610e62611394565b818310610ea4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9b906120b6565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060015f820151815f0155602082015181600101556040820151816002019081610ee8919061226b565b509050507f09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13838383604051610f1f93929190611970565b60405180910390a1505050565b610f34611394565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fa4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f9b91906117cd565b60405180910390fd5b610fad8161141b565b50565b610fb8611394565b5f8111610ffa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff1906123aa565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561107a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107190612412565b60405180910390fd5b8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546110c69190611db2565b925050819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111b5575f611109610d01565b73ffffffffffffffffffffffffffffffffffffffff168260405161112c90611e12565b5f6040518083038185875af1925050503d805f8114611166576040519150601f19603f3d011682016040523d82523d5f602084013e61116b565b606091505b50509050806111af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111a690611e70565b60405180910390fd5b506111e8565b6111e76111c0610d01565b828473ffffffffffffffffffffffffffffffffffffffff166112589092919063ffffffff16565b5b8173ffffffffffffffffffffffffffffffffffffffff16611207610d01565b73ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb8360405161124c919061170f565b60405180910390a35050565b6112d2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161128b929190612430565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611513565b505050565b611353848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161130c93929190612457565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611513565b50505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b6113886115ae565b611391816115ee565b50565b61139c611672565b73ffffffffffffffffffffffffffffffffffffffff166113ba610d01565b73ffffffffffffffffffffffffffffffffffffffff1614611419576113dd611672565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161141091906117cd565b60405180910390fd5b565b5f6114246114ec565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f5f60205f8451602086015f885af180611532576040513d5f823e3d81fd5b3d92505f519150505f821461154b576001811415611566565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156115a857836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161159f91906117cd565b60405180910390fd5b50505050565b6115b6611679565b6115ec576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115f66115ae565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611666575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161165d91906117cd565b60405180910390fd5b61166f8161141b565b50565b5f33905090565b5f611682611359565b5f0160089054906101000a900460ff16905090565b5f819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116d782611697565b91506116e283611697565b92508282019050808211156116fa576116f96116a0565b5b92915050565b61170981611697565b82525050565b5f6020820190506117225f830184611700565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61176282611739565b9050919050565b61177281611758565b811461177c575f5ffd5b50565b5f8135905061178d81611769565b92915050565b5f602082840312156117a8576117a7611731565b5b5f6117b58482850161177f565b91505092915050565b6117c781611758565b82525050565b5f6020820190506117e05f8301846117be565b92915050565b6117ef81611697565b81146117f9575f5ffd5b50565b5f8135905061180a816117e6565b92915050565b5f5f6040838503121561182657611825611731565b5b5f6118338582860161177f565b9250506020611844858286016117fc565b9150509250929050565b5f5f6040838503121561186457611863611731565b5b5f6118718582860161177f565b92505060206118828582860161177f565b9150509250929050565b5f819050919050565b5f6118af6118aa6118a584611739565b61188c565b611739565b9050919050565b5f6118c082611895565b9050919050565b5f6118d1826118b6565b9050919050565b6118e1816118c7565b82525050565b5f6020820190506118fa5f8301846118d8565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61194282611900565b61194c818561190a565b935061195c81856020860161191a565b61196581611928565b840191505092915050565b5f6060820190506119835f830186611700565b6119906020830185611700565b81810360408301526119a28184611938565b9050949350505050565b5f5f5f606084860312156119c3576119c2611731565b5b5f6119d08682870161177f565b93505060206119e18682870161177f565b92505060406119f2868287016117fc565b9150509250925092565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611a3a82611928565b810181811067ffffffffffffffff82111715611a5957611a58611a04565b5b80604052505050565b5f611a6b611728565b9050611a778282611a31565b919050565b5f67ffffffffffffffff821115611a9657611a95611a04565b5b611a9f82611928565b9050602081019050919050565b828183375f83830152505050565b5f611acc611ac784611a7c565b611a62565b905082815260208101848484011115611ae857611ae7611a00565b5b611af3848285611aac565b509392505050565b5f82601f830112611b0f57611b0e6119fc565b5b8135611b1f848260208601611aba565b91505092915050565b5f5f5f60608486031215611b3f57611b3e611731565b5b5f611b4c868287016117fc565b9350506020611b5d868287016117fc565b925050604084013567ffffffffffffffff811115611b7e57611b7d611735565b5b611b8a86828701611afb565b9150509250925092565b7f4e6f742077697468696e20726f756e64206475726174696f6e000000000000005f82015250565b5f611bc860198361190a565b9150611bd382611b94565b602082019050919050565b5f6020820190508181035f830152611bf581611bbc565b9050919050565b7f4e6f20636c61696d61626c6520616d6f756e74000000000000000000000000005f82015250565b5f611c3060138361190a565b9150611c3b82611bfc565b602082019050919050565b5f6020820190508181035f830152611c5d81611c24565b9050919050565b7f496e73756666696369656e742066756e647320696e206a6172000000000000005f82015250565b5f611c9860198361190a565b9150611ca382611c64565b602082019050919050565b5f6020820190508181035f830152611cc581611c8c565b9050919050565b5f819050919050565b611cde81611ccc565b82525050565b5f604082019050611cf75f8301856117be565b611d046020830184611cd5565b9392505050565b5f81519050611d19816117e6565b92915050565b5f60208284031215611d3457611d33611731565b5b5f611d4184828501611d0b565b91505092915050565b7f496e73756666696369656e742054727573742073636f726500000000000000005f82015250565b5f611d7e60188361190a565b9150611d8982611d4a565b602082019050919050565b5f6020820190508181035f830152611dab81611d72565b9050919050565b5f611dbc82611697565b9150611dc783611697565b9250828203905081811115611ddf57611dde6116a0565b5b92915050565b5f81905092915050565b50565b5f611dfd5f83611de5565b9150611e0882611def565b5f82019050919050565b5f611e1c82611df2565b9150819050919050565b7f4574686572207472616e73666572206661696c656400000000000000000000005f82015250565b5f611e5a60158361190a565b9150611e6582611e26565b602082019050919050565b5f6020820190508181035f830152611e8781611e4e565b9050919050565b7f496e636f727265637420457468657220616d6f756e74000000000000000000005f82015250565b5f611ec260168361190a565b9150611ecd82611e8e565b602082019050919050565b5f6020820190508181035f830152611eef81611eb6565b9050919050565b7f4465706f73697420616d6f756e74206d757374206265206772656174657220745f8201527f68616e207a65726f000000000000000000000000000000000000000000000000602082015250565b5f611f5060288361190a565b9150611f5b82611ef6565b604082019050919050565b5f6020820190508181035f830152611f7d81611f44565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f611fba611fb5611fb084611f84565b61188c565b611f8d565b9050919050565b611fca81611fa0565b82525050565b5f602082019050611fe35f830184611fc1565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061202d57607f821691505b6020821081036120405761203f611fe9565b5b50919050565b7f53746172742074696d65206d757374206265206265666f726520656e642074695f8201527f6d65000000000000000000000000000000000000000000000000000000000000602082015250565b5f6120a060228361190a565b91506120ab82612046565b604082019050919050565b5f6020820190508181035f8301526120cd81612094565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026121307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826120f5565b61213a86836120f5565b95508019841693508086168417925050509392505050565b5f61216c61216761216284611697565b61188c565b611697565b9050919050565b5f819050919050565b61218583612152565b61219961219182612173565b848454612101565b825550505050565b5f5f905090565b6121b06121a1565b6121bb81848461217c565b505050565b5b818110156121de576121d35f826121a8565b6001810190506121c1565b5050565b601f821115612223576121f4816120d4565b6121fd846120e6565b8101602085101561220c578190505b612220612218856120e6565b8301826121c0565b50505b505050565b5f82821c905092915050565b5f6122435f1984600802612228565b1980831691505092915050565b5f61225b8383612234565b9150826002028217905092915050565b61227482611900565b67ffffffffffffffff81111561228d5761228c611a04565b5b6122978254612016565b6122a28282856121e2565b5f60209050601f8311600181146122d3575f84156122c1578287015190505b6122cb8582612250565b865550612332565b601f1984166122e1866120d4565b5f5b82811015612308578489015182556001820191506020850194506020810190506122e3565b868310156123255784890151612321601f891682612234565b8355505b6001600288020188555050505b505050505050565b7f5769746864726177616c20616d6f756e74206d757374206265206772656174655f8201527f72207468616e207a65726f000000000000000000000000000000000000000000602082015250565b5f612394602b8361190a565b915061239f8261233a565b604082019050919050565b5f6020820190508181035f8301526123c181612388565b9050919050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f6123fc60128361190a565b9150612407826123c8565b602082019050919050565b5f6020820190508181035f830152612429816123f0565b9050919050565b5f6040820190506124435f8301856117be565b6124506020830184611700565b9392505050565b5f60608201905061246a5f8301866117be565b61247760208301856117be565b6124846040830184611700565b94935050505056fea264697066735822122024e3517b87c161f501a8357a9651f0890b168285d910a9f32225e2a049ddc17964736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xB807A3C4 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xB807A3C4 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xBE9A7687 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0x3BF JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xA9590E8A EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xAEE9C872 EQ PUSH2 0x30B JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x485CC955 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x85C758F7 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x8A19C8BC EQ PUSH2 0x279 JUMPI PUSH2 0x19F JUMP JUMPDEST DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x42CB1FBC EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x47E7EF24 EQ PUSH2 0x1F5 JUMPI PUSH2 0x19F JUMP JUMPDEST CALLDATASIZE PUSH2 0x19F JUMPI CALLVALUE PUSH1 0x4 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0x3E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0xA6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0xC2D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x263 PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28D PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH2 0xD01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x184E JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x352 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x36D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x19AC JUMP JUMPDEST PUSH2 0xD6B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x395 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1B28 JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH2 0xF2C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E0 SWAP2 SWAP1 PUSH2 0x1810 JUMP JUMPDEST PUSH2 0xFB0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 ADD SLOAD TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x3FF JUMPI POP PUSH1 0x1 DUP1 ADD SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x435 SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F3 SWAP1 PUSH2 0x1C46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x573 SWAP1 PUSH2 0x1CAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x63608FAAE6311EF53110180034271A9B97988EBE924A609749732BC2F158407B SWAP1 POP PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFAA5E295 CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP3 SWAP2 SWAP1 PUSH2 0x1CE4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x1D1F JUMP JUMPDEST GT PUSH2 0x67B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x672 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x744 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82C JUMPI PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x7A3 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x826 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81D SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x858 JUMP JUMPDEST PUSH2 0x857 CALLER DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1258 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x940 JUMPI DUP1 CALLVALUE EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x932 SWAP1 PUSH2 0x1ED8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x979 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AF CALLER ADDRESS DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12D7 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x16CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA75 PUSH2 0x1359 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xABD JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAF0 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xAFE JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xB82 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xB8B DUP7 PUSH2 0x1380 JUMP JUMPDEST DUP7 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xC24 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x1FD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC35 PUSH2 0x1394 JUMP JUMPDEST PUSH2 0xC3E PUSH0 PUSH2 0x141B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xC80 SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCAC SWAP1 PUSH2 0x2016 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCF7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCCE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCF7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCDA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xD0B PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD73 PUSH2 0x1394 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE4D SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xE62 PUSH2 0x1394 JUMP JUMPDEST DUP2 DUP4 LT PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9B SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF1F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xF34 PUSH2 0x1394 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9B SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFAD DUP2 PUSH2 0x141B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xFB8 PUSH2 0x1394 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF1 SWAP1 PUSH2 0x23AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x107A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1071 SWAP1 PUSH2 0x2412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B5 JUMPI PUSH0 PUSH2 0x1109 PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x112C SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1166 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x116B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x11AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A6 SWAP1 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x11E8 JUMP JUMPDEST PUSH2 0x11E7 PUSH2 0x11C0 PUSH2 0xD01 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1258 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1207 PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB DUP4 PUSH1 0x40 MLOAD PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x12D2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x128B SWAP3 SWAP2 SWAP1 PUSH2 0x2430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1513 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1353 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x130C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2457 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1513 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1388 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x15EE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x139C PUSH2 0x1672 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13BA PUSH2 0xD01 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1419 JUMPI PUSH2 0x13DD PUSH2 0x1672 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1410 SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1424 PUSH2 0x14EC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1532 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x154B JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1566 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x15A8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159F SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15B6 PUSH2 0x1679 JUMP JUMPDEST PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15F6 PUSH2 0x15AE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1666 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165D SWAP2 SWAP1 PUSH2 0x17CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166F DUP2 PUSH2 0x141B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1682 PUSH2 0x1359 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16D7 DUP3 PUSH2 0x1697 JUMP JUMPDEST SWAP2 POP PUSH2 0x16E2 DUP4 PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x16FA JUMPI PUSH2 0x16F9 PUSH2 0x16A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1709 DUP2 PUSH2 0x1697 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1722 PUSH0 DUP4 ADD DUP5 PUSH2 0x1700 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1762 DUP3 PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1772 DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP2 EQ PUSH2 0x177C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x178D DUP2 PUSH2 0x1769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17A8 JUMPI PUSH2 0x17A7 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17B5 DUP5 DUP3 DUP6 ADD PUSH2 0x177F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17C7 DUP2 PUSH2 0x1758 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E0 PUSH0 DUP4 ADD DUP5 PUSH2 0x17BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17EF DUP2 PUSH2 0x1697 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180A DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1826 JUMPI PUSH2 0x1825 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1833 DUP6 DUP3 DUP7 ADD PUSH2 0x177F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1844 DUP6 DUP3 DUP7 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1871 DUP6 DUP3 DUP7 ADD PUSH2 0x177F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1882 DUP6 DUP3 DUP7 ADD PUSH2 0x177F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18AF PUSH2 0x18AA PUSH2 0x18A5 DUP5 PUSH2 0x1739 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18C0 DUP3 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18D1 DUP3 PUSH2 0x18B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18E1 DUP2 PUSH2 0x18C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18FA PUSH0 DUP4 ADD DUP5 PUSH2 0x18D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1942 DUP3 PUSH2 0x1900 JUMP JUMPDEST PUSH2 0x194C DUP2 DUP6 PUSH2 0x190A JUMP JUMPDEST SWAP4 POP PUSH2 0x195C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x191A JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1928 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1983 PUSH0 DUP4 ADD DUP7 PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x1990 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1700 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19A2 DUP2 DUP5 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19C3 JUMPI PUSH2 0x19C2 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19D0 DUP7 DUP3 DUP8 ADD PUSH2 0x177F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x19E1 DUP7 DUP3 DUP8 ADD PUSH2 0x177F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19F2 DUP7 DUP3 DUP8 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1A3A DUP3 PUSH2 0x1928 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A59 JUMPI PUSH2 0x1A58 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6B PUSH2 0x1728 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A77 DUP3 DUP3 PUSH2 0x1A31 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST PUSH2 0x1A9F DUP3 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACC PUSH2 0x1AC7 DUP5 PUSH2 0x1A7C JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1AE8 JUMPI PUSH2 0x1AE7 PUSH2 0x1A00 JUMP JUMPDEST JUMPDEST PUSH2 0x1AF3 DUP5 DUP3 DUP6 PUSH2 0x1AAC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x19FC JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B1F DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ABA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4C DUP7 DUP3 DUP8 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1B5D DUP7 DUP3 DUP8 ADD PUSH2 0x17FC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B7E JUMPI PUSH2 0x1B7D PUSH2 0x1735 JUMP JUMPDEST JUMPDEST PUSH2 0x1B8A DUP7 DUP3 DUP8 ADD PUSH2 0x1AFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E6F742077697468696E20726F756E64206475726174696F6E00000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC8 PUSH1 0x19 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD3 DUP3 PUSH2 0x1B94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF5 DUP2 PUSH2 0x1BBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C30 PUSH1 0x13 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3B DUP3 PUSH2 0x1BFC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C5D DUP2 PUSH2 0x1C24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E647320696E206A617200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C98 PUSH1 0x19 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP3 PUSH2 0x1C64 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CC5 DUP2 PUSH2 0x1C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CDE DUP2 PUSH2 0x1CCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1CF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x1D04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CD5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D19 DUP2 PUSH2 0x17E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D34 JUMPI PUSH2 0x1D33 PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D41 DUP5 DUP3 DUP6 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742054727573742073636F72650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7E PUSH1 0x18 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1D89 DUP3 PUSH2 0x1D4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DAB DUP2 PUSH2 0x1D72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBC DUP3 PUSH2 0x1697 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC7 DUP4 PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x16A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1DFD PUSH0 DUP4 PUSH2 0x1DE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E08 DUP3 PUSH2 0x1DEF JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1C DUP3 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4574686572207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5A PUSH1 0x15 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E65 DUP3 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E87 DUP2 PUSH2 0x1E4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F727265637420457468657220616D6F756E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EC2 PUSH1 0x16 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1ECD DUP3 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EEF DUP2 PUSH2 0x1EB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4465706F73697420616D6F756E74206D75737420626520677265617465722074 PUSH0 DUP3 ADD MSTORE PUSH32 0x68616E207A65726F000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F50 PUSH1 0x28 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F5B DUP3 PUSH2 0x1EF6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F7D DUP2 PUSH2 0x1F44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FBA PUSH2 0x1FB5 PUSH2 0x1FB0 DUP5 PUSH2 0x1F84 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1F8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FCA DUP2 PUSH2 0x1FA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FE3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x202D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2040 JUMPI PUSH2 0x203F PUSH2 0x1FE9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH0 DUP3 ADD MSTORE PUSH32 0x6D65000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH1 0x22 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP3 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20CD DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2130 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x213A DUP7 DUP4 PUSH2 0x20F5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x216C PUSH2 0x2167 PUSH2 0x2162 DUP5 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x188C JUMP JUMPDEST PUSH2 0x1697 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2185 DUP4 PUSH2 0x2152 JUMP JUMPDEST PUSH2 0x2199 PUSH2 0x2191 DUP3 PUSH2 0x2173 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2101 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x21B0 PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x21BB DUP2 DUP5 DUP5 PUSH2 0x217C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21DE JUMPI PUSH2 0x21D3 PUSH0 DUP3 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2223 JUMPI PUSH2 0x21F4 DUP2 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x21FD DUP5 PUSH2 0x20E6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x220C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2220 PUSH2 0x2218 DUP6 PUSH2 0x20E6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21C0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2243 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2228 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x225B DUP4 DUP4 PUSH2 0x2234 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2274 DUP3 PUSH2 0x1900 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228D JUMPI PUSH2 0x228C PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST PUSH2 0x2297 DUP3 SLOAD PUSH2 0x2016 JUMP JUMPDEST PUSH2 0x22A2 DUP3 DUP3 DUP6 PUSH2 0x21E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22D3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22C1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x22CB DUP6 DUP3 PUSH2 0x2250 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x22E1 DUP7 PUSH2 0x20D4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2308 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2325 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2321 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2234 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20616D6F756E74206D75737420626520677265617465 PUSH0 DUP3 ADD MSTORE PUSH32 0x72207468616E207A65726F000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2394 PUSH1 0x2B DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x239F DUP3 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C1 DUP2 PUSH2 0x2388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23FC PUSH1 0x12 DUP4 PUSH2 0x190A JUMP JUMPDEST SWAP2 POP PUSH2 0x2407 DUP3 PUSH2 0x23C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2429 DUP2 PUSH2 0x23F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2443 PUSH0 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x2450 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1700 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x246A PUSH0 DUP4 ADD DUP7 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x2477 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x2484 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1700 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xE3 MLOAD PUSH28 0x87C161F501A8357A9651F0890B168285D910A9F32225E2A049DDC179 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "367:5217:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5511:9;5487:13;:20;491:1;5487:20;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;491:1;5536:37;;5544:10;5536:37;;;5563:9;5536:37;;;;;;:::i;:::-;;;;;;;;367:5217;;;;;2620:1027;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;451:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2082:453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1682:182;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;525:21:11;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;788:25;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:69:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;904:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3879:202;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4330:278;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4813:557:11;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2620:1027;2697:12;:18;;;2678:15;:37;;:76;;;;;2738:12;:16;;;2719:15;:35;;2678:76;2670:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;2797:25;2825:14;:26;2840:10;2825:26;;;;;;;;;;;;;;;:33;2852:5;2825:33;;;;;;;;;;;;;;;;2797:61;;2897:1;2877:17;:21;2869:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2965:17;2941:13;:20;2955:5;2941:20;;;;;;;;;;;;;;;;:41;;2933:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3082:16;3101:18;3082:37;;3175:1;3138:6;;;;;;;;;;;:12;;;3151:10;3163:8;3138:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;3130:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;3254:1;3218:14;:26;3233:10;3218:26;;;;;;;;;;;;;;;:33;3245:5;3218:33;;;;;;;;;;;;;;;:37;;;;3290:17;3266:13;:20;3280:5;3266:20;;;;;;;;;;;;;;;;:41;;;;;;;:::i;:::-;;;;;;;;491:1;3324:14;;:5;:14;;;3320:257;;3356:12;3374:10;:15;;3397:17;3374:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3355:64;;;3442:7;3434:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;3340:147;3320:257;;;3508:57;3535:10;3547:17;3515:5;3508:26;;;;:57;;;;;:::i;:::-;3320:257;3614:5;3594:45;;3602:10;3594:45;;;3621:17;3594:45;;;;;;:::i;:::-;;;;;;;;2659:988;;2620:1027;:::o;451:42::-;491:1;451:42;:::o;2082:453::-;491:1;2162:14;;:5;:14;;;2158:277;;2214:6;2201:9;:19;2193:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2158:277;;;2297:1;2288:6;:10;2280:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2358:65;2389:10;2409:4;2416:6;2365:5;2358:30;;;;:65;;;;;;:::i;:::-;2158:277;2471:6;2447:13;:20;2461:5;2447:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;2513:5;2493:34;;2501:10;2493:34;;;2520:6;2493:34;;;;;;:::i;:::-;;;;;;;;2082:453;;:::o;1682:182::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1766:21:11::1;1781:5;1766:14;:21::i;:::-;1848:7;1831:6;;:25;;;;;;;;;;;;;;;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1682:182:11;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;525:21:11:-;;;;;;;;;;;;;:::o;788:25::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1002:69:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;904:48::-;;;;;;;;;;;;;;;;;:::o;3879:202::-;2334:13:0;:11;:13::i;:::-;4010:6:11::1;3980:14;:20;3995:4;3980:20;;;;;;;;;;;;;;;:27;4001:5;3980:27;;;;;;;;;;;;;;;:36;;;;4059:5;4032:41;;4053:4;4032:41;;;4066:6;4032:41;;;;;;:::i;:::-;;;;;;;;3879:202:::0;;;:::o;4330:278::-;2334:13:0;:11;:13::i;:::-;4449:3:11::1;4441:5;:11;4433:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4517:30;;;;;;;;4523:5;4517:30;;;;4530:3;4517:30;;;;4535:11;4517:30;;::::0;4502:12:::1;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4563:37;4576:5;4583:3;4588:11;4563:37;;;;;;;;:::i;:::-;;;;;;;;4330:278:::0;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;4813:557:11:-;2334:13:0;:11;:13::i;:::-;4909:1:11::1;4900:6;:10;4892:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5001:6;4977:13;:20;4991:5;4977:20;;;;;;;;;;;;;;;;:30;;4969:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;5067:6;5043:13;:20;5057:5;5043:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;491:1;5090:14;;:5;:14;;::::0;5086:229:::1;;5122:12;5140:7;:5;:7::i;:::-;:12;;5160:6;5140:31;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5121:50;;;5194:7;5186:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5106:133;5086:229;;;5260:43;5287:7;:5;:7::i;:::-;5296:6;5267:5;5260:26;;;;:43;;;;;:::i;:::-;5086:229;5348:5;5330:32;;5339:7;:5;:7::i;:::-;5330:32;;;5355:6;5330:32;;;;;;:::i;:::-;;;;;;;;4813:557:::0;;:::o;1271:160:7:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;1670:188::-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2658:162::-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;7738:720:7:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:191;316:3;335:20;353:1;335:20;:::i;:::-;330:25;;369:20;387:1;369:20;:::i;:::-;364:25;;412:1;409;405:9;398:16;;433:3;430:1;427:10;424:36;;;440:18;;:::i;:::-;424:36;276:191;;;;:::o;473:118::-;560:24;578:5;560:24;:::i;:::-;555:3;548:37;473:118;;:::o;597:222::-;690:4;728:2;717:9;713:18;705:26;;741:71;809:1;798:9;794:17;785:6;741:71;:::i;:::-;597:222;;;;:::o;825:75::-;858:6;891:2;885:9;875:19;;825:75;:::o;906:117::-;1015:1;1012;1005:12;1029:117;1138:1;1135;1128:12;1152:126;1189:7;1229:42;1222:5;1218:54;1207:65;;1152:126;;;:::o;1284:96::-;1321:7;1350:24;1368:5;1350:24;:::i;:::-;1339:35;;1284:96;;;:::o;1386:122::-;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;1514:139::-;1560:5;1598:6;1585:20;1576:29;;1614:33;1641:5;1614:33;:::i;:::-;1514:139;;;;:::o;1659:329::-;1718:6;1767:2;1755:9;1746:7;1742:23;1738:32;1735:119;;;1773:79;;:::i;:::-;1735:119;1893:1;1918:53;1963:7;1954:6;1943:9;1939:22;1918:53;:::i;:::-;1908:63;;1864:117;1659:329;;;;:::o;1994:118::-;2081:24;2099:5;2081:24;:::i;:::-;2076:3;2069:37;1994:118;;:::o;2118:222::-;2211:4;2249:2;2238:9;2234:18;2226:26;;2262:71;2330:1;2319:9;2315:17;2306:6;2262:71;:::i;:::-;2118:222;;;;:::o;2346:122::-;2419:24;2437:5;2419:24;:::i;:::-;2412:5;2409:35;2399:63;;2458:1;2455;2448:12;2399:63;2346:122;:::o;2474:139::-;2520:5;2558:6;2545:20;2536:29;;2574:33;2601:5;2574:33;:::i;:::-;2474:139;;;;:::o;2619:474::-;2687:6;2695;2744:2;2732:9;2723:7;2719:23;2715:32;2712:119;;;2750:79;;:::i;:::-;2712:119;2870:1;2895:53;2940:7;2931:6;2920:9;2916:22;2895:53;:::i;:::-;2885:63;;2841:117;2997:2;3023:53;3068:7;3059:6;3048:9;3044:22;3023:53;:::i;:::-;3013:63;;2968:118;2619:474;;;;;:::o;3099:::-;3167:6;3175;3224:2;3212:9;3203:7;3199:23;3195:32;3192:119;;;3230:79;;:::i;:::-;3192:119;3350:1;3375:53;3420:7;3411:6;3400:9;3396:22;3375:53;:::i;:::-;3365:63;;3321:117;3477:2;3503:53;3548:7;3539:6;3528:9;3524:22;3503:53;:::i;:::-;3493:63;;3448:118;3099:474;;;;;:::o;3579:60::-;3607:3;3628:5;3621:12;;3579:60;;;:::o;3645:142::-;3695:9;3728:53;3746:34;3755:24;3773:5;3755:24;:::i;:::-;3746:34;:::i;:::-;3728:53;:::i;:::-;3715:66;;3645:142;;;:::o;3793:126::-;3843:9;3876:37;3907:5;3876:37;:::i;:::-;3863:50;;3793:126;;;:::o;3925:142::-;3991:9;4024:37;4055:5;4024:37;:::i;:::-;4011:50;;3925:142;;;:::o;4073:163::-;4176:53;4223:5;4176:53;:::i;:::-;4171:3;4164:66;4073:163;;:::o;4242:254::-;4351:4;4389:2;4378:9;4374:18;4366:26;;4402:87;4486:1;4475:9;4471:17;4462:6;4402:87;:::i;:::-;4242:254;;;;:::o;4502:99::-;4554:6;4588:5;4582:12;4572:22;;4502:99;;;:::o;4607:169::-;4691:11;4725:6;4720:3;4713:19;4765:4;4760:3;4756:14;4741:29;;4607:169;;;;:::o;4782:139::-;4871:6;4866:3;4861;4855:23;4912:1;4903:6;4898:3;4894:16;4887:27;4782:139;;;:::o;4927:102::-;4968:6;5019:2;5015:7;5010:2;5003:5;4999:14;4995:28;4985:38;;4927:102;;;:::o;5035:377::-;5123:3;5151:39;5184:5;5151:39;:::i;:::-;5206:71;5270:6;5265:3;5206:71;:::i;:::-;5199:78;;5286:65;5344:6;5339:3;5332:4;5325:5;5321:16;5286:65;:::i;:::-;5376:29;5398:6;5376:29;:::i;:::-;5371:3;5367:39;5360:46;;5127:285;5035:377;;;;:::o;5418:533::-;5587:4;5625:2;5614:9;5610:18;5602:26;;5638:71;5706:1;5695:9;5691:17;5682:6;5638:71;:::i;:::-;5719:72;5787:2;5776:9;5772:18;5763:6;5719:72;:::i;:::-;5838:9;5832:4;5828:20;5823:2;5812:9;5808:18;5801:48;5866:78;5939:4;5930:6;5866:78;:::i;:::-;5858:86;;5418:533;;;;;;:::o;5957:619::-;6034:6;6042;6050;6099:2;6087:9;6078:7;6074:23;6070:32;6067:119;;;6105:79;;:::i;:::-;6067:119;6225:1;6250:53;6295:7;6286:6;6275:9;6271:22;6250:53;:::i;:::-;6240:63;;6196:117;6352:2;6378:53;6423:7;6414:6;6403:9;6399:22;6378:53;:::i;:::-;6368:63;;6323:118;6480:2;6506:53;6551:7;6542:6;6531:9;6527:22;6506:53;:::i;:::-;6496:63;;6451:118;5957:619;;;;;:::o;6582:117::-;6691:1;6688;6681:12;6705:117;6814:1;6811;6804:12;6828:180;6876:77;6873:1;6866:88;6973:4;6970:1;6963:15;6997:4;6994:1;6987:15;7014:281;7097:27;7119:4;7097:27;:::i;:::-;7089:6;7085:40;7227:6;7215:10;7212:22;7191:18;7179:10;7176:34;7173:62;7170:88;;;7238:18;;:::i;:::-;7170:88;7278:10;7274:2;7267:22;7057:238;7014:281;;:::o;7301:129::-;7335:6;7362:20;;:::i;:::-;7352:30;;7391:33;7419:4;7411:6;7391:33;:::i;:::-;7301:129;;;:::o;7436:308::-;7498:4;7588:18;7580:6;7577:30;7574:56;;;7610:18;;:::i;:::-;7574:56;7648:29;7670:6;7648:29;:::i;:::-;7640:37;;7732:4;7726;7722:15;7714:23;;7436:308;;;:::o;7750:148::-;7848:6;7843:3;7838;7825:30;7889:1;7880:6;7875:3;7871:16;7864:27;7750:148;;;:::o;7904:425::-;7982:5;8007:66;8023:49;8065:6;8023:49;:::i;:::-;8007:66;:::i;:::-;7998:75;;8096:6;8089:5;8082:21;8134:4;8127:5;8123:16;8172:3;8163:6;8158:3;8154:16;8151:25;8148:112;;;8179:79;;:::i;:::-;8148:112;8269:54;8316:6;8311:3;8306;8269:54;:::i;:::-;7988:341;7904:425;;;;;:::o;8349:340::-;8405:5;8454:3;8447:4;8439:6;8435:17;8431:27;8421:122;;8462:79;;:::i;:::-;8421:122;8579:6;8566:20;8604:79;8679:3;8671:6;8664:4;8656:6;8652:17;8604:79;:::i;:::-;8595:88;;8411:278;8349:340;;;;:::o;8695:799::-;8782:6;8790;8798;8847:2;8835:9;8826:7;8822:23;8818:32;8815:119;;;8853:79;;:::i;:::-;8815:119;8973:1;8998:53;9043:7;9034:6;9023:9;9019:22;8998:53;:::i;:::-;8988:63;;8944:117;9100:2;9126:53;9171:7;9162:6;9151:9;9147:22;9126:53;:::i;:::-;9116:63;;9071:118;9256:2;9245:9;9241:18;9228:32;9287:18;9279:6;9276:30;9273:117;;;9309:79;;:::i;:::-;9273:117;9414:63;9469:7;9460:6;9449:9;9445:22;9414:63;:::i;:::-;9404:73;;9199:288;8695:799;;;;;:::o;9500:175::-;9640:27;9636:1;9628:6;9624:14;9617:51;9500:175;:::o;9681:366::-;9823:3;9844:67;9908:2;9903:3;9844:67;:::i;:::-;9837:74;;9920:93;10009:3;9920:93;:::i;:::-;10038:2;10033:3;10029:12;10022:19;;9681:366;;;:::o;10053:419::-;10219:4;10257:2;10246:9;10242:18;10234:26;;10306:9;10300:4;10296:20;10292:1;10281:9;10277:17;10270:47;10334:131;10460:4;10334:131;:::i;:::-;10326:139;;10053:419;;;:::o;10478:169::-;10618:21;10614:1;10606:6;10602:14;10595:45;10478:169;:::o;10653:366::-;10795:3;10816:67;10880:2;10875:3;10816:67;:::i;:::-;10809:74;;10892:93;10981:3;10892:93;:::i;:::-;11010:2;11005:3;11001:12;10994:19;;10653:366;;;:::o;11025:419::-;11191:4;11229:2;11218:9;11214:18;11206:26;;11278:9;11272:4;11268:20;11264:1;11253:9;11249:17;11242:47;11306:131;11432:4;11306:131;:::i;:::-;11298:139;;11025:419;;;:::o;11450:175::-;11590:27;11586:1;11578:6;11574:14;11567:51;11450:175;:::o;11631:366::-;11773:3;11794:67;11858:2;11853:3;11794:67;:::i;:::-;11787:74;;11870:93;11959:3;11870:93;:::i;:::-;11988:2;11983:3;11979:12;11972:19;;11631:366;;;:::o;12003:419::-;12169:4;12207:2;12196:9;12192:18;12184:26;;12256:9;12250:4;12246:20;12242:1;12231:9;12227:17;12220:47;12284:131;12410:4;12284:131;:::i;:::-;12276:139;;12003:419;;;:::o;12428:77::-;12465:7;12494:5;12483:16;;12428:77;;;:::o;12511:118::-;12598:24;12616:5;12598:24;:::i;:::-;12593:3;12586:37;12511:118;;:::o;12635:332::-;12756:4;12794:2;12783:9;12779:18;12771:26;;12807:71;12875:1;12864:9;12860:17;12851:6;12807:71;:::i;:::-;12888:72;12956:2;12945:9;12941:18;12932:6;12888:72;:::i;:::-;12635:332;;;;;:::o;12973:143::-;13030:5;13061:6;13055:13;13046:22;;13077:33;13104:5;13077:33;:::i;:::-;12973:143;;;;:::o;13122:351::-;13192:6;13241:2;13229:9;13220:7;13216:23;13212:32;13209:119;;;13247:79;;:::i;:::-;13209:119;13367:1;13392:64;13448:7;13439:6;13428:9;13424:22;13392:64;:::i;:::-;13382:74;;13338:128;13122:351;;;;:::o;13479:174::-;13619:26;13615:1;13607:6;13603:14;13596:50;13479:174;:::o;13659:366::-;13801:3;13822:67;13886:2;13881:3;13822:67;:::i;:::-;13815:74;;13898:93;13987:3;13898:93;:::i;:::-;14016:2;14011:3;14007:12;14000:19;;13659:366;;;:::o;14031:419::-;14197:4;14235:2;14224:9;14220:18;14212:26;;14284:9;14278:4;14274:20;14270:1;14259:9;14255:17;14248:47;14312:131;14438:4;14312:131;:::i;:::-;14304:139;;14031:419;;;:::o;14456:194::-;14496:4;14516:20;14534:1;14516:20;:::i;:::-;14511:25;;14550:20;14568:1;14550:20;:::i;:::-;14545:25;;14594:1;14591;14587:9;14579:17;;14618:1;14612:4;14609:11;14606:37;;;14623:18;;:::i;:::-;14606:37;14456:194;;;;:::o;14656:147::-;14757:11;14794:3;14779:18;;14656:147;;;;:::o;14809:114::-;;:::o;14929:398::-;15088:3;15109:83;15190:1;15185:3;15109:83;:::i;:::-;15102:90;;15201:93;15290:3;15201:93;:::i;:::-;15319:1;15314:3;15310:11;15303:18;;14929:398;;;:::o;15333:379::-;15517:3;15539:147;15682:3;15539:147;:::i;:::-;15532:154;;15703:3;15696:10;;15333:379;;;:::o;15718:171::-;15858:23;15854:1;15846:6;15842:14;15835:47;15718:171;:::o;15895:366::-;16037:3;16058:67;16122:2;16117:3;16058:67;:::i;:::-;16051:74;;16134:93;16223:3;16134:93;:::i;:::-;16252:2;16247:3;16243:12;16236:19;;15895:366;;;:::o;16267:419::-;16433:4;16471:2;16460:9;16456:18;16448:26;;16520:9;16514:4;16510:20;16506:1;16495:9;16491:17;16484:47;16548:131;16674:4;16548:131;:::i;:::-;16540:139;;16267:419;;;:::o;16692:172::-;16832:24;16828:1;16820:6;16816:14;16809:48;16692:172;:::o;16870:366::-;17012:3;17033:67;17097:2;17092:3;17033:67;:::i;:::-;17026:74;;17109:93;17198:3;17109:93;:::i;:::-;17227:2;17222:3;17218:12;17211:19;;16870:366;;;:::o;17242:419::-;17408:4;17446:2;17435:9;17431:18;17423:26;;17495:9;17489:4;17485:20;17481:1;17470:9;17466:17;17459:47;17523:131;17649:4;17523:131;:::i;:::-;17515:139;;17242:419;;;:::o;17667:227::-;17807:34;17803:1;17795:6;17791:14;17784:58;17876:10;17871:2;17863:6;17859:15;17852:35;17667:227;:::o;17900:366::-;18042:3;18063:67;18127:2;18122:3;18063:67;:::i;:::-;18056:74;;18139:93;18228:3;18139:93;:::i;:::-;18257:2;18252:3;18248:12;18241:19;;17900:366;;;:::o;18272:419::-;18438:4;18476:2;18465:9;18461:18;18453:26;;18525:9;18519:4;18515:20;18511:1;18500:9;18496:17;18489:47;18553:131;18679:4;18553:131;:::i;:::-;18545:139;;18272:419;;;:::o;18697:85::-;18742:7;18771:5;18760:16;;18697:85;;;:::o;18788:101::-;18824:7;18864:18;18857:5;18853:30;18842:41;;18788:101;;;:::o;18895:156::-;18952:9;18985:60;19002:42;19011:32;19037:5;19011:32;:::i;:::-;19002:42;:::i;:::-;18985:60;:::i;:::-;18972:73;;18895:156;;;:::o;19057:145::-;19151:44;19189:5;19151:44;:::i;:::-;19146:3;19139:57;19057:145;;:::o;19208:236::-;19308:4;19346:2;19335:9;19331:18;19323:26;;19359:78;19434:1;19423:9;19419:17;19410:6;19359:78;:::i;:::-;19208:236;;;;:::o;19450:180::-;19498:77;19495:1;19488:88;19595:4;19592:1;19585:15;19619:4;19616:1;19609:15;19636:320;19680:6;19717:1;19711:4;19707:12;19697:22;;19764:1;19758:4;19754:12;19785:18;19775:81;;19841:4;19833:6;19829:17;19819:27;;19775:81;19903:2;19895:6;19892:14;19872:18;19869:38;19866:84;;19922:18;;:::i;:::-;19866:84;19687:269;19636:320;;;:::o;19962:221::-;20102:34;20098:1;20090:6;20086:14;20079:58;20171:4;20166:2;20158:6;20154:15;20147:29;19962:221;:::o;20189:366::-;20331:3;20352:67;20416:2;20411:3;20352:67;:::i;:::-;20345:74;;20428:93;20517:3;20428:93;:::i;:::-;20546:2;20541:3;20537:12;20530:19;;20189:366;;;:::o;20561:419::-;20727:4;20765:2;20754:9;20750:18;20742:26;;20814:9;20808:4;20804:20;20800:1;20789:9;20785:17;20778:47;20842:131;20968:4;20842:131;:::i;:::-;20834:139;;20561:419;;;:::o;20986:141::-;21035:4;21058:3;21050:11;;21081:3;21078:1;21071:14;21115:4;21112:1;21102:18;21094:26;;20986:141;;;:::o;21133:93::-;21170:6;21217:2;21212;21205:5;21201:14;21197:23;21187:33;;21133:93;;;:::o;21232:107::-;21276:8;21326:5;21320:4;21316:16;21295:37;;21232:107;;;;:::o;21345:393::-;21414:6;21464:1;21452:10;21448:18;21487:97;21517:66;21506:9;21487:97;:::i;:::-;21605:39;21635:8;21624:9;21605:39;:::i;:::-;21593:51;;21677:4;21673:9;21666:5;21662:21;21653:30;;21726:4;21716:8;21712:19;21705:5;21702:30;21692:40;;21421:317;;21345:393;;;;;:::o;21744:142::-;21794:9;21827:53;21845:34;21854:24;21872:5;21854:24;:::i;:::-;21845:34;:::i;:::-;21827:53;:::i;:::-;21814:66;;21744:142;;;:::o;21892:75::-;21935:3;21956:5;21949:12;;21892:75;;;:::o;21973:269::-;22083:39;22114:7;22083:39;:::i;:::-;22144:91;22193:41;22217:16;22193:41;:::i;:::-;22185:6;22178:4;22172:11;22144:91;:::i;:::-;22138:4;22131:105;22049:193;21973:269;;;:::o;22248:73::-;22293:3;22314:1;22307:8;;22248:73;:::o;22327:189::-;22404:32;;:::i;:::-;22445:65;22503:6;22495;22489:4;22445:65;:::i;:::-;22380:136;22327:189;;:::o;22522:186::-;22582:120;22599:3;22592:5;22589:14;22582:120;;;22653:39;22690:1;22683:5;22653:39;:::i;:::-;22626:1;22619:5;22615:13;22606:22;;22582:120;;;22522:186;;:::o;22714:543::-;22815:2;22810:3;22807:11;22804:446;;;22849:38;22881:5;22849:38;:::i;:::-;22933:29;22951:10;22933:29;:::i;:::-;22923:8;22919:44;23116:2;23104:10;23101:18;23098:49;;;23137:8;23122:23;;23098:49;23160:80;23216:22;23234:3;23216:22;:::i;:::-;23206:8;23202:37;23189:11;23160:80;:::i;:::-;22819:431;;22804:446;22714:543;;;:::o;23263:117::-;23317:8;23367:5;23361:4;23357:16;23336:37;;23263:117;;;;:::o;23386:169::-;23430:6;23463:51;23511:1;23507:6;23499:5;23496:1;23492:13;23463:51;:::i;:::-;23459:56;23544:4;23538;23534:15;23524:25;;23437:118;23386:169;;;;:::o;23560:295::-;23636:4;23782:29;23807:3;23801:4;23782:29;:::i;:::-;23774:37;;23844:3;23841:1;23837:11;23831:4;23828:21;23820:29;;23560:295;;;;:::o;23860:1395::-;23977:37;24010:3;23977:37;:::i;:::-;24079:18;24071:6;24068:30;24065:56;;;24101:18;;:::i;:::-;24065:56;24145:38;24177:4;24171:11;24145:38;:::i;:::-;24230:67;24290:6;24282;24276:4;24230:67;:::i;:::-;24324:1;24348:4;24335:17;;24380:2;24372:6;24369:14;24397:1;24392:618;;;;25054:1;25071:6;25068:77;;;25120:9;25115:3;25111:19;25105:26;25096:35;;25068:77;25171:67;25231:6;25224:5;25171:67;:::i;:::-;25165:4;25158:81;25027:222;24362:887;;24392:618;24444:4;24440:9;24432:6;24428:22;24478:37;24510:4;24478:37;:::i;:::-;24537:1;24551:208;24565:7;24562:1;24559:14;24551:208;;;24644:9;24639:3;24635:19;24629:26;24621:6;24614:42;24695:1;24687:6;24683:14;24673:24;;24742:2;24731:9;24727:18;24714:31;;24588:4;24585:1;24581:12;24576:17;;24551:208;;;24787:6;24778:7;24775:19;24772:179;;;24845:9;24840:3;24836:19;24830:26;24888:48;24930:4;24922:6;24918:17;24907:9;24888:48;:::i;:::-;24880:6;24873:64;24795:156;24772:179;24997:1;24993;24985:6;24981:14;24977:22;24971:4;24964:36;24399:611;;;24362:887;;23952:1303;;;23860:1395;;:::o;25261:230::-;25401:34;25397:1;25389:6;25385:14;25378:58;25470:13;25465:2;25457:6;25453:15;25446:38;25261:230;:::o;25497:366::-;25639:3;25660:67;25724:2;25719:3;25660:67;:::i;:::-;25653:74;;25736:93;25825:3;25736:93;:::i;:::-;25854:2;25849:3;25845:12;25838:19;;25497:366;;;:::o;25869:419::-;26035:4;26073:2;26062:9;26058:18;26050:26;;26122:9;26116:4;26112:20;26108:1;26097:9;26093:17;26086:47;26150:131;26276:4;26150:131;:::i;:::-;26142:139;;25869:419;;;:::o;26294:168::-;26434:20;26430:1;26422:6;26418:14;26411:44;26294:168;:::o;26468:366::-;26610:3;26631:67;26695:2;26690:3;26631:67;:::i;:::-;26624:74;;26707:93;26796:3;26707:93;:::i;:::-;26825:2;26820:3;26816:12;26809:19;;26468:366;;;:::o;26840:419::-;27006:4;27044:2;27033:9;27029:18;27021:26;;27093:9;27087:4;27083:20;27079:1;27068:9;27064:17;27057:47;27121:131;27247:4;27121:131;:::i;:::-;27113:139;;26840:419;;;:::o;27265:332::-;27386:4;27424:2;27413:9;27409:18;27401:26;;27437:71;27505:1;27494:9;27490:17;27481:6;27437:71;:::i;:::-;27518:72;27586:2;27575:9;27571:18;27562:6;27518:72;:::i;:::-;27265:332;;;;;:::o;27603:442::-;27752:4;27790:2;27779:9;27775:18;27767:26;;27803:71;27871:1;27860:9;27856:17;27847:6;27803:71;:::i;:::-;27884:72;27952:2;27941:9;27937:18;27928:6;27884:72;:::i;:::-;27966;28034:2;28023:9;28019:18;28010:6;27966:72;:::i;:::-;27603:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1882000",
								"executionCost": "1988",
								"totalCost": "1883988"
							},
							"external": {
								"ETHER()": "418",
								"allowedAmounts(address,address)": "infinite",
								"claim(address)": "infinite",
								"currentRound()": "infinite",
								"deposit(address,uint256)": "infinite",
								"initialize(address,address)": "infinite",
								"owner()": "2589",
								"renounceOwnership()": "infinite",
								"scorer()": "infinite",
								"setAllowedAmount(address,address,uint256)": "infinite",
								"setRound(uint256,uint256,string)": "infinite",
								"totalBalances(address)": "2869",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 5584,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024e3517b87c161f501a8357a9651f0890b168285d910a9f32225e2a049ddc17964736f6c634300081c0033",
									".code": [
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "B807A3C4"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "B807A3C4"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "BE9A7687"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "F3FEF3A3"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "A9590E8A"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "AEE9C872"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "485CC955"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "485CC955"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "85C758F7"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "8A19C8BC"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "1E83409A"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "42CB1FBC"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "47E7EF24"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5500,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5507,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 5487,
											"end": 5520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5487,
											"end": 5520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH",
											"source": 11,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 5563,
											"end": 5572,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 5536,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5536,
											"end": 5573,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 5584,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2620,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2620,
											"end": 3647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 451,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 451,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2082,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2082,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1682,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1682,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 525,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 525,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 788,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 788,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1002,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1002,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1002,
											"end": 1071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 904,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 904,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 904,
											"end": 952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3879,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3879,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4330,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4330,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4813,
											"end": 5370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 4813,
											"end": 5370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2697,
											"end": 2709,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2697,
											"end": 2715,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2693,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2715,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2754,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2719,
											"end": 2734,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2719,
											"end": 2754,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2719,
											"end": 2754,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 2678,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 2670,
											"end": 2784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 2670,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2839,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2850,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2851,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2852,
											"end": 2857,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2825,
											"end": 2858,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2858,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2797,
											"end": 2858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2877,
											"end": 2898,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 2869,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2869,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2965,
											"end": 2982,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2954,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2960,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2961,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2982,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2941,
											"end": 2982,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2933,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2933,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3082,
											"end": 3098,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3119,
											"name": "PUSH",
											"source": 11,
											"value": "63608FAAE6311EF53110180034271A9B97988EBE924A609749732BC2F158407B"
										},
										{
											"begin": 3082,
											"end": 3119,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3082,
											"end": 3119,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3138,
											"end": 3144,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3150,
											"name": "PUSH",
											"source": 11,
											"value": "FAA5E295"
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3171,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3138,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 3138,
											"end": 3172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3138,
											"end": 3176,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3130,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3130,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3232,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3243,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3244,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3251,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3218,
											"end": 3255,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3290,
											"end": 3307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3279,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3280,
											"end": 3285,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 3266,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3307,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3356,
											"end": 3368,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3384,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3389,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3389,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3397,
											"end": 3414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 3374,
											"end": 3419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3419,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3419,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3449,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3434,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3535,
											"end": 3545,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3547,
											"end": 3564,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3534,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3534,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3508,
											"end": 3534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3508,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3320,
											"end": 3577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3614,
											"end": 3619,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3602,
											"end": 3612,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH",
											"source": 11,
											"value": "F7A40077FF7A04C7E61F6F26FB13774259DDF1B6BCE9ECF26A8276CDD3992683"
										},
										{
											"begin": 3621,
											"end": 3638,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 3594,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3594,
											"end": 3639,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 3647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2659,
											"end": 3647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 451,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 491,
											"end": 492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2210,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2220,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 2193,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2193,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2288,
											"end": 2298,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 2280,
											"end": 2343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 2280,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2389,
											"end": 2399,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2413,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 2358,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 2158,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2460,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2461,
											"end": 2466,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 2447,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2518,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH",
											"source": 11,
											"value": "5548C837AB068CF56A2C2479DF0882A4922FD203EDB7517321831D95078C5F62"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 2493,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2527,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2082,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1787,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1781,
											"end": 1786,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1766,
											"end": 1780,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1766,
											"end": 1787,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1766,
											"end": 1787,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1766,
											"end": 1787,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1848,
											"end": 1855,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1831,
											"end": 1856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1682,
											"end": 1864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 525,
											"end": 546,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 546,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 525,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 788,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 788,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 788,
											"end": 813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 788,
											"end": 813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1002,
											"end": 1071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 904,
											"end": 952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 3994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 3999,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4000,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4006,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4007,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4016,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4016,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4016,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3980,
											"end": 4016,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4059,
											"end": 4064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3D0601F3B0E52FD772F1FA71D91651B34B6A11144BEA30D74E0F820019A04DC2"
										},
										{
											"begin": 4066,
											"end": 4072,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4032,
											"end": 4073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4073,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3879,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4449,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4441,
											"end": 4446,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4441,
											"end": 4452,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 4433,
											"end": 4491,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 4433,
											"end": 4491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4523,
											"end": 4528,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4530,
											"end": 4533,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4546,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4547,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 4502,
											"end": 4547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4547,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9E6DB48F22357E6DCE2BBFF89DB8FF25F0012A08186D6EA72E2343FDC112E13"
										},
										{
											"begin": 4576,
											"end": 4581,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4586,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4588,
											"end": 4599,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 4563,
											"end": 4600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4600,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4330,
											"end": 4608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4909,
											"end": 4910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4910,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4892,
											"end": 4958,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4892,
											"end": 4958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5007,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4996,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4997,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5007,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 5007,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 4969,
											"end": 5030,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 4969,
											"end": 5030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5067,
											"end": 5073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5062,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5043,
											"end": 5073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 491,
											"end": 492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5090,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5090,
											"end": 5104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5090,
											"end": 5104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5090,
											"end": 5104,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5140,
											"end": 5145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5147,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5147,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5140,
											"end": 5147,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5140,
											"end": 5152,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5160,
											"end": 5166,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 5140,
											"end": 5171,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5121,
											"end": 5171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5201,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 5186,
											"end": 5227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 5186,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5106,
											"end": 5239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 5287,
											"end": 5294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 5287,
											"end": 5292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5287,
											"end": 5294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5287,
											"end": 5294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 5287,
											"end": 5294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5296,
											"end": 5302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5267,
											"end": 5272,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5260,
											"end": 5286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 5260,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 5260,
											"end": 5303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 5086,
											"end": 5315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5339,
											"end": 5346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 5339,
											"end": 5344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5339,
											"end": 5346,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5339,
											"end": 5346,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 5339,
											"end": 5346,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "9B1BFA7FA9EE420A16E124F794C35AC9F90472ACC99140EB2F6447C714CAD8EB"
										},
										{
											"begin": 5355,
											"end": 5361,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 5330,
											"end": 5362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5330,
											"end": 5362,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4813,
											"end": 5370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 90,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 138,
											"end": 215,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 216,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 232,
											"end": 233,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 259,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 264,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 276,
											"end": 467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 316,
											"end": 319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 353,
											"end": 354,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 335,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 335,
											"end": 355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 335,
											"end": 355,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 335,
											"end": 355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 369,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 369,
											"end": 389,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 369,
											"end": 389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 364,
											"end": 389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 364,
											"end": 389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 409,
											"end": 410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 405,
											"end": 414,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 398,
											"end": 414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 433,
											"end": 436,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 430,
											"end": 431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 427,
											"end": 437,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 440,
											"end": 458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 440,
											"end": 458,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 440,
											"end": 458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 424,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 424,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 276,
											"end": 467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 473,
											"end": 591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 560,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 560,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 560,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 555,
											"end": 558,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 548,
											"end": 585,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 473,
											"end": 591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 597,
											"end": 819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 690,
											"end": 694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 717,
											"end": 726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 713,
											"end": 731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 705,
											"end": 731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 705,
											"end": 731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 809,
											"end": 810,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 807,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 794,
											"end": 811,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 741,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 741,
											"end": 812,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 741,
											"end": 812,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 597,
											"end": 819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 825,
											"end": 900,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 825,
											"end": 900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 858,
											"end": 864,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 893,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 875,
											"end": 894,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 875,
											"end": 894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 825,
											"end": 900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 825,
											"end": 900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 906,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1015,
											"end": 1016,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1017,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1029,
											"end": 1146,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1029,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1138,
											"end": 1139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1140,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1189,
											"end": 1196,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1271,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1222,
											"end": 1227,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1218,
											"end": 1272,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1272,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1321,
											"end": 1328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1350,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 1350,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1284,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1477,
											"end": 1482,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 1459,
											"end": 1483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 1459,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1449,
											"end": 1484,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 1439,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1560,
											"end": 1565,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1604,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1576,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 1614,
											"end": 1647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1514,
											"end": 1653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1755,
											"end": 1764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1746,
											"end": 1753,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1742,
											"end": 1765,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1770,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 1773,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1773,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 1735,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1963,
											"end": 1970,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 1952,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1918,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1918,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1908,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1659,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 2081,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 2262,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 2262,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2346,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2419,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 2419,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2444,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2460,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2564,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2545,
											"end": 2565,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 2601,
											"end": 2606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2574,
											"end": 2607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 2574,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2744,
											"end": 2746,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2741,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2730,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2742,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2715,
											"end": 2747,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2750,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2750,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2712,
											"end": 2831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2940,
											"end": 2947,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2916,
											"end": 2938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2895,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2895,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2948,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2948,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 2999,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3059,
											"end": 3065,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3048,
											"end": 3057,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3044,
											"end": 3066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3023,
											"end": 3076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 3023,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 3086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3210,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3199,
											"end": 3222,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3227,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 3230,
											"end": 3309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 3230,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 3192,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 3420,
											"end": 3427,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3375,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 3375,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3365,
											"end": 3428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3477,
											"end": 3479,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 3548,
											"end": 3555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3539,
											"end": 3545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3528,
											"end": 3537,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3503,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3610,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3773,
											"end": 3778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3755,
											"end": 3779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 3755,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3746,
											"end": 3780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 3746,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3728,
											"end": 3781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 3728,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 3787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 3907,
											"end": 3912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 3876,
											"end": 3913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 3876,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3913,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 4024,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 4024,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4061,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3925,
											"end": 4067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 4223,
											"end": 4228,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 4176,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 4176,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4230,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4073,
											"end": 4236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4351,
											"end": 4355,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 4486,
											"end": 4487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4475,
											"end": 4484,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4402,
											"end": 4489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 4402,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4554,
											"end": 4560,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4594,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4572,
											"end": 4594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4572,
											"end": 4594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4691,
											"end": 4702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4731,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4720,
											"end": 4723,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4713,
											"end": 4732,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4770,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4871,
											"end": 4877,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4861,
											"end": 4864,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4878,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4898,
											"end": 4901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4999,
											"end": 5013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4995,
											"end": 5023,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4985,
											"end": 5023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4927,
											"end": 5029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5123,
											"end": 5126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 5184,
											"end": 5189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5151,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 5151,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 5270,
											"end": 5276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 5206,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 5206,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5277,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5199,
											"end": 5277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5339,
											"end": 5342,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5332,
											"end": 5336,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5330,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5321,
											"end": 5337,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 5286,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 5286,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 5398,
											"end": 5404,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 5376,
											"end": 5405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 5376,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5371,
											"end": 5374,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5406,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5587,
											"end": 5591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5627,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5614,
											"end": 5623,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5602,
											"end": 5628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5638,
											"end": 5709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 5638,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5769,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5719,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 5719,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5838,
											"end": 5847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5832,
											"end": 5836,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5828,
											"end": 5848,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5823,
											"end": 5825,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5812,
											"end": 5821,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5849,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 5939,
											"end": 5943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 5866,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 5866,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5858,
											"end": 5944,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5858,
											"end": 5944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5418,
											"end": 5951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6034,
											"end": 6040,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6048,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6099,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6078,
											"end": 6085,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6097,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6102,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 6105,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 6105,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 6067,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 6295,
											"end": 6302,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6286,
											"end": 6292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6284,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6271,
											"end": 6293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6250,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 6250,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6303,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6240,
											"end": 6303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6196,
											"end": 6313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6414,
											"end": 6420,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6403,
											"end": 6412,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6399,
											"end": 6421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6378,
											"end": 6431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 6378,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6431,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 6551,
											"end": 6558,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6531,
											"end": 6540,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6527,
											"end": 6549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 6506,
											"end": 6559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 6506,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6496,
											"end": 6559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6496,
											"end": 6559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6451,
											"end": 6569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5957,
											"end": 6576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6582,
											"end": 6699,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 6582,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6681,
											"end": 6693,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6705,
											"end": 6822,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 6705,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6812,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6816,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 7008,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 6828,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6953,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6954,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6963,
											"end": 6978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 7001,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 6994,
											"end": 6995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 7002,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 7097,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7095,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7227,
											"end": 7233,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7215,
											"end": 7225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7234,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7191,
											"end": 7209,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7179,
											"end": 7189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7210,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7173,
											"end": 7235,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7238,
											"end": 7256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 7238,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 7170,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7276,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7267,
											"end": 7289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7057,
											"end": 7295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7335,
											"end": 7341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 7362,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 7362,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7382,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 7419,
											"end": 7423,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 7391,
											"end": 7424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 7391,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7301,
											"end": 7430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7577,
											"end": 7607,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7610,
											"end": 7628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 7574,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 7648,
											"end": 7677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 7648,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7677,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7677,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7726,
											"end": 7730,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7722,
											"end": 7737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7848,
											"end": 7854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7841,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7825,
											"end": 7855,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7880,
											"end": 7886,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7875,
											"end": 7878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7871,
											"end": 7887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7864,
											"end": 7891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 7987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 8065,
											"end": 8071,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 8023,
											"end": 8072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 8023,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 8007,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 8007,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7998,
											"end": 8073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8096,
											"end": 8102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8089,
											"end": 8094,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8082,
											"end": 8103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8132,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8123,
											"end": 8139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8172,
											"end": 8175,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8163,
											"end": 8169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8176,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 8179,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 8179,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 8148,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8314,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8309,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 8269,
											"end": 8323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "tag",
											"source": 13,
											"value": "429"
										},
										{
											"begin": 8269,
											"end": 8323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7988,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8405,
											"end": 8410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8457,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8447,
											"end": 8451,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 8439,
											"end": 8445,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8435,
											"end": 8452,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8431,
											"end": 8458,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 8462,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 8462,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 8421,
											"end": 8543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8579,
											"end": 8585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8566,
											"end": 8586,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8679,
											"end": 8682,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8671,
											"end": 8677,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 8669,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 8604,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 8604,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8683,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8595,
											"end": 8683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8411,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8349,
											"end": 8689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8796,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8849,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8822,
											"end": 8845,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8818,
											"end": 8850,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 8853,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 8815,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8973,
											"end": 8974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 9043,
											"end": 9050,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9034,
											"end": 9040,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9023,
											"end": 9032,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9019,
											"end": 9041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 8998,
											"end": 9051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 8998,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8988,
											"end": 9051,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8988,
											"end": 9051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8944,
											"end": 9061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9100,
											"end": 9102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 9171,
											"end": 9178,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9160,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9147,
											"end": 9169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 9126,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 9126,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9179,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9116,
											"end": 9179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9071,
											"end": 9189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9256,
											"end": 9258,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9228,
											"end": 9260,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9287,
											"end": 9305,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9279,
											"end": 9285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9276,
											"end": 9306,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9309,
											"end": 9388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 9309,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 9273,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 9469,
											"end": 9476,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9460,
											"end": 9466,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9449,
											"end": 9458,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9445,
											"end": 9467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 9414,
											"end": 9477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 9414,
											"end": 9477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9477,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9199,
											"end": 9487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8695,
											"end": 9494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9675,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 9500,
											"end": 9675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9667,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F742077697468696E20726F756E64206475726174696F6E00000000000000"
										},
										{
											"begin": 9636,
											"end": 9637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9823,
											"end": 9826,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 9908,
											"end": 9910,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 9903,
											"end": 9906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 9844,
											"end": 9911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 9844,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 9911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9837,
											"end": 9911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 10009,
											"end": 10012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 9920,
											"end": 10013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 9920,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10038,
											"end": 10040,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10033,
											"end": 10036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10022,
											"end": 10041,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10022,
											"end": 10041,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9681,
											"end": 10047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10219,
											"end": 10223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10242,
											"end": 10260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10300,
											"end": 10304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10296,
											"end": 10316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10270,
											"end": 10317,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 10460,
											"end": 10464,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 10334,
											"end": 10465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 10334,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10465,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10326,
											"end": 10465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10647,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 10478,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10618,
											"end": 10639,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20636C61696D61626C6520616D6F756E7400000000000000000000000000"
										},
										{
											"begin": 10614,
											"end": 10615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10606,
											"end": 10612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10602,
											"end": 10616,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10595,
											"end": 10640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10795,
											"end": 10798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 10880,
											"end": 10882,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 10875,
											"end": 10878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 10816,
											"end": 10883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 10816,
											"end": 10883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10809,
											"end": 10883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10809,
											"end": 10883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 10981,
											"end": 10984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 10892,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 10892,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11010,
											"end": 11012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11005,
											"end": 11008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11001,
											"end": 11013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 11013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10653,
											"end": 11019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11191,
											"end": 11195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11218,
											"end": 11227,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11206,
											"end": 11232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11268,
											"end": 11288,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11264,
											"end": 11265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11253,
											"end": 11262,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11249,
											"end": 11266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11242,
											"end": 11289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 11432,
											"end": 11436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 11306,
											"end": 11437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 11306,
											"end": 11437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11298,
											"end": 11437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11298,
											"end": 11437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11625,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 11450,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11590,
											"end": 11617,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742066756E647320696E206A617200000000000000"
										},
										{
											"begin": 11586,
											"end": 11587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11578,
											"end": 11584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11574,
											"end": 11588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11567,
											"end": 11618,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11450,
											"end": 11625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11773,
											"end": 11776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 11858,
											"end": 11860,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 11853,
											"end": 11856,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 11794,
											"end": 11861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 11794,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11861,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11787,
											"end": 11861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 11959,
											"end": 11962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 11870,
											"end": 11963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 11870,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11988,
											"end": 11990,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11979,
											"end": 11991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11972,
											"end": 11991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11631,
											"end": 11997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12169,
											"end": 12173,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12196,
											"end": 12205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12256,
											"end": 12265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12250,
											"end": 12254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12246,
											"end": 12266,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12243,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12231,
											"end": 12240,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12227,
											"end": 12244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12220,
											"end": 12267,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 12410,
											"end": 12414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 12284,
											"end": 12415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 12284,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12276,
											"end": 12415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12276,
											"end": 12415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12003,
											"end": 12422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12505,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 12428,
											"end": 12505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12465,
											"end": 12472,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12494,
											"end": 12499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12483,
											"end": 12499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12483,
											"end": 12499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12428,
											"end": 12505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12629,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 12511,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12598,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12616,
											"end": 12621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12598,
											"end": 12622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 12598,
											"end": 12622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12598,
											"end": 12622,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 12598,
											"end": 12622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12596,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12623,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12756,
											"end": 12760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12794,
											"end": 12796,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12792,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12771,
											"end": 12797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12771,
											"end": 12797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12807,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 12875,
											"end": 12876,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12864,
											"end": 12873,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12860,
											"end": 12877,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12851,
											"end": 12857,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12807,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 12807,
											"end": 12878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12807,
											"end": 12878,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 12807,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12888,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 12956,
											"end": 12958,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12945,
											"end": 12954,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12941,
											"end": 12959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12932,
											"end": 12938,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12888,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 12888,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12888,
											"end": 12960,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 12888,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 13116,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 12973,
											"end": 13116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13030,
											"end": 13035,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13061,
											"end": 13067,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13055,
											"end": 13068,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13046,
											"end": 13068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13046,
											"end": 13068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13077,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13104,
											"end": 13109,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13077,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 13077,
											"end": 13110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13077,
											"end": 13110,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 13077,
											"end": 13110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 13116,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 13116,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 13116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 13116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12973,
											"end": 13116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13473,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 13122,
											"end": 13473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13192,
											"end": 13198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13241,
											"end": 13243,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13229,
											"end": 13238,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13220,
											"end": 13227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13216,
											"end": 13239,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13212,
											"end": 13244,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 13209,
											"end": 13328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13247,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 13247,
											"end": 13326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 13247,
											"end": 13326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13247,
											"end": 13326,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 13247,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13209,
											"end": 13328,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 13209,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13367,
											"end": 13368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13448,
											"end": 13455,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13439,
											"end": 13445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13428,
											"end": 13437,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13424,
											"end": 13446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13392,
											"end": 13456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13392,
											"end": 13456,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 13392,
											"end": 13456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13382,
											"end": 13456,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13382,
											"end": 13456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13338,
											"end": 13466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13473,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13473,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13122,
											"end": 13473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13653,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 13479,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13619,
											"end": 13645,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742054727573742073636F72650000000000000000"
										},
										{
											"begin": 13615,
											"end": 13616,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13607,
											"end": 13613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13603,
											"end": 13617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13596,
											"end": 13646,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14025,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 13659,
											"end": 14025,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13801,
											"end": 13804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 13886,
											"end": 13888,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 13881,
											"end": 13884,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13822,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 13822,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13822,
											"end": 13889,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 13822,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13815,
											"end": 13889,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13815,
											"end": 13889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 13987,
											"end": 13990,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 13898,
											"end": 13991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13898,
											"end": 13991,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 13898,
											"end": 13991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14016,
											"end": 14018,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14011,
											"end": 14014,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14007,
											"end": 14019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14000,
											"end": 14019,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14000,
											"end": 14019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14025,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14025,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14025,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13659,
											"end": 14025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14450,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 14031,
											"end": 14450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14197,
											"end": 14201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14235,
											"end": 14237,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14224,
											"end": 14233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14220,
											"end": 14238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14212,
											"end": 14238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14212,
											"end": 14238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14284,
											"end": 14293,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14282,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14294,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14270,
											"end": 14271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14259,
											"end": 14268,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14255,
											"end": 14272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14248,
											"end": 14295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14312,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 14438,
											"end": 14442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14312,
											"end": 14443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 14312,
											"end": 14443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14312,
											"end": 14443,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 14312,
											"end": 14443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14443,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14304,
											"end": 14443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14450,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14031,
											"end": 14450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14650,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 14456,
											"end": 14650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14516,
											"end": 14536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 14534,
											"end": 14535,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14516,
											"end": 14536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 14516,
											"end": 14536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14516,
											"end": 14536,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 14516,
											"end": 14536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14536,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14536,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 14568,
											"end": 14569,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 14550,
											"end": 14570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14550,
											"end": 14570,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 14550,
											"end": 14570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14545,
											"end": 14570,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14545,
											"end": 14570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14594,
											"end": 14595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14591,
											"end": 14592,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14587,
											"end": 14596,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14579,
											"end": 14596,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14579,
											"end": 14596,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14618,
											"end": 14619,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14612,
											"end": 14616,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14609,
											"end": 14620,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14606,
											"end": 14643,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14606,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 14606,
											"end": 14643,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14623,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 14623,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 14623,
											"end": 14641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14623,
											"end": 14641,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 14623,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14606,
											"end": 14643,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 14606,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14650,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14650,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14803,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 14656,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14757,
											"end": 14768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14794,
											"end": 14797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14779,
											"end": 14797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14779,
											"end": 14797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14803,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14803,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14656,
											"end": 14803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14809,
											"end": 14923,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 14809,
											"end": 14923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14809,
											"end": 14923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14809,
											"end": 14923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14929,
											"end": 15327,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 14929,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15088,
											"end": 15091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 15190,
											"end": 15191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15185,
											"end": 15188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15109,
											"end": 15192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 15109,
											"end": 15192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15109,
											"end": 15192,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 15109,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15192,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 15290,
											"end": 15293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 15201,
											"end": 15294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 15201,
											"end": 15294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15319,
											"end": 15320,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15314,
											"end": 15317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15310,
											"end": 15321,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15303,
											"end": 15321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15303,
											"end": 15321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14929,
											"end": 15327,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14929,
											"end": 15327,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14929,
											"end": 15327,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14929,
											"end": 15327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15712,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 15333,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15520,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15539,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 15682,
											"end": 15685,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15539,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 15539,
											"end": 15686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15539,
											"end": 15686,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 15539,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15532,
											"end": 15686,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15532,
											"end": 15686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15703,
											"end": 15706,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15696,
											"end": 15706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15712,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15712,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15333,
											"end": 15712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15889,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 15718,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15858,
											"end": 15881,
											"name": "PUSH",
											"source": 13,
											"value": "4574686572207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 15854,
											"end": 15855,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15846,
											"end": 15852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15842,
											"end": 15856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15835,
											"end": 15882,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 16261,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 15895,
											"end": 16261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16037,
											"end": 16040,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16058,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 16122,
											"end": 16124,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 16117,
											"end": 16120,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16058,
											"end": 16125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 16058,
											"end": 16125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16058,
											"end": 16125,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 16058,
											"end": 16125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16051,
											"end": 16125,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16051,
											"end": 16125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 16223,
											"end": 16226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 16134,
											"end": 16227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16134,
											"end": 16227,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 16134,
											"end": 16227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16252,
											"end": 16254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16247,
											"end": 16250,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16243,
											"end": 16255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16236,
											"end": 16255,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16236,
											"end": 16255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 16261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 16261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 16261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15895,
											"end": 16261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16686,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 16267,
											"end": 16686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16433,
											"end": 16437,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16473,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16460,
											"end": 16469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16456,
											"end": 16474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16448,
											"end": 16474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16448,
											"end": 16474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16520,
											"end": 16529,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16514,
											"end": 16518,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16510,
											"end": 16530,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16506,
											"end": 16507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16495,
											"end": 16504,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16491,
											"end": 16508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16484,
											"end": 16531,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16548,
											"end": 16679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 16674,
											"end": 16678,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16548,
											"end": 16679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 16548,
											"end": 16679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16548,
											"end": 16679,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 16548,
											"end": 16679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16540,
											"end": 16679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16540,
											"end": 16679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16686,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16692,
											"end": 16864,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 16692,
											"end": 16864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16832,
											"end": 16856,
											"name": "PUSH",
											"source": 13,
											"value": "496E636F727265637420457468657220616D6F756E7400000000000000000000"
										},
										{
											"begin": 16828,
											"end": 16829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16820,
											"end": 16826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16816,
											"end": 16830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16809,
											"end": 16857,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16692,
											"end": 16864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16692,
											"end": 16864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 17236,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 16870,
											"end": 17236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17012,
											"end": 17015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17033,
											"end": 17100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 17097,
											"end": 17099,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 17092,
											"end": 17095,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17033,
											"end": 17100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 17033,
											"end": 17100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17033,
											"end": 17100,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 17033,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17026,
											"end": 17100,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17026,
											"end": 17100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 17198,
											"end": 17201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 17109,
											"end": 17202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17109,
											"end": 17202,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 17109,
											"end": 17202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17227,
											"end": 17229,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17222,
											"end": 17225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17218,
											"end": 17230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17211,
											"end": 17230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17211,
											"end": 17230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 17236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 17236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 17236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16870,
											"end": 17236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17242,
											"end": 17661,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 17242,
											"end": 17661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17408,
											"end": 17412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17446,
											"end": 17448,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17435,
											"end": 17444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17431,
											"end": 17449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17423,
											"end": 17449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17423,
											"end": 17449,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17495,
											"end": 17504,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17489,
											"end": 17493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17485,
											"end": 17505,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17481,
											"end": 17482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17470,
											"end": 17479,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17466,
											"end": 17483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17459,
											"end": 17506,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17523,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 17649,
											"end": 17653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17523,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 17523,
											"end": 17654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17523,
											"end": 17654,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 17523,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17515,
											"end": 17654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17515,
											"end": 17654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17242,
											"end": 17661,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17242,
											"end": 17661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17242,
											"end": 17661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17242,
											"end": 17661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17667,
											"end": 17894,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 17667,
											"end": 17894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17807,
											"end": 17841,
											"name": "PUSH",
											"source": 13,
											"value": "4465706F73697420616D6F756E74206D75737420626520677265617465722074"
										},
										{
											"begin": 17803,
											"end": 17804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17795,
											"end": 17801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17791,
											"end": 17805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17784,
											"end": 17842,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17876,
											"end": 17886,
											"name": "PUSH",
											"source": 13,
											"value": "68616E207A65726F000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17871,
											"end": 17873,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17863,
											"end": 17869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17859,
											"end": 17874,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17852,
											"end": 17887,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17667,
											"end": 17894,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17667,
											"end": 17894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 18266,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 17900,
											"end": 18266,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18042,
											"end": 18045,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18063,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 18127,
											"end": 18129,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 18122,
											"end": 18125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18063,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 18063,
											"end": 18130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18063,
											"end": 18130,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 18063,
											"end": 18130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18056,
											"end": 18130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18056,
											"end": 18130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18139,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 18228,
											"end": 18231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18139,
											"end": 18232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 18139,
											"end": 18232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18139,
											"end": 18232,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 18139,
											"end": 18232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18257,
											"end": 18259,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18252,
											"end": 18255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18248,
											"end": 18260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18241,
											"end": 18260,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18241,
											"end": 18260,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 18266,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 18266,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 18266,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17900,
											"end": 18266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18691,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 18272,
											"end": 18691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18438,
											"end": 18442,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18476,
											"end": 18478,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18465,
											"end": 18474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18461,
											"end": 18479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18453,
											"end": 18479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18453,
											"end": 18479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18525,
											"end": 18534,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18519,
											"end": 18523,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18515,
											"end": 18535,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18511,
											"end": 18512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18500,
											"end": 18509,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18496,
											"end": 18513,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18489,
											"end": 18536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18553,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 18679,
											"end": 18683,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18553,
											"end": 18684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 18553,
											"end": 18684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18553,
											"end": 18684,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 18553,
											"end": 18684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18545,
											"end": 18684,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18545,
											"end": 18684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18691,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18697,
											"end": 18782,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 18697,
											"end": 18782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18742,
											"end": 18749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18771,
											"end": 18776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18760,
											"end": 18776,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18760,
											"end": 18776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18697,
											"end": 18782,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18697,
											"end": 18782,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18697,
											"end": 18782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18697,
											"end": 18782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18788,
											"end": 18889,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 18788,
											"end": 18889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18824,
											"end": 18831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18864,
											"end": 18882,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18857,
											"end": 18862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18853,
											"end": 18883,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 18842,
											"end": 18883,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18842,
											"end": 18883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18788,
											"end": 18889,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18788,
											"end": 18889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18788,
											"end": 18889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18788,
											"end": 18889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 19051,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 18895,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18961,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18985,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 19002,
											"end": 19044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 19011,
											"end": 19043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 19037,
											"end": 19042,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19011,
											"end": 19043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 19011,
											"end": 19043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19011,
											"end": 19043,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 19011,
											"end": 19043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19002,
											"end": 19044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 19002,
											"end": 19044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19002,
											"end": 19044,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 19002,
											"end": 19044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18985,
											"end": 19045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 18985,
											"end": 19045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18985,
											"end": 19045,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 18985,
											"end": 19045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18972,
											"end": 19045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18972,
											"end": 19045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 19051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 19051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 19051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18895,
											"end": 19051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19202,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 19057,
											"end": 19202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 19189,
											"end": 19194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 19151,
											"end": 19195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19151,
											"end": 19195,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 19151,
											"end": 19195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19146,
											"end": 19149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19139,
											"end": 19196,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19057,
											"end": 19202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19208,
											"end": 19444,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 19208,
											"end": 19444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19308,
											"end": 19312,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19346,
											"end": 19348,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19335,
											"end": 19344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19331,
											"end": 19349,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19323,
											"end": 19349,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19323,
											"end": 19349,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19359,
											"end": 19437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 19434,
											"end": 19435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19423,
											"end": 19432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19419,
											"end": 19436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19410,
											"end": 19416,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19359,
											"end": 19437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 19359,
											"end": 19437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19359,
											"end": 19437,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 19359,
											"end": 19437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19208,
											"end": 19444,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19208,
											"end": 19444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19208,
											"end": 19444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19208,
											"end": 19444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19208,
											"end": 19444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19450,
											"end": 19630,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 19450,
											"end": 19630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19498,
											"end": 19575,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19495,
											"end": 19496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19576,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19595,
											"end": 19599,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 19592,
											"end": 19593,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19585,
											"end": 19600,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19619,
											"end": 19623,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19616,
											"end": 19617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19609,
											"end": 19624,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19636,
											"end": 19956,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 19636,
											"end": 19956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19680,
											"end": 19686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19717,
											"end": 19718,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 19711,
											"end": 19715,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19707,
											"end": 19719,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19697,
											"end": 19719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19764,
											"end": 19765,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 19758,
											"end": 19762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19754,
											"end": 19766,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19785,
											"end": 19803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19775,
											"end": 19856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 19775,
											"end": 19856,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19841,
											"end": 19845,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 19833,
											"end": 19839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19829,
											"end": 19846,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19819,
											"end": 19846,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19819,
											"end": 19846,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19775,
											"end": 19856,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 19775,
											"end": 19856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19903,
											"end": 19905,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19895,
											"end": 19901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19892,
											"end": 19906,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19872,
											"end": 19890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19869,
											"end": 19907,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19866,
											"end": 19950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 19866,
											"end": 19950,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19922,
											"end": 19940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 19922,
											"end": 19940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 19922,
											"end": 19940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19922,
											"end": 19940,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 19922,
											"end": 19940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19866,
											"end": 19950,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 19866,
											"end": 19950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19687,
											"end": 19956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19636,
											"end": 19956,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19636,
											"end": 19956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19636,
											"end": 19956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19636,
											"end": 19956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19962,
											"end": 20183,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 19962,
											"end": 20183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20102,
											"end": 20136,
											"name": "PUSH",
											"source": 13,
											"value": "53746172742074696D65206D757374206265206265666F726520656E64207469"
										},
										{
											"begin": 20098,
											"end": 20099,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20090,
											"end": 20096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20086,
											"end": 20100,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20079,
											"end": 20137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20171,
											"end": 20175,
											"name": "PUSH",
											"source": 13,
											"value": "6D65000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20166,
											"end": 20168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20158,
											"end": 20164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20154,
											"end": 20169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20147,
											"end": 20176,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19962,
											"end": 20183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19962,
											"end": 20183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20331,
											"end": 20334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 20416,
											"end": 20418,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 20411,
											"end": 20414,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 20352,
											"end": 20419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 20352,
											"end": 20419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20345,
											"end": 20419,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20345,
											"end": 20419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 20517,
											"end": 20520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 20428,
											"end": 20521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 20428,
											"end": 20521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20546,
											"end": 20548,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 20541,
											"end": 20544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20537,
											"end": 20549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20530,
											"end": 20549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20530,
											"end": 20549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20189,
											"end": 20555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20727,
											"end": 20731,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20765,
											"end": 20767,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20754,
											"end": 20763,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20750,
											"end": 20768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20742,
											"end": 20768,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20742,
											"end": 20768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20814,
											"end": 20823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20808,
											"end": 20812,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20804,
											"end": 20824,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20800,
											"end": 20801,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20789,
											"end": 20798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20785,
											"end": 20802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20778,
											"end": 20825,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 20968,
											"end": 20972,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 20842,
											"end": 20973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 20842,
											"end": 20973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20834,
											"end": 20973,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20834,
											"end": 20973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20561,
											"end": 20980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21127,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 20986,
											"end": 21127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21035,
											"end": 21039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21058,
											"end": 21061,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21061,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21050,
											"end": 21061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21081,
											"end": 21084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21078,
											"end": 21079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21085,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21115,
											"end": 21119,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21112,
											"end": 21113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21102,
											"end": 21120,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 21094,
											"end": 21120,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21094,
											"end": 21120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21127,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20986,
											"end": 21127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21133,
											"end": 21226,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 21133,
											"end": 21226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21170,
											"end": 21176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21217,
											"end": 21219,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21214,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 21205,
											"end": 21210,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21201,
											"end": 21215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21197,
											"end": 21220,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 21187,
											"end": 21220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21187,
											"end": 21220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21133,
											"end": 21226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21133,
											"end": 21226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21133,
											"end": 21226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21133,
											"end": 21226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21232,
											"end": 21339,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 21232,
											"end": 21339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21276,
											"end": 21284,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21326,
											"end": 21331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21320,
											"end": 21324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21316,
											"end": 21332,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 21295,
											"end": 21332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21295,
											"end": 21332,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21232,
											"end": 21339,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21232,
											"end": 21339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21232,
											"end": 21339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21232,
											"end": 21339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21232,
											"end": 21339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21414,
											"end": 21420,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21464,
											"end": 21465,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 21452,
											"end": 21462,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21448,
											"end": 21466,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 21487,
											"end": 21584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 21517,
											"end": 21583,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21506,
											"end": 21515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21487,
											"end": 21584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 21487,
											"end": 21584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21487,
											"end": 21584,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 21487,
											"end": 21584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21605,
											"end": 21644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 21635,
											"end": 21643,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21624,
											"end": 21633,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21605,
											"end": 21644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 21605,
											"end": 21644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21605,
											"end": 21644,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 21605,
											"end": 21644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21593,
											"end": 21644,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21593,
											"end": 21644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21677,
											"end": 21681,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21673,
											"end": 21682,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 21666,
											"end": 21671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21662,
											"end": 21683,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21653,
											"end": 21683,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21653,
											"end": 21683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21726,
											"end": 21730,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21716,
											"end": 21724,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21712,
											"end": 21731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 21705,
											"end": 21710,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21702,
											"end": 21732,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 21692,
											"end": 21732,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21692,
											"end": 21732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21421,
											"end": 21738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21421,
											"end": 21738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21345,
											"end": 21738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21744,
											"end": 21886,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 21744,
											"end": 21886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21794,
											"end": 21803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21827,
											"end": 21880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 21845,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 21854,
											"end": 21878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 21872,
											"end": 21877,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 21854,
											"end": 21878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 21854,
											"end": 21878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21854,
											"end": 21878,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 21854,
											"end": 21878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21845,
											"end": 21879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 21845,
											"end": 21879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21845,
											"end": 21879,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 21845,
											"end": 21879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21827,
											"end": 21880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 21827,
											"end": 21880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21827,
											"end": 21880,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 21827,
											"end": 21880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21814,
											"end": 21880,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21814,
											"end": 21880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21744,
											"end": 21886,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21744,
											"end": 21886,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21744,
											"end": 21886,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21744,
											"end": 21886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21892,
											"end": 21967,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 21892,
											"end": 21967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21935,
											"end": 21938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21956,
											"end": 21961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21892,
											"end": 21967,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21892,
											"end": 21967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21892,
											"end": 21967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21892,
											"end": 21967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22242,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 21973,
											"end": 22242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22083,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 22114,
											"end": 22121,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22083,
											"end": 22122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 22083,
											"end": 22122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22083,
											"end": 22122,
											"name": "tag",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 22083,
											"end": 22122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22144,
											"end": 22235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 22193,
											"end": 22234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 22217,
											"end": 22233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22193,
											"end": 22234,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 22193,
											"end": 22234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22193,
											"end": 22234,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 22193,
											"end": 22234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22185,
											"end": 22191,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22178,
											"end": 22182,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22172,
											"end": 22183,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 22144,
											"end": 22235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 22144,
											"end": 22235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22144,
											"end": 22235,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 22144,
											"end": 22235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22138,
											"end": 22142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22131,
											"end": 22236,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 22049,
											"end": 22242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21973,
											"end": 22242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22248,
											"end": 22321,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 22248,
											"end": 22321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22293,
											"end": 22296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22314,
											"end": 22315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22307,
											"end": 22315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22307,
											"end": 22315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22248,
											"end": 22321,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22248,
											"end": 22321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22327,
											"end": 22516,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 22327,
											"end": 22516,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22404,
											"end": 22436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 22404,
											"end": 22436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 22404,
											"end": 22436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22404,
											"end": 22436,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 22404,
											"end": 22436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22445,
											"end": 22510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 22503,
											"end": 22509,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22495,
											"end": 22501,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22489,
											"end": 22493,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22445,
											"end": 22510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 22445,
											"end": 22510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22445,
											"end": 22510,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 22445,
											"end": 22510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22380,
											"end": 22516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22327,
											"end": 22516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22327,
											"end": 22516,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22327,
											"end": 22516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22708,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 22522,
											"end": 22708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22599,
											"end": 22602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22592,
											"end": 22597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22589,
											"end": 22603,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 22653,
											"end": 22692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 22690,
											"end": 22691,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22683,
											"end": 22688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22653,
											"end": 22692,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 22653,
											"end": 22692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22653,
											"end": 22692,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 22653,
											"end": 22692,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22626,
											"end": 22627,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 22619,
											"end": 22624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22615,
											"end": 22628,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22606,
											"end": 22628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22606,
											"end": 22628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 22582,
											"end": 22702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22708,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22708,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22522,
											"end": 22708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22714,
											"end": 23257,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 22714,
											"end": 23257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22815,
											"end": 22817,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 22810,
											"end": 22813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22807,
											"end": 22818,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 22804,
											"end": 23250,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 22804,
											"end": 23250,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 22804,
											"end": 23250,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 22881,
											"end": 22886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 22849,
											"end": 22887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 22849,
											"end": 22887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22933,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 22951,
											"end": 22961,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22933,
											"end": 22962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 22933,
											"end": 22962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22933,
											"end": 22962,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 22933,
											"end": 22962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22923,
											"end": 22931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22919,
											"end": 22963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23116,
											"end": 23118,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23104,
											"end": 23114,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23101,
											"end": 23119,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 23098,
											"end": 23147,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 23098,
											"end": 23147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 23098,
											"end": 23147,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23137,
											"end": 23145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23098,
											"end": 23147,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 23098,
											"end": 23147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23160,
											"end": 23240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 23216,
											"end": 23238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 23234,
											"end": 23237,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23216,
											"end": 23238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 23216,
											"end": 23238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23216,
											"end": 23238,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 23216,
											"end": 23238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23206,
											"end": 23214,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23202,
											"end": 23239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23189,
											"end": 23200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23160,
											"end": 23240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 23160,
											"end": 23240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23160,
											"end": 23240,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 23160,
											"end": 23240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22819,
											"end": 23250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22819,
											"end": 23250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22804,
											"end": 23250,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 22804,
											"end": 23250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22714,
											"end": 23257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22714,
											"end": 23257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22714,
											"end": 23257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22714,
											"end": 23257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23263,
											"end": 23380,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 23263,
											"end": 23380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23317,
											"end": 23325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23367,
											"end": 23372,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23361,
											"end": 23365,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23357,
											"end": 23373,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 23336,
											"end": 23373,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23336,
											"end": 23373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23263,
											"end": 23380,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23263,
											"end": 23380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23263,
											"end": 23380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23263,
											"end": 23380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23263,
											"end": 23380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23555,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 23386,
											"end": 23555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23430,
											"end": 23436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23463,
											"end": 23514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 23511,
											"end": 23512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23507,
											"end": 23513,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 23499,
											"end": 23504,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23496,
											"end": 23497,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 23492,
											"end": 23505,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 23463,
											"end": 23514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 23463,
											"end": 23514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23463,
											"end": 23514,
											"name": "tag",
											"source": 13,
											"value": "562"
										},
										{
											"begin": 23463,
											"end": 23514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23459,
											"end": 23515,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 23544,
											"end": 23548,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23538,
											"end": 23542,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23534,
											"end": 23549,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 23524,
											"end": 23549,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23524,
											"end": 23549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23437,
											"end": 23555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23555,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23386,
											"end": 23555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23560,
											"end": 23855,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 23560,
											"end": 23855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23636,
											"end": 23640,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23782,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 23807,
											"end": 23810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23801,
											"end": 23805,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23782,
											"end": 23811,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 23782,
											"end": 23811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23782,
											"end": 23811,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 23782,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23774,
											"end": 23811,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23774,
											"end": 23811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23844,
											"end": 23847,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23841,
											"end": 23842,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 23837,
											"end": 23848,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 23831,
											"end": 23835,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23828,
											"end": 23849,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 23820,
											"end": 23849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23820,
											"end": 23849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23560,
											"end": 23855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23560,
											"end": 23855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23560,
											"end": 23855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23560,
											"end": 23855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23560,
											"end": 23855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23860,
											"end": 25255,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 23860,
											"end": 25255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23977,
											"end": 24014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 24010,
											"end": 24013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23977,
											"end": 24014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 23977,
											"end": 24014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23977,
											"end": 24014,
											"name": "tag",
											"source": 13,
											"value": "566"
										},
										{
											"begin": 23977,
											"end": 24014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24079,
											"end": 24097,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24071,
											"end": 24077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24068,
											"end": 24098,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24065,
											"end": 24121,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24065,
											"end": 24121,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 24065,
											"end": 24121,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 24101,
											"end": 24119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "tag",
											"source": 13,
											"value": "568"
										},
										{
											"begin": 24101,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24065,
											"end": 24121,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 24065,
											"end": 24121,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24145,
											"end": 24183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 24177,
											"end": 24181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24171,
											"end": 24182,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 24145,
											"end": 24183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 24145,
											"end": 24183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24145,
											"end": 24183,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 24145,
											"end": 24183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24230,
											"end": 24297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 24290,
											"end": 24296,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24282,
											"end": 24288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24276,
											"end": 24280,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24230,
											"end": 24297,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 24230,
											"end": 24297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24230,
											"end": 24297,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 24230,
											"end": 24297,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24324,
											"end": 24325,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24348,
											"end": 24352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24335,
											"end": 24352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24335,
											"end": 24352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24380,
											"end": 24382,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24372,
											"end": 24378,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24369,
											"end": 24383,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 24397,
											"end": 24398,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24392,
											"end": 25010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24392,
											"end": 25010,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 24392,
											"end": 25010,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 24392,
											"end": 25010,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25054,
											"end": 25055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25071,
											"end": 25077,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25068,
											"end": 25145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 25068,
											"end": 25145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 25068,
											"end": 25145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 25120,
											"end": 25129,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25115,
											"end": 25118,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 25111,
											"end": 25130,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25105,
											"end": 25131,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 25096,
											"end": 25131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25096,
											"end": 25131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25068,
											"end": 25145,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 25068,
											"end": 25145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25171,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 25231,
											"end": 25237,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25224,
											"end": 25229,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25171,
											"end": 25238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 25171,
											"end": 25238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25171,
											"end": 25238,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 25171,
											"end": 25238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25165,
											"end": 25169,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 25158,
											"end": 25239,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 25027,
											"end": 25249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24362,
											"end": 25249,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 24362,
											"end": 25249,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24392,
											"end": 25010,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 24392,
											"end": 25010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24444,
											"end": 24448,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24440,
											"end": 24449,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 24432,
											"end": 24438,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24428,
											"end": 24450,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 24478,
											"end": 24515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 24510,
											"end": 24514,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24478,
											"end": 24515,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 24478,
											"end": 24515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24478,
											"end": 24515,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 24478,
											"end": 24515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24537,
											"end": 24538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24565,
											"end": 24572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24562,
											"end": 24563,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24559,
											"end": 24573,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24644,
											"end": 24653,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24639,
											"end": 24642,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 24635,
											"end": 24654,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24629,
											"end": 24655,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24627,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24614,
											"end": 24656,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24695,
											"end": 24696,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24687,
											"end": 24693,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24683,
											"end": 24697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24673,
											"end": 24697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24673,
											"end": 24697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24742,
											"end": 24744,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24731,
											"end": 24740,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24727,
											"end": 24745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24714,
											"end": 24745,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 24714,
											"end": 24745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24588,
											"end": 24592,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24585,
											"end": 24586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24581,
											"end": 24593,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24576,
											"end": 24593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 24551,
											"end": 24759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24787,
											"end": 24793,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 24778,
											"end": 24785,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24775,
											"end": 24794,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 24772,
											"end": 24951,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 24772,
											"end": 24951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 24772,
											"end": 24951,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 24845,
											"end": 24854,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24840,
											"end": 24843,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 24836,
											"end": 24855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24830,
											"end": 24856,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 24888,
											"end": 24936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 24930,
											"end": 24934,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24922,
											"end": 24928,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 24918,
											"end": 24935,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 24907,
											"end": 24916,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24888,
											"end": 24936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 24888,
											"end": 24936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24888,
											"end": 24936,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 24888,
											"end": 24936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24873,
											"end": 24937,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24795,
											"end": 24951,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24772,
											"end": 24951,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 24772,
											"end": 24951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24997,
											"end": 24998,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 24993,
											"end": 24994,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 24985,
											"end": 24991,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 24981,
											"end": 24995,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 24977,
											"end": 24999,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24971,
											"end": 24975,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 24964,
											"end": 25000,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 24399,
											"end": 25010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24399,
											"end": 25010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24399,
											"end": 25010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24362,
											"end": 25249,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 24362,
											"end": 25249,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24362,
											"end": 25249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23952,
											"end": 25255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23952,
											"end": 25255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23952,
											"end": 25255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23860,
											"end": 25255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23860,
											"end": 25255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23860,
											"end": 25255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25261,
											"end": 25491,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 25261,
											"end": 25491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25401,
											"end": 25435,
											"name": "PUSH",
											"source": 13,
											"value": "5769746864726177616C20616D6F756E74206D75737420626520677265617465"
										},
										{
											"begin": 25397,
											"end": 25398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25389,
											"end": 25395,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25385,
											"end": 25399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25378,
											"end": 25436,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25470,
											"end": 25483,
											"name": "PUSH",
											"source": 13,
											"value": "72207468616E207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 25465,
											"end": 25467,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25457,
											"end": 25463,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25453,
											"end": 25468,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25446,
											"end": 25484,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25261,
											"end": 25491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25261,
											"end": 25491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25863,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 25497,
											"end": 25863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25639,
											"end": 25642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25660,
											"end": 25727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 25724,
											"end": 25726,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 25719,
											"end": 25722,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25660,
											"end": 25727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 25660,
											"end": 25727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25660,
											"end": 25727,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 25660,
											"end": 25727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25653,
											"end": 25727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25653,
											"end": 25727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25736,
											"end": 25829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 25825,
											"end": 25828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25736,
											"end": 25829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 25736,
											"end": 25829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25736,
											"end": 25829,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 25736,
											"end": 25829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25854,
											"end": 25856,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 25849,
											"end": 25852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25845,
											"end": 25857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25838,
											"end": 25857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25838,
											"end": 25857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25863,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25869,
											"end": 26288,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 25869,
											"end": 26288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26035,
											"end": 26039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26073,
											"end": 26075,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26062,
											"end": 26071,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26058,
											"end": 26076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26050,
											"end": 26076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26050,
											"end": 26076,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26122,
											"end": 26131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26116,
											"end": 26120,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26112,
											"end": 26132,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 26108,
											"end": 26109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26097,
											"end": 26106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26093,
											"end": 26110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26086,
											"end": 26133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26150,
											"end": 26281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 26276,
											"end": 26280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 26150,
											"end": 26281,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 26150,
											"end": 26281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26150,
											"end": 26281,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 26150,
											"end": 26281,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26142,
											"end": 26281,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26142,
											"end": 26281,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25869,
											"end": 26288,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25869,
											"end": 26288,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25869,
											"end": 26288,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25869,
											"end": 26288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26294,
											"end": 26462,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 26294,
											"end": 26462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26434,
											"end": 26454,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 26430,
											"end": 26431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26422,
											"end": 26428,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26418,
											"end": 26432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26411,
											"end": 26455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26294,
											"end": 26462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26294,
											"end": 26462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26468,
											"end": 26834,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 26468,
											"end": 26834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26610,
											"end": 26613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26631,
											"end": 26698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 26695,
											"end": 26697,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 26690,
											"end": 26693,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26631,
											"end": 26698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 26631,
											"end": 26698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26631,
											"end": 26698,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 26631,
											"end": 26698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26624,
											"end": 26698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26624,
											"end": 26698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26707,
											"end": 26800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 26796,
											"end": 26799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26707,
											"end": 26800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 26707,
											"end": 26800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26707,
											"end": 26800,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 26707,
											"end": 26800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26825,
											"end": 26827,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26820,
											"end": 26823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26816,
											"end": 26828,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26809,
											"end": 26828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26809,
											"end": 26828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26468,
											"end": 26834,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26468,
											"end": 26834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26468,
											"end": 26834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26468,
											"end": 26834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 26840,
											"end": 27259,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 26840,
											"end": 27259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27006,
											"end": 27010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27044,
											"end": 27046,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27033,
											"end": 27042,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27029,
											"end": 27047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27021,
											"end": 27047,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27021,
											"end": 27047,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27093,
											"end": 27102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27087,
											"end": 27091,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27083,
											"end": 27103,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 27079,
											"end": 27080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27068,
											"end": 27077,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27064,
											"end": 27081,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27057,
											"end": 27104,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27121,
											"end": 27252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 27247,
											"end": 27251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27121,
											"end": 27252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 27121,
											"end": 27252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27121,
											"end": 27252,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 27121,
											"end": 27252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27113,
											"end": 27252,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27113,
											"end": 27252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26840,
											"end": 27259,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26840,
											"end": 27259,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26840,
											"end": 27259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26840,
											"end": 27259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27386,
											"end": 27390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27424,
											"end": 27426,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 27413,
											"end": 27422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27409,
											"end": 27427,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27401,
											"end": 27427,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27401,
											"end": 27427,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27437,
											"end": 27508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 27505,
											"end": 27506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27494,
											"end": 27503,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27490,
											"end": 27507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27481,
											"end": 27487,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27437,
											"end": 27508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 27437,
											"end": 27508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27437,
											"end": 27508,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 27437,
											"end": 27508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27518,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 27586,
											"end": 27588,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27575,
											"end": 27584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27571,
											"end": 27589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27562,
											"end": 27568,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27518,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 27518,
											"end": 27590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27518,
											"end": 27590,
											"name": "tag",
											"source": 13,
											"value": "595"
										},
										{
											"begin": 27518,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27265,
											"end": 27597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27752,
											"end": 27756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27790,
											"end": 27792,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 27779,
											"end": 27788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27775,
											"end": 27793,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27767,
											"end": 27793,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27767,
											"end": 27793,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27803,
											"end": 27874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 27871,
											"end": 27872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27860,
											"end": 27869,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27856,
											"end": 27873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27847,
											"end": 27853,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 27803,
											"end": 27874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 27803,
											"end": 27874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27803,
											"end": 27874,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 27803,
											"end": 27874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27884,
											"end": 27956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 27952,
											"end": 27954,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27941,
											"end": 27950,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27937,
											"end": 27955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27928,
											"end": 27934,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27884,
											"end": 27956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 27884,
											"end": 27956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27884,
											"end": 27956,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 27884,
											"end": 27956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27966,
											"end": 28038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 28034,
											"end": 28036,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 28023,
											"end": 28032,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28019,
											"end": 28037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28010,
											"end": 28016,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27966,
											"end": 28038,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 27966,
											"end": 28038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 27966,
											"end": 28038,
											"name": "tag",
											"source": 13,
											"value": "599"
										},
										{
											"begin": 27966,
											"end": 28038,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27603,
											"end": 28045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/cookie-jar.sol",
								"contracts/interface/IScorer.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ETHER()": "42cb1fbc",
							"allowedAmounts(address,address)": "a9590e8a",
							"claim(address)": "1e83409a",
							"currentRound()": "8a19c8bc",
							"deposit(address,uint256)": "47e7ef24",
							"initialize(address,address)": "485cc955",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"scorer()": "85c758f7",
							"setAllowedAmount(address,address,uint256)": "b807a3c4",
							"setRound(uint256,uint256,string)": "be9a7687",
							"totalBalances(address)": "aee9c872",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"AllowedAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"RoundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ETHER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_scorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scorer\",\"outputs\":[{\"internalType\":\"contract IScorer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowedAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"}],\"name\":\"setRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The value to add (in wei for Ether).\",\"token\":\"The token address (address(0) for Ether).\"}},\"initialize(address,address)\":{\"params\":{\"_scorer\":\"The scoring contract address.\",\"owner\":\"The owner address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setAllowedAmount(address,address,uint256)\":{\"params\":{\"amount\":\"The allowed amount for the user.\",\"token\":\"The token address.\",\"user\":\"The address of the user.\"}},\"setRound(uint256,uint256,string)\":{\"params\":{\"end\":\"The end timestamp of the round.\",\"metadataURI\":\"The IPFS URI for the round metadata.\",\"start\":\"The start timestamp of the round.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw.\",\"token\":\"The token address (address(0) for Ether).\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(address)\":{\"notice\":\"Claims the full allowed amount for a user during the round.\"},\"deposit(address,uint256)\":{\"notice\":\"Deposits funds into this jar for a specific token or Ether.\"},\"initialize(address,address)\":{\"notice\":\"Initializes this contract with its initial state.\"},\"setAllowedAmount(address,address,uint256)\":{\"notice\":\"Sets the allowed amount for a specific user and token.\"},\"setRound(uint256,uint256,string)\":{\"notice\":\"Sets the round duration and metadata URI.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws funds from the jar for a specific token or Ether.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/cookie-jar.sol\":\"nCookieJar\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/cookie-jar.sol\":{\"keccak256\":\"0x61176a5fb06b818380a6cb945ec4fbebf093db58841dab10589b3938bf8a3ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fca356d1ec14cbdb7ffa472dbde29342a30d77f5cb80cd723eba247f3c7c415\",\"dweb:/ipfs/QmbpbzjKEe3mjp3H3YHcwVrhfwCQQQ6FXFHLFTWKpmvBED\"]},\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x72245ac02449dc17a198e4655857149556848c52c4fe2c8a587a80fc0d251fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://385b0a96e2341060b47a7112c26b080b5c41d219188924e5ffd918e1430c6629\",\"dweb:/ipfs/QmX47sC6zdohNDvwekZ8jRAZcxKJwTrUVhzcTjGibHMxro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1389,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "scorer",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IScorer)1808"
							},
							{
								"astId": 1399,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "currentRound",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Round)1396_storage"
							},
							{
								"astId": 1403,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "totalBalances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1409,
								"contract": "contracts/cookie-jar.sol:nCookieJar",
								"label": "allowedAmounts",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IScorer)1808": {
								"encoding": "inplace",
								"label": "contract IScorer",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Round)1396_storage": {
								"encoding": "inplace",
								"label": "struct nCookieJar.Round",
								"members": [
									{
										"astId": 1391,
										"contract": "contracts/cookie-jar.sol:nCookieJar",
										"label": "start",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1393,
										"contract": "contracts/cookie-jar.sol:nCookieJar",
										"label": "end",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1395,
										"contract": "contracts/cookie-jar.sol:nCookieJar",
										"label": "metadataURI",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"claim(address)": {
								"notice": "Claims the full allowed amount for a user during the round."
							},
							"deposit(address,uint256)": {
								"notice": "Deposits funds into this jar for a specific token or Ether."
							},
							"initialize(address,address)": {
								"notice": "Initializes this contract with its initial state."
							},
							"setAllowedAmount(address,address,uint256)": {
								"notice": "Sets the allowed amount for a specific user and token."
							},
							"setRound(uint256,uint256,string)": {
								"notice": "Sets the round duration and metadata URI."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws funds from the jar for a specific token or Ether."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interface/IScorer.sol": {
				"IScorer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "scoreType",
									"type": "bytes32"
								}
							],
							"name": "score",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"score(address,bytes32)": {
								"details": "Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.",
								"params": {
									"scoreType": "The type of score to query, represented as a `bytes32` hash.",
									"user": "The address of the user whose score is being queried."
								},
								"returns": {
									"_0": "The score of the user as a uint256 value."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"score(address,bytes32)": "faa5e295"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"scoreType\",\"type\":\"bytes32\"}],\"name\":\"score\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"score(address,bytes32)\":{\"details\":\"Returns the score of a specific user for a given score type.      The score type is represented as a `bytes32` hash (e.g., keccak256(\\\"Trust\\\")).      The score is typically used to determine the user's eligibility for certain actions or claims.      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\",\"params\":{\"scoreType\":\"The type of score to query, represented as a `bytes32` hash.\",\"user\":\"The address of the user whose score is being queried.\"},\"returns\":{\"_0\":\"The score of the user as a uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"score(address,bytes32)\":{\"notice\":\"This function should be implemented in the contract that inherits the `IScorer` interface.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IScorer.sol\":\"IScorer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IScorer.sol\":{\"keccak256\":\"0x72245ac02449dc17a198e4655857149556848c52c4fe2c8a587a80fc0d251fe8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://385b0a96e2341060b47a7112c26b080b5c41d219188924e5ffd918e1430c6629\",\"dweb:/ipfs/QmX47sC6zdohNDvwekZ8jRAZcxKJwTrUVhzcTjGibHMxro\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"score(address,bytes32)": {
								"notice": "This function should be implemented in the contract that inherits the `IScorer` interface."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							576
						],
						"IERC165": [
							1366
						],
						"IERC20": [
							662
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 585,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 581,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 662,
										"src": "590:6:3"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 504,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1366,
										"src": "598:7:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								1366,
								662
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 576,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 576,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 576,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 576,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 576,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 576,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 577,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								596,
								605
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1366
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 581,
							"sourceUnit": 1367,
							"src": "132:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "140:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 585,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 585,
							"sourceUnit": 663,
							"src": "131:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 586,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 587,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 596,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 605,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 662,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 662,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 662,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 662,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 646,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 662,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 662,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 663,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								596,
								605
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1332
						],
						"IERC1363": [
							576
						],
						"IERC20": [
							662
						],
						"SafeERC20": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 663,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 665,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 577,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 667,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 576,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 1333,
							"src": "238:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 669,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1332,
										"src": "246:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 671,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 676,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "875:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:7"
									},
									"src": "844:46:7"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 685,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1011:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1028:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1054:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:7"
									},
									"src": "972:109:7"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "1343:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 697,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "1373:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 700,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "1395:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 629,
																	"src": "1395:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 702,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "1412:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "1416:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 698,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 696,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1353:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:7"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1293:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 688,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 687,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "1293:6:7"
													},
													"referencedDeclaration": 662,
													"src": "1293:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1307:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "1319:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:7"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:7"
									},
									"scope": 1073,
									"src": "1271:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "1760:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "1790:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 726,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 713,
																		"src": "1812:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 661,
																	"src": "1812:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 728,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 715,
																			"src": "1833:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 729,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 717,
																			"src": "1839:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "1843:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 724,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 722,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1770:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:7"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1696:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 712,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 711,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "1696:6:7"
													},
													"referencedDeclaration": 662,
													"src": "1696:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1710:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1724:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "1736:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:7"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:7"
									},
									"scope": 1073,
									"src": "1670:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "2600:139:7",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "2610:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 753,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1073",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1073",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 751,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2664:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 749,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2633:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 639,
														"src": "2633:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 759,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "2695:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 760,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "2702:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 761,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "2711:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 762,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "2726:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2682:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:7"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2545:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 739,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 738,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "2545:6:7"
													},
													"referencedDeclaration": 662,
													"src": "2545:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2559:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2576:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:7"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:7"
									},
									"scope": 1073,
									"src": "2514:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "3505:370:7",
										"statements": [
											{
												"id": 808,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:7",
												"statements": [
													{
														"assignments": [
															779
														],
														"declarations": [
															{
																"constant": false,
																"id": 779,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 808,
																"src": "3539:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 778,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 788,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 784,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1073",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1073",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 782,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 786,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3597:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 780,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "3566:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 639,
																"src": "3566:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 789,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "3623:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 790,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "3642:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 799,
														"nodeType": "IfStatement",
														"src": "3619:160:7",
														"trueBody": {
															"id": 798,
															"nodeType": "Block",
															"src": "3661:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 793,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "3719:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 794,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 779,
																				"src": "3728:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 795,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 775,
																				"src": "3746:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 792,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "3686:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 797,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 801,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 771,
																	"src": "3805:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 802,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "3812:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 803,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "3821:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 804,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "3840:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 800,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "3792:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3438:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 769,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "3438:6:7"
													},
													"referencedDeclaration": 662,
													"src": "3438:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3452:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3469:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:7"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:7"
									},
									"scope": 1073,
									"src": "3407:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4529:303:7",
										"statements": [
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "4539:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 821,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 825,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4582:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 649,
															"src": "4582:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 827,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "4598:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "4607:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 829,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 823,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:7"
											},
											{
												"condition": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 833,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4654:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 834,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4661:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$662",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 832,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "4630:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "4625:201:7",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "4676:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 838,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4710:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 841,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 814,
																					"src": "4732:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$662",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 842,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 649,
																				"src": "4732:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 843,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 816,
																						"src": "4748:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 844,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 845,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 839,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 837,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4690:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 850,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "4795:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 851,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 822,
																		"src": "4802:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 849,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "4775:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4474:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 812,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "4474:6:7"
													},
													"referencedDeclaration": 662,
													"src": "4474:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4488:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4505:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:7"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:7"
									},
									"scope": 1073,
									"src": "4452:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "5279:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 870,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5293:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 884,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5402:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 885,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "5406:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 886,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "5413:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 882,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 861,
																	"src": "5380:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 527,
																"src": "5380:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 897,
													"nodeType": "IfStatement",
													"src": "5375:117:7",
													"trueBody": {
														"id": 896,
														"nodeType": "Block",
														"src": "5420:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 892,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 861,
																					"src": "5474:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 890,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 889,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "5441:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 895,
																"nodeType": "RevertStatement",
																"src": "5434:47:7"
															}
														]
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "5289:203:7",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "5314:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 876,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 861,
																		"src": "5341:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 877,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5348:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 878,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "5352:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 875,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "5328:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5208:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "5208:8:7"
													},
													"referencedDeclaration": 576,
													"src": "5208:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5224:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5236:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5251:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:7"
									},
									"scope": 1073,
									"src": "5176:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "6017:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 915,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "6031:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "6154:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 931,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "6160:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6164:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 933,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6171:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 928,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 904,
																	"src": "6128:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 553,
																"src": "6128:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 944,
													"nodeType": "IfStatement",
													"src": "6123:127:7",
													"trueBody": {
														"id": 943,
														"nodeType": "Block",
														"src": "6178:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 939,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 904,
																					"src": "6232:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 938,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 937,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 936,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6199:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 942,
																"nodeType": "RevertStatement",
																"src": "6192:47:7"
															}
														]
													}
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "6027:223:7",
												"trueBody": {
													"id": 927,
													"nodeType": "Block",
													"src": "6052:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 921,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "6083:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 922,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 906,
																		"src": "6090:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 923,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "6096:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 924,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "6100:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 920,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "6066:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 926,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5895:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 902,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "5895:8:7"
													},
													"referencedDeclaration": 576,
													"src": "5895:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5919:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5941:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5961:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5984:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:7"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:7"
									},
									"scope": 1073,
									"src": "5850:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "7023:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 960,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "7037:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 974,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "7145:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "7149:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 976,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "7156:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 972,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 951,
																	"src": "7124:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$576",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 575,
																"src": "7124:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 987,
													"nodeType": "IfStatement",
													"src": "7119:116:7",
													"trueBody": {
														"id": 986,
														"nodeType": "Block",
														"src": "7163:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 982,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "7217:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$576",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 980,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 979,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "7184:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 985,
																"nodeType": "RevertStatement",
																"src": "7177:47:7"
															}
														]
													}
												},
												"id": 988,
												"nodeType": "IfStatement",
												"src": "7033:202:7",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "7058:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 966,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7085:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 967,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "7092:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 968,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "7096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$576",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 965,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "7072:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6952:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$576",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 950,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 949,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 576,
														"src": "6952:8:7"
													},
													"referencedDeclaration": 576,
													"src": "6952:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$576",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6968:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6980:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6995:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 956,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:7"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:7"
									},
									"scope": 1073,
									"src": "6921:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "7808:650:7",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "7818:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 999,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1001,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:7"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1030,
														"src": "7846:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1002,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:7",
													"nodeType": "YulBlock",
													"src": "7900:396:7",
													"statements": [
														{
															"nativeSrc": "7914:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:7"
																		},
																		"nativeSrc": "7934:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:7"
																		},
																		"nativeSrc": "7951:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:7"
																		},
																		"nativeSrc": "7968:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:7"
																},
																"nativeSrc": "7929:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:7",
																"nodeType": "YulBlock",
																"src": "8050:157:7",
																"statements": [
																	{
																		"nativeSrc": "8068:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:7"
																			},
																			"nativeSrc": "8079:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:7"
																					},
																					"nativeSrc": "8130:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:7"
																			},
																			"nativeSrc": "8107:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:7"
																		},
																		"nativeSrc": "8107:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:7"
																					},
																					"nativeSrc": "8176:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:7"
																			},
																			"nativeSrc": "8164:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:7"
																		},
																		"nativeSrc": "8164:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:7"
																},
																"nativeSrc": "8034:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:7"
															},
															"nativeSrc": "8031:176:7",
															"nodeType": "YulIf",
															"src": "8031:176:7"
														},
														{
															"nativeSrc": "8220:30:7",
															"nodeType": "YulAssignment",
															"src": "8220:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:7"
																},
																"nativeSrc": "8234:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:7"
																}
															]
														},
														{
															"nativeSrc": "8263:23:7",
															"nodeType": "YulAssignment",
															"src": "8263:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:7"
																},
																"nativeSrc": "8278:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:7",
														"valueSize": 1
													},
													{
														"declaration": 996,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1003,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:7",
														"valueSize": 1
													},
													{
														"declaration": 994,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1005,
												"nodeType": "InlineAssembly",
												"src": "7875:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1006,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "8310:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1017,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "8362:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1011,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 994,
																			"src": "8336:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1009,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1029,
												"nodeType": "IfStatement",
												"src": "8306:146:7",
												"trueBody": {
													"id": 1028,
													"nodeType": "Block",
													"src": "8380:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1024,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 994,
																				"src": "8434:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$662",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$662",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1022,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1021,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 676,
																	"src": "8401:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1027,
															"nodeType": "RevertStatement",
															"src": "8394:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7767:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "7767:6:7"
													},
													"referencedDeclaration": 662,
													"src": "7767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "7781:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:7"
									},
									"scope": 1073,
									"src": "7738:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "9049:391:7",
										"statements": [
											{
												"assignments": [
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9059:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1042,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:7"
											},
											{
												"assignments": [
													1046
												],
												"declarations": [
													{
														"constant": false,
														"id": 1046,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9081:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1045,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:7"
											},
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "9109:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:7",
													"nodeType": "YulBlock",
													"src": "9163:174:7",
													"statements": [
														{
															"nativeSrc": "9177:71:7",
															"nodeType": "YulAssignment",
															"src": "9177:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:7"
																		},
																		"nativeSrc": "9193:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:7"
																		},
																		"nativeSrc": "9210:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:7"
																		},
																		"nativeSrc": "9227:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:7"
																},
																"nativeSrc": "9188:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:7"
																}
															]
														},
														{
															"nativeSrc": "9261:30:7",
															"nodeType": "YulAssignment",
															"src": "9261:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:7"
																},
																"nativeSrc": "9275:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:7"
																}
															]
														},
														{
															"nativeSrc": "9304:23:7",
															"nodeType": "YulAssignment",
															"src": "9304:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:7"
																},
																"nativeSrc": "9319:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1037,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1037,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1046,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1043,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1035,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1051,
												"nodeType": "InlineAssembly",
												"src": "9138:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1052,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "9353:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "9365:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "9416:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1058,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1035,
																						"src": "9391:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$662",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$662",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1056,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1068,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1070,
												"nodeType": "Return",
												"src": "9346:87:7"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "8993:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "8993:6:7"
													},
													"referencedDeclaration": 662,
													"src": "8993:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9007:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:7"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "9043:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:7"
									},
									"scope": 1073,
									"src": "8960:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1074,
							"src": "750:8692:7",
							"usedErrors": [
								676,
								685
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1332
						],
						"Errors": [
							1354
						]
					},
					"id": 1333,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1333,
							"sourceUnit": 1355,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1076,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1354,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1078,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1332,
							"linearizedBaseContracts": [
								1332
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1083,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1361:278:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1093,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1096,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1103,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1101,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1106,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1098,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1342,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1112,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1129,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1111,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1119,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1113,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "1525:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1115,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1547:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:8"
											},
											{
												"condition": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:8",
													"subExpression": {
														"id": 1120,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1573:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "1568:65:8",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "1582:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1122,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "1603:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "1603:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1126,
															"nodeType": "RevertStatement",
															"src": "1596:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1332,
									"src": "1290:349:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2573:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1141,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "2612:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1142,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "2620:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1140,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "2590:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1139,
												"id": 1145,
												"nodeType": "Return",
												"src": "2583:45:8"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2506:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2522:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1134,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:8"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2559:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:8"
									},
									"scope": 1332,
									"src": "2484:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "3072:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1161,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1332",
																		"typeString": "library Address"
																	}
																],
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1159,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1164,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "3110:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1178,
												"nodeType": "IfStatement",
												"src": "3082:123:8",
												"trueBody": {
													"id": 1177,
													"nodeType": "Block",
													"src": "3117:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1171,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1332",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1169,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1174,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "3188:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1166,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "3138:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1342,
																	"src": "3138:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1176,
															"nodeType": "RevertStatement",
															"src": "3131:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1180,
													1182
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "3215:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1179,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1182,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1196,
														"src": "3229:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"id": 1187,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1152,
															"src": "3282:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1183,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "3256:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "3275:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1191,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "3331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3339:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1193,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "3348:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1190,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3304:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1195,
												"nodeType": "Return",
												"src": "3297:62:8"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2990:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3006:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1151,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3025:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:8"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3058:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:8"
									},
									"scope": 1332,
									"src": "2959:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "3605:154:8",
										"statements": [
											{
												"assignments": [
													1208,
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3616:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1207,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "3630:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1209,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"arguments": [
														{
															"id": 1213,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "3675:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1211,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3657:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "3724:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "3732:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1219,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "3741:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1216,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "3697:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1221,
												"nodeType": "Return",
												"src": "3690:62:8"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3533:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3549:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1201,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:8"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "3591:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:8"
									},
									"scope": 1332,
									"src": "3505:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "3997:156:8",
										"statements": [
											{
												"assignments": [
													1234,
													1236
												],
												"declarations": [
													{
														"constant": false,
														"id": 1234,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "4008:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1233,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1236,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1248,
														"src": "4022:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1235,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1241,
												"initialValue": {
													"arguments": [
														{
															"id": 1239,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "4069:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1237,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4049:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "4118:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "4126:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1245,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "4135:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1242,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "4091:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1247,
												"nodeType": "Return",
												"src": "4084:62:8"
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3930:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3946:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:8"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "3983:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:8"
									},
									"scope": 1332,
									"src": "3900:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "4579:424:8",
										"statements": [
											{
												"condition": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:8",
													"subExpression": {
														"id": 1261,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4594:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1286,
													"nodeType": "Block",
													"src": "4653:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1268,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "4841:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1272,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1252,
																				"src": "4867:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1283,
															"nodeType": "IfStatement",
															"src": "4837:119:8",
															"trueBody": {
																"id": 1282,
																"nodeType": "Block",
																"src": "4892:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1279,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1252,
																					"src": "4934:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1278,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1083,
																				"src": "4917:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1281,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1284,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "4976:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1260,
															"id": 1285,
															"nodeType": "Return",
															"src": "4969:17:8"
														}
													]
												},
												"id": 1287,
												"nodeType": "IfStatement",
												"src": "4589:408:8",
												"trueBody": {
													"id": 1267,
													"nodeType": "Block",
													"src": "4603:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "4625:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1263,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "4617:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1266,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4466:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4490:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4512:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "4565:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:8"
									},
									"scope": 1332,
									"src": "4421:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "5307:122:8",
										"statements": [
											{
												"condition": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:8",
													"subExpression": {
														"id": 1299,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5322:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "5381:42:8",
													"statements": [
														{
															"expression": {
																"id": 1306,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "5402:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1298,
															"id": 1307,
															"nodeType": "Return",
															"src": "5395:17:8"
														}
													]
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "5317:106:8",
												"trueBody": {
													"id": 1305,
													"nodeType": "Block",
													"src": "5331:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1302,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "5353:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1301,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "5345:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5231:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5245:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:8"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "5293:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:8"
									},
									"scope": 1332,
									"src": "5205:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5598:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5674:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "5973:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1323,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "5994:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1354_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1345,
																	"src": "5994:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1327,
															"nodeType": "RevertStatement",
															"src": "5987:26:8"
														}
													]
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "5670:354:8",
												"trueBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "5697:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:8",
																"nodeType": "YulBlock",
																"src": "5824:133:8",
																"statements": [
																	{
																		"nativeSrc": "5842:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:8"
																			},
																			"nativeSrc": "5865:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:8"
																					},
																					"nativeSrc": "5906:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:8"
																			},
																			"nativeSrc": "5899:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:8"
																		},
																		"nativeSrc": "5899:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:8"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1314,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1314,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1321,
															"nodeType": "InlineAssembly",
															"src": "5799:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5560:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:8"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:8"
									},
									"scope": 1332,
									"src": "5543:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1333,
							"src": "233:5799:8",
							"usedErrors": [
								1083
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1354
						]
					},
					"id": 1355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1334,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1335,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1354,
							"linearizedBaseContracts": [
								1354
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1342,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1345,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1348,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1353,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1355,
							"src": "411:484:9",
							"usedErrors": [
								1342,
								1345,
								1348,
								1353
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1366
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1356,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1366,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1367,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/cookie-jar.sol": {
				"ast": {
					"absolutePath": "contracts/cookie-jar.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"IERC20": [
							662
						],
						"IScorer": [
							1808
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"SafeERC20": [
							1073
						],
						"nCookieJar": [
							1795
						]
					},
					"id": 1796,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 195,
							"src": "61:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 663,
							"src": "138:72:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1370,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 662,
										"src": "147:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1373,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 1074,
							"src": "212:84:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1372,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1073,
										"src": "221:9:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IScorer.sol",
							"file": "./interface/IScorer.sol",
							"id": 1374,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1796,
							"sourceUnit": 1809,
							"src": "298:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1375,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"390:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "390:18:11"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "390:18:11"
								}
							],
							"canonicalName": "nCookieJar",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1795,
							"linearizedBaseContracts": [
								1795,
								194,
								494,
								448
							],
							"name": "nCookieJar",
							"nameLocation": "376:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1380,
									"libraryName": {
										"id": 1377,
										"name": "SafeERC20",
										"nameLocations": [
											"422:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1073,
										"src": "422:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "416:27:11",
									"typeName": {
										"id": 1379,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1378,
											"name": "IERC20",
											"nameLocations": [
												"436:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 662,
											"src": "436:6:11"
										},
										"referencedDeclaration": 662,
										"src": "436:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$662",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "42cb1fbc",
									"id": 1386,
									"mutability": "constant",
									"name": "ETHER",
									"nameLocation": "475:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "451:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1381,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1384,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "491:1:11",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1383,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "483:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1382,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "483:7:11",
												"typeDescriptions": {}
											}
										},
										"id": 1385,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "483:10:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85c758f7",
									"id": 1389,
									"mutability": "mutable",
									"name": "scorer",
									"nameLocation": "540:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "525:21:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IScorer_$1808",
										"typeString": "contract IScorer"
									},
									"typeName": {
										"id": 1388,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1387,
											"name": "IScorer",
											"nameLocations": [
												"525:7:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1808,
											"src": "525:7:11"
										},
										"referencedDeclaration": 1808,
										"src": "525:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IScorer_$1808",
											"typeString": "contract IScorer"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "nCookieJar.Round",
									"id": 1396,
									"members": [
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "623:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1396,
											"src": "615:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1390,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "615:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "679:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1396,
											"src": "671:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1392,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "671:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1395,
											"mutability": "mutable",
											"name": "metadataURI",
											"nameLocation": "730:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1396,
											"src": "723:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1394,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "723:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Round",
									"nameLocation": "598:5:11",
									"nodeType": "StructDefinition",
									"scope": 1795,
									"src": "591:189:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a19c8bc",
									"id": 1399,
									"mutability": "mutable",
									"name": "currentRound",
									"nameLocation": "801:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "788:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Round_$1396_storage",
										"typeString": "struct nCookieJar.Round"
									},
									"typeName": {
										"id": 1398,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1397,
											"name": "Round",
											"nameLocations": [
												"788:5:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1396,
											"src": "788:5:11"
										},
										"referencedDeclaration": 1396,
										"src": "788:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Round_$1396_storage_ptr",
											"typeString": "struct nCookieJar.Round"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aee9c872",
									"id": 1403,
									"mutability": "mutable",
									"name": "totalBalances",
									"nameLocation": "939:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "904:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1402,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1400,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "912:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "904:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1401,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "923:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9590e8a",
									"id": 1409,
									"mutability": "mutable",
									"name": "allowedAmounts",
									"nameLocation": "1057:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1795,
									"src": "1002:69:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1408,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1404,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1010:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1002:47:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1407,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1405,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1029:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1021:27:11",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1406,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1040:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62",
									"id": 1417,
									"name": "Deposit",
									"nameLocation": "1086:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"indexed": true,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "1110:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "1094:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1137:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "1121:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1152:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "1144:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:66:11"
									},
									"src": "1080:80:11"
								},
								{
									"anonymous": false,
									"eventSelector": "9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb",
									"id": 1425,
									"name": "Withdraw",
									"nameLocation": "1172:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"indexed": true,
												"mutability": "mutable",
												"name": "withdrawer",
												"nameLocation": "1197:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "1181:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1225:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "1209:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "1232:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:67:11"
									},
									"src": "1166:82:11"
								},
								{
									"anonymous": false,
									"eventSelector": "f7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683",
									"id": 1433,
									"name": "Claimed",
									"nameLocation": "1260:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimant",
												"nameLocation": "1284:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1268:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1310:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1294:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1325:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "1317:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:65:11"
									},
									"src": "1254:79:11"
								},
								{
									"anonymous": false,
									"eventSelector": "3d0601f3b0e52fd772f1fa71d91651b34b6a11144bea30d74e0f820019a04dc2",
									"id": 1441,
									"name": "AllowedAmountUpdated",
									"nameLocation": "1345:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1382:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1366:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1404:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1388:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "1419:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1411:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:64:11"
									},
									"src": "1339:91:11"
								},
								{
									"anonymous": false,
									"eventSelector": "09e6db48f22357e6dce2bbff89db8ff25f0012a08186d6ea72e2343fdc112e13",
									"id": 1449,
									"name": "RoundUpdated",
									"nameLocation": "1442:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"indexed": false,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "1463:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1455:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"indexed": false,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "1478:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1470:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": false,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "1490:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "1483:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1446,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1483:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1454:48:11"
									},
									"src": "1436:67:11"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "1755:109:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "1781:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1459,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1766:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1766:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "ExpressionStatement",
												"src": "1766:21:11"
											},
											{
												"expression": {
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1463,
														"name": "scorer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "1831:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1808",
															"typeString": "contract IScorer"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1465,
																"name": "_scorer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "1848:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1464,
															"name": "IScorer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "1840:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IScorer_$1808_$",
																"typeString": "type(contract IScorer)"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1840:16:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IScorer_$1808",
															"typeString": "contract IScorer"
														}
													},
													"src": "1831:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IScorer_$1808",
														"typeString": "contract IScorer"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "1831:25:11"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "1511:165:11",
										"text": "@notice Initializes this contract with its initial state.\n @param _scorer The scoring contract address.\n @param owner The owner address."
									},
									"functionSelector": "485cc955",
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1457,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1456,
												"name": "initializer",
												"nameLocations": [
													"1743:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1743:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1743:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "1691:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_scorer",
												"nameLocation": "1710:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1702:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1727:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "1719:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:32:11"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:0:11"
									},
									"scope": 1795,
									"src": "1682:182:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "2147:388:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1478,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "2162:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1479,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "2171:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2162:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "2265:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1491,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "2288:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2297:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2288:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4465706f73697420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2300:42:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		},
																		"value": "Deposit amount must be greater than zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_db6be16441e34ea48fe8874b96e95d582ae0bd410efda730a60e59285507cd71",
																			"typeString": "literal_string \"Deposit amount must be greater than zero\""
																		}
																	],
																	"id": 1490,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2280:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2280:63:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "2280:63:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1501,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2389:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2393:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2389:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1505,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2409:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_nCookieJar_$1795",
																					"typeString": "contract nCookieJar"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_nCookieJar_$1795",
																					"typeString": "contract nCookieJar"
																				}
																			],
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2401:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1503,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2401:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2401:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1507,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "2416:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1498,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1473,
																				"src": "2365:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1497,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "2358:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2358:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2372:16:11",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 736,
																	"src": "2358:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$662_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2358:65:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1509,
															"nodeType": "ExpressionStatement",
															"src": "2358:65:11"
														}
													]
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "2158:277:11",
												"trueBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "2178:81:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1482,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2201:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2205:5:11",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "2201:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1484,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1475,
																			"src": "2214:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2201:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e636f727265637420457468657220616d6f756e74",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2222:24:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		},
																		"value": "Incorrect Ether amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_991aa0e85ace1bc80c4fb9605be59c56faa823632c68718d3603358dfdf05375",
																			"typeString": "literal_string \"Incorrect Ether amount\""
																		}
																	],
																	"id": 1481,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2193:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2193:54:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "2193:54:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1512,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "2447:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1514,
														"indexExpression": {
															"id": 1513,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "2461:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2447:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1515,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1475,
														"src": "2471:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2447:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "2447:30:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1519,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2501:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2505:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2501:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "2513:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "2520:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1518,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "2493:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "EmitStatement",
												"src": "2488:39:11"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "1872:204:11",
										"text": "@notice Deposits funds into this jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The value to add (in wei for Ether)."
									},
									"functionSelector": "47e7ef24",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "2091:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2107:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2099:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2122:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "2114:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:31:11"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2147:0:11"
									},
									"scope": 1795,
									"src": "2082:453:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "2659:988:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1533,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2678:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2684:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2678:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1535,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "2697:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$1396_storage",
																			"typeString": "struct nCookieJar.Round storage ref"
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2710:5:11",
																	"memberName": "start",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1391,
																	"src": "2697:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2678:37:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1538,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2719:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2725:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2719:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1540,
																		"name": "currentRound",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1399,
																		"src": "2738:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Round_$1396_storage",
																			"typeString": "struct nCookieJar.Round storage ref"
																		}
																	},
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2751:3:11",
																	"memberName": "end",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "2738:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2719:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2678:76:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742077697468696e20726f756e64206475726174696f6e",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2756:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
																"typeString": "literal_string \"Not within round duration\""
															},
															"value": "Not within round duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0bb342b502933de84f0d99746bfc2482038a3b7cee5cba5b52363bee6c664363",
																"typeString": "literal_string \"Not within round duration\""
															}
														],
														"id": 1532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2670:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2670:114:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "2670:114:11"
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "userAllowedAmount",
														"nameLocation": "2805:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "2797:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1547,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2797:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1555,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1549,
															"name": "allowedAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "2825:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1552,
														"indexExpression": {
															"expression": {
																"id": 1550,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2840:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2844:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2840:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2825:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1554,
													"indexExpression": {
														"id": 1553,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "2852:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2825:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2797:61:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1557,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "2877:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2897:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2877:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20636c61696d61626c6520616d6f756e74",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2900:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															},
															"value": "No claimable amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1216a2444c73589960daa3d3f5021a045fa92e9eba7e005bed09bb2cffc805cf",
																"typeString": "literal_string \"No claimable amount\""
															}
														],
														"id": 1556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2869:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2869:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "2869:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1564,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "2941:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1566,
																"indexExpression": {
																	"id": 1565,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "2955:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2941:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1567,
																"name": "userAllowedAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "2965:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2941:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e647320696e206a6172",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2984:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															},
															"value": "Insufficient funds in jar"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c80031e0fb9d70383cbc2d62681c8a50bf9ee54ad8eb49f44006fd6a1e2f0d",
																"typeString": "literal_string \"Insufficient funds in jar\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2933:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2933:79:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "2933:79:11"
											},
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "trustKey",
														"nameLocation": "3090:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "3082:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1572,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3082:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1577,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "5472757374",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3111:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																"typeString": "literal_string \"Trust\""
															},
															"value": "Trust"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_63608faae6311ef53110180034271a9b97988ebe924a609749732bc2f158407b",
																"typeString": "literal_string \"Trust\""
															}
														],
														"id": 1574,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3101:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3101:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3082:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1581,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3151:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3155:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3151:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1583,
																		"name": "trustKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1573,
																		"src": "3163:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 1579,
																		"name": "scorer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1389,
																		"src": "3138:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IScorer_$1808",
																			"typeString": "contract IScorer"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:5:11",
																	"memberName": "score",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1807,
																	"src": "3138:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_uint256_$",
																		"typeString": "function (address,bytes32) view external returns (uint256)"
																	}
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3175:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3138:38:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742054727573742073636f7265",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3178:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																"typeString": "literal_string \"Insufficient Trust score\""
															},
															"value": "Insufficient Trust score"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa9fa739698bc0ad8b92684a1744e315a059e6fa0551d4e6ea15d61c6a530ec5",
																"typeString": "literal_string \"Insufficient Trust score\""
															}
														],
														"id": 1578,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3130:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1589,
												"nodeType": "ExpressionStatement",
												"src": "3130:75:11"
											},
											{
												"expression": {
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1590,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "3218:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1594,
															"indexExpression": {
																"expression": {
																	"id": 1591,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3233:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3237:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3233:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3218:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1595,
														"indexExpression": {
															"id": 1593,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3245:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3218:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3218:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "3218:37:11"
											},
											{
												"expression": {
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1599,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "3266:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1601,
														"indexExpression": {
															"id": 1600,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3280:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3266:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1602,
														"name": "userAllowedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "3290:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3266:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "3266:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1605,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "3324:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1606,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "3333:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3324:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1633,
													"nodeType": "Block",
													"src": "3493:84:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1628,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3535:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3539:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3535:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1630,
																		"name": "userAllowedAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1548,
																		"src": "3547:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1625,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1529,
																				"src": "3515:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1624,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "3508:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3508:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3522:12:11",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "3508:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$662_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3508:57:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1632,
															"nodeType": "ExpressionStatement",
															"src": "3508:57:11"
														}
													]
												},
												"id": 1634,
												"nodeType": "IfStatement",
												"src": "3320:257:11",
												"trueBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "3340:147:11",
													"statements": [
														{
															"assignments": [
																1609,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1609,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "3361:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1623,
																	"src": "3356:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1608,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "3356:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1617,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3416:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1610,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3374:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3378:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3374:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3385:4:11",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "3374:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1613,
																			"name": "userAllowedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1548,
																			"src": "3397:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "3374:41:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3374:45:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3355:64:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1619,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "3442:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3451:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1618,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3434:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3434:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1622,
															"nodeType": "ExpressionStatement",
															"src": "3434:41:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1636,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3602:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3606:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3602:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1638,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "3614:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1639,
															"name": "userAllowedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "3621:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1635,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "3594:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3594:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "EmitStatement",
												"src": "3589:50:11"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "2543:71:11",
										"text": "@notice Claims the full allowed amount for a user during the round."
									},
									"functionSelector": "1e83409a",
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2629:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2643:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "2635:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:15:11"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2659:0:11"
									},
									"scope": 1795,
									"src": "2620:1027:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "3969:112:11",
										"statements": [
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1655,
																"name": "allowedAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "3980:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1658,
															"indexExpression": {
																"id": 1656,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "3995:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3980:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1659,
														"indexExpression": {
															"id": 1657,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "4001:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3980:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1660,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "4010:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3980:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "3980:36:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1664,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "4053:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1665,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "4059:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1650,
															"src": "4066:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1663,
														"name": "AllowedAmountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "4032:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "4027:46:11"
											}
										]
									},
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "3655:218:11",
										"text": "@notice Sets the allowed amount for a specific user and token.\n @param user The address of the user.\n @param token The token address.\n @param amount The allowed amount for the user."
									},
									"functionSelector": "b807a3c4",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1653,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1652,
												"name": "onlyOwner",
												"nameLocations": [
													"3959:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3959:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3959:9:11"
										}
									],
									"name": "setAllowedAmount",
									"nameLocation": "3888:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3913:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "3905:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3905:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3927:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "3919:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3942:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "3934:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:45:11"
									},
									"returnParameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3969:0:11"
									},
									"scope": 1795,
									"src": "3879:202:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "4422:186:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1683,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "4441:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1684,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "4449:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4441:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4454:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															},
															"value": "Start time must be before end time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
																"typeString": "literal_string \"Start time must be before end time\""
															}
														],
														"id": 1682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4433:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1688,
												"nodeType": "ExpressionStatement",
												"src": "4433:58:11"
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1689,
														"name": "currentRound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "4502:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1396_storage",
															"typeString": "struct nCookieJar.Round storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1691,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "4523:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1692,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "4530:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1693,
																"name": "metadataURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "4535:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1690,
															"name": "Round",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "4517:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Round_$1396_storage_ptr_$",
																"typeString": "type(struct nCookieJar.Round storage pointer)"
															}
														},
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4517:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Round_$1396_memory_ptr",
															"typeString": "struct nCookieJar.Round memory"
														}
													},
													"src": "4502:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Round_$1396_storage",
														"typeString": "struct nCookieJar.Round storage ref"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "4502:45:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1698,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "4576:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1675,
															"src": "4583:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1700,
															"name": "metadataURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "4588:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1697,
														"name": "RoundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "4563:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4563:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "EmitStatement",
												"src": "4558:42:11"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "4089:235:11",
										"text": "@notice Sets the round duration and metadata URI.\n @param start The start timestamp of the round.\n @param end The end timestamp of the round.\n @param metadataURI The IPFS URI for the round metadata."
									},
									"functionSelector": "be9a7687",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1679,
												"name": "onlyOwner",
												"nameLocations": [
													"4412:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4412:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4412:9:11"
										}
									],
									"name": "setRound",
									"nameLocation": "4339:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "4356:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "4348:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4348:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "4371:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "4363:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "metadataURI",
												"nameLocation": "4390:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "4376:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4376:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4347:55:11"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4422:0:11"
									},
									"scope": 1795,
									"src": "4330:278:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "4881:489:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1715,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "4900:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4900:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															},
															"value": "Withdrawal amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e6dfdf6fd224a5113c49a29cf9b4b639f9376661adbb7661d7ed8506995ced76",
																"typeString": "literal_string \"Withdrawal amount must be greater than zero\""
															}
														],
														"id": 1714,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4892:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4892:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "4892:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1722,
																	"name": "totalBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "4977:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1724,
																"indexExpression": {
																	"id": 1723,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "4991:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4977:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1725,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "5001:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4977:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5009:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 1721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4969:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4969:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "4969:61:11"
											},
											{
												"expression": {
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1730,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "5043:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1732,
														"indexExpression": {
															"id": 1731,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "5057:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5043:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1733,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1709,
														"src": "5067:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5043:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "5043:30:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1736,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "5090:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1737,
														"name": "ETHER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "5099:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5090:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1764,
													"nodeType": "Block",
													"src": "5245:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1759,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 105,
																			"src": "5287:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5287:7:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1761,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1709,
																		"src": "5296:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1756,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1707,
																				"src": "5267:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1755,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "5260:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5260:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5274:12:11",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 709,
																	"src": "5260:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$662_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5260:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1763,
															"nodeType": "ExpressionStatement",
															"src": "5260:43:11"
														}
													]
												},
												"id": 1765,
												"nodeType": "IfStatement",
												"src": "5086:229:11",
												"trueBody": {
													"id": 1754,
													"nodeType": "Block",
													"src": "5106:133:11",
													"statements": [
														{
															"assignments": [
																1740,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1740,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "5127:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1754,
																	"src": "5122:12:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1739,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5122:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1748,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5168:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1741,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 105,
																				"src": "5140:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5140:7:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5148:4:11",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5140:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1744,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1709,
																			"src": "5160:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5140:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5121:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1750,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1740,
																		"src": "5194:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4574686572207472616e73666572206661696c6564",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5203:23:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		},
																		"value": "Ether transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_51c3f7cf964660c693aa19408b514080e5007968392785da29e479ee54a2c3be",
																			"typeString": "literal_string \"Ether transfer failed\""
																		}
																	],
																	"id": 1749,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5186:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5186:41:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1753,
															"nodeType": "ExpressionStatement",
															"src": "5186:41:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1767,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "5339:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5339:7:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1769,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "5348:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1770,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "5355:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1766,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "5330:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "EmitStatement",
												"src": "5325:37:11"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "4616:191:11",
										"text": "@notice Withdraws funds from the jar for a specific token or Ether.\n @param token The token address (address(0) for Ether).\n @param amount The amount to withdraw."
									},
									"functionSelector": "f3fef3a3",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1712,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1711,
												"name": "onlyOwner",
												"nameLocations": [
													"4871:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4871:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4871:9:11"
										}
									],
									"name": "withdraw",
									"nameLocation": "4822:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4839:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4831:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4854:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "4846:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4846:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:31:11"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4881:0:11"
									},
									"scope": 1795,
									"src": "4813:557:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "5476:105:11",
										"statements": [
											{
												"expression": {
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1778,
															"name": "totalBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "5487:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1780,
														"indexExpression": {
															"id": 1779,
															"name": "ETHER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "5501:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5487:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1781,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5511:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5515:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5511:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5487:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "5487:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1786,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5544:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5548:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5544:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "ETHER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "5556:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1789,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5563:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5567:5:11",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5563:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "5536:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1792,
												"nodeType": "EmitStatement",
												"src": "5531:42:11"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "5378:65:11",
										"text": "@notice Allows Ether deposits directly via fallback function."
									},
									"id": 1794,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5456:2:11"
									},
									"returnParameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5476:0:11"
									},
									"scope": 1795,
									"src": "5449:132:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1796,
							"src": "367:5217:11",
							"usedErrors": [
								30,
								35,
								211,
								214,
								676
							],
							"usedEvents": [
								41,
								219,
								1417,
								1425,
								1433,
								1441,
								1449
							]
						}
					],
					"src": "33:5553:11"
				},
				"id": 11
			},
			"contracts/interface/IScorer.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IScorer.sol",
					"exportedSymbols": {
						"IScorer": [
							1808
						]
					},
					"id": 1809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1797,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IScorer",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1808,
							"linearizedBaseContracts": [
								1808
							],
							"name": "IScorer",
							"nameLocation": "71:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "86:741:12",
										"text": " @dev Returns the score of a specific user for a given score type.\n      The score type is represented as a `bytes32` hash (e.g., keccak256(\"Trust\")).\n      The score is typically used to determine the user's eligibility for certain actions or claims.\n      The exact logic for scoring is determined by the implementation of the contract that inherits this interface.\n @param user The address of the user whose score is being queried.\n @param scoreType The type of score to query, represented as a `bytes32` hash.\n @return The score of the user as a uint256 value.\n @notice This function should be implemented in the contract that inherits the `IScorer` interface."
									},
									"functionSelector": "faa5e295",
									"id": 1807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "score",
									"nameLocation": "842:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "856:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "848:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "scoreType",
												"nameLocation": "870:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "862:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1801,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:33:12"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "904:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:9:12"
									},
									"scope": 1808,
									"src": "833:80:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1809,
							"src": "61:855:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:885:12"
				},
				"id": 12
			}
		}
	}
}