{
	"id": "c67872a392f6579b4c74899dd035d422",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Tipping.sol": {
				"content": "// SPDX-License-Identifier: AGPL-3.0\r\n\r\npragma solidity ^0.8.24;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol';\r\nimport { IERC20 } from '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport { SafeERC20 } from '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\r\n\r\ncontract Tipping is\r\n  Initializable,\r\n  OwnableUpgradeable,\r\n  ReentrancyGuardUpgradeable,\r\n  PausableUpgradeable\r\n{\r\n  using SafeERC20 for IERC20;\r\n  uint256 public feesBps;\r\n\r\n  event TipSent(\r\n    uint256 indexed fromProfileId,\r\n    uint256 indexed toProfileId,\r\n    uint256 indexed publicationId,\r\n    address token,\r\n    address from,\r\n    address to,\r\n    uint256 amount\r\n  );\r\n\r\n  error TipFailed(string message);\r\n  error InsufficientAllowance(string message);\r\n  error FeesBpsTooHigh();\r\n\r\n  // Initializer instead of constructor for upgradeable contracts\r\n  function initialize(address owner, uint256 _feesBps) public initializer {\r\n    __Ownable_init(owner);\r\n    __ReentrancyGuard_init();\r\n    __Pausable_init();\r\n    feesBps = _feesBps;\r\n  }\r\n\r\n  function pause() external onlyOwner {\r\n    _pause();\r\n  }\r\n\r\n  function unpause() external onlyOwner {\r\n    _unpause();\r\n  }\r\n\r\n  function setFees(uint256 _feesBps) external onlyOwner {\r\n    if (_feesBps > 10000) {\r\n      revert FeesBpsTooHigh();\r\n    }\r\n\r\n    feesBps = _feesBps;\r\n  }\r\n\r\n  function checkAllowance(\r\n    address tokenAddress,\r\n    address owner\r\n  ) external view returns (uint256) {\r\n    IERC20 token = IERC20(tokenAddress);\r\n    return token.allowance(owner, address(this));\r\n  }\r\n\r\n  function tip(\r\n    address tokenAddress,\r\n    address recipient,\r\n    uint256 amount,\r\n    uint256 fromProfileId,\r\n    uint256 toProfileId,\r\n    uint256 publicationId\r\n  ) external whenNotPaused nonReentrant {\r\n    IERC20 token = IERC20(tokenAddress);\r\n\r\n    // Calculate fee and net amount\r\n    uint256 fee = (amount * feesBps) / 10000;\r\n    uint256 netAmount = amount - fee;\r\n\r\n    token.safeTransferFrom(msg.sender, owner(), fee);\r\n    token.safeTransferFrom(msg.sender, recipient, netAmount);\r\n\r\n    emit TipSent(\r\n      fromProfileId,\r\n      toProfileId,\r\n      publicationId,\r\n      tokenAddress,\r\n      msg.sender,\r\n      recipient,\r\n      netAmount\r\n    );\r\n  }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tipping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tipping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tipping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Tipping.sol": {
				"Tipping": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FeesBpsTooHigh",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "message",
									"type": "string"
								}
							],
							"name": "TipFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromProfileId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "toProfileId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "publicationId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TipSent",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "checkAllowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feesBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feesBps",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feesBps",
									"type": "uint256"
								}
							],
							"name": "setFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fromProfileId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "toProfileId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "publicationId",
									"type": "uint256"
								}
							],
							"name": "tip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Tipping.sol\":545:2482  contract Tipping is... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Tipping.sol\":545:2482  contract Tipping is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8b099b23\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xce2c2df1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x0de5e0e7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3d18678e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Tipping.sol\":1810:2479  function tip(... */\n    tag_3:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"contracts/Tipping.sol\":1436:1591  function setFees(uint256 _feesBps) external onlyOwner {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/Tipping.sol\":1369:1430  function unpause() external onlyOwner {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Tipping.sol\":1306:1363  function pause() external onlyOwner {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/Tipping.sol\":1597:1804  function checkAllowance(... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tipping.sol\":1114:1300  function initialize(address owner, uint256 _feesBps) public initializer {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Tipping.sol\":697:719  uint256 public feesBps */\n    tag_12:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/Tipping.sol\":1810:2479  function tip(... */\n    tag_18:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_56\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      tag_58\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3414  _nonReentrantBefore */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3395:3416  _nonReentrantBefore() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/Tipping.sol\":2025:2037  IERC20 token */\n      0x00\n        /* \"contracts/Tipping.sol\":2047:2059  tokenAddress */\n      dup7\n        /* \"contracts/Tipping.sol\":2025:2060  IERC20 token = IERC20(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Tipping.sol\":2106:2117  uint256 fee */\n      0x00\n        /* \"contracts/Tipping.sol\":2141:2146  10000 */\n      0x2710\n        /* \"contracts/Tipping.sol\":2130:2137  feesBps */\n      sload(0x00)\n        /* \"contracts/Tipping.sol\":2121:2127  amount */\n      dup8\n        /* \"contracts/Tipping.sol\":2121:2137  amount * feesBps */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/Tipping.sol\":2120:2146  (amount * feesBps) / 10000 */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/Tipping.sol\":2106:2146  uint256 fee = (amount * feesBps) / 10000 */\n      swap1\n      pop\n        /* \"contracts/Tipping.sol\":2153:2170  uint256 netAmount */\n      0x00\n        /* \"contracts/Tipping.sol\":2182:2185  fee */\n      dup2\n        /* \"contracts/Tipping.sol\":2173:2179  amount */\n      dup8\n        /* \"contracts/Tipping.sol\":2173:2185  amount - fee */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/Tipping.sol\":2153:2185  uint256 netAmount = amount - fee */\n      swap1\n      pop\n        /* \"contracts/Tipping.sol\":2194:2242  token.safeTransferFrom(msg.sender, owner(), fee) */\n      tag_67\n        /* \"contracts/Tipping.sol\":2217:2227  msg.sender */\n      caller\n        /* \"contracts/Tipping.sol\":2229:2236  owner() */\n      tag_68\n        /* \"contracts/Tipping.sol\":2229:2234  owner */\n      tag_40\n        /* \"contracts/Tipping.sol\":2229:2236  owner() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/Tipping.sol\":2238:2241  fee */\n      dup5\n        /* \"contracts/Tipping.sol\":2194:2199  token */\n      dup7\n        /* \"contracts/Tipping.sol\":2194:2216  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_69\n      swap1\n        /* \"contracts/Tipping.sol\":2194:2242  token.safeTransferFrom(msg.sender, owner(), fee) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"contracts/Tipping.sol\":2249:2305  token.safeTransferFrom(msg.sender, recipient, netAmount) */\n      tag_70\n        /* \"contracts/Tipping.sol\":2272:2282  msg.sender */\n      caller\n        /* \"contracts/Tipping.sol\":2284:2293  recipient */\n      dup10\n        /* \"contracts/Tipping.sol\":2295:2304  netAmount */\n      dup4\n        /* \"contracts/Tipping.sol\":2249:2254  token */\n      dup7\n        /* \"contracts/Tipping.sol\":2249:2271  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_69\n      swap1\n        /* \"contracts/Tipping.sol\":2249:2305  token.safeTransferFrom(msg.sender, recipient, netAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/Tipping.sol\":2377:2390  publicationId */\n      dup4\n        /* \"contracts/Tipping.sol\":2357:2368  toProfileId */\n      dup6\n        /* \"contracts/Tipping.sol\":2335:2348  fromProfileId */\n      dup8\n        /* \"contracts/Tipping.sol\":2319:2473  TipSent(... */\n      0xccf4cbdbebf44b8f817936435dfaa557d772265c6eef9c54c198d3c873624f34\n        /* \"contracts/Tipping.sol\":2399:2411  tokenAddress */\n      dup13\n        /* \"contracts/Tipping.sol\":2420:2430  msg.sender */\n      caller\n        /* \"contracts/Tipping.sol\":2439:2448  recipient */\n      dup14\n        /* \"contracts/Tipping.sol\":2457:2466  netAmount */\n      dup8\n        /* \"contracts/Tipping.sol\":2319:2473  TipSent(... */\n      mload(0x40)\n      tag_71\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Tipping.sol\":2018:2479  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3455  _nonReentrantAfter */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3437:3457  _nonReentrantAfter() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/Tipping.sol\":1810:2479  function tip(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Tipping.sol\":1436:1591  function setFees(uint256 _feesBps) external onlyOwner {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_76\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/Tipping.sol\":1512:1517  10000 */\n      0x2710\n        /* \"contracts/Tipping.sol\":1501:1509  _feesBps */\n      dup2\n        /* \"contracts/Tipping.sol\":1501:1517  _feesBps > 10000 */\n      gt\n        /* \"contracts/Tipping.sol\":1497:1559  if (_feesBps > 10000) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/Tipping.sol\":1535:1551  FeesBpsTooHigh() */\n      mload(0x40)\n      0xdf44072600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Tipping.sol\":1497:1559  if (_feesBps > 10000) {... */\n    tag_79:\n        /* \"contracts/Tipping.sol\":1577:1585  _feesBps */\n      dup1\n        /* \"contracts/Tipping.sol\":1567:1574  feesBps */\n      0x00\n        /* \"contracts/Tipping.sol\":1567:1585  feesBps = _feesBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Tipping.sol\":1436:1591  function setFees(uint256 _feesBps) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Tipping.sol\":1369:1430  function unpause() external onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Tipping.sol\":1414:1424  _unpause() */\n      tag_83\n        /* \"contracts/Tipping.sol\":1414:1422  _unpause */\n      tag_84\n        /* \"contracts/Tipping.sol\":1414:1424  _unpause() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/Tipping.sol\":1369:1430  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2739:2743  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2780  PausableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2802  _getPausableStorage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2783:2804  _getPausableStorage() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2755:2804  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2822  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2814:2830  return $._paused */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Tipping.sol\":1306:1363  function pause() external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/Tipping.sol\":1349:1357  _pause() */\n      tag_96\n        /* \"contracts/Tipping.sol\":1349:1355  _pause */\n      tag_97\n        /* \"contracts/Tipping.sol\":1349:1357  _pause() */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Tipping.sol\":1306:1363  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Tipping.sol\":1597:1804  function checkAllowance(... */\n    tag_36:\n        /* \"contracts/Tipping.sol\":1696:1703  uint256 */\n      0x00\n        /* \"contracts/Tipping.sol\":1712:1724  IERC20 token */\n      dup1\n        /* \"contracts/Tipping.sol\":1734:1746  tokenAddress */\n      dup4\n        /* \"contracts/Tipping.sol\":1712:1747  IERC20 token = IERC20(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/Tipping.sol\":1761:1766  token */\n      dup1\n        /* \"contracts/Tipping.sol\":1761:1776  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Tipping.sol\":1777:1782  owner */\n      dup5\n        /* \"contracts/Tipping.sol\":1792:1796  this */\n      address\n        /* \"contracts/Tipping.sol\":1761:1798  token.allowance(owner, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_102:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"contracts/Tipping.sol\":1754:1798  return token.allowance(owner, address(this)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/Tipping.sol\":1597:1804  function checkAllowance(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_106\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Tipping.sol\":1114:1300  function initialize(address owner, uint256 _feesBps) public initializer {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_109\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_111\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_115:\n        /* \"contracts/Tipping.sol\":1193:1214  __Ownable_init(owner) */\n      tag_117\n        /* \"contracts/Tipping.sol\":1208:1213  owner */\n      dup8\n        /* \"contracts/Tipping.sol\":1193:1207  __Ownable_init */\n      tag_118\n        /* \"contracts/Tipping.sol\":1193:1214  __Ownable_init(owner) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Tipping.sol\":1221:1245  __ReentrancyGuard_init() */\n      tag_119\n        /* \"contracts/Tipping.sol\":1221:1243  __ReentrancyGuard_init */\n      tag_120\n        /* \"contracts/Tipping.sol\":1221:1245  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Tipping.sol\":1252:1269  __Pausable_init() */\n      tag_121\n        /* \"contracts/Tipping.sol\":1252:1267  __Pausable_init */\n      tag_122\n        /* \"contracts/Tipping.sol\":1252:1269  __Pausable_init() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Tipping.sol\":1286:1294  _feesBps */\n      dup6\n        /* \"contracts/Tipping.sol\":1276:1283  feesBps */\n      0x00\n        /* \"contracts/Tipping.sol\":1276:1294  feesBps = _feesBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Tipping.sol\":1114:1300  function initialize(address owner, uint256 _feesBps) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Tipping.sol\":697:719  uint256 public feesBps */\n    tag_48:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2976  paused */\n      tag_26\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2970:2978  paused() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3519:3551  ReentrancyGuardStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3554:3582  _getReentrancyGuardStorage() */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3554:3580  _getReentrancyGuardStorage */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3554:3582  _getReentrancyGuardStorage() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3519:3582  ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1991:1992  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3671  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3679  $._status */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3670:3690  $._status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3713:3743  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3666:3754  if ($._status == ENTERED) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1991:1992  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3829  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3837  $._status */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3828:3847  $._status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3509:3854  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3470:3854  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3908:3940  ReentrancyGuardStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3943:3971  _getReentrancyGuardStorage() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3943:3969  _getReentrancyGuardStorage */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3943:3971  _getReentrancyGuardStorage() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3908:3971  ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4114  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4122  $._status */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":4113:4136  $._status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3898:4143  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":3860:4143  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_40\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3757  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3779  _getPausableStorage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3760:3781  _getPausableStorage() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3732:3781  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3803:3808  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3792  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3800  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3842  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1200:1225  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1270:1293  PausableStorageLocation */\n      0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1260:1293  $.slot := PausableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1147:1309  function _getPausableStorage() private pure returns (PausableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_56\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3450  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3472  _getPausableStorage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3453:3474  _getPausableStorage() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3425:3474  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3485  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3493  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3532  _msgSender */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3415:3542  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2684:2795  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2788  __ReentrancyGuard_init_unchained() */\n      tag_180\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2786  __ReentrancyGuard_init_unchained */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2754:2788  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2684:2795  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2395:2578  function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2455:2487  ReentrancyGuardStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2532:2562  ReentrancyGuardStorageLocation */\n      0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2522:2562  $.slot := ReentrancyGuardStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2395:2578  function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_191)\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3174  paused */\n      tag_26\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3168:3176  paused() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2801:2984  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2881:2913  ReentrancyGuardStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2916:2944  _getReentrancyGuardStorage() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2916:2942  _getReentrancyGuardStorage */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2916:2944  _getReentrancyGuardStorage() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2881:2944  ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":1949:1950  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2954:2955  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2954:2963  $._status */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2954:2977  $._status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2871:2984  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":2801:2984  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2037  PausableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      tag_215\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2059  _getPausableStorage */\n      tag_87\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2040:2061  _getPausableStorage() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2012:2061  PausableStorage storage $ = _getPausableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2083:2088  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2072  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2080  $._paused */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2002:2095  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_221:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_222:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_246\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_221\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_223:\n        /* \"#utility.yul\":641:665   */\n      tag_248\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_222\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_249:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_224:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_251\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_223\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_225:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_226:\n        /* \"#utility.yul\":997:1021   */\n      tag_254\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_225\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_255:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_227:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_257\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_226\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:2254   */\n    tag_17:\n        /* \"#utility.yul\":1301:1307   */\n      0x00\n        /* \"#utility.yul\":1309:1315   */\n      dup1\n        /* \"#utility.yul\":1317:1323   */\n      0x00\n        /* \"#utility.yul\":1325:1331   */\n      dup1\n        /* \"#utility.yul\":1333:1339   */\n      0x00\n        /* \"#utility.yul\":1341:1347   */\n      dup1\n        /* \"#utility.yul\":1390:1393   */\n      0xc0\n        /* \"#utility.yul\":1378:1387   */\n      dup8\n        /* \"#utility.yul\":1369:1376   */\n      dup10\n        /* \"#utility.yul\":1365:1388   */\n      sub\n        /* \"#utility.yul\":1361:1394   */\n      slt\n        /* \"#utility.yul\":1358:1478   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":1397:1476   */\n      tag_260\n      tag_219\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1358:1478   */\n    tag_259:\n        /* \"#utility.yul\":1517:1518   */\n      0x00\n        /* \"#utility.yul\":1542:1595   */\n      tag_261\n        /* \"#utility.yul\":1587:1594   */\n      dup10\n        /* \"#utility.yul\":1578:1584   */\n      dup3\n        /* \"#utility.yul\":1567:1576   */\n      dup11\n        /* \"#utility.yul\":1563:1585   */\n      add\n        /* \"#utility.yul\":1542:1595   */\n      tag_224\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1532:1595   */\n      swap7\n      pop\n        /* \"#utility.yul\":1488:1605   */\n      pop\n        /* \"#utility.yul\":1644:1646   */\n      0x20\n        /* \"#utility.yul\":1670:1723   */\n      tag_262\n        /* \"#utility.yul\":1715:1722   */\n      dup10\n        /* \"#utility.yul\":1706:1712   */\n      dup3\n        /* \"#utility.yul\":1695:1704   */\n      dup11\n        /* \"#utility.yul\":1691:1713   */\n      add\n        /* \"#utility.yul\":1670:1723   */\n      tag_224\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1660:1723   */\n      swap6\n      pop\n        /* \"#utility.yul\":1615:1733   */\n      pop\n        /* \"#utility.yul\":1772:1774   */\n      0x40\n        /* \"#utility.yul\":1798:1851   */\n      tag_263\n        /* \"#utility.yul\":1843:1850   */\n      dup10\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1823:1832   */\n      dup11\n        /* \"#utility.yul\":1819:1841   */\n      add\n        /* \"#utility.yul\":1798:1851   */\n      tag_227\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1788:1851   */\n      swap5\n      pop\n        /* \"#utility.yul\":1743:1861   */\n      pop\n        /* \"#utility.yul\":1900:1902   */\n      0x60\n        /* \"#utility.yul\":1926:1979   */\n      tag_264\n        /* \"#utility.yul\":1971:1978   */\n      dup10\n        /* \"#utility.yul\":1962:1968   */\n      dup3\n        /* \"#utility.yul\":1951:1960   */\n      dup11\n        /* \"#utility.yul\":1947:1969   */\n      add\n        /* \"#utility.yul\":1926:1979   */\n      tag_227\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1916:1979   */\n      swap4\n      pop\n        /* \"#utility.yul\":1871:1989   */\n      pop\n        /* \"#utility.yul\":2028:2031   */\n      0x80\n        /* \"#utility.yul\":2055:2108   */\n      tag_265\n        /* \"#utility.yul\":2100:2107   */\n      dup10\n        /* \"#utility.yul\":2091:2097   */\n      dup3\n        /* \"#utility.yul\":2080:2089   */\n      dup11\n        /* \"#utility.yul\":2076:2098   */\n      add\n        /* \"#utility.yul\":2055:2108   */\n      tag_227\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":2045:2108   */\n      swap3\n      pop\n        /* \"#utility.yul\":1999:2118   */\n      pop\n        /* \"#utility.yul\":2157:2160   */\n      0xa0\n        /* \"#utility.yul\":2184:2237   */\n      tag_266\n        /* \"#utility.yul\":2229:2236   */\n      dup10\n        /* \"#utility.yul\":2220:2226   */\n      dup3\n        /* \"#utility.yul\":2209:2218   */\n      dup11\n        /* \"#utility.yul\":2205:2227   */\n      add\n        /* \"#utility.yul\":2184:2237   */\n      tag_227\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2174:2237   */\n      swap2\n      pop\n        /* \"#utility.yul\":2128:2247   */\n      pop\n        /* \"#utility.yul\":1197:2254   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":2260:2589   */\n    tag_21:\n        /* \"#utility.yul\":2319:2325   */\n      0x00\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2356:2365   */\n      dup3\n        /* \"#utility.yul\":2347:2354   */\n      dup5\n        /* \"#utility.yul\":2343:2366   */\n      sub\n        /* \"#utility.yul\":2339:2371   */\n      slt\n        /* \"#utility.yul\":2336:2455   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2374:2453   */\n      tag_269\n      tag_219\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2336:2455   */\n    tag_268:\n        /* \"#utility.yul\":2494:2495   */\n      0x00\n        /* \"#utility.yul\":2519:2572   */\n      tag_270\n        /* \"#utility.yul\":2564:2571   */\n      dup5\n        /* \"#utility.yul\":2555:2561   */\n      dup3\n        /* \"#utility.yul\":2544:2553   */\n      dup6\n        /* \"#utility.yul\":2540:2562   */\n      add\n        /* \"#utility.yul\":2519:2572   */\n      tag_227\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2509:2572   */\n      swap2\n      pop\n        /* \"#utility.yul\":2465:2582   */\n      pop\n        /* \"#utility.yul\":2260:2589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2595:2685   */\n    tag_228:\n        /* \"#utility.yul\":2629:2636   */\n      0x00\n        /* \"#utility.yul\":2672:2677   */\n      dup2\n        /* \"#utility.yul\":2665:2678   */\n      iszero\n        /* \"#utility.yul\":2658:2679   */\n      iszero\n        /* \"#utility.yul\":2647:2679   */\n      swap1\n      pop\n        /* \"#utility.yul\":2595:2685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2691:2800   */\n    tag_229:\n        /* \"#utility.yul\":2772:2793   */\n      tag_273\n        /* \"#utility.yul\":2787:2792   */\n      dup2\n        /* \"#utility.yul\":2772:2793   */\n      tag_228\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2767:2770   */\n      dup3\n        /* \"#utility.yul\":2760:2794   */\n      mstore\n        /* \"#utility.yul\":2691:2800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2806:3016   */\n    tag_28:\n        /* \"#utility.yul\":2893:2897   */\n      0x00\n        /* \"#utility.yul\":2931:2933   */\n      0x20\n        /* \"#utility.yul\":2920:2929   */\n      dup3\n        /* \"#utility.yul\":2916:2934   */\n      add\n        /* \"#utility.yul\":2908:2934   */\n      swap1\n      pop\n        /* \"#utility.yul\":2944:3009   */\n      tag_275\n        /* \"#utility.yul\":3006:3007   */\n      0x00\n        /* \"#utility.yul\":2995:3004   */\n      dup4\n        /* \"#utility.yul\":2991:3008   */\n      add\n        /* \"#utility.yul\":2982:2988   */\n      dup5\n        /* \"#utility.yul\":2944:3009   */\n      tag_229\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2806:3016   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3022:3496   */\n    tag_35:\n        /* \"#utility.yul\":3090:3096   */\n      0x00\n        /* \"#utility.yul\":3098:3104   */\n      dup1\n        /* \"#utility.yul\":3147:3149   */\n      0x40\n        /* \"#utility.yul\":3135:3144   */\n      dup4\n        /* \"#utility.yul\":3126:3133   */\n      dup6\n        /* \"#utility.yul\":3122:3145   */\n      sub\n        /* \"#utility.yul\":3118:3150   */\n      slt\n        /* \"#utility.yul\":3115:3234   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":3153:3232   */\n      tag_278\n      tag_219\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3115:3234   */\n    tag_277:\n        /* \"#utility.yul\":3273:3274   */\n      0x00\n        /* \"#utility.yul\":3298:3351   */\n      tag_279\n        /* \"#utility.yul\":3343:3350   */\n      dup6\n        /* \"#utility.yul\":3334:3340   */\n      dup3\n        /* \"#utility.yul\":3323:3332   */\n      dup7\n        /* \"#utility.yul\":3319:3341   */\n      add\n        /* \"#utility.yul\":3298:3351   */\n      tag_224\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3288:3351   */\n      swap3\n      pop\n        /* \"#utility.yul\":3244:3361   */\n      pop\n        /* \"#utility.yul\":3400:3402   */\n      0x20\n        /* \"#utility.yul\":3426:3479   */\n      tag_280\n        /* \"#utility.yul\":3471:3478   */\n      dup6\n        /* \"#utility.yul\":3462:3468   */\n      dup3\n        /* \"#utility.yul\":3451:3460   */\n      dup7\n        /* \"#utility.yul\":3447:3469   */\n      add\n        /* \"#utility.yul\":3426:3479   */\n      tag_224\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3416:3479   */\n      swap2\n      pop\n        /* \"#utility.yul\":3371:3489   */\n      pop\n        /* \"#utility.yul\":3022:3496   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3502:3620   */\n    tag_230:\n        /* \"#utility.yul\":3589:3613   */\n      tag_282\n        /* \"#utility.yul\":3607:3612   */\n      dup2\n        /* \"#utility.yul\":3589:3613   */\n      tag_225\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3584:3587   */\n      dup3\n        /* \"#utility.yul\":3577:3614   */\n      mstore\n        /* \"#utility.yul\":3502:3620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3626:3848   */\n    tag_38:\n        /* \"#utility.yul\":3719:3723   */\n      0x00\n        /* \"#utility.yul\":3757:3759   */\n      0x20\n        /* \"#utility.yul\":3746:3755   */\n      dup3\n        /* \"#utility.yul\":3742:3760   */\n      add\n        /* \"#utility.yul\":3734:3760   */\n      swap1\n      pop\n        /* \"#utility.yul\":3770:3841   */\n      tag_284\n        /* \"#utility.yul\":3838:3839   */\n      0x00\n        /* \"#utility.yul\":3827:3836   */\n      dup4\n        /* \"#utility.yul\":3823:3840   */\n      add\n        /* \"#utility.yul\":3814:3820   */\n      dup5\n        /* \"#utility.yul\":3770:3841   */\n      tag_230\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3626:3848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3854:3972   */\n    tag_231:\n        /* \"#utility.yul\":3941:3965   */\n      tag_286\n        /* \"#utility.yul\":3959:3964   */\n      dup2\n        /* \"#utility.yul\":3941:3965   */\n      tag_222\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3936:3939   */\n      dup3\n        /* \"#utility.yul\":3929:3966   */\n      mstore\n        /* \"#utility.yul\":3854:3972   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3978:4200   */\n    tag_42:\n        /* \"#utility.yul\":4071:4075   */\n      0x00\n        /* \"#utility.yul\":4109:4111   */\n      0x20\n        /* \"#utility.yul\":4098:4107   */\n      dup3\n        /* \"#utility.yul\":4094:4112   */\n      add\n        /* \"#utility.yul\":4086:4112   */\n      swap1\n      pop\n        /* \"#utility.yul\":4122:4193   */\n      tag_288\n        /* \"#utility.yul\":4190:4191   */\n      0x00\n        /* \"#utility.yul\":4179:4188   */\n      dup4\n        /* \"#utility.yul\":4175:4192   */\n      add\n        /* \"#utility.yul\":4166:4172   */\n      dup5\n        /* \"#utility.yul\":4122:4193   */\n      tag_231\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3978:4200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4206:4680   */\n    tag_45:\n        /* \"#utility.yul\":4274:4280   */\n      0x00\n        /* \"#utility.yul\":4282:4288   */\n      dup1\n        /* \"#utility.yul\":4331:4333   */\n      0x40\n        /* \"#utility.yul\":4319:4328   */\n      dup4\n        /* \"#utility.yul\":4310:4317   */\n      dup6\n        /* \"#utility.yul\":4306:4329   */\n      sub\n        /* \"#utility.yul\":4302:4334   */\n      slt\n        /* \"#utility.yul\":4299:4418   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":4337:4416   */\n      tag_291\n      tag_219\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4299:4418   */\n    tag_290:\n        /* \"#utility.yul\":4457:4458   */\n      0x00\n        /* \"#utility.yul\":4482:4535   */\n      tag_292\n        /* \"#utility.yul\":4527:4534   */\n      dup6\n        /* \"#utility.yul\":4518:4524   */\n      dup3\n        /* \"#utility.yul\":4507:4516   */\n      dup7\n        /* \"#utility.yul\":4503:4525   */\n      add\n        /* \"#utility.yul\":4482:4535   */\n      tag_224\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4472:4535   */\n      swap3\n      pop\n        /* \"#utility.yul\":4428:4545   */\n      pop\n        /* \"#utility.yul\":4584:4586   */\n      0x20\n        /* \"#utility.yul\":4610:4663   */\n      tag_293\n        /* \"#utility.yul\":4655:4662   */\n      dup6\n        /* \"#utility.yul\":4646:4652   */\n      dup3\n        /* \"#utility.yul\":4635:4644   */\n      dup7\n        /* \"#utility.yul\":4631:4653   */\n      add\n        /* \"#utility.yul\":4610:4663   */\n      tag_227\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4600:4663   */\n      swap2\n      pop\n        /* \"#utility.yul\":4555:4673   */\n      pop\n        /* \"#utility.yul\":4206:4680   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4686:5015   */\n    tag_52:\n        /* \"#utility.yul\":4745:4751   */\n      0x00\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"#utility.yul\":4782:4791   */\n      dup3\n        /* \"#utility.yul\":4773:4780   */\n      dup5\n        /* \"#utility.yul\":4769:4792   */\n      sub\n        /* \"#utility.yul\":4765:4797   */\n      slt\n        /* \"#utility.yul\":4762:4881   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":4800:4879   */\n      tag_296\n      tag_219\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4762:4881   */\n    tag_295:\n        /* \"#utility.yul\":4920:4921   */\n      0x00\n        /* \"#utility.yul\":4945:4998   */\n      tag_297\n        /* \"#utility.yul\":4990:4997   */\n      dup5\n        /* \"#utility.yul\":4981:4987   */\n      dup3\n        /* \"#utility.yul\":4970:4979   */\n      dup6\n        /* \"#utility.yul\":4966:4988   */\n      add\n        /* \"#utility.yul\":4945:4998   */\n      tag_224\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4935:4998   */\n      swap2\n      pop\n        /* \"#utility.yul\":4891:5008   */\n      pop\n        /* \"#utility.yul\":4686:5015   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:5201   */\n    tag_232:\n        /* \"#utility.yul\":5069:5146   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5066:5067   */\n      0x00\n        /* \"#utility.yul\":5059:5147   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x11\n        /* \"#utility.yul\":5163:5164   */\n      0x04\n        /* \"#utility.yul\":5156:5171   */\n      mstore\n        /* \"#utility.yul\":5190:5194   */\n      0x24\n        /* \"#utility.yul\":5187:5188   */\n      0x00\n        /* \"#utility.yul\":5180:5195   */\n      revert\n        /* \"#utility.yul\":5207:5617   */\n    tag_62:\n        /* \"#utility.yul\":5247:5254   */\n      0x00\n        /* \"#utility.yul\":5270:5290   */\n      tag_300\n        /* \"#utility.yul\":5288:5289   */\n      dup3\n        /* \"#utility.yul\":5270:5290   */\n      tag_225\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5265:5290   */\n      swap2\n      pop\n        /* \"#utility.yul\":5304:5324   */\n      tag_301\n        /* \"#utility.yul\":5322:5323   */\n      dup4\n        /* \"#utility.yul\":5304:5324   */\n      tag_225\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5299:5324   */\n      swap3\n      pop\n        /* \"#utility.yul\":5359:5360   */\n      dup3\n        /* \"#utility.yul\":5356:5357   */\n      dup3\n        /* \"#utility.yul\":5352:5361   */\n      mul\n        /* \"#utility.yul\":5381:5411   */\n      tag_302\n        /* \"#utility.yul\":5399:5410   */\n      dup2\n        /* \"#utility.yul\":5381:5411   */\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5370:5411   */\n      swap2\n      pop\n        /* \"#utility.yul\":5560:5561   */\n      dup3\n        /* \"#utility.yul\":5551:5558   */\n      dup3\n        /* \"#utility.yul\":5547:5562   */\n      div\n        /* \"#utility.yul\":5544:5545   */\n      dup5\n        /* \"#utility.yul\":5541:5563   */\n      eq\n        /* \"#utility.yul\":5521:5522   */\n      dup4\n        /* \"#utility.yul\":5514:5523   */\n      iszero\n        /* \"#utility.yul\":5494:5577   */\n      or\n        /* \"#utility.yul\":5471:5610   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":5590:5608   */\n      tag_304\n      tag_232\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5471:5610   */\n    tag_303:\n        /* \"#utility.yul\":5255:5617   */\n      pop\n        /* \"#utility.yul\":5207:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5803   */\n    tag_233:\n        /* \"#utility.yul\":5671:5748   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5668:5669   */\n      0x00\n        /* \"#utility.yul\":5661:5749   */\n      mstore\n        /* \"#utility.yul\":5768:5772   */\n      0x12\n        /* \"#utility.yul\":5765:5766   */\n      0x04\n        /* \"#utility.yul\":5758:5773   */\n      mstore\n        /* \"#utility.yul\":5792:5796   */\n      0x24\n        /* \"#utility.yul\":5789:5790   */\n      0x00\n        /* \"#utility.yul\":5782:5797   */\n      revert\n        /* \"#utility.yul\":5809:5994   */\n    tag_64:\n        /* \"#utility.yul\":5849:5850   */\n      0x00\n        /* \"#utility.yul\":5866:5886   */\n      tag_307\n        /* \"#utility.yul\":5884:5885   */\n      dup3\n        /* \"#utility.yul\":5866:5886   */\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5861:5886   */\n      swap2\n      pop\n        /* \"#utility.yul\":5900:5920   */\n      tag_308\n        /* \"#utility.yul\":5918:5919   */\n      dup4\n        /* \"#utility.yul\":5900:5920   */\n      tag_225\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5895:5920   */\n      swap3\n      pop\n        /* \"#utility.yul\":5939:5940   */\n      dup3\n        /* \"#utility.yul\":5929:5964   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5944:5962   */\n      tag_310\n      tag_233\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5929:5964   */\n    tag_309:\n        /* \"#utility.yul\":5986:5987   */\n      dup3\n        /* \"#utility.yul\":5983:5984   */\n      dup3\n        /* \"#utility.yul\":5979:5988   */\n      div\n        /* \"#utility.yul\":5974:5988   */\n      swap1\n      pop\n        /* \"#utility.yul\":5809:5994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6000:6194   */\n    tag_66:\n        /* \"#utility.yul\":6040:6044   */\n      0x00\n        /* \"#utility.yul\":6060:6080   */\n      tag_312\n        /* \"#utility.yul\":6078:6079   */\n      dup3\n        /* \"#utility.yul\":6060:6080   */\n      tag_225\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6055:6080   */\n      swap2\n      pop\n        /* \"#utility.yul\":6094:6114   */\n      tag_313\n        /* \"#utility.yul\":6112:6113   */\n      dup4\n        /* \"#utility.yul\":6094:6114   */\n      tag_225\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6089:6114   */\n      swap3\n      pop\n        /* \"#utility.yul\":6138:6139   */\n      dup3\n        /* \"#utility.yul\":6135:6136   */\n      dup3\n        /* \"#utility.yul\":6131:6140   */\n      sub\n        /* \"#utility.yul\":6123:6140   */\n      swap1\n      pop\n        /* \"#utility.yul\":6162:6163   */\n      dup2\n        /* \"#utility.yul\":6156:6160   */\n      dup2\n        /* \"#utility.yul\":6153:6164   */\n      gt\n        /* \"#utility.yul\":6150:6187   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":6167:6185   */\n      tag_315\n      tag_232\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":6150:6187   */\n    tag_314:\n        /* \"#utility.yul\":6000:6194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6200:6753   */\n    tag_72:\n        /* \"#utility.yul\":6377:6381   */\n      0x00\n        /* \"#utility.yul\":6415:6418   */\n      0x80\n        /* \"#utility.yul\":6404:6413   */\n      dup3\n        /* \"#utility.yul\":6400:6419   */\n      add\n        /* \"#utility.yul\":6392:6419   */\n      swap1\n      pop\n        /* \"#utility.yul\":6429:6500   */\n      tag_317\n        /* \"#utility.yul\":6497:6498   */\n      0x00\n        /* \"#utility.yul\":6486:6495   */\n      dup4\n        /* \"#utility.yul\":6482:6499   */\n      add\n        /* \"#utility.yul\":6473:6479   */\n      dup8\n        /* \"#utility.yul\":6429:6500   */\n      tag_231\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6510:6582   */\n      tag_318\n        /* \"#utility.yul\":6578:6580   */\n      0x20\n        /* \"#utility.yul\":6567:6576   */\n      dup4\n        /* \"#utility.yul\":6563:6581   */\n      add\n        /* \"#utility.yul\":6554:6560   */\n      dup7\n        /* \"#utility.yul\":6510:6582   */\n      tag_231\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6592:6664   */\n      tag_319\n        /* \"#utility.yul\":6660:6662   */\n      0x40\n        /* \"#utility.yul\":6649:6658   */\n      dup4\n        /* \"#utility.yul\":6645:6663   */\n      add\n        /* \"#utility.yul\":6636:6642   */\n      dup6\n        /* \"#utility.yul\":6592:6664   */\n      tag_231\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6674:6746   */\n      tag_320\n        /* \"#utility.yul\":6742:6744   */\n      0x60\n        /* \"#utility.yul\":6731:6740   */\n      dup4\n        /* \"#utility.yul\":6727:6745   */\n      add\n        /* \"#utility.yul\":6718:6724   */\n      dup5\n        /* \"#utility.yul\":6674:6746   */\n      tag_230\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6200:6753   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6759:7091   */\n    tag_100:\n        /* \"#utility.yul\":6880:6884   */\n      0x00\n        /* \"#utility.yul\":6918:6920   */\n      0x40\n        /* \"#utility.yul\":6907:6916   */\n      dup3\n        /* \"#utility.yul\":6903:6921   */\n      add\n        /* \"#utility.yul\":6895:6921   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7002   */\n      tag_322\n        /* \"#utility.yul\":6999:7000   */\n      0x00\n        /* \"#utility.yul\":6988:6997   */\n      dup4\n        /* \"#utility.yul\":6984:7001   */\n      add\n        /* \"#utility.yul\":6975:6981   */\n      dup6\n        /* \"#utility.yul\":6931:7002   */\n      tag_231\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7012:7084   */\n      tag_323\n        /* \"#utility.yul\":7080:7082   */\n      0x20\n        /* \"#utility.yul\":7069:7078   */\n      dup4\n        /* \"#utility.yul\":7065:7083   */\n      add\n        /* \"#utility.yul\":7056:7062   */\n      dup5\n        /* \"#utility.yul\":7012:7084   */\n      tag_231\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6759:7091   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7097:7240   */\n    tag_234:\n        /* \"#utility.yul\":7154:7159   */\n      0x00\n        /* \"#utility.yul\":7185:7191   */\n      dup2\n        /* \"#utility.yul\":7179:7192   */\n      mload\n        /* \"#utility.yul\":7170:7192   */\n      swap1\n      pop\n        /* \"#utility.yul\":7201:7234   */\n      tag_325\n        /* \"#utility.yul\":7228:7233   */\n      dup2\n        /* \"#utility.yul\":7201:7234   */\n      tag_226\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7097:7240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7246:7597   */\n    tag_104:\n        /* \"#utility.yul\":7316:7322   */\n      0x00\n        /* \"#utility.yul\":7365:7367   */\n      0x20\n        /* \"#utility.yul\":7353:7362   */\n      dup3\n        /* \"#utility.yul\":7344:7351   */\n      dup5\n        /* \"#utility.yul\":7340:7363   */\n      sub\n        /* \"#utility.yul\":7336:7368   */\n      slt\n        /* \"#utility.yul\":7333:7452   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":7371:7450   */\n      tag_328\n      tag_219\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7333:7452   */\n    tag_327:\n        /* \"#utility.yul\":7491:7492   */\n      0x00\n        /* \"#utility.yul\":7516:7580   */\n      tag_329\n        /* \"#utility.yul\":7572:7579   */\n      dup5\n        /* \"#utility.yul\":7563:7569   */\n      dup3\n        /* \"#utility.yul\":7552:7561   */\n      dup6\n        /* \"#utility.yul\":7548:7570   */\n      add\n        /* \"#utility.yul\":7516:7580   */\n      tag_234\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7506:7580   */\n      swap2\n      pop\n        /* \"#utility.yul\":7462:7590   */\n      pop\n        /* \"#utility.yul\":7246:7597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7603:7688   */\n    tag_235:\n        /* \"#utility.yul\":7648:7655   */\n      0x00\n        /* \"#utility.yul\":7677:7682   */\n      dup2\n        /* \"#utility.yul\":7666:7682   */\n      swap1\n      pop\n        /* \"#utility.yul\":7603:7688   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7694:7795   */\n    tag_236:\n        /* \"#utility.yul\":7730:7737   */\n      0x00\n        /* \"#utility.yul\":7770:7788   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7763:7768   */\n      dup3\n        /* \"#utility.yul\":7759:7789   */\n      and\n        /* \"#utility.yul\":7748:7789   */\n      swap1\n      pop\n        /* \"#utility.yul\":7694:7795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7801:7861   */\n    tag_237:\n        /* \"#utility.yul\":7829:7832   */\n      0x00\n        /* \"#utility.yul\":7850:7855   */\n      dup2\n        /* \"#utility.yul\":7843:7855   */\n      swap1\n      pop\n        /* \"#utility.yul\":7801:7861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7867:8023   */\n    tag_238:\n        /* \"#utility.yul\":7924:7933   */\n      0x00\n        /* \"#utility.yul\":7957:8017   */\n      tag_334\n        /* \"#utility.yul\":7974:8016   */\n      tag_335\n        /* \"#utility.yul\":7983:8015   */\n      tag_336\n        /* \"#utility.yul\":8009:8014   */\n      dup5\n        /* \"#utility.yul\":7983:8015   */\n      tag_235\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7974:8016   */\n      tag_237\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7957:8017   */\n      tag_236\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7944:8017   */\n      swap1\n      pop\n        /* \"#utility.yul\":7867:8023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8029:8174   */\n    tag_239:\n        /* \"#utility.yul\":8123:8167   */\n      tag_338\n        /* \"#utility.yul\":8161:8166   */\n      dup2\n        /* \"#utility.yul\":8123:8167   */\n      tag_238\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8118:8121   */\n      dup3\n        /* \"#utility.yul\":8111:8168   */\n      mstore\n        /* \"#utility.yul\":8029:8174   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8180:8416   */\n    tag_125:\n        /* \"#utility.yul\":8280:8284   */\n      0x00\n        /* \"#utility.yul\":8318:8320   */\n      0x20\n        /* \"#utility.yul\":8307:8316   */\n      dup3\n        /* \"#utility.yul\":8303:8321   */\n      add\n        /* \"#utility.yul\":8295:8321   */\n      swap1\n      pop\n        /* \"#utility.yul\":8331:8409   */\n      tag_340\n        /* \"#utility.yul\":8406:8407   */\n      0x00\n        /* \"#utility.yul\":8395:8404   */\n      dup4\n        /* \"#utility.yul\":8391:8408   */\n      add\n        /* \"#utility.yul\":8382:8388   */\n      dup5\n        /* \"#utility.yul\":8331:8409   */\n      tag_239\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8180:8416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8422:8864   */\n    tag_142:\n        /* \"#utility.yul\":8571:8575   */\n      0x00\n        /* \"#utility.yul\":8609:8611   */\n      0x60\n        /* \"#utility.yul\":8598:8607   */\n      dup3\n        /* \"#utility.yul\":8594:8612   */\n      add\n        /* \"#utility.yul\":8586:8612   */\n      swap1\n      pop\n        /* \"#utility.yul\":8622:8693   */\n      tag_342\n        /* \"#utility.yul\":8690:8691   */\n      0x00\n        /* \"#utility.yul\":8679:8688   */\n      dup4\n        /* \"#utility.yul\":8675:8692   */\n      add\n        /* \"#utility.yul\":8666:8672   */\n      dup7\n        /* \"#utility.yul\":8622:8693   */\n      tag_231\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":8703:8775   */\n      tag_343\n        /* \"#utility.yul\":8771:8773   */\n      0x20\n        /* \"#utility.yul\":8760:8769   */\n      dup4\n        /* \"#utility.yul\":8756:8774   */\n      add\n        /* \"#utility.yul\":8747:8753   */\n      dup6\n        /* \"#utility.yul\":8703:8775   */\n      tag_231\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8785:8857   */\n      tag_344\n        /* \"#utility.yul\":8853:8855   */\n      0x40\n        /* \"#utility.yul\":8842:8851   */\n      dup4\n        /* \"#utility.yul\":8838:8856   */\n      add\n        /* \"#utility.yul\":8829:8835   */\n      dup5\n        /* \"#utility.yul\":8785:8857   */\n      tag_230\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":8422:8864   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205bf57c3804541cacd5b1f968f3f228af99666fe2aeca3d3330a8bfa7e9024f3364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506111748061001c5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c80638456cb591161006f5780638456cb59146101155780638b099b231461011f5780638da5cb5b1461014f578063cd6dc6871461016d578063ce2c2df114610189578063f2fde38b146101a7576100a7565b80630de5e0e7146100ab5780633d18678e146100c75780633f4ba83a146100e35780635c975abb146100ed578063715018a61461010b575b5f80fd5b6100c560048036038101906100c09190610d16565b6101c3565b005b6100e160048036038101906100dc9190610d9f565b6102b7565b005b6100eb610304565b005b6100f5610316565b6040516101029190610de4565b60405180910390f35b610113610338565b005b61011d61034b565b005b61013960048036038101906101349190610dfd565b61035d565b6040516101469190610e4a565b60405180910390f35b6101576103e5565b6040516101649190610e72565b60405180910390f35b61018760048036038101906101829190610e8b565b61041a565b005b6101916105b2565b60405161019e9190610e4a565b60405180910390f35b6101c160048036038101906101bc9190610ec9565b6105b7565b005b6101cb61063b565b6101d361067c565b5f8690505f6127105f54876101e89190610f21565b6101f29190610f8f565b90505f81876102019190610fbf565b90506102373361020f6103e5565b848673ffffffffffffffffffffffffffffffffffffffff166106d0909392919063ffffffff16565b6102643389838673ffffffffffffffffffffffffffffffffffffffff166106d0909392919063ffffffff16565b8385877fccf4cbdbebf44b8f817936435dfaa557d772265c6eef9c54c198d3c873624f348c338d8760405161029c9493929190610ff2565b60405180910390a45050506102af610752565b505050505050565b6102bf610769565b6127108111156102fb576040517fdf44072600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805f8190555050565b61030c610769565b6103146107f0565b565b5f8061032061085e565b9050805f015f9054906101000a900460ff1691505090565b610340610769565b6103495f610885565b565b610353610769565b61035b610956565b565b5f808390508073ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e84306040518363ffffffff1660e01b815260040161039d929190611035565b602060405180830381865afa1580156103b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103dc9190611070565b91505092915050565b5f806103ef6109c5565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f6104236109ec565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561046b5750825b90505f60018367ffffffffffffffff1614801561049e57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156104ac575080155b156104e3576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610530576001855f0160086101000a81548160ff0219169083151502179055505b61053987610a13565b610541610a27565b610549610a39565b855f8190555083156105a9575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516105a091906110f0565b60405180910390a15b50505050505050565b5f5481565b6105bf610769565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361062f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106269190610e72565b60405180910390fd5b61063881610885565b50565b610643610316565b1561067a576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f610685610a4b565b90506002815f0154036106c4576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002815f018190555050565b61074c848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161070593929190611109565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a72565b50505050565b5f61075b610a4b565b90506001815f018190555050565b610771610b0d565b73ffffffffffffffffffffffffffffffffffffffff1661078f6103e5565b73ffffffffffffffffffffffffffffffffffffffff16146107ee576107b2610b0d565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107e59190610e72565b60405180910390fd5b565b6107f8610b14565b5f61080161085e565b90505f815f015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610846610b0d565b6040516108539190610e72565b60405180910390a150565b5f7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300905090565b5f61088e6109c5565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b61095e61063b565b5f61096761085e565b90506001815f015f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109ad610b0d565b6040516109ba9190610e72565b60405180910390a150565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b610a1b610b54565b610a2481610b94565b50565b610a2f610b54565b610a37610c18565b565b610a41610b54565b610a49610c37565b565b5f7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00905090565b5f8060205f8451602086015f885af180610a91576040513d5f823e3d81fd5b3d92505f519150505f8214610aaa576001811415610ac5565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b0757836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610afe9190610e72565b60405180910390fd5b50505050565b5f33905090565b610b1c610316565b610b52576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610b5c610c67565b610b92576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610b9c610b54565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0c575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c039190610e72565b60405180910390fd5b610c1581610885565b50565b610c20610b54565b5f610c29610a4b565b90506001815f018190555050565b610c3f610b54565b5f610c4861085e565b90505f815f015f6101000a81548160ff02191690831515021790555050565b5f610c706109ec565b5f0160089054906101000a900460ff16905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610cb282610c89565b9050919050565b610cc281610ca8565b8114610ccc575f80fd5b50565b5f81359050610cdd81610cb9565b92915050565b5f819050919050565b610cf581610ce3565b8114610cff575f80fd5b50565b5f81359050610d1081610cec565b92915050565b5f805f805f8060c08789031215610d3057610d2f610c85565b5b5f610d3d89828a01610ccf565b9650506020610d4e89828a01610ccf565b9550506040610d5f89828a01610d02565b9450506060610d7089828a01610d02565b9350506080610d8189828a01610d02565b92505060a0610d9289828a01610d02565b9150509295509295509295565b5f60208284031215610db457610db3610c85565b5b5f610dc184828501610d02565b91505092915050565b5f8115159050919050565b610dde81610dca565b82525050565b5f602082019050610df75f830184610dd5565b92915050565b5f8060408385031215610e1357610e12610c85565b5b5f610e2085828601610ccf565b9250506020610e3185828601610ccf565b9150509250929050565b610e4481610ce3565b82525050565b5f602082019050610e5d5f830184610e3b565b92915050565b610e6c81610ca8565b82525050565b5f602082019050610e855f830184610e63565b92915050565b5f8060408385031215610ea157610ea0610c85565b5b5f610eae85828601610ccf565b9250506020610ebf85828601610d02565b9150509250929050565b5f60208284031215610ede57610edd610c85565b5b5f610eeb84828501610ccf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f2b82610ce3565b9150610f3683610ce3565b9250828202610f4481610ce3565b91508282048414831517610f5b57610f5a610ef4565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610f9982610ce3565b9150610fa483610ce3565b925082610fb457610fb3610f62565b5b828204905092915050565b5f610fc982610ce3565b9150610fd483610ce3565b9250828203905081811115610fec57610feb610ef4565b5b92915050565b5f6080820190506110055f830187610e63565b6110126020830186610e63565b61101f6040830185610e63565b61102c6060830184610e3b565b95945050505050565b5f6040820190506110485f830185610e63565b6110556020830184610e63565b9392505050565b5f8151905061106a81610cec565b92915050565b5f6020828403121561108557611084610c85565b5b5f6110928482850161105c565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f6110da6110d56110d08461109b565b6110b7565b6110a4565b9050919050565b6110ea816110c0565b82525050565b5f6020820190506111035f8301846110e1565b92915050565b5f60608201905061111c5f830186610e63565b6111296020830185610e63565b6111366040830184610e3b565b94935050505056fea26469706673582212205bf57c3804541cacd5b1f968f3f228af99666fe2aeca3d3330a8bfa7e9024f3364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1174 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x8B099B23 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xCE2C2DF1 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xDE5E0E7 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3D18678E EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x63B JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x67C JUMP JUMPDEST PUSH0 DUP7 SWAP1 POP PUSH0 PUSH2 0x2710 PUSH0 SLOAD DUP8 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xF8F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP8 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP PUSH2 0x237 CALLER PUSH2 0x20F PUSH2 0x3E5 JUMP JUMPDEST DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x264 CALLER DUP10 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP6 DUP8 PUSH32 0xCCF4CBDBEBF44B8F817936435DFAA557D772265C6EEF9C54C198D3C873624F34 DUP13 CALLER DUP14 DUP8 PUSH1 0x40 MLOAD PUSH2 0x29C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x2AF PUSH2 0x752 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x769 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF44072600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x30C PUSH2 0x769 JUMP JUMPDEST PUSH2 0x314 PUSH2 0x7F0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x320 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x340 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x349 PUSH0 PUSH2 0x885 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x353 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x956 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP3 SWAP2 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3EF PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x423 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x46B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x49E JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x530 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x539 DUP8 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x541 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xA39 JUMP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x5A9 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x769 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP2 PUSH2 0x885 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0x316 JUMP JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x685 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x74C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x705 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75B PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x771 PUSH2 0xB0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78F PUSH2 0x3E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EE JUMPI PUSH2 0x7B2 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xB14 JUMP JUMPDEST PUSH0 PUSH2 0x801 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x846 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x88E PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x95E PUSH2 0x63B JUMP JUMPDEST PUSH0 PUSH2 0x967 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9AD PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0xB94 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA2F PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xA37 PUSH2 0xC18 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA41 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xA49 PUSH2 0xC37 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAAA JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xAC5 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB07 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0x316 JUMP JUMPDEST PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB5C PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xB54 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0x885 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC20 PUSH2 0xB54 JUMP JUMPDEST PUSH0 PUSH2 0xC29 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC3F PUSH2 0xB54 JUMP JUMPDEST PUSH0 PUSH2 0xC48 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC70 PUSH2 0x9EC JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB2 DUP3 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xCA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCCC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDD DUP2 PUSH2 0xCB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD10 DUP2 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD2F PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD3D DUP10 DUP3 DUP11 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xD4E DUP10 DUP3 DUP11 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xD5F DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xD70 DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xD81 DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xD92 DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB3 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC1 DUP5 DUP3 DUP6 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDDE DUP2 PUSH2 0xDCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF7 PUSH0 DUP4 ADD DUP5 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE20 DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE31 DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5D PUSH0 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6C DUP2 PUSH2 0xCA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE85 PUSH0 DUP4 ADD DUP5 PUSH2 0xE63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEAE DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEBF DUP6 DUP3 DUP7 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDD PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEEB DUP5 DUP3 DUP6 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF2B DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF36 DUP4 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF44 DUP2 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xEF4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF99 DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB4 JUMPI PUSH2 0xFB3 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFC9 DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFEC JUMPI PUSH2 0xFEB PUSH2 0xEF4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1005 PUSH0 DUP4 ADD DUP8 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1012 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x102C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1048 PUSH0 DUP4 ADD DUP6 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1055 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x106A DUP2 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1085 JUMPI PUSH2 0x1084 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1092 DUP5 DUP3 DUP6 ADD PUSH2 0x105C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10DA PUSH2 0x10D5 PUSH2 0x10D0 DUP5 PUSH2 0x109B JUMP JUMPDEST PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x10A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EA DUP2 PUSH2 0x10C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1103 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x111C PUSH0 DUP4 ADD DUP7 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1129 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1136 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST CREATE2 PUSH29 0x3804541CACD5B1F968F3F228AF99666FE2AECA3D3330A8BFA7E9024F33 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "545:1937:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 2579,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 2964,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_546": {
									"entryPoint": 2617,
									"id": 546,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_564": {
									"entryPoint": 3127,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_710": {
									"entryPoint": 2599,
									"id": 710,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_728": {
									"entryPoint": 3096,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1336": {
									"entryPoint": 2674,
									"id": 1336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 2900,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 1897,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 2540,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 2501,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_520": {
									"entryPoint": 2142,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getReentrancyGuardStorage_698": {
									"entryPoint": 2635,
									"id": 698,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 3175,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_476": {
									"entryPoint": 2829,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_780": {
									"entryPoint": 1874,
									"id": 780,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_764": {
									"entryPoint": 1660,
									"id": 764,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_645": {
									"entryPoint": 2390,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_608": {
									"entryPoint": 1595,
									"id": 608,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_621": {
									"entryPoint": 2836,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 2181,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_669": {
									"entryPoint": 2032,
									"id": 669,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkAllowance_1809": {
									"entryPoint": 861,
									"id": 1809,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@feesBps_1695": {
									"entryPoint": 1458,
									"id": 1695,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialize_1745": {
									"entryPoint": 1050,
									"id": 1745,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 997,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1754": {
									"entryPoint": 843,
									"id": 1754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_596": {
									"entryPoint": 790,
									"id": 596,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 824,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1041": {
									"entryPoint": 1744,
									"id": 1041,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setFees_1783": {
									"entryPoint": 695,
									"id": 1783,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tip_1881": {
									"entryPoint": 451,
									"id": 1881,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 1463,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1763": {
									"entryPoint": 772,
									"id": 1763,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 3350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 4321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4082,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4361,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3828,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8867:14",
										"nodeType": "YulBlock",
										"src": "0:8867:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "611:79:14",
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:14",
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:14",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:14",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nativeSrc": "670:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nativeSrc": "670:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nativeSrc": "641:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nativeSrc": "631:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nativeSrc": "624:43:14",
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nativeSrc": "621:63:14",
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:14",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nativeSrc": "748:87:14",
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nativeSrc": "758:29:14",
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nativeSrc": "767:20:14",
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nativeSrc": "796:33:14",
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nativeSrc": "796:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:14",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:14",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:14",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nativeSrc": "886:32:14",
													"nodeType": "YulBlock",
													"src": "886:32:14",
													"statements": [
														{
															"nativeSrc": "896:16:14",
															"nodeType": "YulAssignment",
															"src": "896:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:14",
																"nodeType": "YulIdentifier",
																"src": "907:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:14",
														"nodeType": "YulTypedName",
														"src": "868:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:14",
														"nodeType": "YulTypedName",
														"src": "878:7:14",
														"type": ""
													}
												],
												"src": "841:77:14"
											},
											{
												"body": {
													"nativeSrc": "967:79:14",
													"nodeType": "YulBlock",
													"src": "967:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:14",
																"nodeType": "YulBlock",
																"src": "1024:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:14"
																			},
																			"nativeSrc": "1026:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:14"
																		},
																		"nativeSrc": "1026:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:14"
																				},
																				"nativeSrc": "997:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:14"
																		},
																		"nativeSrc": "987:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:14"
																},
																"nativeSrc": "980:43:14",
																"nodeType": "YulFunctionCall",
																"src": "980:43:14"
															},
															"nativeSrc": "977:63:14",
															"nodeType": "YulIf",
															"src": "977:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:14",
														"nodeType": "YulTypedName",
														"src": "960:5:14",
														"type": ""
													}
												],
												"src": "924:122:14"
											},
											{
												"body": {
													"nativeSrc": "1104:87:14",
													"nodeType": "YulBlock",
													"src": "1104:87:14",
													"statements": [
														{
															"nativeSrc": "1114:29:14",
															"nodeType": "YulAssignment",
															"src": "1114:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:14"
																},
																"nativeSrc": "1123:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:14"
																},
																"nativeSrc": "1152:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:14"
															},
															"nativeSrc": "1152:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:14",
														"nodeType": "YulTypedName",
														"src": "1082:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:14",
														"nodeType": "YulTypedName",
														"src": "1090:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:14",
														"nodeType": "YulTypedName",
														"src": "1098:5:14",
														"type": ""
													}
												],
												"src": "1052:139:14"
											},
											{
												"body": {
													"nativeSrc": "1348:906:14",
													"nodeType": "YulBlock",
													"src": "1348:906:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1395:83:14",
																"nodeType": "YulBlock",
																"src": "1395:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1397:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1397:77:14"
																			},
																			"nativeSrc": "1397:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1397:79:14"
																		},
																		"nativeSrc": "1397:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1397:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1369:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1369:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1365:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1365:3:14"
																		},
																		"nativeSrc": "1365:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1365:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:3:14",
																		"nodeType": "YulLiteral",
																		"src": "1390:3:14",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1361:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:14"
																},
																"nativeSrc": "1361:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1361:33:14"
															},
															"nativeSrc": "1358:120:14",
															"nodeType": "YulIf",
															"src": "1358:120:14"
														},
														{
															"nativeSrc": "1488:117:14",
															"nodeType": "YulBlock",
															"src": "1488:117:14",
															"statements": [
																{
																	"nativeSrc": "1503:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1503:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1517:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1517:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1507:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1507:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1532:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1532:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1567:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1567:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1578:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1578:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1563:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1563:3:14"
																				},
																				"nativeSrc": "1563:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1563:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1587:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1587:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1542:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1542:20:14"
																		},
																		"nativeSrc": "1542:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1542:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1532:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1532:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1615:118:14",
															"nodeType": "YulBlock",
															"src": "1615:118:14",
															"statements": [
																{
																	"nativeSrc": "1630:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1630:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1644:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1644:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1634:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1634:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1660:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1660:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1695:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1695:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1706:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1706:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1691:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1691:3:14"
																				},
																				"nativeSrc": "1691:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1691:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1715:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1715:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1670:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1670:20:14"
																		},
																		"nativeSrc": "1670:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1670:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1660:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1660:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1743:118:14",
															"nodeType": "YulBlock",
															"src": "1743:118:14",
															"statements": [
																{
																	"nativeSrc": "1758:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1758:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1772:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1772:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1762:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1762:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1788:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1788:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:14"
																				},
																				"nativeSrc": "1819:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1798:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1798:20:14"
																		},
																		"nativeSrc": "1798:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1798:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1788:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1788:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1871:118:14",
															"nodeType": "YulBlock",
															"src": "1871:118:14",
															"statements": [
																{
																	"nativeSrc": "1886:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1886:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1900:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1900:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1890:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1890:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1916:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1916:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1951:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1951:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1962:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1962:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1947:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:14"
																				},
																				"nativeSrc": "1947:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1947:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1926:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1926:20:14"
																		},
																		"nativeSrc": "1926:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1926:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1916:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1916:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1999:119:14",
															"nodeType": "YulBlock",
															"src": "1999:119:14",
															"statements": [
																{
																	"nativeSrc": "2014:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2014:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2028:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2028:3:14",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2018:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2018:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2045:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2045:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2080:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2080:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2091:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2091:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2076:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2076:3:14"
																				},
																				"nativeSrc": "2076:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2076:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2100:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2100:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2055:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2055:20:14"
																		},
																		"nativeSrc": "2055:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2045:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2045:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2128:119:14",
															"nodeType": "YulBlock",
															"src": "2128:119:14",
															"statements": [
																{
																	"nativeSrc": "2143:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2143:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2157:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2157:3:14",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2147:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2147:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2174:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2174:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2209:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2209:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2220:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2220:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2205:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2205:3:14"
																				},
																				"nativeSrc": "2205:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2205:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2229:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2184:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2184:20:14"
																		},
																		"nativeSrc": "2184:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2184:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2174:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2174:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "1197:1057:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1278:9:14",
														"nodeType": "YulTypedName",
														"src": "1278:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1289:7:14",
														"nodeType": "YulTypedName",
														"src": "1289:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1301:6:14",
														"nodeType": "YulTypedName",
														"src": "1301:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1309:6:14",
														"nodeType": "YulTypedName",
														"src": "1309:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1317:6:14",
														"nodeType": "YulTypedName",
														"src": "1317:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1325:6:14",
														"nodeType": "YulTypedName",
														"src": "1325:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1333:6:14",
														"nodeType": "YulTypedName",
														"src": "1333:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1341:6:14",
														"nodeType": "YulTypedName",
														"src": "1341:6:14",
														"type": ""
													}
												],
												"src": "1197:1057:14"
											},
											{
												"body": {
													"nativeSrc": "2326:263:14",
													"nodeType": "YulBlock",
													"src": "2326:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2372:83:14",
																"nodeType": "YulBlock",
																"src": "2372:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2374:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2374:77:14"
																			},
																			"nativeSrc": "2374:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2374:79:14"
																		},
																		"nativeSrc": "2374:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2374:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2347:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2356:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2343:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:14"
																		},
																		"nativeSrc": "2343:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2343:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2368:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2368:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2339:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:14"
																},
																"nativeSrc": "2339:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2339:32:14"
															},
															"nativeSrc": "2336:119:14",
															"nodeType": "YulIf",
															"src": "2336:119:14"
														},
														{
															"nativeSrc": "2465:117:14",
															"nodeType": "YulBlock",
															"src": "2465:117:14",
															"statements": [
																{
																	"nativeSrc": "2480:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2480:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2494:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2494:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2484:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2484:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2509:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2509:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2544:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "2544:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2555:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2555:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2540:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2540:3:14"
																				},
																				"nativeSrc": "2540:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2540:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2564:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2564:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2519:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "2519:20:14"
																		},
																		"nativeSrc": "2519:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2519:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2509:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2509:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2260:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2296:9:14",
														"nodeType": "YulTypedName",
														"src": "2296:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2307:7:14",
														"nodeType": "YulTypedName",
														"src": "2307:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2319:6:14",
														"nodeType": "YulTypedName",
														"src": "2319:6:14",
														"type": ""
													}
												],
												"src": "2260:329:14"
											},
											{
												"body": {
													"nativeSrc": "2637:48:14",
													"nodeType": "YulBlock",
													"src": "2637:48:14",
													"statements": [
														{
															"nativeSrc": "2647:32:14",
															"nodeType": "YulAssignment",
															"src": "2647:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2672:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2672:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2665:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2665:6:14"
																		},
																		"nativeSrc": "2665:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2665:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2658:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:14"
																},
																"nativeSrc": "2658:21:14",
																"nodeType": "YulFunctionCall",
																"src": "2658:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2647:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2647:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2595:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:14",
														"nodeType": "YulTypedName",
														"src": "2619:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2629:7:14",
														"nodeType": "YulTypedName",
														"src": "2629:7:14",
														"type": ""
													}
												],
												"src": "2595:90:14"
											},
											{
												"body": {
													"nativeSrc": "2750:50:14",
													"nodeType": "YulBlock",
													"src": "2750:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2767:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2767:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2787:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2787:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2772:14:14",
																			"nodeType": "YulIdentifier",
																			"src": "2772:14:14"
																		},
																		"nativeSrc": "2772:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2772:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2760:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:14"
																},
																"nativeSrc": "2760:34:14",
																"nodeType": "YulFunctionCall",
																"src": "2760:34:14"
															},
															"nativeSrc": "2760:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "2760:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2691:109:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2738:5:14",
														"nodeType": "YulTypedName",
														"src": "2738:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2745:3:14",
														"nodeType": "YulTypedName",
														"src": "2745:3:14",
														"type": ""
													}
												],
												"src": "2691:109:14"
											},
											{
												"body": {
													"nativeSrc": "2898:118:14",
													"nodeType": "YulBlock",
													"src": "2898:118:14",
													"statements": [
														{
															"nativeSrc": "2908:26:14",
															"nodeType": "YulAssignment",
															"src": "2908:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2920:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2920:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2931:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2931:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2916:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:14"
																},
																"nativeSrc": "2916:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2916:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2908:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2908:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2982:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2982:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2995:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2995:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3006:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3006:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2991:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:14"
																		},
																		"nativeSrc": "2991:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2991:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2944:37:14",
																	"nodeType": "YulIdentifier",
																	"src": "2944:37:14"
																},
																"nativeSrc": "2944:65:14",
																"nodeType": "YulFunctionCall",
																"src": "2944:65:14"
															},
															"nativeSrc": "2944:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "2944:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2806:210:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2870:9:14",
														"nodeType": "YulTypedName",
														"src": "2870:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2882:6:14",
														"nodeType": "YulTypedName",
														"src": "2882:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2893:4:14",
														"nodeType": "YulTypedName",
														"src": "2893:4:14",
														"type": ""
													}
												],
												"src": "2806:210:14"
											},
											{
												"body": {
													"nativeSrc": "3105:391:14",
													"nodeType": "YulBlock",
													"src": "3105:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3151:83:14",
																"nodeType": "YulBlock",
																"src": "3151:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3153:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "3153:77:14"
																			},
																			"nativeSrc": "3153:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3153:79:14"
																		},
																		"nativeSrc": "3153:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3153:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3126:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3126:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3135:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3135:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3122:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3122:3:14"
																		},
																		"nativeSrc": "3122:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3122:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3147:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3147:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3118:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3118:3:14"
																},
																"nativeSrc": "3118:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3118:32:14"
															},
															"nativeSrc": "3115:119:14",
															"nodeType": "YulIf",
															"src": "3115:119:14"
														},
														{
															"nativeSrc": "3244:117:14",
															"nodeType": "YulBlock",
															"src": "3244:117:14",
															"statements": [
																{
																	"nativeSrc": "3259:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3259:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3273:1:14",
																		"nodeType": "YulLiteral",
																		"src": "3273:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3263:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3263:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3288:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3288:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3323:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3323:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3334:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3334:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3319:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3319:3:14"
																				},
																				"nativeSrc": "3319:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3319:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3343:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3343:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3298:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3298:20:14"
																		},
																		"nativeSrc": "3298:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3298:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3288:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3288:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3371:118:14",
															"nodeType": "YulBlock",
															"src": "3371:118:14",
															"statements": [
																{
																	"nativeSrc": "3386:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3386:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3400:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3400:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3390:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3390:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3416:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3416:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3451:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3451:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3462:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3462:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3447:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3447:3:14"
																				},
																				"nativeSrc": "3447:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3447:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3471:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3471:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3426:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3426:20:14"
																		},
																		"nativeSrc": "3426:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3416:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3416:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3022:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3067:9:14",
														"nodeType": "YulTypedName",
														"src": "3067:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3078:7:14",
														"nodeType": "YulTypedName",
														"src": "3078:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3090:6:14",
														"nodeType": "YulTypedName",
														"src": "3090:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3098:6:14",
														"nodeType": "YulTypedName",
														"src": "3098:6:14",
														"type": ""
													}
												],
												"src": "3022:474:14"
											},
											{
												"body": {
													"nativeSrc": "3567:53:14",
													"nodeType": "YulBlock",
													"src": "3567:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3584:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3584:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3607:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3607:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3589:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3589:17:14"
																		},
																		"nativeSrc": "3589:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3577:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:14"
																},
																"nativeSrc": "3577:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3577:37:14"
															},
															"nativeSrc": "3577:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3577:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3502:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3555:5:14",
														"nodeType": "YulTypedName",
														"src": "3555:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3562:3:14",
														"nodeType": "YulTypedName",
														"src": "3562:3:14",
														"type": ""
													}
												],
												"src": "3502:118:14"
											},
											{
												"body": {
													"nativeSrc": "3724:124:14",
													"nodeType": "YulBlock",
													"src": "3724:124:14",
													"statements": [
														{
															"nativeSrc": "3734:26:14",
															"nodeType": "YulAssignment",
															"src": "3734:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3746:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3746:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3757:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3757:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3742:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3742:3:14"
																},
																"nativeSrc": "3742:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3742:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3734:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3734:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3814:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3814:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3827:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3838:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3838:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3823:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:14"
																		},
																		"nativeSrc": "3823:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3770:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3770:43:14"
																},
																"nativeSrc": "3770:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3770:71:14"
															},
															"nativeSrc": "3770:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3770:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3626:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3696:9:14",
														"nodeType": "YulTypedName",
														"src": "3696:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3708:6:14",
														"nodeType": "YulTypedName",
														"src": "3708:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3719:4:14",
														"nodeType": "YulTypedName",
														"src": "3719:4:14",
														"type": ""
													}
												],
												"src": "3626:222:14"
											},
											{
												"body": {
													"nativeSrc": "3919:53:14",
													"nodeType": "YulBlock",
													"src": "3919:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3936:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3936:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3959:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3959:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3941:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3941:17:14"
																		},
																		"nativeSrc": "3941:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3941:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3929:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:14"
																},
																"nativeSrc": "3929:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3929:37:14"
															},
															"nativeSrc": "3929:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3929:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3854:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3907:5:14",
														"nodeType": "YulTypedName",
														"src": "3907:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3914:3:14",
														"nodeType": "YulTypedName",
														"src": "3914:3:14",
														"type": ""
													}
												],
												"src": "3854:118:14"
											},
											{
												"body": {
													"nativeSrc": "4076:124:14",
													"nodeType": "YulBlock",
													"src": "4076:124:14",
													"statements": [
														{
															"nativeSrc": "4086:26:14",
															"nodeType": "YulAssignment",
															"src": "4086:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4098:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4098:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4109:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4109:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4094:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:14"
																},
																"nativeSrc": "4094:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4094:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4086:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4086:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4166:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4166:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4179:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4179:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4190:1:14",
																				"nodeType": "YulLiteral",
																				"src": "4190:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4175:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4175:3:14"
																		},
																		"nativeSrc": "4175:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4122:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "4122:43:14"
																},
																"nativeSrc": "4122:71:14",
																"nodeType": "YulFunctionCall",
																"src": "4122:71:14"
															},
															"nativeSrc": "4122:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "4122:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3978:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4048:9:14",
														"nodeType": "YulTypedName",
														"src": "4048:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4060:6:14",
														"nodeType": "YulTypedName",
														"src": "4060:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4071:4:14",
														"nodeType": "YulTypedName",
														"src": "4071:4:14",
														"type": ""
													}
												],
												"src": "3978:222:14"
											},
											{
												"body": {
													"nativeSrc": "4289:391:14",
													"nodeType": "YulBlock",
													"src": "4289:391:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4335:83:14",
																"nodeType": "YulBlock",
																"src": "4335:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4337:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4337:77:14"
																			},
																			"nativeSrc": "4337:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4337:79:14"
																		},
																		"nativeSrc": "4337:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4337:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4310:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4310:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4319:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4306:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4306:3:14"
																		},
																		"nativeSrc": "4306:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4306:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4331:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4331:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4302:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4302:3:14"
																},
																"nativeSrc": "4302:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4302:32:14"
															},
															"nativeSrc": "4299:119:14",
															"nodeType": "YulIf",
															"src": "4299:119:14"
														},
														{
															"nativeSrc": "4428:117:14",
															"nodeType": "YulBlock",
															"src": "4428:117:14",
															"statements": [
																{
																	"nativeSrc": "4443:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4443:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4457:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4457:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4447:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4447:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4472:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4472:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4507:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4507:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4518:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4518:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4503:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4503:3:14"
																				},
																				"nativeSrc": "4503:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4503:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4527:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4527:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4482:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4482:20:14"
																		},
																		"nativeSrc": "4482:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4482:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4472:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4472:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4555:118:14",
															"nodeType": "YulBlock",
															"src": "4555:118:14",
															"statements": [
																{
																	"nativeSrc": "4570:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4570:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4584:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4584:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4574:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4574:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4600:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4600:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4635:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4635:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4646:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4646:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4631:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4631:3:14"
																				},
																				"nativeSrc": "4631:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4631:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4655:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4655:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4610:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4610:20:14"
																		},
																		"nativeSrc": "4610:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4600:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4600:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4206:474:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4251:9:14",
														"nodeType": "YulTypedName",
														"src": "4251:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4262:7:14",
														"nodeType": "YulTypedName",
														"src": "4262:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4274:6:14",
														"nodeType": "YulTypedName",
														"src": "4274:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4282:6:14",
														"nodeType": "YulTypedName",
														"src": "4282:6:14",
														"type": ""
													}
												],
												"src": "4206:474:14"
											},
											{
												"body": {
													"nativeSrc": "4752:263:14",
													"nodeType": "YulBlock",
													"src": "4752:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4798:83:14",
																"nodeType": "YulBlock",
																"src": "4798:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4800:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4800:77:14"
																			},
																			"nativeSrc": "4800:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4800:79:14"
																		},
																		"nativeSrc": "4800:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4800:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4773:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4773:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4782:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4782:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4769:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:14"
																		},
																		"nativeSrc": "4769:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4794:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4765:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4765:3:14"
																},
																"nativeSrc": "4765:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4765:32:14"
															},
															"nativeSrc": "4762:119:14",
															"nodeType": "YulIf",
															"src": "4762:119:14"
														},
														{
															"nativeSrc": "4891:117:14",
															"nodeType": "YulBlock",
															"src": "4891:117:14",
															"statements": [
																{
																	"nativeSrc": "4906:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4906:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4920:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4920:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4910:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4910:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4935:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4935:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4970:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4970:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4981:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4981:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4966:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4966:3:14"
																				},
																				"nativeSrc": "4966:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4966:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4990:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4990:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4945:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4945:20:14"
																		},
																		"nativeSrc": "4945:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4945:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4935:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4935:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4686:329:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4722:9:14",
														"nodeType": "YulTypedName",
														"src": "4722:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4733:7:14",
														"nodeType": "YulTypedName",
														"src": "4733:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4745:6:14",
														"nodeType": "YulTypedName",
														"src": "4745:6:14",
														"type": ""
													}
												],
												"src": "4686:329:14"
											},
											{
												"body": {
													"nativeSrc": "5049:152:14",
													"nodeType": "YulBlock",
													"src": "5049:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5066:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5066:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5069:77:14",
																		"nodeType": "YulLiteral",
																		"src": "5069:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5059:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:14"
																},
																"nativeSrc": "5059:88:14",
																"nodeType": "YulFunctionCall",
																"src": "5059:88:14"
															},
															"nativeSrc": "5059:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "5059:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5163:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5163:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5166:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5166:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:14"
																},
																"nativeSrc": "5156:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5156:15:14"
															},
															"nativeSrc": "5156:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5156:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5187:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5187:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5190:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5190:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5180:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5180:6:14"
																},
																"nativeSrc": "5180:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5180:15:14"
															},
															"nativeSrc": "5180:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5180:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5021:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5021:180:14"
											},
											{
												"body": {
													"nativeSrc": "5255:362:14",
													"nodeType": "YulBlock",
													"src": "5255:362:14",
													"statements": [
														{
															"nativeSrc": "5265:25:14",
															"nodeType": "YulAssignment",
															"src": "5265:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5288:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5270:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5270:17:14"
																},
																"nativeSrc": "5270:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5270:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5265:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "5265:1:14"
																}
															]
														},
														{
															"nativeSrc": "5299:25:14",
															"nodeType": "YulAssignment",
															"src": "5299:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5322:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5322:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5304:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5304:17:14"
																},
																"nativeSrc": "5304:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5304:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5299:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "5299:1:14"
																}
															]
														},
														{
															"nativeSrc": "5333:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5333:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5356:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5356:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5359:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5359:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5352:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:14"
																},
																"nativeSrc": "5352:9:14",
																"nodeType": "YulFunctionCall",
																"src": "5352:9:14"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5337:11:14",
																	"nodeType": "YulTypedName",
																	"src": "5337:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5370:41:14",
															"nodeType": "YulAssignment",
															"src": "5370:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5399:11:14",
																		"nodeType": "YulIdentifier",
																		"src": "5399:11:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5381:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5381:17:14"
																},
																"nativeSrc": "5381:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5381:30:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5370:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "5370:7:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5588:22:14",
																"nodeType": "YulBlock",
																"src": "5588:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5590:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "5590:16:14"
																			},
																			"nativeSrc": "5590:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5590:18:14"
																		},
																		"nativeSrc": "5590:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5590:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5521:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "5521:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5514:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "5514:6:14"
																				},
																				"nativeSrc": "5514:9:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5514:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5544:1:14",
																						"nodeType": "YulIdentifier",
																						"src": "5544:1:14"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5551:7:14",
																								"nodeType": "YulIdentifier",
																								"src": "5551:7:14"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5560:1:14",
																								"nodeType": "YulIdentifier",
																								"src": "5560:1:14"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5547:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "5547:3:14"
																						},
																						"nativeSrc": "5547:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "5547:15:14"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5541:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5541:2:14"
																				},
																				"nativeSrc": "5541:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5541:22:14"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5494:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5494:2:14"
																		},
																		"nativeSrc": "5494:83:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5494:83:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5474:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5474:6:14"
																},
																"nativeSrc": "5474:113:14",
																"nodeType": "YulFunctionCall",
																"src": "5474:113:14"
															},
															"nativeSrc": "5471:139:14",
															"nodeType": "YulIf",
															"src": "5471:139:14"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5207:410:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5238:1:14",
														"nodeType": "YulTypedName",
														"src": "5238:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5241:1:14",
														"nodeType": "YulTypedName",
														"src": "5241:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5247:7:14",
														"nodeType": "YulTypedName",
														"src": "5247:7:14",
														"type": ""
													}
												],
												"src": "5207:410:14"
											},
											{
												"body": {
													"nativeSrc": "5651:152:14",
													"nodeType": "YulBlock",
													"src": "5651:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5668:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5668:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:77:14",
																		"nodeType": "YulLiteral",
																		"src": "5671:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5661:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5661:6:14"
																},
																"nativeSrc": "5661:88:14",
																"nodeType": "YulFunctionCall",
																"src": "5661:88:14"
															},
															"nativeSrc": "5661:88:14",
															"nodeType": "YulExpressionStatement",
															"src": "5661:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5765:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5765:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5768:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5768:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5758:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:14"
																},
																"nativeSrc": "5758:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5758:15:14"
															},
															"nativeSrc": "5758:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5758:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5789:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5789:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5792:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5792:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5782:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5782:6:14"
																},
																"nativeSrc": "5782:15:14",
																"nodeType": "YulFunctionCall",
																"src": "5782:15:14"
															},
															"nativeSrc": "5782:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "5782:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5623:180:14",
												"nodeType": "YulFunctionDefinition",
												"src": "5623:180:14"
											},
											{
												"body": {
													"nativeSrc": "5851:143:14",
													"nodeType": "YulBlock",
													"src": "5851:143:14",
													"statements": [
														{
															"nativeSrc": "5861:25:14",
															"nodeType": "YulAssignment",
															"src": "5861:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5884:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5884:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5866:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5866:17:14"
																},
																"nativeSrc": "5866:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5866:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5861:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "5861:1:14"
																}
															]
														},
														{
															"nativeSrc": "5895:25:14",
															"nodeType": "YulAssignment",
															"src": "5895:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5918:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5918:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5900:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5900:17:14"
																},
																"nativeSrc": "5900:20:14",
																"nodeType": "YulFunctionCall",
																"src": "5900:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5895:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "5895:1:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5942:22:14",
																"nodeType": "YulBlock",
																"src": "5942:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5944:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "5944:16:14"
																			},
																			"nativeSrc": "5944:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5944:18:14"
																		},
																		"nativeSrc": "5944:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5944:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5939:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5939:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5932:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:14"
																},
																"nativeSrc": "5932:9:14",
																"nodeType": "YulFunctionCall",
																"src": "5932:9:14"
															},
															"nativeSrc": "5929:35:14",
															"nodeType": "YulIf",
															"src": "5929:35:14"
														},
														{
															"nativeSrc": "5974:14:14",
															"nodeType": "YulAssignment",
															"src": "5974:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5983:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5983:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5986:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "5986:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5979:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5979:3:14"
																},
																"nativeSrc": "5979:9:14",
																"nodeType": "YulFunctionCall",
																"src": "5979:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5974:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "5974:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5809:185:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5840:1:14",
														"nodeType": "YulTypedName",
														"src": "5840:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5843:1:14",
														"nodeType": "YulTypedName",
														"src": "5843:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5849:1:14",
														"nodeType": "YulTypedName",
														"src": "5849:1:14",
														"type": ""
													}
												],
												"src": "5809:185:14"
											},
											{
												"body": {
													"nativeSrc": "6045:149:14",
													"nodeType": "YulBlock",
													"src": "6045:149:14",
													"statements": [
														{
															"nativeSrc": "6055:25:14",
															"nodeType": "YulAssignment",
															"src": "6055:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6078:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6078:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6060:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "6060:17:14"
																},
																"nativeSrc": "6060:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6060:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6055:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "6055:1:14"
																}
															]
														},
														{
															"nativeSrc": "6089:25:14",
															"nodeType": "YulAssignment",
															"src": "6089:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6112:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6112:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6094:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "6094:17:14"
																},
																"nativeSrc": "6094:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6094:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6089:1:14",
																	"nodeType": "YulIdentifier",
																	"src": "6089:1:14"
																}
															]
														},
														{
															"nativeSrc": "6123:17:14",
															"nodeType": "YulAssignment",
															"src": "6123:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6135:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6135:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6138:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6138:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6131:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6131:3:14"
																},
																"nativeSrc": "6131:9:14",
																"nodeType": "YulFunctionCall",
																"src": "6131:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6123:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6123:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6165:22:14",
																"nodeType": "YulBlock",
																"src": "6165:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6167:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6167:16:14"
																			},
																			"nativeSrc": "6167:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6167:18:14"
																		},
																		"nativeSrc": "6167:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6167:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6156:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6156:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6162:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "6162:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6153:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6153:2:14"
																},
																"nativeSrc": "6153:11:14",
																"nodeType": "YulFunctionCall",
																"src": "6153:11:14"
															},
															"nativeSrc": "6150:37:14",
															"nodeType": "YulIf",
															"src": "6150:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6000:194:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6031:1:14",
														"nodeType": "YulTypedName",
														"src": "6031:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6034:1:14",
														"nodeType": "YulTypedName",
														"src": "6034:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6040:4:14",
														"nodeType": "YulTypedName",
														"src": "6040:4:14",
														"type": ""
													}
												],
												"src": "6000:194:14"
											},
											{
												"body": {
													"nativeSrc": "6382:371:14",
													"nodeType": "YulBlock",
													"src": "6382:371:14",
													"statements": [
														{
															"nativeSrc": "6392:27:14",
															"nodeType": "YulAssignment",
															"src": "6392:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6404:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6404:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6415:3:14",
																		"nodeType": "YulLiteral",
																		"src": "6415:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:14"
																},
																"nativeSrc": "6400:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6400:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6392:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6392:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6473:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6473:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6486:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6486:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6497:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6497:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6482:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6482:3:14"
																		},
																		"nativeSrc": "6482:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6482:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6429:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6429:43:14"
																},
																"nativeSrc": "6429:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6429:71:14"
															},
															"nativeSrc": "6429:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6429:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6554:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6554:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6567:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6567:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6578:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6578:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6563:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6563:3:14"
																		},
																		"nativeSrc": "6563:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6563:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6510:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6510:43:14"
																},
																"nativeSrc": "6510:72:14",
																"nodeType": "YulFunctionCall",
																"src": "6510:72:14"
															},
															"nativeSrc": "6510:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "6510:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6636:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6636:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6645:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:14"
																		},
																		"nativeSrc": "6645:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6645:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6592:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6592:43:14"
																},
																"nativeSrc": "6592:72:14",
																"nodeType": "YulFunctionCall",
																"src": "6592:72:14"
															},
															"nativeSrc": "6592:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "6592:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6718:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6718:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6731:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6742:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6727:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:14"
																		},
																		"nativeSrc": "6727:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6674:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6674:43:14"
																},
																"nativeSrc": "6674:72:14",
																"nodeType": "YulFunctionCall",
																"src": "6674:72:14"
															},
															"nativeSrc": "6674:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "6674:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6200:553:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6330:9:14",
														"nodeType": "YulTypedName",
														"src": "6330:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6342:6:14",
														"nodeType": "YulTypedName",
														"src": "6342:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6350:6:14",
														"nodeType": "YulTypedName",
														"src": "6350:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6358:6:14",
														"nodeType": "YulTypedName",
														"src": "6358:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6366:6:14",
														"nodeType": "YulTypedName",
														"src": "6366:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6377:4:14",
														"nodeType": "YulTypedName",
														"src": "6377:4:14",
														"type": ""
													}
												],
												"src": "6200:553:14"
											},
											{
												"body": {
													"nativeSrc": "6885:206:14",
													"nodeType": "YulBlock",
													"src": "6885:206:14",
													"statements": [
														{
															"nativeSrc": "6895:26:14",
															"nodeType": "YulAssignment",
															"src": "6895:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6907:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6907:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6918:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6918:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6903:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6903:3:14"
																},
																"nativeSrc": "6903:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6903:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6895:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6895:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6975:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6975:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6988:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6988:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6999:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6999:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6984:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6984:3:14"
																		},
																		"nativeSrc": "6984:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6984:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6931:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6931:43:14"
																},
																"nativeSrc": "6931:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6931:71:14"
															},
															"nativeSrc": "6931:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6931:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7056:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7069:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7069:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7080:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7080:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7065:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7065:3:14"
																		},
																		"nativeSrc": "7065:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7065:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7012:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "7012:43:14"
																},
																"nativeSrc": "7012:72:14",
																"nodeType": "YulFunctionCall",
																"src": "7012:72:14"
															},
															"nativeSrc": "7012:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "7012:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "6759:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6849:9:14",
														"nodeType": "YulTypedName",
														"src": "6849:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6861:6:14",
														"nodeType": "YulTypedName",
														"src": "6861:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6869:6:14",
														"nodeType": "YulTypedName",
														"src": "6869:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6880:4:14",
														"nodeType": "YulTypedName",
														"src": "6880:4:14",
														"type": ""
													}
												],
												"src": "6759:332:14"
											},
											{
												"body": {
													"nativeSrc": "7160:80:14",
													"nodeType": "YulBlock",
													"src": "7160:80:14",
													"statements": [
														{
															"nativeSrc": "7170:22:14",
															"nodeType": "YulAssignment",
															"src": "7170:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7185:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7185:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7179:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7179:5:14"
																},
																"nativeSrc": "7179:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7179:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7170:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7170:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7228:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7228:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7201:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "7201:26:14"
																},
																"nativeSrc": "7201:33:14",
																"nodeType": "YulFunctionCall",
																"src": "7201:33:14"
															},
															"nativeSrc": "7201:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "7201:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7097:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7138:6:14",
														"nodeType": "YulTypedName",
														"src": "7138:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7146:3:14",
														"nodeType": "YulTypedName",
														"src": "7146:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7154:5:14",
														"nodeType": "YulTypedName",
														"src": "7154:5:14",
														"type": ""
													}
												],
												"src": "7097:143:14"
											},
											{
												"body": {
													"nativeSrc": "7323:274:14",
													"nodeType": "YulBlock",
													"src": "7323:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7369:83:14",
																"nodeType": "YulBlock",
																"src": "7369:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7371:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7371:77:14"
																			},
																			"nativeSrc": "7371:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7371:79:14"
																		},
																		"nativeSrc": "7371:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7371:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7344:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7344:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7353:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7353:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7340:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7340:3:14"
																		},
																		"nativeSrc": "7340:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7340:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7365:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7365:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7336:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7336:3:14"
																},
																"nativeSrc": "7336:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7336:32:14"
															},
															"nativeSrc": "7333:119:14",
															"nodeType": "YulIf",
															"src": "7333:119:14"
														},
														{
															"nativeSrc": "7462:128:14",
															"nodeType": "YulBlock",
															"src": "7462:128:14",
															"statements": [
																{
																	"nativeSrc": "7477:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7477:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7491:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7491:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7481:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7481:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7506:74:14",
																	"nodeType": "YulAssignment",
																	"src": "7506:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7552:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7552:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7563:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "7563:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7548:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7548:3:14"
																				},
																				"nativeSrc": "7548:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7548:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7572:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7572:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7516:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "7516:31:14"
																		},
																		"nativeSrc": "7516:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7516:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7506:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7506:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7246:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7293:9:14",
														"nodeType": "YulTypedName",
														"src": "7293:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7304:7:14",
														"nodeType": "YulTypedName",
														"src": "7304:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7316:6:14",
														"nodeType": "YulTypedName",
														"src": "7316:6:14",
														"type": ""
													}
												],
												"src": "7246:351:14"
											},
											{
												"body": {
													"nativeSrc": "7656:32:14",
													"nodeType": "YulBlock",
													"src": "7656:32:14",
													"statements": [
														{
															"nativeSrc": "7666:16:14",
															"nodeType": "YulAssignment",
															"src": "7666:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "7677:5:14",
																"nodeType": "YulIdentifier",
																"src": "7677:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7666:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7666:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "7603:85:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7638:5:14",
														"nodeType": "YulTypedName",
														"src": "7638:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7648:7:14",
														"nodeType": "YulTypedName",
														"src": "7648:7:14",
														"type": ""
													}
												],
												"src": "7603:85:14"
											},
											{
												"body": {
													"nativeSrc": "7738:57:14",
													"nodeType": "YulBlock",
													"src": "7738:57:14",
													"statements": [
														{
															"nativeSrc": "7748:41:14",
															"nodeType": "YulAssignment",
															"src": "7748:41:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7763:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7763:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7770:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7770:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7759:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7759:3:14"
																},
																"nativeSrc": "7759:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7759:30:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7748:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7748:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7694:101:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7720:5:14",
														"nodeType": "YulTypedName",
														"src": "7720:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7730:7:14",
														"nodeType": "YulTypedName",
														"src": "7730:7:14",
														"type": ""
													}
												],
												"src": "7694:101:14"
											},
											{
												"body": {
													"nativeSrc": "7833:28:14",
													"nodeType": "YulBlock",
													"src": "7833:28:14",
													"statements": [
														{
															"nativeSrc": "7843:12:14",
															"nodeType": "YulAssignment",
															"src": "7843:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "7850:5:14",
																"nodeType": "YulIdentifier",
																"src": "7850:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7843:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7843:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7801:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7819:5:14",
														"nodeType": "YulTypedName",
														"src": "7819:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7829:3:14",
														"nodeType": "YulTypedName",
														"src": "7829:3:14",
														"type": ""
													}
												],
												"src": "7801:60:14"
											},
											{
												"body": {
													"nativeSrc": "7934:89:14",
													"nodeType": "YulBlock",
													"src": "7934:89:14",
													"statements": [
														{
															"nativeSrc": "7944:73:14",
															"nodeType": "YulAssignment",
															"src": "7944:73:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8009:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "8009:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "7983:25:14",
																					"nodeType": "YulIdentifier",
																					"src": "7983:25:14"
																				},
																				"nativeSrc": "7983:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7983:32:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7974:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "7974:8:14"
																		},
																		"nativeSrc": "7974:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7974:42:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "7957:16:14",
																	"nodeType": "YulIdentifier",
																	"src": "7957:16:14"
																},
																"nativeSrc": "7957:60:14",
																"nodeType": "YulFunctionCall",
																"src": "7957:60:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7944:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "7944:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "7867:156:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7914:5:14",
														"nodeType": "YulTypedName",
														"src": "7914:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7924:9:14",
														"nodeType": "YulTypedName",
														"src": "7924:9:14",
														"type": ""
													}
												],
												"src": "7867:156:14"
											},
											{
												"body": {
													"nativeSrc": "8101:73:14",
													"nodeType": "YulBlock",
													"src": "8101:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8118:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "8118:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8161:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "8161:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "8123:37:14",
																			"nodeType": "YulIdentifier",
																			"src": "8123:37:14"
																		},
																		"nativeSrc": "8123:44:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8123:44:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:14"
																},
																"nativeSrc": "8111:57:14",
																"nodeType": "YulFunctionCall",
																"src": "8111:57:14"
															},
															"nativeSrc": "8111:57:14",
															"nodeType": "YulExpressionStatement",
															"src": "8111:57:14"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "8029:145:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8089:5:14",
														"nodeType": "YulTypedName",
														"src": "8089:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8096:3:14",
														"nodeType": "YulTypedName",
														"src": "8096:3:14",
														"type": ""
													}
												],
												"src": "8029:145:14"
											},
											{
												"body": {
													"nativeSrc": "8285:131:14",
													"nodeType": "YulBlock",
													"src": "8285:131:14",
													"statements": [
														{
															"nativeSrc": "8295:26:14",
															"nodeType": "YulAssignment",
															"src": "8295:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8307:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8307:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8318:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8318:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8303:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8303:3:14"
																},
																"nativeSrc": "8303:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8303:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8295:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8295:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8382:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8382:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8395:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8395:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8406:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8406:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8391:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8391:3:14"
																		},
																		"nativeSrc": "8391:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8391:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "8331:50:14",
																	"nodeType": "YulIdentifier",
																	"src": "8331:50:14"
																},
																"nativeSrc": "8331:78:14",
																"nodeType": "YulFunctionCall",
																"src": "8331:78:14"
															},
															"nativeSrc": "8331:78:14",
															"nodeType": "YulExpressionStatement",
															"src": "8331:78:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8180:236:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8257:9:14",
														"nodeType": "YulTypedName",
														"src": "8257:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8269:6:14",
														"nodeType": "YulTypedName",
														"src": "8269:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8280:4:14",
														"nodeType": "YulTypedName",
														"src": "8280:4:14",
														"type": ""
													}
												],
												"src": "8180:236:14"
											},
											{
												"body": {
													"nativeSrc": "8576:288:14",
													"nodeType": "YulBlock",
													"src": "8576:288:14",
													"statements": [
														{
															"nativeSrc": "8586:26:14",
															"nodeType": "YulAssignment",
															"src": "8586:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8598:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8598:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8609:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8609:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8594:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:14"
																},
																"nativeSrc": "8594:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8594:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8586:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8586:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8666:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8679:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8679:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8690:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8690:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8675:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8675:3:14"
																		},
																		"nativeSrc": "8675:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8675:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8622:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8622:43:14"
																},
																"nativeSrc": "8622:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8622:71:14"
															},
															"nativeSrc": "8622:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8622:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8747:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8747:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8760:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8760:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8771:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8771:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8756:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8756:3:14"
																		},
																		"nativeSrc": "8756:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8756:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8703:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8703:43:14"
																},
																"nativeSrc": "8703:72:14",
																"nodeType": "YulFunctionCall",
																"src": "8703:72:14"
															},
															"nativeSrc": "8703:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "8703:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8829:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8829:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8842:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8842:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8853:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8853:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8838:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8838:3:14"
																		},
																		"nativeSrc": "8838:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8838:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8785:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8785:43:14"
																},
																"nativeSrc": "8785:72:14",
																"nodeType": "YulFunctionCall",
																"src": "8785:72:14"
															},
															"nativeSrc": "8785:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "8785:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8422:442:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8532:9:14",
														"nodeType": "YulTypedName",
														"src": "8532:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8544:6:14",
														"nodeType": "YulTypedName",
														"src": "8544:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8552:6:14",
														"nodeType": "YulTypedName",
														"src": "8552:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8560:6:14",
														"nodeType": "YulTypedName",
														"src": "8560:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8571:4:14",
														"nodeType": "YulTypedName",
														"src": "8571:4:14",
														"type": ""
													}
												],
												"src": "8422:442:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x8B099B23 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xCE2C2DF1 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xDE5E0E7 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x3D18678E EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDC SWAP2 SWAP1 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x2B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEB PUSH2 0x304 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xDE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x113 PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x34B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xDFD JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x191 PUSH2 0x5B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0xE4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x63B JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x67C JUMP JUMPDEST PUSH0 DUP7 SWAP1 POP PUSH0 PUSH2 0x2710 PUSH0 SLOAD DUP8 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xF21 JUMP JUMPDEST PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0xF8F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP8 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP PUSH2 0x237 CALLER PUSH2 0x20F PUSH2 0x3E5 JUMP JUMPDEST DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x264 CALLER DUP10 DUP4 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6D0 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 DUP6 DUP8 PUSH32 0xCCF4CBDBEBF44B8F817936435DFAA557D772265C6EEF9C54C198D3C873624F34 DUP13 CALLER DUP14 DUP8 PUSH1 0x40 MLOAD PUSH2 0x29C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0x2AF PUSH2 0x752 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2BF PUSH2 0x769 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF44072600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x30C PUSH2 0x769 JUMP JUMPDEST PUSH2 0x314 PUSH2 0x7F0 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x320 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x340 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x349 PUSH0 PUSH2 0x885 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x353 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x35B PUSH2 0x956 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E DUP5 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39D SWAP3 SWAP2 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3EF PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x423 PUSH2 0x9EC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x46B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x49E JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x530 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x539 DUP8 PUSH2 0xA13 JUMP JUMPDEST PUSH2 0x541 PUSH2 0xA27 JUMP JUMPDEST PUSH2 0x549 PUSH2 0xA39 JUMP JUMPDEST DUP6 PUSH0 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x5A9 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5BF PUSH2 0x769 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x62F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP2 PUSH2 0x885 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x643 PUSH2 0x316 JUMP JUMPDEST ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x685 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 PUSH0 ADD SLOAD SUB PUSH2 0x6C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x74C DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x705 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1109 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA72 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x75B PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x771 PUSH2 0xB0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x78F PUSH2 0x3E5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7EE JUMPI PUSH2 0x7B2 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E5 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x7F8 PUSH2 0xB14 JUMP JUMPDEST PUSH0 PUSH2 0x801 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x846 PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x853 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x88E PUSH2 0x9C5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x95E PUSH2 0x63B JUMP JUMPDEST PUSH0 PUSH2 0x967 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x9AD PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9BA SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA1B PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xA24 DUP2 PUSH2 0xB94 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA2F PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xA37 PUSH2 0xC18 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA41 PUSH2 0xB54 JUMP JUMPDEST PUSH2 0xA49 PUSH2 0xC37 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAAA JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xAC5 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB07 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0x316 JUMP JUMPDEST PUSH2 0xB52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB5C PUSH2 0xC67 JUMP JUMPDEST PUSH2 0xB92 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB9C PUSH2 0xB54 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC0C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC03 SWAP2 SWAP1 PUSH2 0xE72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0x885 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC20 PUSH2 0xB54 JUMP JUMPDEST PUSH0 PUSH2 0xC29 PUSH2 0xA4B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC3F PUSH2 0xB54 JUMP JUMPDEST PUSH0 PUSH2 0xC48 PUSH2 0x85E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC70 PUSH2 0x9EC JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCB2 DUP3 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC2 DUP2 PUSH2 0xCA8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCCC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDD DUP2 PUSH2 0xCB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF5 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP2 EQ PUSH2 0xCFF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD10 DUP2 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD2F PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD3D DUP10 DUP3 DUP11 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xD4E DUP10 DUP3 DUP11 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xD5F DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xD70 DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0xD81 DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0xD92 DUP10 DUP3 DUP11 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB3 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDC1 DUP5 DUP3 DUP6 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDDE DUP2 PUSH2 0xDCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDF7 PUSH0 DUP4 ADD DUP5 PUSH2 0xDD5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE20 DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE31 DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE44 DUP2 PUSH2 0xCE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE5D PUSH0 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE6C DUP2 PUSH2 0xCA8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE85 PUSH0 DUP4 ADD DUP5 PUSH2 0xE63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEA1 JUMPI PUSH2 0xEA0 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEAE DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xEBF DUP6 DUP3 DUP7 ADD PUSH2 0xD02 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEDE JUMPI PUSH2 0xEDD PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEEB DUP5 DUP3 DUP6 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF2B DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xF36 DUP4 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xF44 DUP2 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xF5B JUMPI PUSH2 0xF5A PUSH2 0xEF4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF99 DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFA4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xFB4 JUMPI PUSH2 0xFB3 PUSH2 0xF62 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFC9 DUP3 PUSH2 0xCE3 JUMP JUMPDEST SWAP2 POP PUSH2 0xFD4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xFEC JUMPI PUSH2 0xFEB PUSH2 0xEF4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1005 PUSH0 DUP4 ADD DUP8 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1012 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x101F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x102C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1048 PUSH0 DUP4 ADD DUP6 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1055 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x106A DUP2 PUSH2 0xCEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1085 JUMPI PUSH2 0x1084 PUSH2 0xC85 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1092 DUP5 DUP3 DUP6 ADD PUSH2 0x105C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10DA PUSH2 0x10D5 PUSH2 0x10D0 DUP5 PUSH2 0x109B JUMP JUMPDEST PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x10A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EA DUP2 PUSH2 0x10C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1103 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x111C PUSH0 DUP4 ADD DUP7 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1129 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x1136 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE3B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST CREATE2 PUSH29 0x3804541CACD5B1F968F3F228AF99666FE2AECA3D3330A8BFA7E9024F33 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "545:1937:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1810:669;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1436:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1369:61;;;:::i;:::-;;2692:145:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;1306:57:13;;;:::i;:::-;;1597:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:186:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;697:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1810:669:13;2316:19:3;:17;:19::i;:::-;3395:21:4::1;:19;:21::i;:::-;2025:12:13::2;2047;2025:35;;2106:11;2141:5;2130:7;;2121:6;:16;;;;:::i;:::-;2120:26;;;;:::i;:::-;2106:40;;2153:17;2182:3;2173:6;:12;;;;:::i;:::-;2153:32;;2194:48;2217:10;2229:7;:5;:7::i;:::-;2238:3;2194:5;:22;;;;:48;;;;;;:::i;:::-;2249:56;2272:10;2284:9;2295;2249:5;:22;;;;:56;;;;;;:::i;:::-;2377:13;2357:11;2335:13;2319:154;2399:12;2420:10;2439:9;2457;2319:154;;;;;;;;;:::i;:::-;;;;;;;;2018:461;;;3437:20:4::1;:18;:20::i;:::-;1810:669:13::0;;;;;;:::o;1436:155::-;2334:13:0;:11;:13::i;:::-;1512:5:13::1;1501:8;:16;1497:62;;;1535:16;;;;;;;;;;;;;;1497:62;1577:8;1567:7;:18;;;;1436:155:::0;:::o;1369:61::-;2334:13:0;:11;:13::i;:::-;1414:10:13::1;:8;:10::i;:::-;1369:61::o:0;2692:145:3:-;2739:4;2755:25;2783:21;:19;:21::i;:::-;2755:49;;2821:1;:9;;;;;;;;;;;;2814:16;;;2692:145;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1306:57:13:-;2334:13:0;:11;:13::i;:::-;1349:8:13::1;:6;:8::i;:::-;1306:57::o:0;1597:207::-;1696:7;1712:12;1734;1712:35;;1761:5;:15;;;1777:5;1792:4;1761:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1754:44;;;1597:207;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1114:186:13:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;1193:21:13::1;1208:5;1193:14;:21::i;:::-;1221:24;:22;:24::i;:::-;1252:17;:15;:17::i;:::-;1286:8;1276:7;:18;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1114:186:13;;:::o;697:22::-;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2905:128:3:-;2970:8;:6;:8::i;:::-;2966:61;;;3001:15;;;;;;;;;;;;;;2966:61;2905:128::o;3470:384:4:-;3519:32;3554:28;:26;:28::i;:::-;3519:63;;1991:1;3670;:9;;;:20;3666:88;;3713:30;;;;;;;;;;;;;;3666:88;1991:1;3828;:9;;:19;;;;3509:345;3470:384::o;1670:188:9:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;3860:283:4:-;3908:32;3943:28;:26;:28::i;:::-;3908:63;;1949:1;4113;:9;;:23;;;;3898:245;3860:283::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3674:178:3:-;2563:16;:14;:16::i;:::-;3732:25:::1;3760:21;:19;:21::i;:::-;3732:49;;3803:5;3791:1;:9;;;:17;;;;;;;;;;;;;;;;;;3823:22;3832:12;:10;:12::i;:::-;3823:22;;;;;;:::i;:::-;;;;;;;;3722:130;3674:178::o:0;1147:162::-;1200:25;1270:23;1260:33;;1147:162;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;3366:176:3:-;2316:19;:17;:19::i;:::-;3425:25:::1;3453:21;:19;:21::i;:::-;3425:49;;3496:4;3484:1;:9;;;:16;;;;;;;;;;;;;;;;;;3515:20;3522:12;:10;:12::i;:::-;3515:20;;;;;;:::i;:::-;;;;;;;;3415:127;3366:176::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2684:111:4:-;6931:20:1;:18;:20::i;:::-;2754:34:4::1;:32;:34::i;:::-;2684:111::o:0;1836:97:3:-;6931:20:1;:18;:20::i;:::-;1899:27:3::1;:25;:27::i;:::-;1836:97::o:0;2395:183:4:-;2455:32;2532:30;2522:40;;2395:183;:::o;7738:720:9:-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;887:96:2:-;940:7;966:10;959:17;;887:96;:::o;3105:126:3:-;3168:8;:6;:8::i;:::-;3163:62;;3199:15;;;;;;;;;;;;;;3163:62;3105:126::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;2801:183:4:-;6931:20:1;:18;:20::i;:::-;2881:32:4::1;2916:28;:26;:28::i;:::-;2881:63;;1949:1;2954;:9;;:23;;;;2871:113;2801:183::o:0;1939:156:3:-;6931:20:1;:18;:20::i;:::-;2012:25:3::1;2040:21;:19;:21::i;:::-;2012:49;;2083:5;2071:1;:9;;;:17;;;;;;;;;;;;;;;;;;2002:93;1939:156::o:0;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:1057::-;1301:6;1309;1317;1325;1333;1341;1390:3;1378:9;1369:7;1365:23;1361:33;1358:120;;;1397:79;;:::i;:::-;1358:120;1517:1;1542:53;1587:7;1578:6;1567:9;1563:22;1542:53;:::i;:::-;1532:63;;1488:117;1644:2;1670:53;1715:7;1706:6;1695:9;1691:22;1670:53;:::i;:::-;1660:63;;1615:118;1772:2;1798:53;1843:7;1834:6;1823:9;1819:22;1798:53;:::i;:::-;1788:63;;1743:118;1900:2;1926:53;1971:7;1962:6;1951:9;1947:22;1926:53;:::i;:::-;1916:63;;1871:118;2028:3;2055:53;2100:7;2091:6;2080:9;2076:22;2055:53;:::i;:::-;2045:63;;1999:119;2157:3;2184:53;2229:7;2220:6;2209:9;2205:22;2184:53;:::i;:::-;2174:63;;2128:119;1197:1057;;;;;;;;:::o;2260:329::-;2319:6;2368:2;2356:9;2347:7;2343:23;2339:32;2336:119;;;2374:79;;:::i;:::-;2336:119;2494:1;2519:53;2564:7;2555:6;2544:9;2540:22;2519:53;:::i;:::-;2509:63;;2465:117;2260:329;;;;:::o;2595:90::-;2629:7;2672:5;2665:13;2658:21;2647:32;;2595:90;;;:::o;2691:109::-;2772:21;2787:5;2772:21;:::i;:::-;2767:3;2760:34;2691:109;;:::o;2806:210::-;2893:4;2931:2;2920:9;2916:18;2908:26;;2944:65;3006:1;2995:9;2991:17;2982:6;2944:65;:::i;:::-;2806:210;;;;:::o;3022:474::-;3090:6;3098;3147:2;3135:9;3126:7;3122:23;3118:32;3115:119;;;3153:79;;:::i;:::-;3115:119;3273:1;3298:53;3343:7;3334:6;3323:9;3319:22;3298:53;:::i;:::-;3288:63;;3244:117;3400:2;3426:53;3471:7;3462:6;3451:9;3447:22;3426:53;:::i;:::-;3416:63;;3371:118;3022:474;;;;;:::o;3502:118::-;3589:24;3607:5;3589:24;:::i;:::-;3584:3;3577:37;3502:118;;:::o;3626:222::-;3719:4;3757:2;3746:9;3742:18;3734:26;;3770:71;3838:1;3827:9;3823:17;3814:6;3770:71;:::i;:::-;3626:222;;;;:::o;3854:118::-;3941:24;3959:5;3941:24;:::i;:::-;3936:3;3929:37;3854:118;;:::o;3978:222::-;4071:4;4109:2;4098:9;4094:18;4086:26;;4122:71;4190:1;4179:9;4175:17;4166:6;4122:71;:::i;:::-;3978:222;;;;:::o;4206:474::-;4274:6;4282;4331:2;4319:9;4310:7;4306:23;4302:32;4299:119;;;4337:79;;:::i;:::-;4299:119;4457:1;4482:53;4527:7;4518:6;4507:9;4503:22;4482:53;:::i;:::-;4472:63;;4428:117;4584:2;4610:53;4655:7;4646:6;4635:9;4631:22;4610:53;:::i;:::-;4600:63;;4555:118;4206:474;;;;;:::o;4686:329::-;4745:6;4794:2;4782:9;4773:7;4769:23;4765:32;4762:119;;;4800:79;;:::i;:::-;4762:119;4920:1;4945:53;4990:7;4981:6;4970:9;4966:22;4945:53;:::i;:::-;4935:63;;4891:117;4686:329;;;;:::o;5021:180::-;5069:77;5066:1;5059:88;5166:4;5163:1;5156:15;5190:4;5187:1;5180:15;5207:410;5247:7;5270:20;5288:1;5270:20;:::i;:::-;5265:25;;5304:20;5322:1;5304:20;:::i;:::-;5299:25;;5359:1;5356;5352:9;5381:30;5399:11;5381:30;:::i;:::-;5370:41;;5560:1;5551:7;5547:15;5544:1;5541:22;5521:1;5514:9;5494:83;5471:139;;5590:18;;:::i;:::-;5471:139;5255:362;5207:410;;;;:::o;5623:180::-;5671:77;5668:1;5661:88;5768:4;5765:1;5758:15;5792:4;5789:1;5782:15;5809:185;5849:1;5866:20;5884:1;5866:20;:::i;:::-;5861:25;;5900:20;5918:1;5900:20;:::i;:::-;5895:25;;5939:1;5929:35;;5944:18;;:::i;:::-;5929:35;5986:1;5983;5979:9;5974:14;;5809:185;;;;:::o;6000:194::-;6040:4;6060:20;6078:1;6060:20;:::i;:::-;6055:25;;6094:20;6112:1;6094:20;:::i;:::-;6089:25;;6138:1;6135;6131:9;6123:17;;6162:1;6156:4;6153:11;6150:37;;;6167:18;;:::i;:::-;6150:37;6000:194;;;;:::o;6200:553::-;6377:4;6415:3;6404:9;6400:19;6392:27;;6429:71;6497:1;6486:9;6482:17;6473:6;6429:71;:::i;:::-;6510:72;6578:2;6567:9;6563:18;6554:6;6510:72;:::i;:::-;6592;6660:2;6649:9;6645:18;6636:6;6592:72;:::i;:::-;6674;6742:2;6731:9;6727:18;6718:6;6674:72;:::i;:::-;6200:553;;;;;;;:::o;6759:332::-;6880:4;6918:2;6907:9;6903:18;6895:26;;6931:71;6999:1;6988:9;6984:17;6975:6;6931:71;:::i;:::-;7012:72;7080:2;7069:9;7065:18;7056:6;7012:72;:::i;:::-;6759:332;;;;;:::o;7097:143::-;7154:5;7185:6;7179:13;7170:22;;7201:33;7228:5;7201:33;:::i;:::-;7097:143;;;;:::o;7246:351::-;7316:6;7365:2;7353:9;7344:7;7340:23;7336:32;7333:119;;;7371:79;;:::i;:::-;7333:119;7491:1;7516:64;7572:7;7563:6;7552:9;7548:22;7516:64;:::i;:::-;7506:74;;7462:128;7246:351;;;;:::o;7603:85::-;7648:7;7677:5;7666:16;;7603:85;;;:::o;7694:101::-;7730:7;7770:18;7763:5;7759:30;7748:41;;7694:101;;;:::o;7801:60::-;7829:3;7850:5;7843:12;;7801:60;;;:::o;7867:156::-;7924:9;7957:60;7974:42;7983:32;8009:5;7983:32;:::i;:::-;7974:42;:::i;:::-;7957:60;:::i;:::-;7944:73;;7867:156;;;:::o;8029:145::-;8123:44;8161:5;8123:44;:::i;:::-;8118:3;8111:57;8029:145;;:::o;8180:236::-;8280:4;8318:2;8307:9;8303:18;8295:26;;8331:78;8406:1;8395:9;8391:17;8382:6;8331:78;:::i;:::-;8180:236;;;;:::o;8422:442::-;8571:4;8609:2;8598:9;8594:18;8586:26;;8622:71;8690:1;8679:9;8675:17;8666:6;8622:71;:::i;:::-;8703:72;8771:2;8760:9;8756:18;8747:6;8703:72;:::i;:::-;8785;8853:2;8842:9;8838:18;8829:6;8785:72;:::i;:::-;8422:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "893600",
								"executionCost": "927",
								"totalCost": "894527"
							},
							"external": {
								"checkAllowance(address,address)": "infinite",
								"feesBps()": "2512",
								"initialize(address,uint256)": "infinite",
								"owner()": "2611",
								"pause()": "infinite",
								"paused()": "2592",
								"renounceOwnership()": "infinite",
								"setFees(uint256)": "infinite",
								"tip(address,address,uint256,uint256,uint256,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 545,
									"end": 2482,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205bf57c3804541cacd5b1f968f3f228af99666fe2aeca3d3330a8bfa7e9024f3364736f6c634300081a0033",
									".code": [
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "8B099B23"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "CD6DC687"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "CE2C2DF1"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "DE5E0E7"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "3D18678E"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 545,
											"end": 2482,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 1810,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1810,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1436,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1436,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1369,
											"end": 1430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1306,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1597,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1597,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1597,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1114,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1114,
											"end": 1300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 697,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 697,
											"end": 719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3395,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3395,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3395,
											"end": 3416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3395,
											"end": 3416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3395,
											"end": 3416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2059,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2060,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2025,
											"end": 2060,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2117,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2146,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 2130,
											"end": 2137,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2137,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2127,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2121,
											"end": 2137,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 2121,
											"end": 2137,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2146,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2120,
											"end": 2146,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2146,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2146,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2120,
											"end": 2146,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2146,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2120,
											"end": 2146,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2146,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2106,
											"end": 2146,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2170,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2185,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2173,
											"end": 2179,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2173,
											"end": 2185,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2173,
											"end": 2185,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2185,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2185,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2217,
											"end": 2227,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2229,
											"end": 2234,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2236,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2236,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2229,
											"end": 2236,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2241,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2199,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2216,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2216,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2216,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2194,
											"end": 2216,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2194,
											"end": 2242,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 2272,
											"end": 2282,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2293,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2295,
											"end": 2304,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2254,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2271,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2271,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2249,
											"end": 2271,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 2249,
											"end": 2305,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2377,
											"end": 2390,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2357,
											"end": 2368,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2335,
											"end": 2348,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "CCF4CBDBEBF44B8F817936435DFAA557D772265C6EEF9C54C198D3C873624F34"
										},
										{
											"begin": 2399,
											"end": 2411,
											"modifierDepth": 2,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 2420,
											"end": 2430,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2439,
											"end": 2448,
											"modifierDepth": 2,
											"name": "DUP14",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2466,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 2319,
											"end": 2473,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2473,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2479,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3437,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3437,
											"end": 3457,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3437,
											"end": 3457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1810,
											"end": 2479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1512,
											"end": 1517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 1501,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1501,
											"end": 1517,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1559,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1497,
											"end": 1559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "DF44072600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1497,
											"end": 1559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 1497,
											"end": 1559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1585,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1567,
											"end": 1585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1369,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1424,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1414,
											"end": 1422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1414,
											"end": 1424,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1414,
											"end": 1424,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1414,
											"end": 1424,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2739,
											"end": 2743,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2780,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2783,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2783,
											"end": 2804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2783,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1306,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1349,
											"end": 1355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1349,
											"end": 1357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 1349,
											"end": 1357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1696,
											"end": 1703,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1724,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1734,
											"end": 1746,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1747,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1712,
											"end": 1747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "PUSH",
											"source": 13,
											"value": "DD62ED3E"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1792,
											"end": 1796,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1761,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1761,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1761,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 1798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1754,
											"end": 1798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1208,
											"end": 1213,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1193,
											"end": 1214,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 1193,
											"end": 1214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 1221,
											"end": 1243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 1221,
											"end": 1245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1221,
											"end": 1245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 1221,
											"end": 1245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1252,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 1252,
											"end": 1269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1252,
											"end": 1269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1286,
											"end": 1294,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1294,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 719,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 697,
											"end": 719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2970,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2970,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 2970,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3470,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3554,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3554,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3582,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3554,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3519,
											"end": 3582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3679,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3670,
											"end": 3690,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3713,
											"end": 3743,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3666,
											"end": 3754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3828,
											"end": 3829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3828,
											"end": 3837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3828,
											"end": 3847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3860,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3943,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3943,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3943,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 4143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3860,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3760,
											"end": 3779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3760,
											"end": 3781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 3760,
											"end": 3781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3732,
											"end": 3781,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3832,
											"end": 3842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3832,
											"end": 3844,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3823,
											"end": 3845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1200,
											"end": 1225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1293,
											"name": "PUSH",
											"source": 3,
											"value": "CD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300"
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1293,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3453,
											"end": 3472,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3453,
											"end": 3474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 3453,
											"end": 3474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3425,
											"end": 3474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3485,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3522,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 3522,
											"end": 3534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3515,
											"end": 3535,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 3415,
											"end": 3542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3366,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2795,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2684,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2754,
											"end": 2786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2754,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2754,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2754,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2395,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2395,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2562,
											"name": "PUSH",
											"source": 4,
											"value": "9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00"
										},
										{
											"begin": 2522,
											"end": 2562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2395,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3168,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3168,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2984,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2801,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2881,
											"end": 2913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2916,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2916,
											"end": 2944,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2916,
											"end": 2944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2944,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2881,
											"end": 2944,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2954,
											"end": 2955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2963,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2977,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2954,
											"end": 2977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2801,
											"end": 2984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2040,
											"end": 2059,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2040,
											"end": 2061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 2040,
											"end": 2061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2012,
											"end": 2061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2083,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2002,
											"end": 2095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1390,
											"end": 1393,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 1378,
											"end": 1387,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1369,
											"end": 1376,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1365,
											"end": 1388,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1361,
											"end": 1394,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1478,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 1358,
											"end": 1478,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 1397,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 1397,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1397,
											"end": 1476,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 1397,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1358,
											"end": 1478,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 1358,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1517,
											"end": 1518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 1587,
											"end": 1594,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1567,
											"end": 1576,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 1563,
											"end": 1585,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1542,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 1542,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1542,
											"end": 1595,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 1542,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1532,
											"end": 1595,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 1532,
											"end": 1595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1488,
											"end": 1605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1644,
											"end": 1646,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 1691,
											"end": 1713,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 1670,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 1670,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1723,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1660,
											"end": 1723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1615,
											"end": 1733,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1774,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 1843,
											"end": 1850,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1823,
											"end": 1832,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1841,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1798,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 1798,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1788,
											"end": 1851,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1788,
											"end": 1851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1743,
											"end": 1861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 1947,
											"end": 1969,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 1926,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1916,
											"end": 1979,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1916,
											"end": 1979,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1871,
											"end": 1989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2028,
											"end": 2031,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2055,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 2100,
											"end": 2107,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2080,
											"end": 2089,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2076,
											"end": 2098,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 2055,
											"end": 2108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2108,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 2055,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2045,
											"end": 2108,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2045,
											"end": 2108,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1999,
											"end": 2118,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2157,
											"end": 2160,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 2220,
											"end": 2226,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2209,
											"end": 2218,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 2205,
											"end": 2227,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 2184,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2174,
											"end": 2237,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2128,
											"end": 2247,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2260,
											"end": 2589,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 2260,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2371,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2336,
											"end": 2455,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2336,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 2336,
											"end": 2455,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2374,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 2374,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 2374,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2374,
											"end": 2453,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 2374,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2336,
											"end": 2455,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 2336,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2495,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 2564,
											"end": 2571,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2555,
											"end": 2561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2544,
											"end": 2553,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2540,
											"end": 2562,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 2519,
											"end": 2572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 2519,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2572,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2509,
											"end": 2572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2465,
											"end": 2582,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2260,
											"end": 2589,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2260,
											"end": 2589,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2260,
											"end": 2589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2260,
											"end": 2589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2260,
											"end": 2589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2685,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 2595,
											"end": 2685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2677,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2665,
											"end": 2678,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2658,
											"end": 2679,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2647,
											"end": 2679,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2647,
											"end": 2679,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2685,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2685,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2595,
											"end": 2685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2800,
											"name": "tag",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 2691,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 2787,
											"end": 2792,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 2772,
											"end": 2793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2772,
											"end": 2793,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 2772,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2767,
											"end": 2770,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2794,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2800,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 3016,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 2806,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2893,
											"end": 2897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2934,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2908,
											"end": 2934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 3006,
											"end": 3007,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2991,
											"end": 3008,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "229"
										},
										{
											"begin": 2944,
											"end": 3009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2944,
											"end": 3009,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 2944,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 3016,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 3016,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 3016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 3016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2806,
											"end": 3016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3090,
											"end": 3096,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3104,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3149,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3144,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3126,
											"end": 3133,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3122,
											"end": 3145,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3118,
											"end": 3150,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3234,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 3115,
											"end": 3234,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3153,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 3153,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 3153,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3153,
											"end": 3232,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 3153,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3115,
											"end": 3234,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 3115,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 3343,
											"end": 3350,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3323,
											"end": 3332,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3319,
											"end": 3341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 3298,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 3298,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3288,
											"end": 3351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3244,
											"end": 3361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3400,
											"end": 3402,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3426,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 3471,
											"end": 3478,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3469,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3426,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 3426,
											"end": 3479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3426,
											"end": 3479,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 3426,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3479,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3371,
											"end": 3489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3022,
											"end": 3496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3502,
											"end": 3620,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 3502,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 3607,
											"end": 3612,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3613,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 3589,
											"end": 3613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3613,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 3589,
											"end": 3613,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3577,
											"end": 3614,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3502,
											"end": 3620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3502,
											"end": 3620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3502,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3759,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3734,
											"end": 3760,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3734,
											"end": 3760,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 3770,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3626,
											"end": 3848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3854,
											"end": 3972,
											"name": "tag",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 3854,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 3959,
											"end": 3964,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 3941,
											"end": 3965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 3941,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3936,
											"end": 3939,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3929,
											"end": 3966,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3854,
											"end": 3972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3854,
											"end": 3972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3854,
											"end": 3972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4200,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 3978,
											"end": 4200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4111,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4094,
											"end": 4112,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4086,
											"end": 4112,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4086,
											"end": 4112,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 4190,
											"end": 4191,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4188,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4175,
											"end": 4192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4166,
											"end": 4172,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 4122,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4122,
											"end": 4193,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 4122,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4200,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4200,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4200,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4200,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3978,
											"end": 4200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4274,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4288,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4331,
											"end": 4333,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4310,
											"end": 4317,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4329,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4334,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 4337,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 4337,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 4299,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4457,
											"end": 4458,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4527,
											"end": 4534,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4518,
											"end": 4524,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4507,
											"end": 4516,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4503,
											"end": 4525,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4482,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 4482,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4482,
											"end": 4535,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4482,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4535,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4472,
											"end": 4535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4428,
											"end": 4545,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4584,
											"end": 4586,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4610,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 4655,
											"end": 4662,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4646,
											"end": 4652,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4635,
											"end": 4644,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4631,
											"end": 4653,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4610,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "227"
										},
										{
											"begin": 4610,
											"end": 4663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4610,
											"end": 4663,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 4610,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4663,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4555,
											"end": 4673,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 5015,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 4686,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4745,
											"end": 4751,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4782,
											"end": 4791,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4773,
											"end": 4780,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4792,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4797,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4762,
											"end": 4881,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4762,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 4762,
											"end": 4881,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4800,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 4800,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 4800,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4800,
											"end": 4879,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 4800,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4762,
											"end": 4881,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 4762,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4945,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 4990,
											"end": 4997,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4966,
											"end": 4988,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 4945,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4945,
											"end": 4998,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 4945,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4935,
											"end": 4998,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4935,
											"end": 4998,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4891,
											"end": 5008,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 5015,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 5015,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 5015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 5015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4686,
											"end": 5015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5021,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 5021,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5146,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5147,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 5163,
											"end": 5164,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5156,
											"end": 5171,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5190,
											"end": 5194,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5187,
											"end": 5188,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5195,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5617,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 5207,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5247,
											"end": 5254,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5270,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 5270,
											"end": 5290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5270,
											"end": 5290,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 5270,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5265,
											"end": 5290,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5265,
											"end": 5290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5304,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 5322,
											"end": 5323,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5304,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 5304,
											"end": 5324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5304,
											"end": 5324,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 5304,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5299,
											"end": 5324,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5299,
											"end": 5324,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5359,
											"end": 5360,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5356,
											"end": 5357,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5352,
											"end": 5361,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5381,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 5399,
											"end": 5410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5381,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 5381,
											"end": 5411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5381,
											"end": 5411,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 5381,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5370,
											"end": 5411,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5370,
											"end": 5411,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5560,
											"end": 5561,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5551,
											"end": 5558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5547,
											"end": 5562,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5541,
											"end": 5563,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5494,
											"end": 5577,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5471,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 5471,
											"end": 5610,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 5590,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 5590,
											"end": 5608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5590,
											"end": 5608,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 5590,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5471,
											"end": 5610,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 5471,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5255,
											"end": 5617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5617,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5207,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5623,
											"end": 5803,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 5623,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5671,
											"end": 5748,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5749,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 5765,
											"end": 5766,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5758,
											"end": 5773,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5792,
											"end": 5796,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5789,
											"end": 5790,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5782,
											"end": 5797,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5994,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 5809,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5849,
											"end": 5850,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 5884,
											"end": 5885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 5866,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5886,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 5866,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5886,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5886,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 5900,
											"end": 5920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 5900,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5895,
											"end": 5920,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5895,
											"end": 5920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5929,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 5929,
											"end": 5964,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 5944,
											"end": 5962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 5944,
											"end": 5962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5929,
											"end": 5964,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 5929,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5979,
											"end": 5988,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 5988,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5974,
											"end": 5988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5809,
											"end": 5994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6194,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 6000,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6040,
											"end": 6044,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6060,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 6078,
											"end": 6079,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6060,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 6060,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6060,
											"end": 6080,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 6060,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6080,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "225"
										},
										{
											"begin": 6094,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6089,
											"end": 6114,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6089,
											"end": 6114,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6138,
											"end": 6139,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6135,
											"end": 6136,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6131,
											"end": 6140,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6123,
											"end": 6140,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6123,
											"end": 6140,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6156,
											"end": 6160,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6153,
											"end": 6164,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6187,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 6150,
											"end": 6187,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 6167,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 6167,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6150,
											"end": 6187,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 6150,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6194,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6194,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6000,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6377,
											"end": 6381,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6418,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6404,
											"end": 6413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6400,
											"end": 6419,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6392,
											"end": 6419,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6392,
											"end": 6419,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6429,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6495,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6482,
											"end": 6499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 6429,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6429,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6429,
											"end": 6500,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 6429,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6567,
											"end": 6576,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6563,
											"end": 6581,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6554,
											"end": 6560,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6510,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6582,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 6510,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6658,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6636,
											"end": 6642,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6592,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6592,
											"end": 6664,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 6592,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6731,
											"end": 6740,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 6674,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6674,
											"end": 6746,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 6674,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6200,
											"end": 6753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "tag",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6880,
											"end": 6884,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6907,
											"end": 6916,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6903,
											"end": 6921,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6895,
											"end": 6921,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6895,
											"end": 6921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 6997,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6984,
											"end": 7001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 6931,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6931,
											"end": 7002,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 6931,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7012,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7080,
											"end": 7082,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7069,
											"end": 7078,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7065,
											"end": 7083,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7012,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 7012,
											"end": 7084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7012,
											"end": 7084,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 7012,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 7091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7240,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 7097,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7154,
											"end": 7159,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7185,
											"end": 7191,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7179,
											"end": 7192,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7228,
											"end": 7233,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 7201,
											"end": 7234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7201,
											"end": 7234,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7201,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7240,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7240,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7240,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7097,
											"end": 7240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7597,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 7246,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7316,
											"end": 7322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7353,
											"end": 7362,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7363,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7336,
											"end": 7368,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7452,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7333,
											"end": 7452,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7371,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7371,
											"end": 7450,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 7371,
											"end": 7450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7371,
											"end": 7450,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 7371,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7452,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7333,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7491,
											"end": 7492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7563,
											"end": 7569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7552,
											"end": 7561,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7548,
											"end": 7570,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 7516,
											"end": 7580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7516,
											"end": 7580,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 7516,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7506,
											"end": 7580,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7506,
											"end": 7580,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7462,
											"end": 7590,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7597,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7597,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7597,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7246,
											"end": 7597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7688,
											"name": "tag",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 7603,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7648,
											"end": 7655,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7682,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7666,
											"end": 7682,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7666,
											"end": 7682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7688,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7688,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7603,
											"end": 7688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7694,
											"end": 7795,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 7694,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 7737,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7770,
											"end": 7788,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7768,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7759,
											"end": 7789,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7748,
											"end": 7789,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7748,
											"end": 7789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7694,
											"end": 7795,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7694,
											"end": 7795,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7694,
											"end": 7795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7694,
											"end": 7795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7801,
											"end": 7861,
											"name": "tag",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 7801,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7829,
											"end": 7832,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7855,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7855,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7801,
											"end": 7861,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7801,
											"end": 7861,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7801,
											"end": 7861,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7801,
											"end": 7861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7867,
											"end": 8023,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 7867,
											"end": 8023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7924,
											"end": 7933,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7974,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 8009,
											"end": 8014,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "235"
										},
										{
											"begin": 7983,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 7983,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7974,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "237"
										},
										{
											"begin": 7974,
											"end": 8016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7974,
											"end": 8016,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 7974,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8017,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 7957,
											"end": 8017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8017,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 7957,
											"end": 8017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7944,
											"end": 8017,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7944,
											"end": 8017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7867,
											"end": 8023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7867,
											"end": 8023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7867,
											"end": 8023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7867,
											"end": 8023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8174,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 8029,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 8161,
											"end": 8166,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 8123,
											"end": 8167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8123,
											"end": 8167,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 8123,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8118,
											"end": 8121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8111,
											"end": 8168,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8174,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8029,
											"end": 8174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8416,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 8180,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8280,
											"end": 8284,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8320,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8307,
											"end": 8316,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8321,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8295,
											"end": 8321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8395,
											"end": 8404,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8391,
											"end": 8408,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 8331,
											"end": 8409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8331,
											"end": 8409,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 8331,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8416,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8571,
											"end": 8575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8611,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8598,
											"end": 8607,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8586,
											"end": 8612,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8586,
											"end": 8612,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 8690,
											"end": 8691,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8679,
											"end": 8688,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8675,
											"end": 8692,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 8622,
											"end": 8693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8622,
											"end": 8693,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 8622,
											"end": 8693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8769,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "231"
										},
										{
											"begin": 8703,
											"end": 8775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8703,
											"end": 8775,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 8703,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8785,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 8853,
											"end": 8855,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8842,
											"end": 8851,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 8856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8785,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 8785,
											"end": 8857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8785,
											"end": 8857,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 8785,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8422,
											"end": 8864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tipping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkAllowance(address,address)": "8b099b23",
							"feesBps()": "ce2c2df1",
							"initialize(address,uint256)": "cd6dc687",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setFees(uint256)": "3d18678e",
							"tip(address,address,uint256,uint256,uint256,uint256)": "0de5e0e7",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeesBpsTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"TipFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromProfileId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"toProfileId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"publicationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TipSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"checkAllowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feesBps\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feesBps\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromProfileId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toProfileId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicationId\",\"type\":\"uint256\"}],\"name\":\"tip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tipping.sol\":\"Tipping\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x361126a17677994081cd9cb69c3f50cffff6e920d25cb7e428acdb1ae41d1866\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ae787a7dd001269cd60a394b1a5261b78925a0fc3a6f927beb2986a9aa56cf\",\"dweb:/ipfs/QmYLfXiuKmcRgTDBEDXMMjXU8t6JxsspUmjxYzqWS55oEv\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/Tipping.sol\":{\"keccak256\":\"0x10047570f10fb013247d9ac0f71b784ecda6a338eda5bba9028d5b5b220313fd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://0fcaa9c79beeab47ced67bf987b17cdac6a1a61561afd1e2aa183fedbecf897d\",\"dweb:/ipfs/QmRGZANTtsD4SZhDoKSD4xKirpyZRPZ1fkHnnWz2qu7NCS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1695,
								"contract": "contracts/Tipping.sol:Tipping",
								"label": "feesBps",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 495,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								494,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 476,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						]
					},
					"id": 495,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 495,
							"sourceUnit": 449,
							"src": "126:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 454,
										"name": "Initializable",
										"nameLocations": [
											"728:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:2"
									},
									"id": 455,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:2"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 453,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 494,
							"linearizedBaseContracts": [
								494,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "800:7:2",
										"statements": []
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:2"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:2"
									},
									"scope": 494,
									"src": "748:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "875:7:2",
										"statements": []
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:2"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:2"
									},
									"scope": 494,
									"src": "813:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "949:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 472,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "959:17:2"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:2"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "940:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:2"
									},
									"scope": 494,
									"src": "887:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "1056:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 481,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 480,
												"id": 483,
												"nodeType": "Return",
												"src": "1066:15:2"
											}
										]
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:2"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1040:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:2"
									},
									"scope": 494,
									"src": "989:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "1166:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 489,
												"id": 491,
												"nodeType": "Return",
												"src": "1176:8:2"
											}
										]
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:2"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1157:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:2"
									},
									"scope": 494,
									"src": "1094:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 495,
							"src": "688:505:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							670
						]
					},
					"id": 671,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 498,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 495,
							"src": "128:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 497,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 494,
										"src": "136:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 671,
							"sourceUnit": 449,
							"src": "196:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 499,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 502,
										"name": "Initializable",
										"nameLocations": [
											"742:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "742:13:3"
									},
									"id": 503,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:3"
								},
								{
									"baseName": {
										"id": 504,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 494,
										"src": "757:18:3"
									},
									"id": 505,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 501,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 670,
							"linearizedBaseContracts": [
								670,
								494,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 509,
									"members": [
										{
											"constant": false,
											"id": 508,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 509,
											"src": "886:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 507,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:3",
									"nodeType": "StructDefinition",
									"scope": 670,
									"src": "853:52:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 512,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:3",
									"nodeType": "VariableDeclaration",
									"scope": 670,
									"src": "1023:117:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 510,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 511,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "1227:82:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:3",
													"nodeType": "YulBlock",
													"src": "1246:57:3",
													"statements": [
														{
															"nativeSrc": "1260:33:3",
															"nodeType": "YulAssignment",
															"src": "1260:33:3",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:3",
																"nodeType": "YulIdentifier",
																"src": "1270:23:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 516,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 512,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:3",
														"valueSize": 1
													}
												],
												"id": 518,
												"nodeType": "InlineAssembly",
												"src": "1237:66:3"
											}
										]
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "1200:25:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 515,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 514,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 509,
														"src": "1200:15:3"
													},
													"referencedDeclaration": 509,
													"src": "1200:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:3"
									},
									"scope": 670,
									"src": "1147:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 525,
									"name": "Paused",
									"nameLocation": "1399:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "1406:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:3"
									},
									"src": "1393:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 530,
									"name": "Unpaused",
									"nameLocation": "1510:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1519:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:3"
									},
									"src": "1504:32:3"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:3",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 533,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:3"
									},
									"src": "1623:22:3"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:3",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 536,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:3"
									},
									"src": "1736:22:3"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "1889:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 542,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1899:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:3"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 539,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1872:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:3"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:3"
									},
									"scope": 670,
									"src": "1836:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "2002:93:3",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "2012:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 552,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 551,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 509,
																"src": "2012:15:3"
															},
															"referencedDeclaration": 509,
															"src": "2012:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2040:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$509_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:3"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 557,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "2071:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:3",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "2071:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:3"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 548,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1985:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:3"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:3"
									},
									"scope": 670,
									"src": "1939:156:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "2306:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 567,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2316:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:3"
											},
											{
												"id": 570,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:3"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 572,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:3"
									},
									"src": "2281:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "2553:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 575,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2563:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:3"
											},
											{
												"id": 578,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:3"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 580,
									"name": "whenPaused",
									"nameLocation": "2540:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:3"
									},
									"src": "2531:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "2745:92:3",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "2755:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 587,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 586,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 509,
																"src": "2755:15:3"
															},
															"referencedDeclaration": 509,
															"src": "2755:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 589,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "2783:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$509_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:3"
											},
											{
												"expression": {
													"expression": {
														"id": 592,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 588,
														"src": "2821:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:3",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 508,
													"src": "2821:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 585,
												"id": 594,
												"nodeType": "Return",
												"src": "2814:16:3"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:3"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 670,
									"src": "2692:145:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "2956:77:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 600,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "2970:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "2966:61:3",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "2980:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3001:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "2994:22:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:3"
									},
									"scope": 670,
									"src": "2905:128:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "3153:78:3",
										"statements": [
											{
												"condition": {
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 612,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3168:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 619,
												"nodeType": "IfStatement",
												"src": "3163:62:3",
												"trueBody": {
													"id": 618,
													"nodeType": "Block",
													"src": "3178:47:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 615,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "3199:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 617,
															"nodeType": "RevertStatement",
															"src": "3192:22:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:3"
									},
									"scope": 670,
									"src": "3105:126:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "3415:127:3",
										"statements": [
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "3425:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 628,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 627,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 509,
																"src": "3425:15:3"
															},
															"referencedDeclaration": 509,
															"src": "3425:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 632,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 630,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3453:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$509_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:3"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 633,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "3484:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:3",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "3484:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 640,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3522:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 639,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "3515:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "3510:25:3"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 625,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 624,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 572,
												"src": "3401:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:3"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:3"
									},
									"scope": 670,
									"src": "3366:176:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "3722:130:3",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 668,
														"src": "3732:25:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 652,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 651,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 509,
																"src": "3732:15:3"
															},
															"referencedDeclaration": 509,
															"src": "3732:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 654,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "3760:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$509_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:3"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 657,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "3791:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$509_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:3",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 508,
														"src": "3791:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 664,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "3832:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 663,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "3823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "EmitStatement",
												"src": "3818:27:3"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 649,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 648,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 580,
												"src": "3711:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:3"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:3"
									},
									"scope": 670,
									"src": "3674:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 671,
							"src": "701:3153:3",
							"usedErrors": [
								211,
								214,
								533,
								536
							],
							"usedEvents": [
								219,
								525,
								530
							]
						}
					],
					"src": "102:3753:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						],
						"ReentrancyGuardUpgradeable": [
							799
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 672,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 449,
							"src": "134:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 673,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "142:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 676,
										"name": "Initializable",
										"nameLocations": [
											"1142:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1142:13:4"
									},
									"id": 677,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:13:4"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 675,
								"nodeType": "StructuredDocumentation",
								"src": "199:894:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								448
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "1112:26:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 680,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1935:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1910:40:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 678,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1910:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 679,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1949:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 683,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1981:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1956:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 681,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1956:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 682,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1991:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "1999:73:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"
									},
									"id": 687,
									"members": [
										{
											"constant": false,
											"id": 686,
											"mutability": "mutable",
											"name": "_status",
											"nameLocation": "2125:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 687,
											"src": "2117:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 685,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2117:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ReentrancyGuardStorage",
									"nameLocation": "2084:22:4",
									"nodeType": "StructDefinition",
									"scope": 799,
									"src": "2077:62:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 690,
									"mutability": "constant",
									"name": "ReentrancyGuardStorageLocation",
									"nameLocation": "2289:30:4",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "2264:124:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 688,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2264:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030",
										"id": 689,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2322:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1",
											"typeString": "int_const 7031...(69 digits omitted)...8416"
										},
										"value": "0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "2489:89:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2508:64:4",
													"nodeType": "YulBlock",
													"src": "2508:64:4",
													"statements": [
														{
															"nativeSrc": "2522:40:4",
															"nodeType": "YulAssignment",
															"src": "2522:40:4",
															"value": {
																"name": "ReentrancyGuardStorageLocation",
																"nativeSrc": "2532:30:4",
																"nodeType": "YulIdentifier",
																"src": "2532:30:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2522:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2522:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": true,
														"src": "2522:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "2532:30:4",
														"valueSize": 1
													}
												],
												"id": 696,
												"nodeType": "InlineAssembly",
												"src": "2499:73:4"
											}
										]
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getReentrancyGuardStorage",
									"nameLocation": "2404:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2430:2:4"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2455:32:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
													"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
												},
												"typeName": {
													"id": 693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 692,
														"name": "ReentrancyGuardStorage",
														"nameLocations": [
															"2455:22:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 687,
														"src": "2455:22:4"
													},
													"referencedDeclaration": 687,
													"src": "2455:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2454:34:4"
									},
									"scope": 799,
									"src": "2395:183:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "2584:52:4",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 701,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2647:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:2:4"
									},
									"src": "2641:37:4"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "2744:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 706,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2754:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2754:34:4"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 704,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 703,
												"name": "onlyInitializing",
												"nameLocations": [
													"2727:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2727:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2727:16:4"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "2693:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2715:2:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:0:4"
									},
									"scope": 799,
									"src": "2684:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "2871:113:4",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2912:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 727,
														"src": "2881:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 716,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 715,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"2881:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 687,
																"src": "2881:22:4"
															},
															"referencedDeclaration": 687,
															"src": "2881:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 718,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "2916:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$687_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2881:63:4"
											},
											{
												"expression": {
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 721,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2954:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2956:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "2954:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 724,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "2966:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2954:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "2954:23:4"
											}
										]
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 712,
												"name": "onlyInitializing",
												"nameLocations": [
													"2854:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2854:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2854:16:4"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2810:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2842:2:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2871:0:4"
									},
									"scope": 799,
									"src": "2801:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "3385:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 731,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "3395:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3395:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "3395:21:4"
											},
											{
												"id": 734,
												"nodeType": "PlaceholderStatement",
												"src": "3426:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 735,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 780,
														"src": "3437:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3437:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "3437:20:4"
											}
										]
									},
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "2990:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 739,
									"name": "nonReentrant",
									"nameLocation": "3370:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3382:2:4"
									},
									"src": "3361:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3509:345:4",
										"statements": [
											{
												"assignments": [
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3550:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "3519:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 743,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 742,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3519:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 687,
																"src": "3519:22:4"
															},
															"referencedDeclaration": 687,
															"src": "3519:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 745,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "3554:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$687_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3554:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3519:63:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 748,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "3670:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3672:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3670:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 750,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "3683:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3670:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "3666:88:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "3692:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 752,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 701,
																	"src": "3713:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3713:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "3706:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 757,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "3828:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 759,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3830:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "3828:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 760,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "3840:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3828:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "3828:19:4"
											}
										]
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "3479:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3498:2:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3509:0:4"
									},
									"scope": 799,
									"src": "3470:384:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "3898:245:4",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3939:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "3908:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 768,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 767,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"3908:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 687,
																"src": "3908:22:4"
															},
															"referencedDeclaration": 687,
															"src": "3908:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "3943:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$687_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3908:63:4"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 773,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4113:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4115:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "4113:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 776,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "4125:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4113:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4113:23:4"
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "3869:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3887:2:4"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3898:0:4"
									},
									"scope": 799,
									"src": "3860:283:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "4386:117:4",
										"statements": [
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4427:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "4396:32:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
															"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
														},
														"typeName": {
															"id": 787,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 786,
																"name": "ReentrancyGuardStorage",
																"nameLocations": [
																	"4396:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 687,
																"src": "4396:22:4"
															},
															"referencedDeclaration": 687,
															"src": "4396:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 789,
														"name": "_getReentrancyGuardStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "4431:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$687_storage_ptr_$",
															"typeString": "function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4431:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
														"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4396:63:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 792,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4476:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ReentrancyGuardStorage_$687_storage_ptr",
																"typeString": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4478:7:4",
														"memberName": "_status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 686,
														"src": "4476:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 794,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "4489:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4476:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 785,
												"id": 796,
												"nodeType": "Return",
												"src": "4469:27:4"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "4149:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "4331:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4354:2:4"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "4380:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4380:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4379:6:4"
									},
									"scope": 799,
									"src": "4322:181:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1094:3411:4",
							"usedErrors": [
								211,
								214,
								701
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "109:4397:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							881
						],
						"IERC165": [
							1671
						],
						"IERC20": [
							967
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 882,
							"sourceUnit": 890,
							"src": "133:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 802,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "141:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 805,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 882,
							"sourceUnit": 886,
							"src": "170:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 804,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1671,
										"src": "178:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 807,
										"name": "IERC20",
										"nameLocations": [
											"590:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "590:6:5"
									},
									"id": 808,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:5"
								},
								{
									"baseName": {
										"id": 809,
										"name": "IERC165",
										"nameLocations": [
											"598:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1671,
										"src": "598:7:5"
									},
									"id": 810,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:5"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 806,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:5",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 881,
							"linearizedBaseContracts": [
								881,
								1671,
								967
							],
							"name": "IERC1363",
							"nameLocation": "578:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1548:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1560:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "1593:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:5"
									},
									"scope": 881,
									"src": "1523:76:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2088:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2100:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2115:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:5"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2154:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:5"
									},
									"scope": 881,
									"src": "2063:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2653:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2667:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2679:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "2712:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:5"
									},
									"scope": 881,
									"src": "2624:94:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3294:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3308:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3320:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3335:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:5"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "3374:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:5"
									},
									"scope": 881,
									"src": "3265:115:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3805:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3822:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:5"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "3855:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:5"
									},
									"scope": 881,
									"src": "3781:80:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "4374:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "4391:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "4406:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:5"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "4445:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:5"
									},
									"scope": 881,
									"src": "4350:101:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "568:3885:5",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "107:4347:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1671
						]
					},
					"id": 886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 886,
							"sourceUnit": 1672,
							"src": "132:59:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 884,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1671,
										"src": "140:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 968,
							"src": "131:49:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 888,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 892,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:8",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "IERC20",
							"nameLocation": "214:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 901,
									"name": "Transfer",
									"nameLocation": "396:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "405:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "427:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "447:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:8"
									},
									"src": "390:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 910,
									"name": "Approval",
									"nameLocation": "627:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "636:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "659:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:8"
									},
									"src": "621:78:8"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "821:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:8"
									},
									"scope": 967,
									"src": "775:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 967,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1234:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:8"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1267:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:8"
									},
									"scope": 967,
									"src": "1204:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1567:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:8"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1622:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:8"
									},
									"scope": 967,
									"src": "1548:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2326:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:8"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:8"
									},
									"scope": 967,
									"src": "2309:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:8"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2771:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:8"
									},
									"scope": 967,
									"src": "2690:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 968,
							"src": "204:2575:8",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "106:2674:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1637
						],
						"IERC1363": [
							881
						],
						"IERC20": [
							967
						],
						"SafeERC20": [
							1378
						]
					},
					"id": 1379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 968,
							"src": "141:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "149:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 882,
							"src": "179:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 972,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 881,
										"src": "187:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1379,
							"sourceUnit": 1638,
							"src": "238:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 974,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1637,
										"src": "246:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 976,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1378,
							"linearizedBaseContracts": [
								1378
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:9",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 981,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "875:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:9"
									},
									"src": "844:46:9"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:9",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 990,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1011:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1028:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "1054:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:9"
									},
									"src": "972:109:9"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "1343:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1002,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "1373:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1005,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 994,
																		"src": "1395:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 934,
																	"src": "1395:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1007,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 996,
																			"src": "1412:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1008,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 998,
																			"src": "1416:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1009,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1003,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1001,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1353:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:9"
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1293:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 993,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 992,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1293:6:9"
													},
													"referencedDeclaration": 967,
													"src": "1293:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1307:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1319:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:9"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:9"
									},
									"scope": 1378,
									"src": "1271:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "1760:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "1790:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1031,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "1812:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 966,
																	"src": "1812:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1033,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "1833:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1034,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "1839:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "1843:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1036,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1029,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1027,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "1770:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:9"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1696:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1016,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1696:6:9"
													},
													"referencedDeclaration": 967,
													"src": "1696:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1724:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "1736:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:9"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:9"
									},
									"scope": 1378,
									"src": "1670:188:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "2600:139:9",
										"statements": [
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1071,
														"src": "2610:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1058,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1378",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1378",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2664:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1054,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "2633:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "2633:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1064,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "2695:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1065,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2702:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "2711:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1067,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "2726:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1063,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "2682:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:9"
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2545:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1043,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "2545:6:9"
													},
													"referencedDeclaration": 967,
													"src": "2545:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2559:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "2576:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:9"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:9"
									},
									"scope": 1378,
									"src": "2514:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "3505:370:9",
										"statements": [
											{
												"id": 1113,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:9",
												"statements": [
													{
														"assignments": [
															1084
														],
														"declarations": [
															{
																"constant": false,
																"id": 1084,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 1113,
																"src": "3539:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1083,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1093,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1089,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1378",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1378",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1087,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1091,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "3597:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1085,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "3566:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "3566:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1094,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "3623:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1095,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "3642:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1104,
														"nodeType": "IfStatement",
														"src": "3619:160:9",
														"trueBody": {
															"id": 1103,
															"nodeType": "Block",
															"src": "3661:118:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1078,
																				"src": "3719:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1099,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1084,
																				"src": "3728:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1100,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1080,
																				"src": "3746:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1097,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "3686:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1102,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1106,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "3805:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1107,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "3812:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1108,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "3821:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1109,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "3840:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1105,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "3792:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1112,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3438:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1074,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "3438:6:9"
													},
													"referencedDeclaration": 967,
													"src": "3438:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3452:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "3469:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:9"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:9"
									},
									"scope": 1378,
									"src": "3407:468:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "4529:303:9",
										"statements": [
											{
												"assignments": [
													1127
												],
												"declarations": [
													{
														"constant": false,
														"id": 1127,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "4539:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1126,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1130,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "4582:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:9",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "4582:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1132,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "4598:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1133,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "4607:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1134,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1128,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:9",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:9"
											},
											{
												"condition": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1138,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1119,
																"src": "4654:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1139,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1127,
																"src": "4661:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1137,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "4630:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1160,
												"nodeType": "IfStatement",
												"src": "4625:201:9",
												"trueBody": {
													"id": 1159,
													"nodeType": "Block",
													"src": "4676:150:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1143,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "4710:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1146,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1119,
																					"src": "4732:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$967",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:9",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 954,
																				"src": "4732:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1148,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1121,
																						"src": "4748:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1149,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1150,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1144,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:9",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1142,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "4690:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1153,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1155,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "4795:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1156,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "4802:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1154,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "4775:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1158,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "4474:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1117,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "4474:6:9"
													},
													"referencedDeclaration": 967,
													"src": "4474:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "4488:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "4505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:9"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:9"
									},
									"scope": 1378,
									"src": "4452:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "5279:219:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1175,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "5293:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1189,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "5402:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "5406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1191,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "5413:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1187,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "5380:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$881",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:9",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 832,
																"src": "5380:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1202,
													"nodeType": "IfStatement",
													"src": "5375:117:9",
													"trueBody": {
														"id": 1201,
														"nodeType": "Block",
														"src": "5420:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1197,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1166,
																					"src": "5474:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$881",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$881",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1195,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1194,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "5441:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1200,
																"nodeType": "RevertStatement",
																"src": "5434:47:9"
															}
														]
													}
												},
												"id": 1203,
												"nodeType": "IfStatement",
												"src": "5289:203:9",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "5314:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1181,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1166,
																		"src": "5341:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$881",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1182,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "5348:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1183,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1170,
																		"src": "5352:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$881",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1180,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "5328:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1185,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:9",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "5208:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$881",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "5208:8:9"
													},
													"referencedDeclaration": 881,
													"src": "5208:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$881",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "5224:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "5236:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "5251:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1171,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:9"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:9"
									},
									"scope": 1378,
									"src": "5176:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "6017:239:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1220,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "6031:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1235,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "6154:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1236,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "6160:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1237,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "6164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1238,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "6171:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1233,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "6128:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$881",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:9",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 858,
																"src": "6128:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1249,
													"nodeType": "IfStatement",
													"src": "6123:127:9",
													"trueBody": {
														"id": 1248,
														"nodeType": "Block",
														"src": "6178:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1244,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "6232:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$881",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$881",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1242,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1241,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "6199:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1247,
																"nodeType": "RevertStatement",
																"src": "6192:47:9"
															}
														]
													}
												},
												"id": 1250,
												"nodeType": "IfStatement",
												"src": "6027:223:9",
												"trueBody": {
													"id": 1232,
													"nodeType": "Block",
													"src": "6052:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "6083:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$881",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1227,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "6090:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1228,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1213,
																		"src": "6096:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1229,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1215,
																		"src": "6100:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$881",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1225,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "6066:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:9",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5895:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$881",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1207,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "5895:8:9"
													},
													"referencedDeclaration": 881,
													"src": "5895:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$881",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5919:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5941:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5961:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "5984:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:9"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:9"
									},
									"scope": 1378,
									"src": "5850:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "7023:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1265,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "7037:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1279,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "7145:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1280,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "7149:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1281,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "7156:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1277,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "7124:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$881",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:9",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 880,
																"src": "7124:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1292,
													"nodeType": "IfStatement",
													"src": "7119:116:9",
													"trueBody": {
														"id": 1291,
														"nodeType": "Block",
														"src": "7163:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1287,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "7217:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$881",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$881",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1285,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1284,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "7184:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1290,
																"nodeType": "RevertStatement",
																"src": "7177:47:9"
															}
														]
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "7033:202:9",
												"trueBody": {
													"id": 1276,
													"nodeType": "Block",
													"src": "7058:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1271,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "7085:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$881",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "7092:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1273,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1260,
																		"src": "7096:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$881",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1270,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "7072:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1275,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:9",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6952:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$881",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "6952:8:9"
													},
													"referencedDeclaration": 881,
													"src": "6952:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$881",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6968:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6980:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6995:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:9"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:9"
									},
									"scope": 1378,
									"src": "6921:320:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "7808:650:9",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "7818:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1304,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:9"
											},
											{
												"assignments": [
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "7846:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1307,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1309,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:9"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:9",
													"nodeType": "YulBlock",
													"src": "7900:396:9",
													"statements": [
														{
															"nativeSrc": "7914:75:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:9"
																		},
																		"nativeSrc": "7934:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:9"
																		},
																		"nativeSrc": "7951:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:9"
																		},
																		"nativeSrc": "7968:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:9"
																},
																"nativeSrc": "7929:60:9",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:9"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:9",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:9",
																"nodeType": "YulBlock",
																"src": "8050:157:9",
																"statements": [
																	{
																		"nativeSrc": "8068:22:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:9",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:9"
																			},
																			"nativeSrc": "8079:11:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:9"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:9",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:9"
																					},
																					"nativeSrc": "8130:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:9"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:9",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:9"
																			},
																			"nativeSrc": "8107:40:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:9"
																		},
																		"nativeSrc": "8107:40:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:9"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:9"
																					},
																					"nativeSrc": "8176:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:9"
																			},
																			"nativeSrc": "8164:29:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:9"
																		},
																		"nativeSrc": "8164:29:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:9"
																},
																"nativeSrc": "8034:15:9",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:9"
															},
															"nativeSrc": "8031:176:9",
															"nodeType": "YulIf",
															"src": "8031:176:9"
														},
														{
															"nativeSrc": "8220:30:9",
															"nodeType": "YulAssignment",
															"src": "8220:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:9"
																},
																"nativeSrc": "8234:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:9"
																}
															]
														},
														{
															"nativeSrc": "8263:23:9",
															"nodeType": "YulAssignment",
															"src": "8263:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:9"
																},
																"nativeSrc": "8278:8:9",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1301,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1301,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1305,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1308,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1299,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1310,
												"nodeType": "InlineAssembly",
												"src": "7875:421:9"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1311,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "8310:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1322,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "8362:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1316,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1299,
																			"src": "8336:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1314,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:9",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "8306:146:9",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "8380:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1329,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1299,
																				"src": "8434:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1327,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1326,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "8401:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1332,
															"nodeType": "RevertStatement",
															"src": "8394:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "7767:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1298,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1297,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "7767:6:9"
													},
													"referencedDeclaration": 967,
													"src": "7767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "7781:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1300,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:9"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:9"
									},
									"scope": 1378,
									"src": "7738:720:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "9049:391:9",
										"statements": [
											{
												"assignments": [
													1348
												],
												"declarations": [
													{
														"constant": false,
														"id": 1348,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "9059:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1347,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1349,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:9"
											},
											{
												"assignments": [
													1351
												],
												"declarations": [
													{
														"constant": false,
														"id": 1351,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "9081:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1350,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1352,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:9"
											},
											{
												"assignments": [
													1354
												],
												"declarations": [
													{
														"constant": false,
														"id": 1354,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "9109:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1353,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:9"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:9",
													"nodeType": "YulBlock",
													"src": "9163:174:9",
													"statements": [
														{
															"nativeSrc": "9177:71:9",
															"nodeType": "YulAssignment",
															"src": "9177:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:9"
																		},
																		"nativeSrc": "9193:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:9"
																		},
																		"nativeSrc": "9210:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:9"
																		},
																		"nativeSrc": "9227:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:9"
																},
																"nativeSrc": "9188:60:9",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:9"
																}
															]
														},
														{
															"nativeSrc": "9261:30:9",
															"nodeType": "YulAssignment",
															"src": "9261:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:9"
																},
																"nativeSrc": "9275:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:9"
																}
															]
														},
														{
															"nativeSrc": "9304:23:9",
															"nodeType": "YulAssignment",
															"src": "9304:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:9"
																},
																"nativeSrc": "9319:8:9",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1342,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1342,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1351,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1354,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1348,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1340,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1356,
												"nodeType": "InlineAssembly",
												"src": "9138:199:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1357,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1348,
														"src": "9353:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1358,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1351,
																		"src": "9365:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1369,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "9416:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1363,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1340,
																						"src": "9391:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1361,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1373,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1375,
												"nodeType": "Return",
												"src": "9346:87:9"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "8993:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1339,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1338,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "8993:6:9"
													},
													"referencedDeclaration": 967,
													"src": "8993:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "9007:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "9043:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:9"
									},
									"scope": 1378,
									"src": "8960:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1379,
							"src": "750:8692:9",
							"usedErrors": [
								981,
								990
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1637
						],
						"Errors": [
							1659
						]
					},
					"id": 1638,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1638,
							"sourceUnit": 1660,
							"src": "127:36:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1381,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1659,
										"src": "135:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1383,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1637,
							"linearizedBaseContracts": [
								1637
							],
							"name": "Address",
							"nameLocation": "241:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1388,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "358:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:10"
									},
									"src": "335:39:10"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "1361:278:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1637",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1637",
																		"typeString": "library Address"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1401,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "1399:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "1371:125:10",
												"trueBody": {
													"id": 1414,
													"nodeType": "Block",
													"src": "1407:89:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1408,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1637",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1637",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1406,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1411,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "1478:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1403,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1659,
																		"src": "1428:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1659_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "1428:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1413,
															"nodeType": "RevertStatement",
															"src": "1421:64:10"
														}
													]
												}
											},
											{
												"assignments": [
													1417,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1434,
														"src": "1507:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1416,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1424,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1418,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "1525:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1420,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "1547:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:10"
											},
											{
												"condition": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:10",
													"subExpression": {
														"id": 1425,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1573:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1433,
												"nodeType": "IfStatement",
												"src": "1568:65:10",
												"trueBody": {
													"id": 1432,
													"nodeType": "Block",
													"src": "1582:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1427,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1659,
																		"src": "1603:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1659_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1650,
																	"src": "1603:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1431,
															"nodeType": "RevertStatement",
															"src": "1596:26:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1309:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "1336:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:10"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:10"
									},
									"scope": 1637,
									"src": "1290:349:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "2573:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1446,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "2612:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1447,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "2620:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1445,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "2590:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1450,
												"nodeType": "Return",
												"src": "2583:45:10"
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2506:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2522:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1439,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:10"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "2559:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:10"
									},
									"scope": 1637,
									"src": "2484:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "3072:294:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1466,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1637",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1637",
																		"typeString": "library Address"
																	}
																],
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1469,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "3110:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "3082:123:10",
												"trueBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "3117:88:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1476,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1637",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1637",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1474,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:10",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1479,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "3188:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1471,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1659,
																		"src": "3138:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1659_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:10",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1647,
																	"src": "3138:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1481,
															"nodeType": "RevertStatement",
															"src": "3131:63:10"
														}
													]
												}
											},
											{
												"assignments": [
													1485,
													1487
												],
												"declarations": [
													{
														"constant": false,
														"id": 1485,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "3215:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1484,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1487,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1501,
														"src": "3229:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1486,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1494,
												"initialValue": {
													"arguments": [
														{
															"id": 1492,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3282:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1488,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "3256:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1490,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "3275:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1496,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "3331:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1497,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "3339:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1498,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "3348:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1495,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "3304:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1500,
												"nodeType": "Return",
												"src": "3297:62:10"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "2990:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3006:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3025:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:10"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "3058:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:10"
									},
									"scope": 1637,
									"src": "2959:407:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "3605:154:10",
										"statements": [
											{
												"assignments": [
													1513,
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1527,
														"src": "3616:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1527,
														"src": "3630:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1520,
												"initialValue": {
													"arguments": [
														{
															"id": 1518,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "3675:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1516,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "3657:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1522,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1505,
															"src": "3724:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1523,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "3732:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "3741:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1521,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "3697:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1511,
												"id": 1526,
												"nodeType": "Return",
												"src": "3690:62:10"
											}
										]
									},
									"documentation": {
										"id": 1503,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "3533:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "3549:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:10"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "3591:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1509,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:10"
									},
									"scope": 1637,
									"src": "3505:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "3997:156:10",
										"statements": [
											{
												"assignments": [
													1539,
													1541
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "4008:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1541,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "4022:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1546,
												"initialValue": {
													"arguments": [
														{
															"id": 1544,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "4069:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1542,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "4049:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1548,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "4118:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "4126:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1550,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "4135:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1547,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "4091:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1552,
												"nodeType": "Return",
												"src": "4084:62:10"
											}
										]
									},
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3930:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3946:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:10"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "3983:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1535,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:10"
									},
									"scope": 1637,
									"src": "3900:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "4579:424:10",
										"statements": [
											{
												"condition": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:10",
													"subExpression": {
														"id": 1566,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "4594:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "4653:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1573,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "4841:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1577,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "4867:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1588,
															"nodeType": "IfStatement",
															"src": "4837:119:10",
															"trueBody": {
																"id": 1587,
																"nodeType": "Block",
																"src": "4892:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1584,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "4934:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1583,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "4917:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1586,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1589,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1561,
																"src": "4976:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1565,
															"id": 1590,
															"nodeType": "Return",
															"src": "4969:17:10"
														}
													]
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "4589:408:10",
												"trueBody": {
													"id": 1572,
													"nodeType": "Block",
													"src": "4603:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1569,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "4625:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1568,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "4617:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1571,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4466:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4490:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4512:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1560,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:10"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "4565:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:10"
									},
									"scope": 1637,
									"src": "4421:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "5307:122:10",
										"statements": [
											{
												"condition": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:10",
													"subExpression": {
														"id": 1604,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "5322:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "5381:42:10",
													"statements": [
														{
															"expression": {
																"id": 1611,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "5402:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1603,
															"id": 1612,
															"nodeType": "Return",
															"src": "5395:17:10"
														}
													]
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "5317:106:10",
												"trueBody": {
													"id": 1610,
													"nodeType": "Block",
													"src": "5331:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1607,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "5353:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1606,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "5345:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1609,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "5231:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "5245:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:10"
									},
									"returnParameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "5293:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:10"
									},
									"scope": 1637,
									"src": "5205:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "5598:432:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1622,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "5674:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1633,
													"nodeType": "Block",
													"src": "5973:51:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1628,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1659,
																		"src": "5994:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1659_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:10",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1650,
																	"src": "5994:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1632,
															"nodeType": "RevertStatement",
															"src": "5987:26:10"
														}
													]
												},
												"id": 1634,
												"nodeType": "IfStatement",
												"src": "5670:354:10",
												"trueBody": {
													"id": 1627,
													"nodeType": "Block",
													"src": "5697:270:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:10",
																"nodeType": "YulBlock",
																"src": "5824:133:10",
																"statements": [
																	{
																		"nativeSrc": "5842:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:10"
																			},
																			"nativeSrc": "5865:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:10",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:10",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:10"
																					},
																					"nativeSrc": "5906:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:10"
																			},
																			"nativeSrc": "5899:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:10"
																		},
																		"nativeSrc": "5899:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:10"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1619,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1619,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:10",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1626,
															"nodeType": "InlineAssembly",
															"src": "5799:158:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "5560:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:10"
									},
									"scope": 1637,
									"src": "5543:487:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1638,
							"src": "233:5799:10",
							"usedErrors": [
								1388
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1659
						]
					},
					"id": 1660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1639,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1640,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:11",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1659,
							"linearizedBaseContracts": [
								1659
							],
							"name": "Errors",
							"nameLocation": "419:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:11",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1647,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "557:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "574:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:11"
									},
									"src": "531:59:11"
								},
								{
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:11",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1650,
									"name": "FailedCall",
									"nameLocation": "696:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:11"
									},
									"src": "690:19:11"
								},
								{
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:11",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1653,
									"name": "FailedDeployment",
									"nameLocation": "772:16:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:11"
									},
									"src": "766:25:11"
								},
								{
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:11",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1658,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "884:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:11"
									},
									"src": "860:33:11"
								}
							],
							"scope": 1660,
							"src": "411:484:11",
							"usedErrors": [
								1647,
								1650,
								1653,
								1658
							],
							"usedEvents": []
						}
					],
					"src": "100:796:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1671
						]
					},
					"id": 1672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1662,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:12",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1671,
							"linearizedBaseContracts": [
								1671
							],
							"name": "IERC165",
							"nameLocation": "432:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "818:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1664,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:12"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "861:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:12"
									},
									"scope": 1671,
									"src": "791:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1672,
							"src": "422:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:12"
				},
				"id": 12
			},
			"contracts/Tipping.sol": {
				"ast": {
					"absolutePath": "contracts/Tipping.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							494
						],
						"IERC20": [
							967
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							670
						],
						"ReentrancyGuardUpgradeable": [
							799
						],
						"SafeERC20": [
							1378
						],
						"Tipping": [
							1882
						]
					},
					"id": 1883,
					"license": "AGPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 195,
							"src": "68:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 449,
							"src": "145:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol",
							"id": 1676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 800,
							"src": "222:82:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 1677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 671,
							"src": "306:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 968,
							"src": "383:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1678,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "392:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 1379,
							"src": "457:84:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1680,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1378,
										"src": "466:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1682,
										"name": "Initializable",
										"nameLocations": [
											"568:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "568:13:13"
									},
									"id": 1683,
									"nodeType": "InheritanceSpecifier",
									"src": "568:13:13"
								},
								{
									"baseName": {
										"id": 1684,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"586:18:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "586:18:13"
									},
									"id": 1685,
									"nodeType": "InheritanceSpecifier",
									"src": "586:18:13"
								},
								{
									"baseName": {
										"id": 1686,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"609:26:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "609:26:13"
									},
									"id": 1687,
									"nodeType": "InheritanceSpecifier",
									"src": "609:26:13"
								},
								{
									"baseName": {
										"id": 1688,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"640:19:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 670,
										"src": "640:19:13"
									},
									"id": 1689,
									"nodeType": "InheritanceSpecifier",
									"src": "640:19:13"
								}
							],
							"canonicalName": "Tipping",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								670,
								799,
								194,
								494,
								448
							],
							"name": "Tipping",
							"nameLocation": "554:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1693,
									"libraryName": {
										"id": 1690,
										"name": "SafeERC20",
										"nameLocations": [
											"672:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1378,
										"src": "672:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "666:27:13",
									"typeName": {
										"id": 1692,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1691,
											"name": "IERC20",
											"nameLocations": [
												"686:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 967,
											"src": "686:6:13"
										},
										"referencedDeclaration": 967,
										"src": "686:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$967",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "ce2c2df1",
									"id": 1695,
									"mutability": "mutable",
									"name": "feesBps",
									"nameLocation": "712:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1882,
									"src": "697:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1694,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ccf4cbdbebf44b8f817936435dfaa557d772265c6eef9c54c198d3c873624f34",
									"id": 1711,
									"name": "TipSent",
									"nameLocation": "732:7:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1697,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromProfileId",
												"nameLocation": "762:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "746:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"indexed": true,
												"mutability": "mutable",
												"name": "toProfileId",
												"nameLocation": "798:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "782:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1701,
												"indexed": true,
												"mutability": "mutable",
												"name": "publicationId",
												"nameLocation": "832:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "816:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "860:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "852:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "880:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "872:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "899:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "891:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "916:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "908:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:188:13"
									},
									"src": "726:202:13"
								},
								{
									"errorSelector": "12469d0f",
									"id": 1715,
									"name": "TipFailed",
									"nameLocation": "940:9:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "957:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "950:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1712,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "950:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "949:16:13"
									},
									"src": "934:32:13"
								},
								{
									"errorSelector": "0e8090de",
									"id": 1719,
									"name": "InsufficientAllowance",
									"nameLocation": "976:21:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "1005:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "998:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "998:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "997:16:13"
									},
									"src": "970:44:13"
								},
								{
									"errorSelector": "df440726",
									"id": 1721,
									"name": "FeesBpsTooHigh",
									"nameLocation": "1024:14:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:2:13"
									},
									"src": "1018:23:13"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "1186:114:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1731,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1723,
															"src": "1208:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1193:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1193:21:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "1193:21:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1734,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "1221:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "1221:24:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1737,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "1252:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1252:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "1252:17:13"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1740,
														"name": "feesBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "1276:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1741,
														"name": "_feesBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "1286:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1276:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "1276:18:13"
											}
										]
									},
									"functionSelector": "cd6dc687",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1728,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1727,
												"name": "initializer",
												"nameLocations": [
													"1174:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1174:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1174:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "1123:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1142:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1134:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "_feesBps",
												"nameLocation": "1157:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1149:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:33:13"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1186:0:13"
									},
									"scope": 1882,
									"src": "1114:186:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "1342:21:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1750,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1349:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "1349:8:13"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1748,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1747,
												"name": "onlyOwner",
												"nameLocations": [
													"1332:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1332:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1332:9:13"
										}
									],
									"name": "pause",
									"nameLocation": "1315:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1320:2:13"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:0:13"
									},
									"scope": 1882,
									"src": "1306:57:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "1407:23:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1759,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1414:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "1414:10:13"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1757,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1756,
												"name": "onlyOwner",
												"nameLocations": [
													"1397:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1397:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1397:9:13"
										}
									],
									"name": "unpause",
									"nameLocation": "1378:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:2:13"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:0:13"
									},
									"scope": 1882,
									"src": "1369:61:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "1490:101:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1770,
														"name": "_feesBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "1501:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1512:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1501:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1777,
												"nodeType": "IfStatement",
												"src": "1497:62:13",
												"trueBody": {
													"id": 1776,
													"nodeType": "Block",
													"src": "1519:40:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1773,
																	"name": "FeesBpsTooHigh",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1535:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1535:16:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1775,
															"nodeType": "RevertStatement",
															"src": "1528:23:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1778,
														"name": "feesBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "1567:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1779,
														"name": "_feesBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1765,
														"src": "1577:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1567:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "1567:18:13"
											}
										]
									},
									"functionSelector": "3d18678e",
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1768,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1767,
												"name": "onlyOwner",
												"nameLocations": [
													"1480:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1480:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1480:9:13"
										}
									],
									"name": "setFees",
									"nameLocation": "1445:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "_feesBps",
												"nameLocation": "1461:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "1453:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1453:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1452:18:13"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:0:13"
									},
									"scope": 1882,
									"src": "1436:155:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "1705:99:13",
										"statements": [
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1719:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "1712:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$967",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1793,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1792,
																"name": "IERC20",
																"nameLocations": [
																	"1712:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "1712:6:13"
															},
															"referencedDeclaration": 967,
															"src": "1712:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1798,
												"initialValue": {
													"arguments": [
														{
															"id": 1796,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "1734:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1795,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1727:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1727:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1712:35:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1801,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "1777:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1804,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1792:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Tipping_$1882",
																		"typeString": "contract Tipping"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Tipping_$1882",
																		"typeString": "contract Tipping"
																	}
																],
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1784:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1784:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1784:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1799,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1794,
															"src": "1761:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1767:9:13",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "1761:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1807,
												"nodeType": "Return",
												"src": "1754:44:13"
											}
										]
									},
									"functionSelector": "8b099b23",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkAllowance",
									"nameLocation": "1606:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1635:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1627:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1662:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1654:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:52:13"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1696:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:13"
									},
									"scope": 1882,
									"src": "1597:207:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "2018:461:13",
										"statements": [
											{
												"assignments": [
													1830
												],
												"declarations": [
													{
														"constant": false,
														"id": 1830,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "2032:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "2025:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$967",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 1829,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1828,
																"name": "IERC20",
																"nameLocations": [
																	"2025:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 967,
																"src": "2025:6:13"
															},
															"referencedDeclaration": 967,
															"src": "2025:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1834,
												"initialValue": {
													"arguments": [
														{
															"id": 1832,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "2047:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1831,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "2040:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$967_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:20:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2025:35:13"
											},
											{
												"assignments": [
													1836
												],
												"declarations": [
													{
														"constant": false,
														"id": 1836,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2114:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "2106:11:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1835,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2106:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1843,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1837,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "2121:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1838,
																	"name": "feesBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "2130:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2121:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1840,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2120:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2141:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2120:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2106:40:13"
											},
											{
												"assignments": [
													1845
												],
												"declarations": [
													{
														"constant": false,
														"id": 1845,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "2161:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1880,
														"src": "2153:17:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1844,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2153:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1846,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "2173:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1847,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "2182:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2173:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2153:32:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1853,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2217:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2221:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2217:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1855,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2229:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2229:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1857,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "2238:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1850,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "2194:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2200:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1041,
														"src": "2194:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2194:48:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "2194:48:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1863,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2272:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2276:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2272:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "2284:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1866,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "2295:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1860,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "2249:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2255:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1041,
														"src": "2249:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:56:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "2249:56:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1870,
															"name": "fromProfileId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "2335:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1871,
															"name": "toProfileId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "2357:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1872,
															"name": "publicationId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "2377:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1873,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1811,
															"src": "2399:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1874,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2420:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2424:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2420:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1876,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "2439:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1877,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "2457:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1869,
														"name": "TipSent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "2319:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,address,address,address,uint256)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:154:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "EmitStatement",
												"src": "2314:159:13"
											}
										]
									},
									"functionSelector": "0de5e0e7",
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1823,
												"name": "whenNotPaused",
												"nameLocations": [
													"1991:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 572,
												"src": "1991:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1991:13:13"
										},
										{
											"id": 1826,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1825,
												"name": "nonReentrant",
												"nameLocations": [
													"2005:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 739,
												"src": "2005:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2005:12:13"
										}
									],
									"name": "tip",
									"nameLocation": "1819:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1837:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1829:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1864:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1856:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1888:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1880:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "fromProfileId",
												"nameLocation": "1909:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1901:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "toProfileId",
												"nameLocation": "1937:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1929:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1929:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "publicationId",
												"nameLocation": "1963:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "1955:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1822:159:13"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2018:0:13"
									},
									"scope": 1882,
									"src": "1810:669:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "545:1937:13",
							"usedErrors": [
								30,
								35,
								211,
								214,
								533,
								536,
								701,
								981,
								1715,
								1719,
								1721
							],
							"usedEvents": [
								41,
								219,
								525,
								530,
								1711
							]
						}
					],
					"src": "40:2442:13"
				},
				"id": 13
			}
		}
	}
}